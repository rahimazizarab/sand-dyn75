	.file	"general1.c"
	.section	.text.unlikely,"ax",@progbits
	.type	z900_is_store_protected, @function
z900_is_store_protected:
.LFB2129:
	.cfi_startproc
	testq	$-4608, %rdi
	movb	994(%rcx), %dil
	jne	.L2
	testb	$16, 331(%rcx)
	je	.L2
	testb	$1, 1144(%rcx)
	jne	.L2
	testb	$1, %dil
	jne	.L2
	movl	$1, %eax
	ret
.L2:
	andb	$6, %dil
	movl	$1, %eax
	jne	.L15
	testb	$2, 1144(%rcx)
	je	.L4
	movq	1056(%rcx), %rdi
	testb	$6, 994(%rdi)
	jne	.L15
.L4:
	xorl	%eax, %eax
	testb	%dl, %dl
	je	.L15
	andl	$-16, %esi
	cmpb	$-112, %sil
	jne	.L5
	testb	$1, 331(%rcx)
	jne	.L15
.L5:
	xorl	%eax, %eax
	cmpb	%sil, %dl
	setne	%al
	ret
.L15:
	ret
	.cfi_endproc
.LFE2129:
	.size	z900_is_store_protected, .-z900_is_store_protected
	.text
	.p2align 4,,15
	.type	concpy.isra.2, @function
concpy.isra.2:
.LFB3136:
	.cfi_startproc
	testl	%edx, %edx
	jne	.L97
	jmp	.L20
	.p2align 4,,10
	.p2align 3
.L98:
	addq	$1, %rsi
	movzbl	-1(%rsi), %eax
	addq	$1, %rdi
	subl	$1, %edx
	movb	%al, -1(%rdi)
	je	.L20
.L97:
	testb	$7, %dil
	jne	.L98
	movq	%rdi, %rax
	subq	%rsi, %rax
	movl	%eax, %ecx
	sarl	$31, %ecx
	xorl	%ecx, %eax
	subl	%ecx, %eax
	cmpl	$7, %eax
	jle	.L24
	cmpl	$7, %edx
	jle	.L24
	subl	$8, %edx
	movl	%edx, %r9d
	shrl	$3, %r9d
	movl	%r9d, %eax
	leaq	8(,%rax,8), %r8
	xorl	%eax, %eax
	.p2align 4,,10
	.p2align 3
.L37:
	movq	(%rsi,%rax), %rcx
	movq	%rcx, (%rdi,%rax)
	addq	$8, %rax
	cmpq	%r8, %rax
	jne	.L37
	negl	%r9d
	addq	%rax, %rdi
	addq	%rax, %rsi
	leal	(%rdx,%r9,8), %edx
	testl	%edx, %edx
	je	.L99
.L24:
	leaq	16(%rdi), %rax
	cmpq	%rax, %rsi
	leaq	16(%rsi), %rax
	setae	%cl
	cmpq	%rax, %rdi
	setae	%al
	orb	%al, %cl
	je	.L28
	cmpl	$15, %edx
	jbe	.L28
	movl	%edx, %r9d
	xorl	%eax, %eax
	xorl	%r8d, %r8d
	shrl	$4, %r9d
	movl	%r9d, %ecx
	sall	$4, %ecx
.L34:
	movdqu	(%rsi,%rax), %xmm0
	addl	$1, %r8d
	movdqu	%xmm0, (%rdi,%rax)
	addq	$16, %rax
	cmpl	%r9d, %r8d
	jb	.L34
	movl	%ecx, %eax
	addq	%rax, %rdi
	addq	%rax, %rsi
	movl	%edx, %eax
	subl	%ecx, %eax
	cmpl	%ecx, %edx
	je	.L20
	movzbl	(%rsi), %edx
	cmpl	$1, %eax
	movb	%dl, (%rdi)
	je	.L20
	movzbl	1(%rsi), %edx
	cmpl	$2, %eax
	movb	%dl, 1(%rdi)
	je	.L20
	movzbl	2(%rsi), %edx
	cmpl	$3, %eax
	movb	%dl, 2(%rdi)
	je	.L20
	movzbl	3(%rsi), %edx
	cmpl	$4, %eax
	movb	%dl, 3(%rdi)
	je	.L20
	movzbl	4(%rsi), %edx
	cmpl	$5, %eax
	movb	%dl, 4(%rdi)
	je	.L20
	movzbl	5(%rsi), %edx
	cmpl	$6, %eax
	movb	%dl, 5(%rdi)
	je	.L20
	movzbl	6(%rsi), %edx
	cmpl	$7, %eax
	movb	%dl, 6(%rdi)
	je	.L20
	movzbl	7(%rsi), %edx
	cmpl	$8, %eax
	movb	%dl, 7(%rdi)
	je	.L20
	movzbl	8(%rsi), %edx
	cmpl	$9, %eax
	movb	%dl, 8(%rdi)
	je	.L20
	movzbl	9(%rsi), %edx
	cmpl	$10, %eax
	movb	%dl, 9(%rdi)
	je	.L20
	movzbl	10(%rsi), %edx
	cmpl	$11, %eax
	movb	%dl, 10(%rdi)
	je	.L20
	movzbl	11(%rsi), %edx
	cmpl	$12, %eax
	movb	%dl, 11(%rdi)
	je	.L20
	movzbl	12(%rsi), %edx
	cmpl	$13, %eax
	movb	%dl, 12(%rdi)
	je	.L20
	movzbl	13(%rsi), %edx
	cmpl	$14, %eax
	movb	%dl, 13(%rdi)
	je	.L100
	movzbl	14(%rsi), %eax
	movb	%al, 14(%rdi)
	ret
	.p2align 4,,10
	.p2align 3
.L20:
	rep ret
	.p2align 4,,10
	.p2align 3
.L28:
	subl	$1, %edx
	leaq	1(%rdi,%rdx), %rdx
	.p2align 4,,10
	.p2align 3
.L36:
	addq	$1, %rsi
	movzbl	-1(%rsi), %eax
	addq	$1, %rdi
	cmpq	%rdx, %rdi
	movb	%al, -1(%rdi)
	jne	.L36
	rep ret
.L100:
	rep ret
.L99:
	.p2align 4,,11
	ret
	.cfi_endproc
.LFE3136:
	.size	concpy.isra.2, .-concpy.isra.2
	.p2align 4,,15
	.type	z900_logical_to_main_l, @function
z900_logical_to_main_l:
.LFB2152:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	movl	%esi, %r10d
	movl	%ecx, %r15d
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	movl	%r8d, %r11d
	movq	%rdi, %r14
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movl	%edi, %r12d
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	shrl	$12, %r12d
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	andl	$1023, %r12d
	movq	%rdx, %rbx
	subq	$136, %rsp
	.cfi_def_cfa_offset 192
	testb	$4, 96(%rdx)
	movq	%r9, (%rsp)
	je	.L102
	cmpl	$-2, %esi
	je	.L102
.L103:
	andb	$-8, 994(%rbx)
	leal	5(%r10), %eax
	cmpl	$4, %eax
	ja	.L105
	jmp	*.L107(,%rax,8)
	.section	.rodata
	.align 8
	.align 4
.L107:
	.quad	.L489
	.quad	.L488
	.quad	.L156
	.quad	.L110
	.quad	.L111
	.text
	.p2align 4,,10
	.p2align 3
.L102:
	testb	$1, 1144(%rbx)
	jne	.L103
	movq	%r14, %rax
	movslq	%r12d, %r12
	movq	%r14, 944(%rbx)
	andb	$-8, 994(%rbx)
	andq	$-4096, %rax
	movq	%r14, %r13
	movq	%rax, 960(%rbx)
	andq	$-4194304, %r13
	leaq	(%rbx,%r12,8), %rax
	movq	$-1, 2232(%rax)
	movl	2224(%rbx), %edx
	movq	%r13, 18616(%rax)
	orq	%r13, %rdx
	movq	%rdx, 10424(%rax)
	movb	$0, 45240(%rbx,%r12)
	movb	$0, 44216(%rbx,%r12)
	movb	$0, 46264(%rbx,%r12)
	movzbl	994(%rbx), %eax
.L104:
	testb	$6, %al
	je	.L215
	testb	$3, %r15b
	jne	.L216
.L215:
	movq	944(%rbx), %rbp
	movl	88(%rbx), %eax
	movq	%rbp, %rdx
	andq	$-8192, %rdx
	je	.L218
	cmpq	%rax, %rdx
	je	.L218
.L219:
	movq	960(%rbx), %r8
	movq	%rbp, 952(%rbx)
	movq	%r8, %rdx
	andq	$-8192, %rdx
	je	.L220
	cmpq	%rax, %rdx
	je	.L220
.L221:
	cmpq	1040(%rbx), %rbp
	ja	.L222
	movzbl	1144(%rbx), %r9d
	testb	$2, %r9b
	jne	.L490
.L223:
	movq	%rbp, %r13
	shrq	$11, %r13
	addq	1032(%rbx), %r13
	testb	$1, %r9b
	movq	%r13, 984(%rbx)
	jne	.L491
	testb	$4, %r15b
	je	.L235
	testb	%r11b, %r11b
	movzbl	0(%r13), %eax
	jne	.L492
.L236:
	leaq	(%rbx,%r12,8), %rdx
	orl	$4, %eax
	andq	$-4096, %r14
	movb	%al, 0(%r13)
	movq	984(%rbx), %rax
	movq	%rax, 35000(%rdx)
	movzbl	(%rax), %eax
	movb	$4, 46264(%rbx,%r12)
	andl	$-16, %eax
	movb	%al, 43192(%rbx,%r12)
	movq	1024(%rbx), %rax
	addq	%rax, %r8
	xorq	%r14, %r8
	movq	%r8, 26808(%rdx)
.L248:
	addq	%rbp, %rax
.L477:
	addq	$136, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L220:
	.cfi_restore_state
	xorq	%rax, %r8
	jmp	.L221
	.p2align 4,,10
	.p2align 3
.L218:
	xorq	%rax, %rbp
	jmp	.L219
	.p2align 4,,10
	.p2align 3
.L105:
	movzbl	99(%rbx), %eax
	cmpb	$64, %al
	je	.L117
	testb	$1, 1144(%rbx)
	jne	.L493
.L118:
	cmpl	$15, %r10d
	jg	.L117
	cmpb	$-128, %al
	je	.L488
	cmpb	$-64, %al
	.p2align 4,,3
	je	.L489
	.p2align 4,,10
	.p2align 3
.L156:
	movq	336(%rbx), %rdx
	movl	$0, 976(%rbx)
	testl	$288, %edx
	movq	%rdx, 968(%rbx)
	setne	%cl
.L116:
	movzbl	994(%rbx), %eax
	movq	%r14, %r13
	movslq	%r12d, %r12
	leaq	(%rbx,%r12,8), %rbp
	andq	$-4194304, %r13
	andl	$-2, %eax
	orl	%ecx, %eax
	movl	2224(%rbx), %ecx
	movb	%al, 994(%rbx)
	orq	%r13, %rcx
	cmpq	10424(%rbp), %rcx
	je	.L494
.L159:
	testb	$32, %dl
	je	.L162
	testl	$512, %r15d
	jne	.L272
	movl	%r15d, %eax
	andl	$1024, %eax
	jne	.L164
	movq	%r14, %rsi
	xorl	%ecx, %ecx
	xorl	%r8d, %r8d
	andq	$-4096, %rsi
.L165:
	testl	$512, %esi
	je	.L199
.L198:
	orb	$2, 994(%rbx)
.L199:
	testl	$256, %r15d
	jne	.L161
	movq	968(%rbx), %rdx
	shrq	$4, %r8
	andl	$1, %r8d
	movq	%rdx, 2232(%rbp)
	movl	2224(%rbx), %edx
	movq	%rsi, 18616(%rbp)
	orq	%r13, %rdx
	movq	%rdx, 10424(%rbp)
	movb	%r8b, 44216(%rbx,%r12)
	movzbl	994(%rbx), %edx
	movb	$0, 46264(%rbx,%r12)
	shrb	%dl
	andl	$3, %edx
	movb	%dl, 45240(%rbx,%r12)
	movq	$0, 26808(%rbp)
	jmp	.L161
	.p2align 4,,10
	.p2align 3
.L488:
	movq	384(%rbx), %rdx
	movl	$2, 976(%rbx)
	testl	$288, %edx
	movq	%rdx, 968(%rbx)
	setne	%cl
	jmp	.L116
	.p2align 4,,10
	.p2align 3
.L489:
	movq	432(%rbx), %rdx
	movl	$3, 976(%rbx)
	testl	$288, %edx
	movq	%rdx, 968(%rbx)
	setne	%cl
	jmp	.L116
	.p2align 4,,10
	.p2align 3
.L111:
	movl	1908(%rbx), %eax
	cmpl	$1, %eax
	je	.L113
	xorl	%edx, %edx
	cmpl	$13, %eax
	sete	%dl
	leal	(%rdx,%rdx,2), %edx
	movl	%edx, 976(%rbx)
.L115:
	addl	$1, %eax
	cltq
	movq	320(%rbx,%rax,8), %rdx
	testl	$288, %edx
	movq	%rdx, 968(%rbx)
	setne	%cl
	jmp	.L116
	.p2align 4,,10
	.p2align 3
.L110:
	movl	$0, 976(%rbx)
	movl	$1, %ecx
	movq	$-1, %rdx
	movq	$-1, 968(%rbx)
	jmp	.L116
	.p2align 4,,10
	.p2align 3
.L162:
	movl	%edx, %eax
	movq	%r14, %rsi
	movl	%edx, %edi
	shrq	$50, %rsi
	andl	$12, %eax
	andw	$16376, %si
	cmpb	$11, %al
	ja	.L289
	testw	%si, %si
	je	.L289
.L166:
	movl	$56, %esi
	movw	%si, 992(%rbx)
	movl	$56, %esi
.L204:
	testl	$1024, %r15d
	je	.L268
.L214:
	movq	%rbx, %rdi
	call	*2032(%rbx)
	xorl	%eax, %eax
	jmp	.L477
	.p2align 4,,10
	.p2align 3
.L289:
	movq	%r14, %rcx
	shrq	$39, %rcx
	andw	$16376, %cx
	cmpb	$7, %al
	ja	.L290
	testw	%cx, %cx
	jne	.L166
.L290:
	movq	%r14, %r8
	shrq	$28, %r8
	andw	$16376, %r8w
	cmpb	$3, %al
	ja	.L291
	testw	%r8w, %r8w
	jne	.L166
.L291:
	movq	%r14, %r9
	andq	$-4096, %rdx
	andl	$3, %edi
	shrq	$17, %r9
	andw	$16376, %r9w
	cmpb	$8, %al
	je	.L171
	cmpb	$12, %al
	je	.L172
	cmpb	$4, %al
	je	.L495
	movzwl	%r9w, %eax
	shrw	$12, %r9w
	addq	%rax, %rdx
.L265:
	movzbl	%dil, %edi
	cmpw	%di, %r9w
	ja	.L184
	cmpq	%rdx, 1040(%rbx)
	jae	.L496
.L175:
	movl	$5, %ebp
	movl	$5, %esi
	movw	%bp, 992(%rbx)
	jmp	.L201
	.p2align 4,,10
	.p2align 3
.L493:
	movq	1064(%rbx), %rdx
	movq	1080(%rdx), %rcx
	testb	$1, 2(%rcx)
	je	.L118
	testb	$64, 99(%rdx)
	je	.L118
	.p2align 4,,10
	.p2align 3
.L117:
	movl	%r10d, %r13d
	andl	$15, %r13d
	je	.L156
	movzbl	1144(%rbx), %r9d
	testb	$1, %r9b
	jne	.L497
	movslq	%r13d, %rax
	movl	584(%rbx,%rax,4), %ebp
	movq	%rax, 8(%rsp)
.L122:
	testl	%ebp, %ebp
	je	.L156
	cmpl	$1, %ebp
	je	.L488
	leal	5(%r13), %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	cmpl	$15, %eax
	jle	.L125
	addl	$1, %eax
	cltq
	movq	320(%rbx,%rax,8), %rdx
	movq	8(%rsp), %rax
	movq	%rdx, 968(%rbx)
	movzbl	2009(%rbx,%rax), %eax
	movl	$1, 976(%rbx)
	andl	$3, %eax
	leal	(%rax,%rax), %ecx
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	%ecx, %eax
	testl	$288, %edx
	movb	%al, 994(%rbx)
	setne	%cl
	jmp	.L116
	.p2align 4,,10
	.p2align 3
.L494:
	cmpb	$0, 44216(%rbx,%r12)
	jne	.L157
	cmpq	%rdx, 2232(%rbp)
	jne	.L159
.L158:
	testl	$256, %r15d
	jne	.L159
	movzbl	45240(%rbx,%r12), %eax
	movq	18616(%rbp), %rsi
	testb	%al, %al
	je	.L482
	andl	$3, %eax
	leal	(%rax,%rax), %edx
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	%edx, %eax
	movb	%al, 994(%rbx)
.L482:
	movl	%r15d, %eax
	xorl	%ecx, %ecx
	andl	$512, %eax
.L161:
	testl	%eax, %eax
	jne	.L200
	movq	%r14, %rcx
	andq	$-4096, %rsi
	andl	$4095, %ecx
	movq	%rsi, 960(%rbx)
	orq	%rsi, %rcx
.L200:
	movq	%rcx, 944(%rbx)
.L483:
	xorl	%eax, %eax
	movw	%ax, 992(%rbx)
.L484:
	movzbl	994(%rbx), %eax
	jmp	.L104
	.p2align 4,,10
	.p2align 3
.L272:
	xorl	%edx, %edx
.L163:
	movl	$18, %r11d
	movl	$18, %esi
	movw	%r11w, 992(%rbx)
.L201:
	testl	$4096, %r15d
	jne	.L214
	movq	%rbx, %rdi
	movl	%r10d, 8(%rsp)
	movq	%rdx, (%rsp)
	call	*2032(%rbx)
	movl	8(%rsp), %r10d
	movq	(%rsp), %rdx
.L185:
	testl	$1024, %r15d
	je	.L202
.L486:
	movq	%rdx, 944(%rbx)
	movzwl	992(%rbx), %esi
	jmp	.L214
.L202:
	movl	$16, %r8d
	movq	%rdx, 944(%rbx)
	movw	%r8w, 992(%rbx)
	.p2align 4,,10
	.p2align 3
.L268:
	movslq	976(%rbx), %rax
	andq	$-4096, %r14
	movq	%r14, 792(%rbx)
	cmpl	$1, %eax
	je	.L498
	orq	%r14, %rax
	movq	%rax, 792(%rbx)
.L206:
	testb	$4, %r15b
	je	.L209
	orb	$8, %ah
	movq	%rax, 792(%rbx)
.L210:
	cmpb	$64, 99(%rbx)
	je	.L211
	testb	$1, 1144(%rbx)
	je	.L487
	movq	1064(%rbx), %rax
	movq	1080(%rax), %rdx
	testb	$1, 2(%rdx)
	je	.L487
	testb	$64, 99(%rax)
	je	.L487
.L211:
	xorl	%eax, %eax
	testl	%r10d, %r10d
	cmovns	%r10d, %eax
	movb	%al, 1012(%rbx)
.L487:
	movzwl	992(%rbx), %esi
	jmp	.L214
	.p2align 4,,10
	.p2align 3
.L157:
	testb	$1, %al
	jne	.L159
	jmp	.L158
	.p2align 4,,10
	.p2align 3
.L164:
	movl	$19, %r9d
	movl	$19, %esi
	xorl	%edx, %edx
	movw	%r9w, 992(%rbx)
	jmp	.L201
.L498:
	movq	968(%rbx), %rdx
	movq	%r14, %rax
	movq	%rdx, %rcx
	xorq	336(%rbx), %rcx
	testq	$-4096, %rcx
	je	.L206
	movq	%rdx, %rcx
	xorq	384(%rbx), %rcx
	testq	$-4096, %rcx
	jne	.L207
	orq	$2, %rax
	movq	%rax, 792(%rbx)
	jmp	.L206
	.p2align 4,,10
	.p2align 3
.L216:
	movzbl	1144(%rbx), %r9d
	andq	$-4096, %r14
.L269:
	movq	%r14, %rcx
	shrb	%al
	orq	$4, %rcx
	testb	$2, %al
	movq	%rcx, 792(%rbx)
	je	.L258
	movq	%r14, %rcx
	orq	$12, %rcx
	.p2align 4,,10
	.p2align 3
.L258:
	movslq	976(%rbx), %rdx
	xorl	%eax, %eax
	orq	%rcx, %rdx
	testl	%r10d, %r10d
	cmovns	%r10d, %eax
	andl	$2, %r9d
	movq	%rdx, 792(%rbx)
	movb	%al, 1012(%rbx)
	jne	.L499
.L259:
	movl	$4, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movzwl	992(%rbx), %esi
	jmp	.L214
	.p2align 4,,10
	.p2align 3
.L222:
	movl	$5, %esi
	movq	%rbx, %rdi
	movl	%r10d, (%rsp)
	call	*2032(%rbx)
	movzbl	994(%rbx), %eax
	movzbl	1144(%rbx), %r9d
	movl	(%rsp), %r10d
	movl	%eax, %edx
	andl	$6, %edx
.L240:
	andq	$-4096, %r14
	testb	%dl, %dl
	movq	%r14, 792(%rbx)
	movq	%r14, %rcx
	je	.L258
	andb	$3, %r15b
	je	.L258
	jmp	.L269
	.p2align 4,,10
	.p2align 3
.L113:
	movl	$0, 976(%rbx)
	jmp	.L115
	.p2align 4,,10
	.p2align 3
.L209:
	andl	$3, %r15d
	je	.L210
	orb	$4, %ah
	movq	%rax, 792(%rbx)
	jmp	.L210
.L497:
	movq	1064(%rbx), %rax
	movq	1080(%rax), %rdx
	testb	$1, 2(%rdx)
	je	.L156
	testb	$64, 99(%rax)
	je	.L156
	movslq	%r13d, %rdi
	movq	%rdi, 8(%rsp)
	movl	584(%rax,%rdi,4), %ebp
	jmp	.L122
.L125:
	movzwl	394(%rbx), %eax
	testl	$-33554432, %ebp
	movw	%ax, 24(%rsp)
	je	.L500
.L126:
	movl	$40, %eax
	movl	$40, %esi
	movw	%ax, 992(%rbx)
.L154:
	movb	%r10b, 1012(%rbx)
	jmp	.L214
.L495:
	movl	%r8d, %eax
	shrw	$12, %ax
.L264:
	movzbl	%dil, %edi
	cmpw	%di, %ax
	ja	.L181
	movzwl	%r8w, %r8d
	addq	%r8, %rdx
	cmpq	1040(%rbx), %rdx
	ja	.L175
	movq	%rdx, %rdi
	movq	%rbx, %rsi
	movl	%r11d, 32(%rsp)
	movl	%r10d, 24(%rsp)
	movl	%r9d, 16(%rsp)
	movq	%rdx, 8(%rsp)
	call	z900_fetch_main_absolute
	movq	8(%rsp), %rdx
	movq	(%rax), %rdi
	movl	16(%rsp), %r9d
	movl	24(%rsp), %r10d
	movl	32(%rsp), %r11d
	bswap	%rdi
	testb	$32, %dil
	jne	.L182
	movq	%rdi, %rax
	andl	$12, %eax
	cmpq	$4, %rax
	jne	.L163
	cmpb	$0, 2049(%rbx)
	js	.L501
.L183:
	movq	%rdi, %rdx
	movzwl	%r9w, %eax
	shrw	$12, %r9w
	andq	$-4096, %rdx
	addq	%rax, %rdx
	movq	%rdi, %rax
	andl	$192, %eax
	shrq	$6, %rax
	cmpw	%ax, %r9w
	jae	.L502
.L184:
	movl	$16, %edi
	movq	%rdx, 944(%rbx)
	movl	$16, %esi
	movw	%di, 992(%rbx)
	jmp	.L204
.L172:
	movl	%esi, %eax
	movzbl	%dil, %edi
	shrw	$12, %ax
	cmpw	%ax, %di
	jb	.L174
	movzwl	%si, %esi
	addq	%rsi, %rdx
	cmpq	1040(%rbx), %rdx
	ja	.L175
	movq	%rdx, %rdi
	movq	%rbx, %rsi
	movl	%r11d, 40(%rsp)
	movl	%r10d, 36(%rsp)
	movl	%r9d, 32(%rsp)
	movl	%r8d, 24(%rsp)
	movl	%ecx, 16(%rsp)
	movq	%rdx, 8(%rsp)
	call	z900_fetch_main_absolute
	movq	8(%rsp), %rdx
	movq	(%rax), %rdi
	movl	16(%rsp), %ecx
	movl	24(%rsp), %r8d
	movl	32(%rsp), %r9d
	bswap	%rdi
	testb	$32, %dil
	movl	36(%rsp), %r10d
	movl	40(%rsp), %r11d
	jne	.L176
	movq	%rdi, %rax
	andl	$12, %eax
	cmpq	$12, %rax
	jne	.L163
	cmpb	$0, 2049(%rbx)
	js	.L503
.L177:
	movq	%rdi, %rdx
	movl	%ecx, %eax
	andl	$192, %edx
	shrw	$12, %ax
	shrq	$6, %rdx
	cmpw	%dx, %ax
	jae	.L504
.L178:
	movl	$58, %edx
	movl	$58, %esi
	movw	%dx, 992(%rbx)
	jmp	.L204
.L171:
	movl	%ecx, %eax
	shrw	$12, %ax
.L263:
	movzbl	%dil, %edi
	cmpw	%ax, %di
	jb	.L178
	movzwl	%cx, %ecx
	addq	%rcx, %rdx
	cmpq	1040(%rbx), %rdx
	ja	.L175
	movq	%rdx, %rdi
	movq	%rbx, %rsi
	movl	%r11d, 36(%rsp)
	movl	%r10d, 32(%rsp)
	movl	%r9d, 24(%rsp)
	movl	%r8d, 16(%rsp)
	movq	%rdx, 8(%rsp)
	call	z900_fetch_main_absolute
	movq	8(%rsp), %rdx
	movq	(%rax), %rdi
	movl	16(%rsp), %r8d
	movl	24(%rsp), %r9d
	movl	32(%rsp), %r10d
	bswap	%rdi
	testb	$32, %dil
	movl	36(%rsp), %r11d
	jne	.L179
	movq	%rdi, %rax
	andl	$12, %eax
	cmpq	$8, %rax
	jne	.L163
	cmpb	$0, 2049(%rbx)
	js	.L505
.L180:
	movq	%rdi, %rdx
	movl	%r8d, %eax
	andl	$192, %edx
	shrw	$12, %ax
	shrq	$6, %rdx
	cmpw	%dx, %ax
	jae	.L506
.L181:
	movl	$59, %eax
	movl	$59, %esi
	movw	%ax, 992(%rbx)
	jmp	.L204
.L207:
	xorq	432(%rbx), %rdx
	testq	$-4096, %rdx
	jne	.L208
	orq	$3, %rax
	movq	%rax, 792(%rbx)
	jmp	.L206
.L500:
	testl	$16777216, %ebp
	je	.L127
	movl	368(%rbx), %eax
	andl	$2147483584, %eax
.L128:
	movl	%eax, %edx
	cmpq	1040(%rbx), %rdx
	ja	.L129
	andq	$-8192, %rdx
	je	.L130
	movl	88(%rbx), %ecx
	cmpq	%rcx, %rdx
	je	.L130
.L131:
	addl	$16, %eax
	testb	$2, %r9b
	jne	.L507
.L132:
	movq	%rax, %rdx
	shrq	$11, %rdx
	addq	1032(%rbx), %rdx
	orb	$4, (%rdx)
	movq	1024(%rbx), %rdx
	movl	(%rdx,%rax), %eax
	movzwl	%bp, %edx
	movl	%edx, %ecx
	shrl	$3, %ecx
	bswap	%eax
	movl	%eax, %esi
	andl	$127, %esi
	cmpl	%ecx, %esi
	jae	.L508
.L133:
	movl	$41, %eax
	movl	$41, %esi
	movw	%ax, 992(%rbx)
	jmp	.L154
.L174:
	movl	$57, %ecx
	movl	$57, %esi
	movw	%cx, 992(%rbx)
	jmp	.L204
.L129:
	movl	$5, %eax
	movl	$5, %esi
	movq	%rbx, %rdi
	movw	%ax, 992(%rbx)
	movl	%r10d, (%rsp)
	call	*2032(%rbx)
	movl	(%rsp), %r10d
	jmp	.L126
.L208:
	orq	$1, %rax
	movq	%rax, 792(%rbx)
	jmp	.L206
.L127:
	movl	344(%rbx), %eax
	andl	$2147483584, %eax
	jmp	.L128
.L130:
	xorl	88(%rbx), %eax
	jmp	.L131
.L508:
	andl	$2147483520, %eax
	sall	$4, %edx
	addl	%edx, %eax
	movl	%eax, %edi
	cmpq	1040(%rbx), %rdi
	ja	.L129
	movq	%rdi, %rcx
	andq	$-8192, %rcx
	je	.L134
	movl	88(%rbx), %edx
	cmpq	%rdx, %rcx
	je	.L134
.L135:
	movq	%rbx, %rsi
	movl	%r11d, 36(%rsp)
	movl	%r10d, 32(%rsp)
	call	z900_fetch_main_absolute
	movl	32(%rsp), %r10d
	xorl	%edx, %edx
	movl	36(%rsp), %r11d
.L137:
	movl	(%rax,%rdx), %ecx
	bswap	%ecx
	movl	%ecx, 48(%rsp,%rdx)
	addq	$4, %rdx
	cmpq	$16, %rdx
	jne	.L137
	movl	48(%rsp), %eax
	testl	%eax, %eax
	movl	%eax, 32(%rsp)
	js	.L133
	movl	%r15d, %eax
	andl	$2048, %eax
	movl	%eax, 36(%rsp)
	jne	.L138
	xorl	32(%rsp), %ebp
	andl	$16711680, %ebp
	je	.L138
.L139:
	movw	$42, 992(%rbx)
	movl	$42, %esi
	jmp	.L154
.L176:
	testl	$1024, %r15d
	je	.L174
	orq	$3, %rdx
	jmp	.L486
.L496:
	movq	%rdx, %rdi
	movq	%rbx, %rsi
	movl	%r11d, 24(%rsp)
	movl	%r10d, 16(%rsp)
	movq	%rdx, 8(%rsp)
	call	z900_fetch_main_absolute
	movq	8(%rsp), %rdx
	movq	(%rax), %r8
	movl	16(%rsp), %r10d
	movl	24(%rsp), %r11d
	bswap	%r8
	testb	$32, %r8b
	jne	.L185
	testb	$12, %r8b
	jne	.L163
	movzbl	994(%rbx), %eax
	testb	$1, %al
	je	.L186
	testb	$16, %r8b
	jne	.L163
.L186:
	movzbl	2049(%rbx), %esi
	testb	%sil, %sil
	js	.L509
.L187:
	movq	%r14, %rcx
	movq	%r8, %rdi
	shrq	$9, %rcx
	andq	$-2048, %rdi
	andl	$2040, %ecx
	addq	%rdi, %rcx
	testl	$1024, %r15d
	je	.L194
	andl	$512, %r8d
	testb	%sil, %sil
	movq	%rcx, 944(%rbx)
	movw	$0, 992(%rbx)
	js	.L510
.L195:
	testq	%r8, %r8
	je	.L104
	xorl	%esi, %esi
	jmp	.L214
.L491:
	movq	%rbp, %rax
	addq	1024(%rbx), %rax
	jmp	.L477
.L235:
	movzbl	0(%r13), %eax
	movzbl	%r11b, %edx
	movq	%rbx, %rcx
	movq	%r14, %rdi
	movl	%r9d, 32(%rsp)
	movl	%r10d, 24(%rsp)
	movq	%r8, 16(%rsp)
	movzbl	%al, %esi
	movb	%al, 8(%rsp)
	call	z900_is_store_protected
	movq	16(%rsp), %r8
	testl	%eax, %eax
	movl	24(%rsp), %r10d
	movl	32(%rsp), %r9d
	jne	.L239
	testb	$2, %r9b
	jne	.L511
.L243:
	testb	$2, %r15b
	je	.L245
	movzbl	8(%rsp), %eax
	orl	$6, %eax
	movb	%al, 0(%r13)
.L245:
	movq	984(%rbx), %rax
	leaq	(%rbx,%r12,8), %rdx
	movq	%rax, 35000(%rdx)
	movzbl	(%rax), %eax
	andl	$-16, %eax
	cmpq	$8191, %r14
	movb	%al, 43192(%rbx,%r12)
	ja	.L246
	testb	$1, 994(%rbx)
	movl	$4, %eax
	je	.L247
.L246:
	movl	%r15d, %eax
	orl	$5, %eax
.L247:
	movb	%al, 46264(%rbx,%r12)
	movq	1024(%rbx), %rax
	movq	%r14, %rcx
	andq	$-4096, %rcx
	addq	%rax, %r8
	xorq	%rcx, %r8
	movq	%r8, 26808(%rdx)
	testb	$4, 808(%rbx)
	je	.L248
	testb	$32, 54(%rbx)
	je	.L248
	movb	$4, 46264(%rbx,%r12)
	cmpl	$-2, %r10d
	je	.L248
	testb	$4, 96(%rbx)
	je	.L249
	testb	$-128, 968(%rbx)
	jne	.L250
	testb	$32, 402(%rbx)
	jne	.L248
.L250:
	xorl	%edx, %edx
	testl	%r10d, %r10d
	cmovns	%r10d, %edx
	movb	%dl, 1160(%rbx)
	movl	976(%rbx), %edx
	orw	%dx, 1146(%rbx)
.L249:
	movq	416(%rbx), %rcx
	movq	408(%rbx), %rdx
	cmpq	%rdx, %rcx
	jb	.L251
	cmpq	%rdx, %r14
	jb	.L252
	cmpq	%rcx, %r14
	movl	$1, %edi
	jbe	.L257
	movq	(%rsp), %rdi
	leaq	-1(%r14,%rdi), %rsi
	cmpq	%rsi, %rdx
	ja	.L254
.L270:
	cmpq	%rsi, %rcx
	movl	$1, %edi
	jae	.L257
	xorl	%edi, %edi
	cmpq	%rdx, %r14
	setbe	%dil
.L257:
	andl	$1, %edi
	testb	%dil, %dil
	je	.L248
	orl	$2097152, 56(%rbx)
	jmp	.L248
.L490:
	movq	1056(%rbx), %rdx
	andb	$-7, 994(%rdx)
	testb	$4, %r9b
	jne	.L223
	testl	%r10d, %r10d
	movl	$-3, %esi
	jle	.L224
	movq	1080(%rbx), %rax
	testb	$1, 2(%rax)
	je	.L224
	testb	$64, 99(%rbx)
	cmovne	%r10d, %esi
.L224:
	movq	%rbp, %rdi
	xorl	%ecx, %ecx
	movl	%r11d, 16(%rsp)
	addq	1096(%rbx), %rdi
	movl	%r10d, 8(%rsp)
	call	z900_translate_addr
	movl	8(%rsp), %r10d
	testl	%eax, %eax
	movl	16(%rsp), %r11d
	jne	.L512
.L225:
	movzbl	994(%rbx), %edx
	movq	1056(%rbx), %rax
	movl	%edx, %ecx
	andl	$-7, %edx
	orb	994(%rax), %cl
	andl	$6, %ecx
	orl	%ecx, %edx
	movb	%dl, 994(%rbx)
	movzbl	994(%rax), %edx
	shrb	%dl
	andl	$3, %edx
	orb	%dl, 45240(%rbx,%r12)
	testb	$4, 96(%rbx)
	je	.L226
	cmpl	$-2, %r10d
	je	.L226
.L227:
	testl	%r10d, %r10d
	jle	.L228
	movq	1080(%rbx), %rcx
	testb	$1, 2(%rcx)
	je	.L228
	testb	$64, 99(%rbx)
	je	.L228
	movq	968(%rbx), %rcx
	leal	5(%r10), %edi
	leal	16(%r10), %r8d
	movslq	%edi, %rdi
	movq	%rcx, 2232(%rbx,%r12,8)
	movzbl	994(%rax), %esi
	movzbl	994(%rbx), %ecx
	andl	$1, %esi
	andl	$-2, %ecx
	orl	%esi, %ecx
	movb	%cl, 994(%rbx)
	movq	968(%rax), %rcx
	leal	17(%r10), %esi
	movslq	%esi, %rsi
	xorb	$8, %ch
	testl	$288, %ecx
	movq	%rcx, 968(%rbx)
	movq	%rcx, 320(%rbx,%rsi,8)
	movslq	%r10d, %rcx
	movl	%r8d, 1892(%rbx,%rdi,4)
	sete	1976(%rbx,%rsi)
	andl	$2, %edx
	movb	%dl, 2009(%rbx,%rcx)
.L228:
	movq	944(%rax), %rbp
	movl	88(%rax), %edx
	movq	%rbp, %rcx
	andq	$-8192, %rcx
	je	.L229
	cmpq	%rdx, %rcx
	je	.L229
.L230:
	movq	960(%rax), %r8
	movq	%rbp, 952(%rax)
	movq	%r8, %rcx
	andq	$-8192, %rcx
	je	.L231
	cmpq	%rdx, %rcx
	je	.L231
.L232:
	cmpq	1040(%rax), %rbp
	ja	.L222
	movzbl	1144(%rbx), %r9d
	jmp	.L223
.L492:
	movl	%eax, %edx
	andl	$-16, %edx
	cmpb	%dl, %r11b
	je	.L236
	testb	$8, %al
	je	.L236
	cmpq	$2047, %r14
	ja	.L238
	testb	$2, 331(%rbx)
	je	.L238
	testb	$1, 994(%rbx)
	je	.L236
.L238:
	cmpb	$-112, %dl
	je	.L513
.L239:
	testb	$2, %r9b
	jne	.L514
.L485:
	movzbl	994(%rbx), %eax
	movl	%eax, %edx
	andl	$6, %edx
	jmp	.L240
.L179:
	testl	$1024, %r15d
	je	.L178
	orq	$2, %rdx
	movzwl	992(%rbx), %esi
	movq	%rdx, 944(%rbx)
	jmp	.L214
.L182:
	testl	$1024, %r15d
	je	.L181
	orq	$1, %rdx
	movzwl	992(%rbx), %esi
	movq	%rdx, 944(%rbx)
	jmp	.L214
.L231:
	xorq	%rdx, %r8
	jmp	.L232
.L229:
	xorq	%rdx, %rbp
	jmp	.L230
.L226:
	movq	%r13, 18616(%rbx,%r12,8)
	jmp	.L227
.L513:
	testb	$1, 331(%rbx)
	je	.L239
	jmp	.L236
.L138:
	movl	56(%rsp), %eax
	andl	$2147483584, %eax
	movl	%eax, %edi
	movq	%rdi, %rcx
	andq	$-8192, %rcx
	je	.L140
	movl	88(%rbx), %edx
	cmpq	%rdx, %rcx
	je	.L140
.L141:
	cmpq	1040(%rbx), %rdi
	ja	.L129
	movq	%rbx, %rsi
	movl	%r11d, 44(%rsp)
	movl	%r10d, 40(%rsp)
	call	z900_fetch_main_absolute
	movl	40(%rsp), %r10d
	xorl	%edx, %edx
	movl	44(%rsp), %r11d
.L143:
	movl	(%rax,%rdx), %ecx
	bswap	%ecx
	movl	%ecx, 64(%rsp,%rdx)
	addq	$4, %rdx
	cmpq	$64, %rdx
	jne	.L143
	movl	64(%rsp), %eax
	testl	%eax, %eax
	js	.L144
	movl	60(%rsp), %edi
	cmpl	%edi, 84(%rsp)
	je	.L515
.L145:
	movw	$44, 992(%rbx)
	movl	$44, %esi
	jmp	.L154
.L134:
	movl	%eax, %edi
	xorl	88(%rbx), %edi
	jmp	.L135
.L510:
	testb	$-128, 330(%rbx)
	je	.L195
	xorl	%esi, %esi
	testb	$6, %al
	jne	.L214
	jmp	.L195
.L514:
	movq	1056(%rbx), %rax
	andb	$-7, 994(%rax)
	jmp	.L485
.L499:
	movq	1056(%rbx), %rcx
	testb	$6, 994(%rcx)
	je	.L259
	movl	$4, %esi
	movq	%rdx, 792(%rcx)
	movq	%rcx, %rdi
	movb	%al, 1012(%rcx)
	call	*2032(%rcx)
	movzwl	992(%rbx), %esi
	jmp	.L214
.L502:
	andl	$3, %edi
	jmp	.L265
.L501:
	testb	$-128, 330(%rbx)
	je	.L183
	testl	$512, %edi
	je	.L183
	orb	$2, 994(%rbx)
	jmp	.L183
.L506:
	movq	%rdi, %rdx
	andl	$3, %edi
	andq	$-4096, %rdx
	jmp	.L264
.L505:
	testb	$-128, 330(%rbx)
	je	.L180
	testl	$512, %edi
	je	.L180
	orb	$2, 994(%rbx)
	jmp	.L180
.L254:
	xorl	%edi, %edi
	cmpq	%rdx, %r14
	ja	.L257
.L271:
	xorl	%edi, %edi
	cmpq	%rsi, %rcx
	setbe	%dil
	jmp	.L257
.L252:
	movq	(%rsp), %rdi
	leaq	-1(%r14,%rdi), %rsi
	cmpq	%rsi, %rdx
	jbe	.L270
	jmp	.L271
.L251:
	movq	(%rsp), %rdi
	leaq	-1(%r14,%rdi), %rsi
	movl	$1, %edi
	cmpq	%rsi, %rdx
	jbe	.L257
	xorl	%edi, %edi
	cmpq	%rcx, %r14
	setbe	%dil
	jmp	.L257
.L511:
	movq	1056(%rbx), %rax
	testb	$6, 994(%rax)
	je	.L243
	jmp	.L485
.L512:
	movq	1056(%rbx), %rax
	movzwl	992(%rax), %esi
	movq	%rax, %rdi
	call	*2032(%rax)
	movl	16(%rsp), %r11d
	movl	8(%rsp), %r10d
	jmp	.L225
.L507:
	andb	$4, %r9b
	jne	.L132
	addq	1096(%rbx), %rax
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$4, %ecx
	movl	$-3, %esi
	movl	%r11d, 36(%rsp)
	movq	1056(%rbx), %rdx
	movl	%r10d, 32(%rsp)
	movq	%rax, %rdi
	call	z900_logical_to_main_l
	movq	1056(%rbx), %rax
	movl	36(%rsp), %r11d
	movl	32(%rsp), %r10d
	movq	952(%rax), %rax
	jmp	.L132
.L504:
	movq	%rdi, %rdx
	andl	$3, %edi
	andq	$-4096, %rdx
	jmp	.L263
.L503:
	testb	$-128, 330(%rbx)
	je	.L177
	testl	$512, %edi
	je	.L177
	orb	$2, 994(%rbx)
	jmp	.L177
.L194:
	cmpq	1040(%rbx), %rcx
	ja	.L175
	movq	%rbx, %rsi
	movq	%rcx, %rdi
	movl	%r11d, 36(%rsp)
	movl	%r10d, 32(%rsp)
	movq	%rdx, 24(%rsp)
	movq	%r8, 16(%rsp)
	movq	%rcx, 8(%rsp)
	call	z900_fetch_main_absolute
	movq	8(%rsp), %rcx
	movq	(%rax), %rsi
	movq	16(%rsp), %r8
	movq	24(%rsp), %rdx
	movl	32(%rsp), %r10d
	bswap	%rsi
	testl	$1024, %esi
	movl	36(%rsp), %r11d
	jne	.L196
	testl	$2048, %esi
	jne	.L163
	movl	%r15d, %eax
	andl	$512, %eax
	testl	$512, %r8d
	jne	.L198
	jmp	.L165
.L509:
	testb	$-128, 330(%rbx)
	je	.L187
	testl	$1024, %r8d
	je	.L187
	testl	$512, %r8d
	je	.L188
	orb	$2, 994(%rbx)
.L188:
	testl	$1024, %r15d
	jne	.L516
	movq	%r8, %rax
	movq	%r14, %rdx
	andq	$-1048576, %rax
	andl	$1048575, %edx
	orq	%rdx, %rax
	movq	%rax, 944(%rbx)
	andq	$-4096, %rax
	testl	$256, %r15d
	movq	%rax, 960(%rbx)
	jne	.L483
	movq	968(%rbx), %rdx
	movq	%rdx, 2232(%rbp)
	movl	2224(%rbx), %edx
	movq	%rax, 18616(%rbp)
	movq	%r8, %rax
	shrq	$4, %rax
	andl	$1, %eax
	orq	%r13, %rdx
	movq	%rdx, 10424(%rbp)
	movb	%al, 44216(%rbx,%r12)
	movzbl	994(%rbx), %eax
	movb	$0, 46264(%rbx,%r12)
	shrb	%al
	andl	$3, %eax
	movb	%al, 45240(%rbx,%r12)
	movq	$0, 26808(%rbp)
	jmp	.L483
.L196:
	testl	$512, %r15d
	movq	%rcx, 944(%rbx)
	movw	$17, 992(%rbx)
	je	.L268
	jmp	.L484
.L516:
	movw	$0, 992(%rbx)
	movzbl	994(%rbx), %eax
	andl	$6, %eax
	cmpb	$1, %al
	sbbq	%rax, %rax
	xorl	%esi, %esi
	notq	%rax
	andl	$4, %eax
	orq	%rdx, %rax
	movq	%rax, 944(%rbx)
	jmp	.L214
.L140:
	movl	%eax, %edi
	xorl	88(%rbx), %edi
	jmp	.L141
.L515:
	cmpl	$0, 36(%rsp)
	jne	.L146
	testl	$16777216, 32(%rsp)
	je	.L146
	movzwl	32(%rsp), %esi
	movzwl	24(%rsp), %edi
	cmpw	%si, %di
	je	.L146
	movl	68(%rsp), %edx
	movl	%edi, %ecx
	andl	$2147483644, %eax
	andl	$65520, %ecx
	andl	$65520, %edx
	cmpl	%ecx, %edx
	jl	.L152
	movl	%edi, %edx
	shrw	$2, %dx
	movzwl	%dx, %edx
	addl	%edx, %eax
	andl	$2147483647, %eax
	movl	%eax, %ecx
	cmpq	1040(%rbx), %rcx
	ja	.L148
	movq	%rcx, %rsi
	andq	$-8192, %rsi
	je	.L149
	movl	88(%rbx), %edx
	cmpq	%rdx, %rsi
	je	.L149
.L150:
	movzbl	1144(%rbx), %edx
	testb	$2, %dl
	jne	.L517
.L151:
	movq	1024(%rbx), %rdx
	shrl	$11, %eax
	addq	1032(%rbx), %rax
	movzbl	(%rdx,%rcx), %edx
	movl	24(%rsp), %ecx
	orb	$4, (%rax)
	andl	$3, %ecx
	addl	%ecx, %ecx
	sall	%cl, %edx
	andb	$64, %dl
	jne	.L146
.L152:
	movw	$45, 992(%rbx)
	movl	$45, %esi
	jmp	.L154
.L146:
	testl	$33554432, 32(%rsp)
	je	.L153
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	$4, %eax
	movb	%al, 994(%rbx)
.L153:
	movl	72(%rsp), %edx
	movl	$1, 976(%rbx)
	movzbl	994(%rbx), %esi
	movl	76(%rsp), %eax
	salq	$32, %rdx
	shrb	%sil
	orq	%rax, %rdx
	andb	$2, %sil
	movq	%rdx, 968(%rbx)
	je	.L261
	xorq	$3088, %rdx
	orb	$1, %dh
	movq	%rdx, 968(%rbx)
.L261:
	movq	16(%rsp), %rdi
	leal	17(%r13), %eax
	movq	%rdx, %rcx
	cltq
	addl	$16, %r13d
	andl	$288, %ecx
	movq	%rdx, 320(%rbx,%rax,8)
	setne	%cl
	movl	%r13d, 1892(%rdi)
	sete	1976(%rbx,%rax)
	movq	8(%rsp), %rax
	movb	%sil, 2009(%rbx,%rax)
	jmp	.L116
.L144:
	movw	$43, 992(%rbx)
	movl	$43, %esi
	jmp	.L154
.L517:
	andb	$4, %dl
	jne	.L151
	movq	%rcx, %rdi
	movq	1056(%rbx), %rdx
	xorl	%ecx, %ecx
	addq	1096(%rbx), %rdi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$-3, %esi
	movl	%r11d, 40(%rsp)
	movl	%r10d, 36(%rsp)
	call	z900_logical_to_main_l
	movq	1056(%rbx), %rax
	movl	40(%rsp), %r11d
	movl	36(%rsp), %r10d
	movl	952(%rax), %eax
	movl	%eax, %ecx
	jmp	.L151
.L149:
	xorl	88(%rbx), %eax
	movl	%eax, %ecx
	jmp	.L150
.L148:
	movl	$5, %esi
	movq	%rbx, %rdi
	movl	%r10d, (%rsp)
	call	*2032(%rbx)
	movl	(%rsp), %r10d
	jmp	.L152
	.cfi_endproc
.LFE2152:
	.size	z900_logical_to_main_l, .-z900_logical_to_main_l
	.p2align 4,,15
	.type	z900_fetch_main_absolute, @function
z900_fetch_main_absolute:
.LFB2130:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movzbl	1144(%rsi), %eax
	testb	$2, %al
	jne	.L524
.L519:
	movq	%rdi, %rdx
	movq	%rdi, %rax
	shrq	$11, %rdx
	addq	1032(%rbx), %rdx
	orb	$4, (%rdx)
	addq	1024(%rbx), %rax
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L524:
	.cfi_restore_state
	testb	$4, %al
	jne	.L519
	addq	1096(%rsi), %rdi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movq	1056(%rsi), %rdx
	movl	$4, %ecx
	movl	$-3, %esi
	call	z900_logical_to_main_l
	movq	1056(%rbx), %rax
	movq	952(%rax), %rdi
	jmp	.L519
	.cfi_endproc
.LFE2130:
	.size	z900_fetch_main_absolute, .-z900_fetch_main_absolute
	.section	.text.unlikely
	.type	z900_vfetch2_full, @function
z900_vfetch2_full:
.LFB2164:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	leal	5(%rsi), %eax
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	cltq
	movl	%esi, %r13d
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	leaq	(%rdx,%rax,4), %r14
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	movq	%rdi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rdx, %rbx
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L526
	movl	%edi, %ecx
	incl	%eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rdx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	je	.L527
	movb	1976(%rbx,%rax), %al
	testb	%al, 44216(%rbx,%rcx)
	je	.L526
.L527:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L528
	cmpb	43192(%rbx,%rcx), %al
	jne	.L526
.L528:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L526
	testb	$4, 46264(%rbx,%rcx)
	je	.L526
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
	jmp	.L529
.L526:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
.L529:
	movzbl	(%rax), %r12d
	leaq	1(%rbp), %rsi
	movl	1892(%r14), %eax
	sall	$8, %r12d
	testl	%eax, %eax
	je	.L530
	movq	120(%rbx), %rcx
	incl	%ebp
	incl	%eax
	cltq
	andl	%ecx, %ebp
	shrl	$12, %ebp
	andl	$1023, %ebp
	leaq	(%rbx,%rbp,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	je	.L531
	movb	1976(%rbx,%rax), %al
	testb	%al, 44216(%rbx,%rbp)
	je	.L530
.L531:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L532
	cmpb	43192(%rbx,%rbp), %al
	jne	.L530
.L532:
	movl	2224(%rbx), %edi
	andq	%rsi, %rcx
	movq	%rcx, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L530
	testb	$4, 46264(%rbx,%rbp)
	je	.L530
	movq	%rcx, %rax
	xorq	26808(%rdx), %rax
	jmp	.L533
.L530:
	andq	120(%rbx), %rsi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movq	%rsi, %rdi
	movl	%r13d, %esi
	call	z900_logical_to_main_l
.L533:
	popq	%rbx
	.cfi_def_cfa_offset 40
	movzbl	(%rax), %eax
	popq	%rbp
	.cfi_def_cfa_offset 32
	orl	%r12d, %eax
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE2164:
	.size	z900_vfetch2_full, .-z900_vfetch2_full
	.type	z900_validate_operand.part.9, @function
z900_validate_operand.part.9:
.LFB3143:
	.cfi_startproc
	movslq	%edx, %rdx
	movq	%r8, %rax
	movl	$1, %r9d
	addq	%rdx, %rdi
	movq	%rax, %rdx
	andq	120(%r8), %rdi
	movzbl	97(%r8), %r8d
	jmp	z900_logical_to_main_l
	.cfi_endproc
.LFE3143:
	.size	z900_validate_operand.part.9, .-z900_validate_operand.part.9
	.type	z900_vstore2_full, @function
z900_vstore2_full:
.LFB2156:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	leal	5(%rdx), %eax
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	cltq
	movl	%edx, %r14d
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	leaq	(%rcx,%rax,4), %r10
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movl	%edi, %r12d
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rsi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rcx, %rbx
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L561
	leal	1(%rax), %edx
	movl	%esi, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	je	.L562
	movb	1976(%rbx,%rdx), %dl
	testb	%dl, 44216(%rbx,%rcx)
	je	.L561
.L562:
	movb	97(%rbx), %dl
	testb	%dl, %dl
	je	.L563
	cmpb	43192(%rbx,%rcx), %dl
	jne	.L561
.L563:
	movl	2224(%rbx), %esi
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L561
	testb	$1, 46264(%rbx,%rcx)
	je	.L561
	movq	35000(%rax), %rdx
	movq	%rbp, %r15
	movq	%rdx, 984(%rbx)
	xorq	26808(%rax), %r15
	jmp	.L564
.L561:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movq	%rbp, %rdi
	movq	%r10, 8(%rsp)
	call	z900_logical_to_main_l
	movq	8(%rsp), %r10
	movq	%rax, %r15
.L564:
	movl	1892(%r10), %eax
	leaq	1(%rbp), %rsi
	movq	984(%rbx), %r13
	testl	%eax, %eax
	je	.L565
	movq	120(%rbx), %rdx
	leal	1(%rax), %ecx
	incl	%ebp
	movslq	%ecx, %rcx
	andl	%edx, %ebp
	shrl	$12, %ebp
	andl	$1023, %ebp
	leaq	(%rbx,%rbp,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rcx,8)
	je	.L566
	movb	1976(%rbx,%rcx), %cl
	testb	%cl, 44216(%rbx,%rbp)
	je	.L565
.L566:
	movb	97(%rbx), %cl
	testb	%cl, %cl
	je	.L567
	cmpb	43192(%rbx,%rbp), %cl
	jne	.L565
.L567:
	movl	2224(%rbx), %edi
	andq	%rsi, %rdx
	movq	%rdx, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%rax), %rcx
	jne	.L565
	testb	$2, 46264(%rbx,%rbp)
	je	.L565
	xorq	26808(%rax), %rdx
	movq	%rdx, %rax
	jmp	.L568
.L565:
	andq	120(%rbx), %rsi
	movl	$1, %r9d
	movl	$2, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movq	%rsi, %rdi
	movl	%r14d, %esi
	call	z900_logical_to_main_l
.L568:
	orb	$6, 0(%r13)
	movl	%r12d, %ecx
	shrw	$8, %cx
	movb	%cl, (%r15)
	movb	%r12b, (%rax)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE2156:
	.size	z900_vstore2_full, .-z900_vstore2_full
	.type	z900_vfetch4_full, @function
z900_vfetch4_full:
.LFB2166:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	leal	5(%rsi), %eax
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	cltq
	movl	%esi, %r12d
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	leaq	(%rdx,%rax,4), %r13
	movq	%rdi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rdx, %rbx
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	movl	1892(%r13), %eax
	testl	%eax, %eax
	je	.L595
	movl	%edi, %ecx
	incl	%eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rdx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	je	.L596
	movb	1976(%rbx,%rax), %al
	testb	%al, 44216(%rbx,%rcx)
	je	.L595
.L596:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L597
	cmpb	43192(%rbx,%rcx), %al
	jne	.L595
.L597:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L595
	testb	$4, 46264(%rbx,%rcx)
	je	.L595
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
	jmp	.L598
.L595:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
.L598:
	movl	(%rax), %eax
	movl	%ebp, %edx
	andl	$2047, %edx
	movl	%eax, (%rsp)
	movl	$2048, %eax
	subl	%edx, %eax
	movl	1892(%r13), %edx
	movl	%eax, %r13d
	testl	%edx, %edx
	je	.L599
	movq	120(%rbx), %rcx
	addl	%ebp, %eax
	incl	%edx
	movslq	%edx, %rdx
	andl	%ecx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rsi
	movq	2232(%rsi), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	je	.L600
	movb	44216(%rbx,%rax), %dil
	testb	%dil, 1976(%rbx,%rdx)
	je	.L599
.L600:
	movb	97(%rbx), %dl
	testb	%dl, %dl
	je	.L601
	cmpb	43192(%rbx,%rax), %dl
	jne	.L599
.L601:
	leaq	0(%r13,%rbp), %rdx
	movl	2224(%rbx), %edi
	andq	%rcx, %rdx
	movq	%rdx, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%rsi), %rcx
	jne	.L599
	testb	$4, 46264(%rbx,%rax)
	je	.L599
	movq	%rdx, %rax
	xorq	26808(%rsi), %rax
	jmp	.L602
.L599:
	leaq	0(%r13,%rbp), %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %esi
	call	z900_logical_to_main_l
.L602:
	movl	(%rax), %eax
	movl	%eax, (%rsp,%r13)
	movl	(%rsp), %eax
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	bswap	%eax
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE2166:
	.size	z900_vfetch4_full, .-z900_vfetch4_full
	.type	z900_vstore4_full, @function
z900_vstore4_full:
.LFB2158:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	movl	%esi, %eax
	movl	%edi, %r11d
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	andl	$2047, %eax
	movl	%edx, %r10d
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movl	$2048, %r12d
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	subl	%eax, %r12d
	movq	%rsi, %rbp
	leal	5(%rdx), %eax
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movl	%r12d, %r13d
	cltq
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movq	%rcx, %rbx
	leaq	(%rcx,%rax,4), %r15
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L629
	leal	1(%rax), %edx
	movl	%esi, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	je	.L630
	movb	44216(%rbx,%rcx), %sil
	testb	%sil, 1976(%rbx,%rdx)
	je	.L629
.L630:
	movb	97(%rbx), %dl
	testb	%dl, %dl
	je	.L631
	cmpb	43192(%rbx,%rcx), %dl
	jne	.L629
.L631:
	movl	2224(%rbx), %esi
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L629
	testb	$1, 46264(%rbx,%rcx)
	je	.L629
	movq	35000(%rax), %rdx
	movq	%rbp, %rdi
	movq	%rdx, 984(%rbx)
	xorq	26808(%rax), %rdi
	movq	%rdi, (%rsp)
	jmp	.L632
.L629:
	movzbl	97(%rbx), %r8d
	movl	%r10d, %esi
	movq	%r13, %r9
	movl	$1, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movl	%r11d, 12(%rsp)
	movl	%r10d, 8(%rsp)
	call	z900_logical_to_main_l
	movl	12(%rsp), %r11d
	movl	8(%rsp), %r10d
	movq	%rax, (%rsp)
.L632:
	movl	1892(%r15), %eax
	movq	984(%rbx), %r14
	testl	%eax, %eax
	je	.L633
	movq	120(%rbx), %rdx
	leal	1(%rax), %esi
	leal	(%r12,%rbp), %eax
	movslq	%esi, %rsi
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	je	.L634
	movb	44216(%rbx,%rax), %dil
	testb	%dil, 1976(%rbx,%rsi)
	je	.L633
.L634:
	movb	97(%rbx), %sil
	testb	%sil, %sil
	je	.L635
	cmpb	43192(%rbx,%rax), %sil
	jne	.L633
.L635:
	leaq	0(%r13,%rbp), %rdi
	movl	2224(%rbx), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L633
	testb	$2, 46264(%rbx,%rax)
	je	.L633
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
	jmp	.L636
.L633:
	leaq	0(%r13,%rbp), %rdi
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	andq	120(%rbx), %rdi
	subl	%r12d, %r9d
	movl	$2, %ecx
	movslq	%r9d, %r9
	movq	%rbx, %rdx
	movl	%r11d, 8(%rsp)
	movl	%r10d, %esi
	call	z900_logical_to_main_l
	movl	8(%rsp), %r11d
.L636:
	orb	$6, (%r14)
	leaq	16(%rsp), %rsi
	movq	%r13, %rcx
	movq	(%rsp), %rdi
	bswap	%r11d
	movl	%r11d, 16(%rsp)
	rep movsb
	movq	%rax, %rdi
	movb	$4, %cl
	subl	%r12d, %ecx
	movslq	%ecx, %rcx
	rep movsb
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE2158:
	.size	z900_vstore4_full, .-z900_vstore4_full
	.type	z900_vstore8_full, @function
z900_vstore8_full:
.LFB2160:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	movl	%esi, %eax
	movq	%rdi, %r11
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	andl	$2047, %eax
	movl	%edx, %r10d
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movl	$2048, %r12d
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	subl	%eax, %r12d
	movq	%rsi, %rbp
	leal	5(%rdx), %eax
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movl	%r12d, %r13d
	cltq
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movq	%rcx, %rbx
	leaq	(%rcx,%rax,4), %r15
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L663
	leal	1(%rax), %edx
	movl	%esi, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	je	.L664
	movb	44216(%rbx,%rcx), %sil
	testb	%sil, 1976(%rbx,%rdx)
	je	.L663
.L664:
	movb	97(%rbx), %dl
	testb	%dl, %dl
	je	.L665
	cmpb	43192(%rbx,%rcx), %dl
	jne	.L663
.L665:
	movl	2224(%rbx), %esi
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L663
	testb	$1, 46264(%rbx,%rcx)
	je	.L663
	movq	35000(%rax), %rdx
	movq	%rbp, %rdi
	movq	%rdx, 984(%rbx)
	xorq	26808(%rax), %rdi
	movq	%rdi, 8(%rsp)
	jmp	.L666
.L663:
	movzbl	97(%rbx), %r8d
	movl	%r10d, %esi
	movq	%r13, %r9
	movl	$1, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movq	%r11, 24(%rsp)
	movl	%r10d, 16(%rsp)
	call	z900_logical_to_main_l
	movq	24(%rsp), %r11
	movl	16(%rsp), %r10d
	movq	%rax, 8(%rsp)
.L666:
	movl	1892(%r15), %eax
	movq	984(%rbx), %r14
	testl	%eax, %eax
	je	.L667
	movq	120(%rbx), %rdx
	leal	1(%rax), %esi
	leal	(%r12,%rbp), %eax
	movslq	%esi, %rsi
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	je	.L668
	movb	44216(%rbx,%rax), %dil
	testb	%dil, 1976(%rbx,%rsi)
	je	.L667
.L668:
	movb	97(%rbx), %sil
	testb	%sil, %sil
	je	.L669
	cmpb	43192(%rbx,%rax), %sil
	jne	.L667
.L669:
	leaq	0(%r13,%rbp), %rdi
	movl	2224(%rbx), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L667
	testb	$2, 46264(%rbx,%rax)
	je	.L667
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
	jmp	.L670
.L667:
	leaq	0(%r13,%rbp), %rdi
	movzbl	97(%rbx), %r8d
	movl	$8, %r9d
	andq	120(%rbx), %rdi
	subl	%r12d, %r9d
	movl	$2, %ecx
	movslq	%r9d, %r9
	movq	%rbx, %rdx
	movq	%r11, 16(%rsp)
	movl	%r10d, %esi
	call	z900_logical_to_main_l
	movq	16(%rsp), %r11
.L670:
	orb	$6, (%r14)
	leaq	32(%rsp), %rsi
	movq	%r13, %rcx
	movq	8(%rsp), %rdi
	bswap	%r11
	movq	%r11, 32(%rsp)
	rep movsb
	movq	%rax, %rdi
	movb	$8, %cl
	subl	%r12d, %ecx
	movslq	%ecx, %rcx
	rep movsb
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE2160:
	.size	z900_vstore8_full, .-z900_vstore8_full
	.type	z900_instfetch.constprop.15, @function
z900_instfetch.constprop.15:
.LFB3158:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rdi, %rbx
	movq	184(%rdi), %rax
	testq	%rax, %rax
	je	.L697
	subq	144(%rdi), %rax
	movq	$0, 184(%rdi)
	addq	168(%rdi), %rax
	andq	120(%rdi), %rax
	movq	%rax, 176(%rdi)
.L697:
	movq	800(%rbx), %rbp
	movl	%ebp, %r13d
	andl	$4095, %r13d
	testb	$1, %bpl
	je	.L698
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L698:
	cmpq	$2048, %rbp
	sbbl	%r12d, %r12d
	andl	$-2048, %r12d
	addl	$4096, %r12d
	testb	$4, 808(%rbx)
	je	.L701
	movb	103(%rbx), %al
	movb	99(%rbx), %cl
	movl	%eax, %edx
	shrb	%al
	andl	$1, %edx
	andl	$1, %eax
	sall	$7, %edx
	sall	$5, %eax
	orl	%edx, %eax
	movb	96(%rbx), %dl
	orl	$64, %eax
	andl	$4, %edx
	cmpb	$1, %dl
	sbbl	%edx, %edx
	notl	%edx
	andl	$16, %edx
	orl	%edx, %eax
	movl	%ecx, %edx
	andl	$64, %ecx
	shrw	$4, %dx
	andl	$8, %edx
	orl	%edx, %eax
	cmpb	$1, %cl
	movl	52(%rbx), %ecx
	sbbl	%edx, %edx
	notl	%edx
	andl	$4, %edx
	orl	%edx, %eax
	testl	$4194304, %ecx
	movw	%ax, 1146(%rbx)
	je	.L701
	movq	416(%rbx), %rax
	movq	408(%rbx), %rdx
	cmpq	%rdx, %rax
	jb	.L706
	xorl	%esi, %esi
	cmpq	%rdx, %rbp
	jb	.L709
	jmp	.L768
.L706:
	cmpq	%rdx, %rbp
	movl	$1, %esi
	jae	.L709
.L768:
	xorl	%esi, %esi
	cmpq	%rax, %rbp
	setbe	%sil
.L709:
	movb	%sil, %al
	andl	$1, %eax
	testb	%al, %al
	je	.L701
	movl	56(%rbx), %eax
	movl	%eax, %edx
	orl	$4194304, %edx
	andl	$65536, %ecx
	movl	%edx, 56(%rbx)
	je	.L701
	orb	$4, 103(%rbx)
	orl	$4259840, %eax
	movq	%rbp, 112(%rbx)
	movl	%eax, 56(%rbx)
	movl	$128, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L701:
	movl	1908(%rbx), %eax
	testl	%eax, %eax
	je	.L710
	movl	%ebp, %ecx
	incl	%eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	je	.L711
	movb	44216(%rbx,%rcx), %sil
	testb	%sil, 1976(%rbx,%rax)
	je	.L710
.L711:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L712
	cmpb	43192(%rbx,%rcx), %al
	jne	.L710
.L712:
	movl	2224(%rbx), %eax
	movq	%rbp, %rsi
	andq	$-4194304, %rsi
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L710
	testb	$4, 46264(%rbx,%rcx)
	je	.L710
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
	jmp	.L713
.L710:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	orl	$-1, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
.L713:
	movb	(%rax), %cl
	movl	$2, %edx
	cmpb	$63, %cl
	jbe	.L714
	cmpb	$-64, %cl
	sbbl	%edx, %edx
	andl	$-2, %edx
	addl	$6, %edx
.L714:
	addl	%r13d, %edx
	cmpl	%edx, %r12d
	jge	.L715
	movl	1908(%rbx), %edx
	leaq	1014(%rbx), %r14
	subl	%r13d, %r12d
	movl	(%rax), %eax
	movslq	%r12d, %r12
	leaq	(%r12,%rbp), %rdi
	andq	120(%rbx), %rdi
	testl	%edx, %edx
	movl	%eax, 1014(%rbx)
	je	.L716
	movl	%edi, %ecx
	incl	%edx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	je	.L717
	movb	44216(%rbx,%rcx), %sil
	testb	%sil, 1976(%rbx,%rdx)
	je	.L716
.L717:
	movb	97(%rbx), %dl
	testb	%dl, %dl
	je	.L718
	cmpb	43192(%rbx,%rcx), %dl
	jne	.L716
.L718:
	movl	2224(%rbx), %esi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L716
	testb	$4, 46264(%rbx,%rcx)
	je	.L716
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
	jmp	.L719
.L716:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	orl	$-1, %esi
	call	z900_logical_to_main_l
.L719:
	movl	(%rax), %eax
	movl	%eax, (%r14,%r12)
	movq	%r14, %rax
.L715:
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE3158:
	.size	z900_instfetch.constprop.15, .-z900_instfetch.constprop.15
	.type	z900_vfetch8_full.constprop.17, @function
z900_vfetch8_full.constprop.17:
.LFB3156:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	movq	%rdi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	movl	1916(%rsi), %eax
	testl	%eax, %eax
	je	.L770
	movl	%edi, %ecx
	incl	%eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rsi,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rsi,%rax,8)
	je	.L771
	movb	44216(%rsi,%rcx), %sil
	testb	%sil, 1976(%rbx,%rax)
	je	.L770
.L771:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L772
	cmpb	43192(%rbx,%rcx), %al
	jne	.L770
.L772:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L770
	testb	$4, 46264(%rbx,%rcx)
	je	.L770
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
	jmp	.L773
.L770:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
.L773:
	movq	(%rax), %rax
	movl	%ebp, %edx
	andl	$2047, %edx
	movq	%rax, (%rsp)
	movl	$2048, %eax
	subl	%edx, %eax
	movl	1916(%rbx), %edx
	movl	%eax, %r12d
	testl	%edx, %edx
	je	.L774
	movq	120(%rbx), %rcx
	addl	%ebp, %eax
	incl	%edx
	movslq	%edx, %rdx
	andl	%ecx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rsi
	movq	2232(%rsi), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	je	.L775
	movb	44216(%rbx,%rax), %dil
	testb	%dil, 1976(%rbx,%rdx)
	je	.L774
.L775:
	movb	97(%rbx), %dl
	testb	%dl, %dl
	je	.L776
	cmpb	43192(%rbx,%rax), %dl
	jne	.L774
.L776:
	leaq	(%r12,%rbp), %rdx
	movl	2224(%rbx), %edi
	andq	%rcx, %rdx
	movq	%rdx, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%rsi), %rcx
	jne	.L774
	testb	$4, 46264(%rbx,%rax)
	je	.L774
	movq	%rdx, %rax
	xorq	26808(%rsi), %rax
	jmp	.L777
.L774:
	leaq	(%r12,%rbp), %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	call	z900_logical_to_main_l
.L777:
	movq	(%rax), %rax
	movq	%rax, (%rsp,%r12)
	movq	(%rsp), %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	bswap	%rax
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE3156:
	.size	z900_vfetch8_full.constprop.17, .-z900_vfetch8_full.constprop.17
	.text
	.p2align 4,,15
	.type	z900_translate_addr, @function
z900_translate_addr:
.LFB2143:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	leal	5(%rsi), %eax
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	movl	%ecx, %r13d
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movl	%esi, %r12d
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rdi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rdx, %rbx
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	andb	$-8, 994(%rdx)
	cmpl	$4, %eax
	ja	.L804
	jmp	*.L806(,%rax,8)
	.section	.rodata
	.align 8
	.align 4
.L806:
	.quad	.L1043
	.quad	.L1042
	.quad	.L853
	.quad	.L809
	.quad	.L810
	.text
	.p2align 4,,10
	.p2align 3
.L804:
	movzbl	99(%rdx), %eax
	cmpb	$64, %al
	je	.L816
	testb	$1, 1144(%rdx)
	je	.L817
	movq	1064(%rdx), %rdx
	movq	1080(%rdx), %rcx
	testb	$1, 2(%rcx)
	jne	.L1045
.L817:
	cmpl	$15, %r12d
	jg	.L816
	cmpb	$-128, %al
	je	.L1042
	cmpb	$-64, %al
	.p2align 4,,3
	je	.L1043
	.p2align 4,,10
	.p2align 3
.L853:
	movq	336(%rbx), %rsi
	movl	$0, 976(%rbx)
	testl	$288, %esi
	movq	%rsi, 968(%rbx)
	setne	%dl
.L815:
	movzbl	994(%rbx), %eax
	movl	%ebp, %r15d
	movq	%rbp, %r8
	shrl	$12, %r15d
	andq	$-4194304, %r8
	andl	$1023, %r15d
	leaq	(%rbx,%r15,8), %rcx
	andl	$-2, %eax
	orl	%edx, %eax
	movl	2224(%rbx), %edx
	movb	%al, 994(%rbx)
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	je	.L1046
.L856:
	testb	$32, %sil
	je	.L859
	testl	$512, %r13d
	je	.L1047
	xorl	%edx, %edx
.L860:
	movl	$18, %r10d
	movl	$18, %esi
	movw	%r10w, 992(%rbx)
.L896:
	testl	$4096, %r13d
	movl	$5, %r14d
	je	.L1048
.L964:
	addq	$120, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	movl	%r14d, %eax
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L1042:
	.cfi_restore_state
	movq	384(%rbx), %rsi
	movl	$2, 976(%rbx)
	testl	$288, %esi
	movq	%rsi, 968(%rbx)
	setne	%dl
	jmp	.L815
	.p2align 4,,10
	.p2align 3
.L859:
	movl	%esi, %eax
	movq	%rbp, %rdx
	movl	%esi, %edi
	shrq	$50, %rdx
	andl	$12, %eax
	andw	$16376, %dx
	cmpb	$11, %al
	ja	.L927
	testw	%dx, %dx
	jne	.L863
.L927:
	movq	%rbp, %r14
	shrq	$39, %r14
	andw	$16376, %r14w
	cmpb	$7, %al
	ja	.L928
	testw	%r14w, %r14w
	je	.L928
.L863:
	movl	$56, %esi
	movl	$4, %eax
	movw	%si, 992(%rbx)
.L899:
	testl	$1024, %r13d
	movl	$3, %r14d
	jne	.L964
.L914:
	movslq	976(%rbx), %rdx
	andq	$-4096, %rbp
	movq	%rbp, 792(%rbx)
	cmpl	$1, %edx
	je	.L1049
	orq	%rbp, %rdx
	movq	%rdx, 792(%rbx)
.L901:
	testb	$4, %r13b
	jne	.L1050
	andl	$3, %r13d
	je	.L905
	orb	$4, %dh
	movq	%rdx, 792(%rbx)
.L905:
	cmpb	$64, 99(%rbx)
	je	.L906
	testb	$1, 1144(%rbx)
	movl	%eax, %r14d
	je	.L964
	movq	1064(%rbx), %rdx
	movq	1080(%rdx), %rcx
	testb	$1, 2(%rcx)
	je	.L964
	testb	$64, 99(%rdx)
	je	.L964
.L906:
	xorl	%edx, %edx
	testl	%r12d, %r12d
	movl	%eax, %r14d
	cmovns	%r12d, %edx
	movb	%dl, 1012(%rbx)
	jmp	.L964
	.p2align 4,,10
	.p2align 3
.L1043:
	movq	432(%rbx), %rsi
	movl	$3, 976(%rbx)
	testl	$288, %esi
	movq	%rsi, 968(%rbx)
	setne	%dl
	jmp	.L815
	.p2align 4,,10
	.p2align 3
.L809:
	movl	$0, 976(%rdx)
	movq	$-1, %rsi
	movq	$-1, 968(%rdx)
	movl	$1, %edx
	jmp	.L815
	.p2align 4,,10
	.p2align 3
.L810:
	movl	1908(%rdx), %eax
	cmpl	$1, %eax
	je	.L812
	xorl	%edx, %edx
	cmpl	$13, %eax
	sete	%dl
	leal	(%rdx,%rdx,2), %edx
	movl	%edx, 976(%rbx)
.L814:
	addl	$1, %eax
	cltq
	movq	320(%rbx,%rax,8), %rsi
	testl	$288, %esi
	movq	%rsi, 968(%rbx)
	setne	%dl
	jmp	.L815
	.p2align 4,,10
	.p2align 3
.L1047:
	movl	%r13d, %edx
	andl	$1024, %edx
	jne	.L861
	movq	%rbp, %rsi
	xorl	%r10d, %r10d
	xorl	%r9d, %r9d
	andq	$-4096, %rsi
.L862:
	testl	$512, %esi
	je	.L894
.L893:
	orb	$2, 994(%rbx)
.L894:
	andl	$256, %r13d
	jne	.L858
	movq	968(%rbx), %rax
	shrq	$4, %r10
	andl	$1, %r10d
	movq	%rax, 2232(%rcx)
	movl	2224(%rbx), %eax
	movq	%rsi, 18616(%rcx)
	orq	%r8, %rax
	movq	%rax, 10424(%rcx)
	movb	%r10b, 44216(%rbx,%r15)
	movzbl	994(%rbx), %eax
	movb	$0, 46264(%rbx,%r15)
	shrb	%al
	andl	$3, %eax
	movb	%al, 45240(%rbx,%r15)
	movq	$0, 26808(%rcx)
.L858:
	testl	%edx, %edx
	movq	%r9, %rax
	jne	.L895
	movq	%rbp, %rax
	andq	$-4096, %rsi
	andl	$4095, %eax
	movq	%rsi, 960(%rbx)
	orq	%rsi, %rax
.L895:
	xorl	%ebp, %ebp
	movq	%rax, 944(%rbx)
	xorl	%r14d, %r14d
	movw	%bp, 992(%rbx)
	jmp	.L964
	.p2align 4,,10
	.p2align 3
.L928:
	movq	%rbp, %r9
	shrq	$28, %r9
	andw	$16376, %r9w
	cmpb	$3, %al
	ja	.L929
	testw	%r9w, %r9w
	jne	.L863
.L929:
	movq	%rbp, %r10
	andq	$-4096, %rsi
	andl	$3, %edi
	shrq	$17, %r10
	andw	$16376, %r10w
	cmpb	$8, %al
	je	.L868
	cmpb	$12, %al
	je	.L869
	cmpb	$4, %al
	je	.L1051
	movzwl	%r10w, %edx
	shrw	$12, %r10w
	addq	%rsi, %rdx
.L913:
	movzbl	%dil, %edi
	cmpw	%r10w, %di
	jb	.L881
	cmpq	%rdx, 1040(%rbx)
	jae	.L1052
.L872:
	movl	$5, %r11d
	movl	$5, %esi
	movw	%r11w, 992(%rbx)
	jmp	.L896
	.p2align 4,,10
	.p2align 3
.L1046:
	cmpb	$0, 44216(%rbx,%r15)
	je	.L1053
	testb	$1, %al
	jne	.L856
.L855:
	testl	$256, %r13d
	jne	.L856
	movzbl	45240(%rbx,%r15), %eax
	movq	18616(%rcx), %rsi
	testb	%al, %al
	je	.L1041
	andl	$3, %eax
	leal	(%rax,%rax), %edx
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	%edx, %eax
	movb	%al, 994(%rbx)
.L1041:
	movl	%r13d, %edx
	xorl	%r9d, %r9d
	andl	$512, %edx
	jmp	.L858
	.p2align 4,,10
	.p2align 3
.L1045:
	testb	$64, 99(%rdx)
	je	.L817
	.p2align 4,,10
	.p2align 3
.L816:
	movl	%r12d, %r14d
	andl	$15, %r14d
	je	.L853
	movzbl	1144(%rbx), %eax
	testb	$1, %al
	je	.L820
	movq	1064(%rbx), %rdx
	movq	1080(%rdx), %rcx
	testb	$1, 2(%rcx)
	je	.L853
	testb	$64, 99(%rdx)
	je	.L853
	movslq	%r14d, %r10
	movl	584(%rdx,%r10,4), %r15d
.L821:
	testl	%r15d, %r15d
	je	.L853
	cmpl	$1, %r15d
	je	.L1042
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	leaq	(%rbx,%rdx,4), %r11
	movl	1892(%r11), %edx
	cmpl	$15, %edx
	jle	.L824
	movzbl	2009(%rbx,%r10), %eax
	addl	$1, %edx
	movslq	%edx, %rdx
	movq	320(%rbx,%rdx,8), %rsi
	movl	$1, 976(%rbx)
	andl	$3, %eax
	leal	(%rax,%rax), %edx
	movzbl	994(%rbx), %eax
	movq	%rsi, 968(%rbx)
	andl	$-7, %eax
	orl	%edx, %eax
	testl	$288, %esi
	movb	%al, 994(%rbx)
	setne	%dl
	jmp	.L815
	.p2align 4,,10
	.p2align 3
.L1053:
	cmpq	%rsi, 2232(%rcx)
	jne	.L856
	jmp	.L855
	.p2align 4,,10
	.p2align 3
.L861:
	movl	$19, %r9d
	movl	$19, %esi
	xorl	%edx, %edx
	movw	%r9w, 992(%rbx)
	jmp	.L896
	.p2align 4,,10
	.p2align 3
.L812:
	movl	$0, 976(%rdx)
	jmp	.L814
	.p2align 4,,10
	.p2align 3
.L1050:
	orb	$8, %dh
	movq	%rdx, 792(%rbx)
	jmp	.L905
	.p2align 4,,10
	.p2align 3
.L820:
	movslq	%r14d, %r10
	movl	584(%rbx,%r10,4), %r15d
	jmp	.L821
	.p2align 4,,10
	.p2align 3
.L1048:
	movq	%rbx, %rdi
	movq	%rdx, (%rsp)
	call	*2032(%rbx)
	movq	(%rsp), %rdx
.L882:
	testl	$1024, %r13d
	je	.L897
.L1044:
	movq	%rdx, 944(%rbx)
	movl	$2, %r14d
	jmp	.L964
	.p2align 4,,10
	.p2align 3
.L1049:
	movq	968(%rbx), %rcx
	movq	%rbp, %rdx
	movq	%rcx, %rsi
	xorq	336(%rbx), %rsi
	testq	$-4096, %rsi
	je	.L901
	movq	%rcx, %rsi
	xorq	384(%rbx), %rsi
	testq	$-4096, %rsi
	jne	.L902
	orq	$2, %rdx
	movq	%rdx, 792(%rbx)
	jmp	.L901
.L824:
	movzwl	394(%rbx), %edi
	testl	$-33554432, %r15d
	movw	%di, (%rsp)
	je	.L1054
.L825:
	movl	$40, %r15d
	movw	%r15w, 992(%rbx)
.L851:
	movl	%r13d, %r14d
	movb	%r12b, 1012(%rbx)
	sall	$21, %r14d
	sarl	$31, %r14d
	addl	$4, %r14d
	jmp	.L964
.L897:
	movl	$16, %r8d
	movq	%rdx, 944(%rbx)
	movl	$1, %eax
	movw	%r8w, 992(%rbx)
	jmp	.L914
.L1051:
	movl	%r9d, %eax
	shrw	$12, %ax
.L912:
	movzbl	%dil, %edi
	cmpw	%ax, %di
	jb	.L878
	movzwl	%r9w, %edx
	addq	%rsi, %rdx
	cmpq	1040(%rbx), %rdx
	ja	.L872
	movq	%rdx, %rdi
	movq	%rbx, %rsi
	movq	%rcx, 24(%rsp)
	movl	%r10d, 16(%rsp)
	movq	%r8, 8(%rsp)
	movq	%rdx, (%rsp)
	call	z900_fetch_main_absolute
	movq	(%rsp), %rdx
	movq	(%rax), %rdi
	movq	8(%rsp), %r8
	movl	16(%rsp), %r10d
	movq	24(%rsp), %rcx
	bswap	%rdi
	testb	$32, %dil
	jne	.L879
	movq	%rdi, %rax
	andl	$12, %eax
	cmpq	$4, %rax
	jne	.L860
	cmpb	$0, 2049(%rbx)
	js	.L1055
.L880:
	movq	%rdi, %rdx
	movzwl	%r10w, %eax
	shrw	$12, %r10w
	andq	$-4096, %rdx
	addq	%rax, %rdx
	movq	%rdi, %rax
	andl	$192, %eax
	shrq	$6, %rax
	cmpw	%ax, %r10w
	jae	.L1056
.L881:
	movl	$16, %edi
	movq	%rdx, 944(%rbx)
	movl	$3, %eax
	movw	%di, 992(%rbx)
	jmp	.L899
.L869:
	movl	%edx, %eax
	movzbl	%dil, %edi
	shrw	$12, %ax
	cmpw	%ax, %di
	jb	.L871
	movzwl	%dx, %edx
	addq	%rsi, %rdx
	cmpq	1040(%rbx), %rdx
	ja	.L872
	movq	%rdx, %rdi
	movq	%rbx, %rsi
	movq	%rcx, 32(%rsp)
	movl	%r10d, 24(%rsp)
	movl	%r9d, 16(%rsp)
	movq	%r8, 8(%rsp)
	movq	%rdx, (%rsp)
	call	z900_fetch_main_absolute
	movq	(%rsp), %rdx
	movq	(%rax), %rdi
	movq	8(%rsp), %r8
	movl	16(%rsp), %r9d
	movl	24(%rsp), %r10d
	bswap	%rdi
	testb	$32, %dil
	movq	32(%rsp), %rcx
	jne	.L873
	movq	%rdi, %rax
	andl	$12, %eax
	cmpq	$12, %rax
	jne	.L860
	cmpb	$0, 2049(%rbx)
	js	.L1057
.L874:
	movq	%rdi, %rdx
	movl	%r14d, %eax
	andl	$192, %edx
	shrw	$12, %ax
	shrq	$6, %rdx
	cmpw	%dx, %ax
	jae	.L1058
.L875:
	movl	$58, %edx
	movl	$4, %eax
	movw	%dx, 992(%rbx)
	jmp	.L899
.L868:
	movl	%r14d, %eax
	shrw	$12, %ax
.L911:
	movzbl	%dil, %edi
	cmpw	%ax, %di
	jb	.L875
	movzwl	%r14w, %edx
	addq	%rsi, %rdx
	cmpq	1040(%rbx), %rdx
	ja	.L872
	movq	%rdx, %rdi
	movq	%rbx, %rsi
	movq	%rcx, 32(%rsp)
	movl	%r10d, 24(%rsp)
	movl	%r9d, 16(%rsp)
	movq	%r8, 8(%rsp)
	movq	%rdx, (%rsp)
	call	z900_fetch_main_absolute
	movq	(%rsp), %rdx
	movq	(%rax), %rdi
	movq	8(%rsp), %r8
	movl	16(%rsp), %r9d
	movl	24(%rsp), %r10d
	bswap	%rdi
	testb	$32, %dil
	movq	32(%rsp), %rcx
	jne	.L876
	movq	%rdi, %rax
	andl	$12, %eax
	cmpq	$8, %rax
	jne	.L860
	cmpb	$0, 2049(%rbx)
	js	.L1059
.L877:
	movq	%rdi, %rdx
	movl	%r9d, %eax
	andl	$192, %edx
	shrw	$12, %ax
	shrq	$6, %rdx
	cmpw	%dx, %ax
	jae	.L1060
.L878:
	movl	$59, %eax
	movw	%ax, 992(%rbx)
	movl	$4, %eax
	jmp	.L899
.L902:
	xorq	432(%rbx), %rcx
	testq	$-4096, %rcx
	jne	.L903
	orq	$3, %rdx
	movq	%rdx, 792(%rbx)
	jmp	.L901
.L1054:
	testl	$16777216, %r15d
	je	.L826
	movl	368(%rbx), %edx
	andl	$2147483584, %edx
.L827:
	movl	%edx, %ecx
	cmpq	1040(%rbx), %rcx
	ja	.L828
	andq	$-8192, %rcx
	je	.L829
	movl	88(%rbx), %esi
	cmpq	%rsi, %rcx
	je	.L829
.L830:
	leal	16(%rdx), %ecx
	testb	$2, %al
	jne	.L1061
.L831:
	movq	%rcx, %rax
	movzwl	%r15w, %edx
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	movl	(%rax,%rcx), %eax
	movl	%edx, %ecx
	shrl	$3, %ecx
	bswap	%eax
	movl	%eax, %esi
	andl	$127, %esi
	cmpl	%ecx, %esi
	jae	.L1062
.L832:
	movl	$41, %r14d
	movw	%r14w, 992(%rbx)
	jmp	.L851
.L871:
	movl	$57, %ecx
	movl	$4, %eax
	movw	%cx, 992(%rbx)
	jmp	.L899
.L828:
	movl	$5, %eax
	movl	$5, %esi
	movq	%rbx, %rdi
	movw	%ax, 992(%rbx)
	call	*2032(%rbx)
	jmp	.L825
.L903:
	orq	$1, %rdx
	movq	%rdx, 792(%rbx)
	jmp	.L901
.L826:
	movl	344(%rbx), %edx
	andl	$2147483584, %edx
	jmp	.L827
.L829:
	xorl	88(%rbx), %edx
	jmp	.L830
.L1062:
	andl	$2147483520, %eax
	sall	$4, %edx
	addl	%edx, %eax
	movl	%eax, %edi
	cmpq	1040(%rbx), %rdi
	ja	.L828
	movq	%rdi, %rcx
	andq	$-8192, %rcx
	je	.L833
	movl	88(%rbx), %edx
	cmpq	%rdx, %rcx
	je	.L833
.L834:
	movq	%rbx, %rsi
	movq	%r10, 32(%rsp)
	movq	%r11, 24(%rsp)
	call	z900_fetch_main_absolute
	movl	(%rax), %edx
	movl	8(%rax), %ecx
	movl	12(%rax), %eax
	bswap	%edx
	movl	%edx, %edi
	bswap	%ecx
	movl	%ecx, %ecx
	movq	%rdi, 8(%rsp)
	bswap	%eax
	salq	$32, %rax
	orq	%rax, %rcx
	testl	%edi, %edi
	js	.L832
	movl	%r13d, %eax
	movq	24(%rsp), %r11
	andl	$2048, %eax
	movq	32(%rsp), %r10
	movl	%eax, 16(%rsp)
	jne	.L835
	xorl	8(%rsp), %r15d
	andl	$16711680, %r15d
	je	.L835
.L836:
	movw	$42, 992(%rbx)
	jmp	.L851
.L873:
	testl	$1024, %r13d
	je	.L871
	orq	$3, %rdx
	jmp	.L1044
.L1052:
	movq	%rdx, %rdi
	movq	%rbx, %rsi
	movq	%rcx, 16(%rsp)
	movq	%r8, 8(%rsp)
	movq	%rdx, (%rsp)
	call	z900_fetch_main_absolute
	movq	(%rsp), %rdx
	movq	(%rax), %r10
	movq	8(%rsp), %r8
	movq	16(%rsp), %rcx
	bswap	%r10
	testb	$32, %r10b
	jne	.L882
	testb	$12, %r10b
	jne	.L860
	movzbl	994(%rbx), %esi
	testb	$1, %sil
	je	.L883
	testb	$16, %r10b
	jne	.L860
.L883:
	movzbl	2049(%rbx), %edi
	testb	%dil, %dil
	js	.L1063
.L884:
	movq	%rbp, %rax
	movq	%r10, %r9
	movl	%r13d, %r14d
	shrq	$9, %rax
	andq	$-2048, %r9
	andl	$2040, %eax
	addq	%rax, %r9
	andl	$1024, %r14d
	je	.L890
	shrq	$9, %r10
	movq	%r9, 944(%rbx)
	movw	$0, 992(%rbx)
	movl	%r10d, %r14d
	andl	$1, %r14d
	testb	%dil, %dil
	jns	.L964
	testb	$-128, 330(%rbx)
	je	.L964
	andb	$6, %sil
	movl	$1, %eax
	cmovne	%eax, %r14d
	jmp	.L964
.L879:
	testl	$1024, %r13d
	je	.L878
	orq	$1, %rdx
	movl	$2, %r14d
	movq	%rdx, 944(%rbx)
	jmp	.L964
.L876:
	testl	$1024, %r13d
	je	.L875
	orq	$2, %rdx
	movl	$2, %r14d
	movq	%rdx, 944(%rbx)
	jmp	.L964
.L833:
	movl	%eax, %edi
	xorl	88(%rbx), %edi
	jmp	.L834
.L835:
	movl	%ecx, %eax
	andl	$2147483584, %eax
	movl	%eax, %edi
	movq	%rdi, %rsi
	andq	$-8192, %rsi
	je	.L837
	movl	88(%rbx), %edx
	cmpq	%rdx, %rsi
	je	.L837
.L838:
	cmpq	1040(%rbx), %rdi
	ja	.L828
	movq	%rbx, %rsi
	movq	%r10, 40(%rsp)
	movq	%rcx, 32(%rsp)
	movq	%r11, 24(%rsp)
	call	z900_fetch_main_absolute
	movq	40(%rsp), %r10
	xorl	%edx, %edx
	movq	32(%rsp), %rcx
	movq	24(%rsp), %r11
.L840:
	movl	(%rax,%rdx), %esi
	bswap	%esi
	movl	%esi, 48(%rsp,%rdx)
	addq	$4, %rdx
	cmpq	$64, %rdx
	jne	.L840
	movl	48(%rsp), %eax
	testl	%eax, %eax
	js	.L841
	shrq	$32, %rcx
	cmpl	%ecx, 68(%rsp)
	je	.L1064
.L842:
	movw	$44, 992(%rbx)
	jmp	.L851
.L837:
	movl	%eax, %edi
	xorl	88(%rbx), %edi
	jmp	.L838
.L1056:
	andl	$3, %edi
	jmp	.L913
.L1060:
	movq	%rdi, %rsi
	andl	$3, %edi
	andq	$-4096, %rsi
	jmp	.L912
.L1059:
	testb	$-128, 330(%rbx)
	je	.L877
	testl	$512, %edi
	je	.L877
	orb	$2, 994(%rbx)
	jmp	.L877
.L1061:
	testb	$4, %al
	jne	.L831
	movq	%rcx, %rdi
	movq	1056(%rbx), %rdx
	movl	$4, %ecx
	addq	1096(%rbx), %rdi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$-3, %esi
	movq	%r10, 16(%rsp)
	movq	%r11, 8(%rsp)
	call	z900_logical_to_main_l
	movq	1056(%rbx), %rax
	movq	16(%rsp), %r10
	movq	8(%rsp), %r11
	movq	952(%rax), %rcx
	jmp	.L831
.L1055:
	testb	$-128, 330(%rbx)
	je	.L880
	testl	$512, %edi
	je	.L880
	orb	$2, 994(%rbx)
	jmp	.L880
.L890:
	cmpq	1040(%rbx), %r9
	ja	.L872
	movq	%rbx, %rsi
	movq	%r9, %rdi
	movq	%rcx, 32(%rsp)
	movq	%r10, 24(%rsp)
	movq	%r8, 16(%rsp)
	movq	%rdx, 8(%rsp)
	movq	%r9, (%rsp)
	call	z900_fetch_main_absolute
	movq	(%rsp), %r9
	movq	(%rax), %rsi
	movq	8(%rsp), %rdx
	movq	16(%rsp), %r8
	movq	24(%rsp), %r10
	bswap	%rsi
	testl	$1024, %esi
	movq	32(%rsp), %rcx
	jne	.L891
	testl	$2048, %esi
	jne	.L860
	movl	%r13d, %edx
	andl	$512, %edx
	testl	$512, %r10d
	jne	.L893
	jmp	.L862
.L1063:
	testb	$-128, 330(%rbx)
	je	.L884
	testl	$1024, %r10d
	je	.L884
	testl	$512, %r10d
	je	.L885
	orb	$2, 994(%rbx)
.L885:
	movl	%r13d, %r14d
	andl	$1024, %r14d
	jne	.L1065
	movq	%r10, %rax
	andl	$1048575, %ebp
	andq	$-1048576, %rax
	orq	%rbp, %rax
	movq	%rax, 944(%rbx)
	andq	$-4096, %rax
	andl	$256, %r13d
	movq	%rax, 960(%rbx)
	jne	.L889
	movq	968(%rbx), %rdx
	movq	%rdx, 2232(%rcx)
	movl	2224(%rbx), %edx
	movq	%rax, 18616(%rcx)
	movq	%r10, %rax
	shrq	$4, %rax
	andl	$1, %eax
	orq	%r8, %rdx
	movq	%rdx, 10424(%rcx)
	movb	%al, 44216(%rbx,%r15)
	movzbl	994(%rbx), %eax
	movb	$0, 46264(%rbx,%r15)
	shrb	%al
	andl	$3, %eax
	movb	%al, 45240(%rbx,%r15)
	movq	$0, 26808(%rcx)
.L889:
	movw	$0, 992(%rbx)
	jmp	.L964
.L1065:
	movzbl	994(%rbx), %eax
	movl	$2, %r14d
	movw	$0, 992(%rbx)
	andl	$6, %eax
	cmpb	$1, %al
	sbbq	%rax, %rax
	notq	%rax
	andl	$4, %eax
	orq	%rdx, %rax
	movq	%rax, 944(%rbx)
	jmp	.L964
.L891:
	testl	$512, %r13d
	movq	%r9, 944(%rbx)
	movl	$2, %eax
	movw	$17, 992(%rbx)
	je	.L914
	jmp	.L964
.L1058:
	movq	%rdi, %rsi
	andl	$3, %edi
	andq	$-4096, %rsi
	jmp	.L911
.L1057:
	testb	$-128, 330(%rbx)
	je	.L874
	testl	$512, %edi
	je	.L874
	orb	$2, 994(%rbx)
	jmp	.L874
.L1064:
	cmpl	$0, 16(%rsp)
	jne	.L843
	testq	$16777216, 8(%rsp)
	je	.L843
	movzwl	8(%rsp), %ecx
	movzwl	(%rsp), %edi
	cmpw	%cx, %di
	je	.L843
	movl	52(%rsp), %edx
	movl	%edi, %ecx
	andl	$2147483644, %eax
	andl	$65520, %ecx
	andl	$65520, %edx
	cmpl	%ecx, %edx
	jl	.L849
	movl	%edi, %edx
	shrw	$2, %dx
	movzwl	%dx, %edx
	addl	%edx, %eax
	andl	$2147483647, %eax
	movl	%eax, %ecx
	cmpq	1040(%rbx), %rcx
	ja	.L845
	movq	%rcx, %rsi
	andq	$-8192, %rsi
	je	.L846
	movl	88(%rbx), %edx
	cmpq	%rdx, %rsi
	je	.L846
.L847:
	movzbl	1144(%rbx), %edx
	testb	$2, %dl
	jne	.L1066
.L848:
	movq	1024(%rbx), %rdx
	shrl	$11, %eax
	addq	1032(%rbx), %rax
	movzbl	(%rdx,%rcx), %edx
	movl	(%rsp), %ecx
	orb	$4, (%rax)
	andl	$3, %ecx
	addl	%ecx, %ecx
	sall	%cl, %edx
	andb	$64, %dl
	jne	.L843
.L849:
	movw	$45, 992(%rbx)
	jmp	.L851
.L843:
	testq	$33554432, 8(%rsp)
	je	.L850
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	$4, %eax
	movb	%al, 994(%rbx)
.L850:
	movl	56(%rsp), %esi
	movl	$1, 976(%rbx)
	movzbl	994(%rbx), %ecx
	movl	60(%rsp), %eax
	salq	$32, %rsi
	shrb	%cl
	orq	%rax, %rsi
	andb	$2, %cl
	movq	%rsi, 968(%rbx)
	je	.L909
	xorq	$3088, %rsi
	orq	$256, %rsi
	movq	%rsi, 968(%rbx)
.L909:
	leal	17(%r14), %eax
	movq	%rsi, %rdx
	addl	$16, %r14d
	cltq
	andl	$288, %edx
	movq	%rsi, 320(%rbx,%rax,8)
	setne	%dl
	movl	%r14d, 1892(%r11)
	sete	1976(%rbx,%rax)
	movb	%cl, 2009(%rbx,%r10)
	jmp	.L815
.L841:
	movw	$43, 992(%rbx)
	jmp	.L851
.L1066:
	andb	$4, %dl
	jne	.L848
	movq	%rcx, %rdi
	movq	1056(%rbx), %rdx
	xorl	%ecx, %ecx
	addq	1096(%rbx), %rdi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$-3, %esi
	movq	%r10, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	z900_logical_to_main_l
	movq	1056(%rbx), %rax
	movq	24(%rsp), %r10
	movq	16(%rsp), %r11
	movl	952(%rax), %eax
	movl	%eax, %ecx
	jmp	.L848
.L846:
	xorl	88(%rbx), %eax
	movl	%eax, %ecx
	jmp	.L847
.L845:
	movl	$5, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L849
	.cfi_endproc
.LFE2143:
	.size	z900_translate_addr, .-z900_translate_addr
	.p2align 4,,15
	.type	s390_translate_addr, @function
s390_translate_addr:
.LFB1139:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	leal	5(%rsi), %eax
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	movl	%ecx, %r13d
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movl	%edi, %r12d
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movl	%esi, %ebp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rdx, %rbx
	subq	$136, %rsp
	.cfi_def_cfa_offset 192
	andb	$-8, 994(%rdx)
	cmpl	$4, %eax
	ja	.L1068
	jmp	*.L1070(,%rax,8)
	.section	.rodata
	.align 8
	.align 4
.L1070:
	.quad	.L1252
	.quad	.L1251
	.quad	.L1126
	.quad	.L1073
	.quad	.L1074
	.text
	.p2align 4,,10
	.p2align 3
.L1068:
	movzbl	99(%rdx), %eax
	cmpb	$64, %al
	je	.L1080
	testb	$1, 1144(%rdx)
	je	.L1081
	movq	1064(%rdx), %rdx
	movq	1080(%rdx), %rcx
	testb	$1, 2(%rcx)
	jne	.L1253
.L1081:
	cmpl	$15, %ebp
	jg	.L1080
	cmpb	$-128, %al
	je	.L1251
	cmpb	$-64, %al
	.p2align 4,,4
	je	.L1252
	.p2align 4,,10
	.p2align 3
.L1126:
	movl	$0, 976(%rbx)
	movl	336(%rbx), %eax
	movq	%rax, 968(%rbx)
.L1079:
	movl	328(%rbx), %eax
	xorl	%r14d, %r14d
	andl	$16252928, %eax
	cmpl	$11534336, %eax
	je	.L1254
.L1140:
	movl	$18, %esi
	movw	%si, 992(%rbx)
	movl	$18, %esi
.L1149:
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L1139:
	andl	$1024, %r13d
	je	.L1150
	movq	%r14, 944(%rbx)
	movl	$2, %eax
.L1220:
	addq	$136, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L1251:
	.cfi_restore_state
	movl	$2, 976(%rbx)
	movl	384(%rbx), %eax
	movq	%rax, 968(%rbx)
	jmp	.L1079
	.p2align 4,,10
	.p2align 3
.L1252:
	movl	$3, 976(%rbx)
	movl	432(%rbx), %eax
	movq	%rax, 968(%rbx)
	jmp	.L1079
	.p2align 4,,10
	.p2align 3
.L1073:
	movl	$0, 976(%rdx)
	movl	$4294967295, %eax
	movq	%rax, 968(%rdx)
	jmp	.L1079
	.p2align 4,,10
	.p2align 3
.L1074:
	movl	1908(%rdx), %eax
	cmpl	$1, %eax
	je	.L1076
	xorl	%edx, %edx
	cmpl	$13, %eax
	sete	%dl
	leal	(%rdx,%rdx,2), %edx
	movl	%edx, 976(%rbx)
.L1078:
	addl	$1, %eax
	cltq
	movl	320(%rbx,%rax,8), %eax
	movq	%rax, 968(%rbx)
	jmp	.L1079
	.p2align 4,,10
	.p2align 3
.L1254:
	movq	968(%rbx), %rdx
	movl	%r12d, %r15d
	movl	%r12d, %r11d
	movzbl	994(%rbx), %eax
	shrl	$12, %r15d
	andl	$2143289344, %r11d
	andl	$1023, %r15d
	leaq	(%rbx,%r15,8), %r10
	movq	%rdx, %rcx
	shrq	$8, %rcx
	andl	$-2, %eax
	andl	$1, %ecx
	orl	%ecx, %eax
	movl	2224(%rbx), %ecx
	movb	%al, 994(%rbx)
	orl	%r11d, %ecx
	cmpl	10424(%r10), %ecx
	je	.L1255
.L1127:
	movq	%r12, %rax
	movq	%rdx, %r14
	andl	$127, %edx
	shrq	$18, %rax
	andl	$2147479552, %r14d
	andl	$8188, %eax
	addq	%rax, %r14
	movl	%r12d, %eax
	shrl	$24, %eax
	cmpl	%eax, %edx
	jb	.L1131
	cmpq	1040(%rbx), %r14
	ja	.L1132
	movl	%r14d, %edx
	movl	%r14d, %eax
	andl	$2147479552, %edx
	jne	.L1133
	movl	88(%rbx), %r14d
.L1134:
	xorl	%eax, %r14d
.L1135:
	movzbl	1144(%rbx), %eax
	movq	%r14, %rdx
	testb	$2, %al
	jne	.L1256
.L1136:
	movq	%rdx, %rax
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	movl	(%rax,%rdx), %edx
	bswap	%edx
	testb	$32, %dl
	jne	.L1139
	testl	%edx, %edx
	js	.L1140
	testb	$1, 994(%rbx)
	je	.L1141
	testb	$16, %dl
	jne	.L1140
.L1141:
	movl	%r12d, %eax
	movl	%edx, %esi
	andl	$1044480, %eax
	andl	$2147483584, %esi
	movl	%eax, %ecx
	shrl	$16, %eax
	shrl	$10, %ecx
	addq	%rsi, %rcx
	movl	%edx, %esi
	andl	$15, %esi
	cmpl	%eax, %esi
	jb	.L1142
	cmpq	1040(%rbx), %rcx
	ja	.L1132
	movl	%ecx, %esi
	movl	%ecx, %eax
	andl	$2147479552, %esi
	je	.L1143
	cmpl	88(%rbx), %esi
	je	.L1143
.L1144:
	movq	%rbx, %rsi
	movq	%rcx, %rdi
	movq	%r10, 32(%rsp)
	movl	%edx, 24(%rsp)
	movl	%r11d, 16(%rsp)
	movq	%rcx, 8(%rsp)
	call	s390_fetch_fullword_absolute
	movq	8(%rsp), %rcx
	testb	$4, %ah
	movl	%eax, %esi
	movl	16(%rsp), %r11d
	movl	24(%rsp), %edx
	movq	32(%rsp), %r10
	jne	.L1145
	testl	$-2147481344, %eax
	jne	.L1140
	testb	$2, %ah
	je	.L1146
	orb	$2, 994(%rbx)
.L1146:
	testl	$256, %r13d
	jne	.L1130
	movq	968(%rbx), %rdi
	movl	%edi, 2232(%r10)
	orl	2224(%rbx), %r11d
	movl	%eax, 18616(%r10)
	movl	%edx, %eax
	shrl	$4, %eax
	andl	$1, %eax
	movl	%r11d, 10424(%r10)
	movb	%al, 44216(%rbx,%r15)
	movb	$0, 46264(%rbx,%r15)
	movzbl	994(%rbx), %eax
	shrb	%al
	andl	$3, %eax
	movb	%al, 45240(%rbx,%r15)
	movq	$0, 26808(%r10)
.L1130:
	andl	$512, %r13d
	jne	.L1147
	movl	%r12d, %ecx
	andl	$2147479552, %esi
	andl	$4095, %ecx
	movq	%rsi, 960(%rbx)
	orq	%rsi, %rcx
.L1147:
	xorl	%r8d, %r8d
	movq	%rcx, 944(%rbx)
	xorl	%eax, %eax
	movw	%r8w, 992(%rbx)
	jmp	.L1220
	.p2align 4,,10
	.p2align 3
.L1150:
	movl	$16, %ecx
	movq	%r14, 944(%rbx)
	movl	$1, %edx
	movw	%cx, 992(%rbx)
.L1151:
	movl	976(%rbx), %eax
	andl	$2147479552, %r12d
	movl	%r12d, 792(%rbx)
	cmpl	$1, %eax
	je	.L1257
	cmpl	$2, %eax
	movzbl	99(%rbx), %ecx
	je	.L1258
.L1159:
	orl	%eax, %r12d
	movl	%r12d, 792(%rbx)
.L1155:
	cmpb	$64, %cl
	je	.L1160
	testb	$1, 1144(%rbx)
	movl	%edx, %eax
	je	.L1220
	movq	1064(%rbx), %rcx
	movq	1080(%rcx), %rsi
	testb	$1, 2(%rsi)
	je	.L1220
	testb	$64, 99(%rcx)
	je	.L1220
.L1160:
	xorl	%eax, %eax
	testl	%ebp, %ebp
	cmovns	%ebp, %eax
	movb	%al, 1012(%rbx)
	movl	%edx, %eax
	jmp	.L1220
	.p2align 4,,10
	.p2align 3
.L1253:
	testb	$64, 99(%rdx)
	je	.L1081
	.p2align 4,,10
	.p2align 3
.L1080:
	movl	%ebp, %r14d
	andl	$15, %r14d
	je	.L1126
	movzbl	1144(%rbx), %eax
	testb	$1, %al
	je	.L1084
	movq	1064(%rbx), %rdx
	movq	1080(%rdx), %rcx
	testb	$1, 2(%rcx)
	je	.L1126
	testb	$64, 99(%rdx)
	je	.L1126
	movslq	%r14d, %r10
	movl	584(%rdx,%r10,4), %r15d
.L1085:
	testl	%r15d, %r15d
	je	.L1126
	cmpl	$1, %r15d
	je	.L1251
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	leaq	(%rbx,%rdx,4), %r11
	movl	1892(%r11), %edx
	cmpl	$15, %edx
	jle	.L1088
	addl	$1, %edx
	movslq	%edx, %rdx
	movl	320(%rbx,%rdx,8), %eax
	movq	%rax, 968(%rbx)
	movzbl	2009(%rbx,%r10), %eax
	movl	$1, 976(%rbx)
	andl	$3, %eax
	leal	(%rax,%rax), %edx
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	%edx, %eax
	movb	%al, 994(%rbx)
	jmp	.L1079
	.p2align 4,,10
	.p2align 3
.L1131:
	movl	$16, %eax
	movq	%r14, 944(%rbx)
	movl	$3, %edx
	movw	%ax, 992(%rbx)
.L1152:
	andl	$1024, %r13d
	je	.L1151
	movl	$3, %eax
	jmp	.L1220
	.p2align 4,,10
	.p2align 3
.L1076:
	movl	$0, 976(%rdx)
	jmp	.L1078
	.p2align 4,,10
	.p2align 3
.L1132:
	movl	$5, %edi
	movl	$5, %esi
	movw	%di, 992(%rbx)
	jmp	.L1149
	.p2align 4,,10
	.p2align 3
.L1084:
	movslq	%r14d, %r10
	movl	584(%rbx,%r10,4), %r15d
	jmp	.L1085
.L1257:
	movq	968(%rbx), %rcx
	movl	336(%rbx), %eax
	xorq	%rcx, %rax
	testl	$2147479552, %eax
	je	.L1250
	movl	384(%rbx), %eax
	xorq	%rcx, %rax
	testl	$2147479552, %eax
	jne	.L1156
	orl	$2, %r12d
	movzbl	99(%rbx), %ecx
	movl	%r12d, 792(%rbx)
	jmp	.L1155
	.p2align 4,,10
	.p2align 3
.L1255:
	cmpb	$0, 44216(%rbx,%r15)
	je	.L1259
	testb	$1, %al
	jne	.L1127
.L1129:
	testl	$256, %r13d
	jne	.L1127
	movzbl	45240(%rbx,%r15), %eax
	xorl	%ecx, %ecx
	movl	18616(%r10), %esi
	testb	%al, %al
	je	.L1130
	andl	$3, %eax
	leal	(%rax,%rax), %edx
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	%edx, %eax
	movb	%al, 994(%rbx)
	jmp	.L1130
.L1259:
	movl	2232(%r10), %eax
	cmpq	%rax, %rdx
	jne	.L1127
	jmp	.L1129
.L1133:
	cmpl	88(%rbx), %edx
	jne	.L1135
	movl	%edx, %r14d
	.p2align 4,,5
	jmp	.L1134
.L1088:
	movzwl	394(%rbx), %edi
	testl	$-33554432, %r15d
	movw	%di, 8(%rsp)
	je	.L1260
.L1089:
	movl	$40, %r10d
	movw	%r10w, 992(%rbx)
.L1124:
	movl	%r13d, %eax
	movb	%bpl, 1012(%rbx)
	sall	$21, %eax
	sarl	$31, %eax
	addl	$4, %eax
	jmp	.L1220
.L1258:
	testb	$127, %cl
	jne	.L1159
	orl	$-2147483646, %r12d
	movl	%r12d, 792(%rbx)
	jmp	.L1155
.L1157:
	orl	$1, %r12d
	movl	%r12d, 792(%rbx)
.L1250:
	movzbl	99(%rbx), %ecx
	jmp	.L1155
.L1260:
	testl	$16777216, %r15d
	je	.L1090
	movl	368(%rbx), %edx
	andl	$2147483584, %edx
.L1091:
	movl	%edx, %ecx
	cmpq	1040(%rbx), %rcx
	jbe	.L1261
.L1092:
	movl	$5, %r11d
	movl	$5, %esi
	movw	%r11w, 992(%rbx)
.L1123:
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L1089
.L1156:
	movl	432(%rbx), %eax
	xorq	%rcx, %rax
	testl	$2147479552, %eax
	jne	.L1157
	orl	$3, %r12d
	movzbl	99(%rbx), %ecx
	movl	%r12d, 792(%rbx)
	jmp	.L1155
.L1142:
	movl	$17, %edx
	movq	%rcx, 944(%rbx)
	movw	%dx, 992(%rbx)
	movl	$3, %edx
	jmp	.L1152
.L1090:
	movl	344(%rbx), %edx
	andl	$2147483584, %edx
	jmp	.L1091
.L1261:
	movl	%edx, %ecx
	andl	$2147479552, %ecx
	je	.L1093
	cmpl	88(%rbx), %ecx
	je	.L1093
.L1094:
	leal	16(%rdx), %esi
	testb	$2, %al
	movl	%esi, %ecx
	jne	.L1262
.L1095:
	movq	%rcx, %rax
	movzwl	%r15w, %edx
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	movl	(%rax,%rcx), %eax
	movl	%edx, %ecx
	shrl	$3, %ecx
	bswap	%eax
	movl	%eax, %esi
	andl	$127, %esi
	cmpl	%ecx, %esi
	jae	.L1263
.L1098:
	movl	$41, %r9d
	movw	%r9w, 992(%rbx)
	jmp	.L1124
.L1143:
	movl	%eax, %ecx
	xorl	88(%rbx), %ecx
	jmp	.L1144
.L1093:
	xorl	88(%rbx), %edx
	jmp	.L1094
.L1145:
	xorl	%eax, %eax
	testl	$512, %r13d
	movq	%rcx, 944(%rbx)
	movw	$17, 992(%rbx)
	movl	$2, %edx
	je	.L1152
	jmp	.L1220
.L1263:
	andl	$2147483520, %eax
	sall	$4, %edx
	addl	%edx, %eax
	movl	%eax, %edi
	cmpq	1040(%rbx), %rdi
	ja	.L1092
	movl	%eax, %edx
	andl	$2147479552, %edx
	je	.L1099
	cmpl	88(%rbx), %edx
	je	.L1099
.L1100:
	movq	%rbx, %rsi
	movq	%r10, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	s390_fetch_main_absolute
	movq	24(%rsp), %r10
	xorl	%edx, %edx
	movq	16(%rsp), %r11
.L1102:
	movl	(%rax,%rdx), %ecx
	bswap	%ecx
	movl	%ecx, 48(%rsp,%rdx)
	addq	$4, %rdx
	cmpq	$16, %rdx
	jne	.L1102
	movl	48(%rsp), %eax
	testl	%eax, %eax
	movl	%eax, 16(%rsp)
	js	.L1098
	movl	%r13d, %eax
	andl	$2048, %eax
	movl	%eax, 24(%rsp)
	jne	.L1103
	xorl	16(%rsp), %r15d
	andl	$16711680, %r15d
	je	.L1103
.L1104:
	movw	$42, 992(%rbx)
	jmp	.L1124
.L1099:
	movl	%eax, %edi
	xorl	88(%rbx), %edi
	jmp	.L1100
.L1103:
	movl	56(%rsp), %edx
	movl	%edx, %eax
	andl	$2147483584, %eax
	andl	$2147479552, %edx
	je	.L1105
	cmpl	88(%rbx), %edx
	je	.L1105
.L1106:
	movl	%eax, %edi
	cmpq	1040(%rbx), %rdi
	ja	.L1092
	movq	%rbx, %rsi
	movq	%r10, 40(%rsp)
	movq	%r11, 32(%rsp)
	call	s390_fetch_main_absolute
	movq	40(%rsp), %r10
	xorl	%edx, %edx
	movq	32(%rsp), %r11
.L1108:
	movl	(%rax,%rdx), %ecx
	bswap	%ecx
	movl	%ecx, 64(%rsp,%rdx)
	addq	$4, %rdx
	cmpq	$64, %rdx
	jne	.L1108
	movl	64(%rsp), %eax
	testl	%eax, %eax
	js	.L1109
	movl	60(%rsp), %edi
	cmpl	%edi, 84(%rsp)
	je	.L1264
.L1110:
	movw	$44, 992(%rbx)
	jmp	.L1124
.L1256:
	testb	$4, %al
	jne	.L1136
	movq	1056(%rbx), %rdx
	movq	%r10, 16(%rsp)
	movl	%r11d, 8(%rsp)
	cmpl	$1, 80(%rdx)
	je	.L1265
	movq	%r14, %rdi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	addq	1096(%rbx), %rdi
	movl	$4, %ecx
	movl	$-3, %esi
	call	z900_logical_to_main_l
	movq	16(%rsp), %r10
	movl	8(%rsp), %r11d
.L1138:
	movq	1056(%rbx), %rax
	movq	952(%rax), %rdx
	jmp	.L1136
.L1262:
	testb	$4, %al
	jne	.L1095
	movq	1056(%rbx), %rdx
	movq	%r10, 24(%rsp)
	movq	%r11, 16(%rsp)
	cmpl	$1, 80(%rdx)
	je	.L1266
	movq	%rcx, %rdi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	addq	1096(%rbx), %rdi
	movl	$4, %ecx
	movl	$-3, %esi
	call	z900_logical_to_main_l
	movq	24(%rsp), %r10
	movq	16(%rsp), %r11
.L1097:
	movq	1056(%rbx), %rax
	movq	952(%rax), %rcx
	jmp	.L1095
.L1265:
	movl	1096(%rbx), %edi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$4, %ecx
	movl	$-3, %esi
	addl	%r14d, %edi
	call	s390_logical_to_main_l
	movl	8(%rsp), %r11d
	movq	16(%rsp), %r10
	jmp	.L1138
.L1266:
	movl	1096(%rbx), %edi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$4, %ecx
	addl	%esi, %edi
	movl	$-3, %esi
	call	s390_logical_to_main_l
	movq	16(%rsp), %r11
	movq	24(%rsp), %r10
	jmp	.L1097
.L1105:
	xorl	88(%rbx), %eax
	jmp	.L1106
.L1264:
	cmpl	$0, 24(%rsp)
	jne	.L1111
	testl	$16777216, 16(%rsp)
	je	.L1111
	movzwl	16(%rsp), %edi
	cmpw	%di, 8(%rsp)
	je	.L1111
	testb	$2, %al
	je	.L1267
.L1112:
	movw	$23, 992(%rbx)
	movl	$23, %esi
	jmp	.L1123
.L1109:
	movw	$43, 992(%rbx)
	jmp	.L1124
.L1267:
	movl	68(%rsp), %ecx
	testb	$15, %cl
	jne	.L1112
	testb	$1, %al
	je	.L1113
	testb	$1, 330(%rbx)
	je	.L1112
.L1113:
	movzwl	8(%rsp), %edi
	andl	$65520, %ecx
	andl	$2147483644, %eax
	movl	%edi, %edx
	andl	$65520, %edx
	cmpl	%edx, %ecx
	jl	.L1121
	movl	%edi, %edx
	shrw	$2, %dx
	movzwl	%dx, %edx
	addl	%eax, %edx
	movl	%edx, %eax
	andl	$2147483647, %eax
	movl	%eax, %ecx
	cmpq	1040(%rbx), %rcx
	ja	.L1115
	andl	$2147479552, %edx
	je	.L1116
	cmpl	88(%rbx), %edx
	je	.L1116
.L1117:
	movzbl	1144(%rbx), %edx
	testb	$2, %dl
	jne	.L1268
.L1118:
	movq	1024(%rbx), %rcx
	movl	%eax, %edx
	shrl	$11, %eax
	addq	1032(%rbx), %rax
	movzbl	(%rcx,%rdx), %edx
	movl	8(%rsp), %ecx
	orb	$4, (%rax)
	andl	$3, %ecx
	addl	%ecx, %ecx
	sall	%cl, %edx
	andb	$64, %dl
	jne	.L1111
.L1121:
	movw	$45, 992(%rbx)
	jmp	.L1124
.L1111:
	testl	$33554432, 16(%rsp)
	je	.L1122
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	$4, %eax
	movb	%al, 994(%rbx)
.L1122:
	movl	$1, 976(%rbx)
	movl	72(%rsp), %eax
	movzbl	994(%rbx), %ecx
	movl	%eax, %edx
	shrb	%cl
	movq	%rdx, 968(%rbx)
	andb	$2, %cl
	je	.L1269
	xorb	$12, %ah
	orl	$256, %eax
	movq	%rax, 968(%rbx)
.L1163:
	leal	17(%r14), %edx
	addl	$16, %r14d
	movslq	%edx, %rdx
	movl	%eax, 320(%rbx,%rdx,8)
	shrq	$8, %rax
	xorq	$1, %rax
	movl	%r14d, 1892(%r11)
	andl	$1, %eax
	movb	%al, 1976(%rbx,%rdx)
	movb	%cl, 2009(%rbx,%r10)
	jmp	.L1079
.L1268:
	andb	$4, %dl
	jne	.L1118
	movq	1056(%rbx), %rdx
	movq	%r10, 32(%rsp)
	movq	%r11, 24(%rsp)
	cmpl	$1, 80(%rdx)
	je	.L1270
	movl	%eax, %edi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	addq	1096(%rbx), %rdi
	xorl	%ecx, %ecx
	movl	$-3, %esi
	call	z900_logical_to_main_l
	movq	32(%rsp), %r10
	movq	24(%rsp), %r11
.L1120:
	movq	1056(%rbx), %rax
	movl	952(%rax), %eax
	jmp	.L1118
.L1269:
	movq	%rdx, %rax
	jmp	.L1163
.L1270:
	addl	1096(%rbx), %eax
	movl	$1, %r9d
	xorl	%r8d, %r8d
	xorl	%ecx, %ecx
	movl	$-3, %esi
	movl	%eax, %edi
	call	s390_logical_to_main_l
	movq	24(%rsp), %r11
	movq	32(%rsp), %r10
	jmp	.L1120
.L1116:
	xorl	88(%rbx), %eax
	jmp	.L1117
.L1115:
	movl	$5, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L1121
	.cfi_endproc
.LFE1139:
	.size	s390_translate_addr, .-s390_translate_addr
	.p2align 4,,15
	.type	s390_logical_to_main_l, @function
s390_logical_to_main_l:
.LFB1148:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	movq	%r9, %r10
	movl	%r8d, %r15d
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	movl	%esi, %r14d
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	movl	%ecx, %r13d
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movl	%edi, %r12d
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	shrl	$12, %r12d
	movl	%edi, %ebp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	andl	$1023, %r12d
	movq	%rdx, %rbx
	subq	$152, %rsp
	.cfi_def_cfa_offset 208
	testb	$4, 96(%rdx)
	je	.L1272
	cmpl	$-2, %esi
	je	.L1272
.L1273:
	andb	$-8, 994(%rbx)
	leal	5(%r14), %eax
	cmpl	$4, %eax
	ja	.L1275
	jmp	*.L1277(,%rax,8)
	.section	.rodata
	.align 8
	.align 4
.L1277:
	.quad	.L1607
	.quad	.L1606
	.quad	.L1333
	.quad	.L1280
	.quad	.L1281
	.text
	.p2align 4,,10
	.p2align 3
.L1272:
	testb	$1, 1144(%rbx)
	jne	.L1273
	movl	%ebp, %eax
	movslq	%r12d, %r12
	movl	%ebp, %r8d
	movq	%rax, 944(%rbx)
	movl	%ebp, %eax
	andl	$2143289344, %r8d
	andb	$-8, 994(%rbx)
	andl	$2147479552, %eax
	movq	%rax, 960(%rbx)
	leaq	(%rbx,%r12,8), %rax
	movl	$-1, 2232(%rax)
	movl	2224(%rbx), %edx
	movl	%r8d, 18616(%rax)
	orl	%r8d, %edx
	movl	%edx, 10424(%rax)
	movb	$0, 45240(%rbx,%r12)
	movb	$0, 44216(%rbx,%r12)
	movb	$0, 46264(%rbx,%r12)
.L1274:
	testb	$6, 994(%rbx)
	je	.L1366
	testb	$3, %r13b
	jne	.L1367
.L1366:
	movq	944(%rbx), %rax
	movl	88(%rbx), %edx
	movl	%eax, %esi
	movl	%eax, %ecx
	andl	$2147479552, %esi
	je	.L1369
	cmpl	%edx, %esi
	je	.L1369
.L1370:
	movq	960(%rbx), %rsi
	movq	%rax, 952(%rbx)
	movl	%esi, %edi
	movl	%esi, %ecx
	andl	$2147479552, %edi
	je	.L1371
	cmpl	%edx, %edi
	je	.L1371
.L1372:
	cmpq	1040(%rbx), %rax
	ja	.L1373
	movzbl	1144(%rbx), %edi
	testb	$2, %dil
	jne	.L1608
.L1374:
	movq	%rax, %rcx
	shrq	$11, %rcx
	addq	1032(%rbx), %rcx
	testb	$1, %dil
	movq	%rcx, 984(%rbx)
	jne	.L1609
	testb	$4, %r13b
	je	.L1389
	testb	%r15b, %r15b
	movzbl	(%rcx), %edx
	jne	.L1610
.L1390:
	orl	$4, %edx
	andl	$2147479552, %ebp
	movb	%dl, (%rcx)
	leaq	(%rbx,%r12,8), %rcx
	movq	984(%rbx), %rdx
	movq	%rdx, 35000(%rcx)
	movzbl	(%rdx), %edx
	movb	$4, 46264(%rbx,%r12)
	andl	$-16, %edx
	movb	%dl, 43192(%rbx,%r12)
	movq	1024(%rbx), %rdx
	addq	%rdx, %rsi
	xorq	%rbp, %rsi
	movq	%rsi, 26808(%rcx)
.L1405:
	addq	%rdx, %rax
.L1596:
	addq	$152, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L1371:
	.cfi_restore_state
	movl	%edx, %esi
	xorl	%ecx, %esi
	jmp	.L1372
	.p2align 4,,10
	.p2align 3
.L1369:
	movl	%ecx, %eax
	xorl	%edx, %eax
	jmp	.L1370
	.p2align 4,,10
	.p2align 3
.L1275:
	movzbl	99(%rbx), %eax
	cmpb	$64, %al
	je	.L1287
	testb	$1, 1144(%rbx)
	jne	.L1611
.L1288:
	cmpl	$15, %r14d
	jg	.L1287
	cmpb	$-128, %al
	je	.L1606
	cmpb	$-64, %al
	.p2align 4,,3
	je	.L1607
	.p2align 4,,10
	.p2align 3
.L1333:
	movl	$0, 976(%rbx)
	movl	336(%rbx), %eax
	movq	%rax, 968(%rbx)
.L1286:
	movl	328(%rbx), %eax
	xorl	%edx, %edx
	andl	$16252928, %eax
	cmpl	$11534336, %eax
	je	.L1612
.L1344:
	movl	$18, %esi
	movw	%si, 992(%rbx)
	movl	$18, %esi
.L1353:
	movq	%rbx, %rdi
	movq	%rdx, 8(%rsp)
	call	*2032(%rbx)
	movq	8(%rsp), %rdx
.L1343:
	andl	$1024, %r13d
	je	.L1354
	movzwl	992(%rbx), %esi
	movq	%rdx, 944(%rbx)
.L1416:
	movq	%rbx, %rdi
	call	*2032(%rbx)
	xorl	%eax, %eax
	jmp	.L1596
	.p2align 4,,10
	.p2align 3
.L1606:
	movl	$2, 976(%rbx)
	movl	384(%rbx), %eax
	movq	%rax, 968(%rbx)
	jmp	.L1286
	.p2align 4,,10
	.p2align 3
.L1607:
	movl	$3, 976(%rbx)
	movl	432(%rbx), %eax
	movq	%rax, 968(%rbx)
	jmp	.L1286
	.p2align 4,,10
	.p2align 3
.L1281:
	movl	1908(%rbx), %eax
	cmpl	$1, %eax
	je	.L1283
	xorl	%edx, %edx
	cmpl	$13, %eax
	sete	%dl
	leal	(%rdx,%rdx,2), %edx
	movl	%edx, 976(%rbx)
.L1285:
	addl	$1, %eax
	cltq
	movl	320(%rbx,%rax,8), %eax
	movq	%rax, 968(%rbx)
	jmp	.L1286
	.p2align 4,,10
	.p2align 3
.L1280:
	movl	$0, 976(%rbx)
	movl	$4294967295, %eax
	movq	%rax, 968(%rbx)
	jmp	.L1286
	.p2align 4,,10
	.p2align 3
.L1611:
	movq	1064(%rbx), %rdx
	movq	1080(%rdx), %rcx
	testb	$1, 2(%rcx)
	je	.L1288
	testb	$64, 99(%rdx)
	je	.L1288
	.p2align 4,,10
	.p2align 3
.L1287:
	movl	%r14d, %r11d
	andl	$15, %r11d
	je	.L1333
	movzbl	1144(%rbx), %edi
	testb	$1, %dil
	jne	.L1613
	movslq	%r11d, %rax
	movq	%rax, 16(%rsp)
	movl	584(%rbx,%rax,4), %eax
	movl	%eax, 8(%rsp)
.L1292:
	testl	%eax, %eax
	je	.L1333
	cmpl	$1, %eax
	je	.L1606
	leal	5(%r11), %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	cmpl	$15, %eax
	jle	.L1295
	addl	$1, %eax
	cltq
	movl	320(%rbx,%rax,8), %eax
	movq	%rax, 968(%rbx)
	movq	16(%rsp), %rax
	movzbl	2009(%rbx,%rax), %eax
	movl	$1, 976(%rbx)
	andl	$3, %eax
	leal	(%rax,%rax), %edx
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	%edx, %eax
	movb	%al, 994(%rbx)
	jmp	.L1286
	.p2align 4,,10
	.p2align 3
.L1612:
	movq	968(%rbx), %rcx
	movl	%ebp, %r8d
	movslq	%r12d, %r12
	movzbl	994(%rbx), %eax
	leaq	(%rbx,%r12,8), %r9
	andl	$2143289344, %r8d
	movq	%rcx, %rdx
	shrq	$8, %rdx
	andl	$-2, %eax
	andl	$1, %edx
	orl	%edx, %eax
	movl	2224(%rbx), %edx
	movb	%al, 994(%rbx)
	orl	%r8d, %edx
	cmpl	10424(%r9), %edx
	je	.L1614
.L1334:
	movq	%rbp, %rax
	movq	%rcx, %rdx
	andl	$127, %ecx
	shrq	$18, %rax
	andl	$2147479552, %edx
	andl	$8188, %eax
	addq	%rax, %rdx
	movl	%ebp, %eax
	shrl	$24, %eax
	cmpl	%eax, %ecx
	jb	.L1338
	cmpq	1040(%rbx), %rdx
	ja	.L1339
	movl	%edx, %ecx
	movl	%edx, %eax
	andl	$2147479552, %ecx
	jne	.L1340
	movl	88(%rbx), %edx
.L1341:
	xorl	%eax, %edx
.L1342:
	movq	%rdx, %rdi
	movq	%rbx, %rsi
	movq	%r10, 32(%rsp)
	movq	%r9, 24(%rsp)
	movl	%r8d, 16(%rsp)
	movq	%rdx, 8(%rsp)
	call	s390_fetch_main_absolute
	movq	8(%rsp), %rdx
	movl	(%rax), %ecx
	movl	16(%rsp), %r8d
	movq	24(%rsp), %r9
	movq	32(%rsp), %r10
	bswap	%ecx
	testb	$32, %cl
	jne	.L1343
	testl	%ecx, %ecx
	js	.L1344
	testb	$1, 994(%rbx)
	je	.L1345
	testb	$16, %cl
	jne	.L1344
.L1345:
	movl	%ebp, %eax
	movl	%ecx, %r11d
	andl	$1044480, %eax
	andl	$2147483584, %r11d
	movl	%eax, %esi
	shrl	$16, %eax
	shrl	$10, %esi
	addq	%rsi, %r11
	movl	%ecx, %esi
	andl	$15, %esi
	cmpl	%eax, %esi
	jb	.L1346
	cmpq	1040(%rbx), %r11
	ja	.L1339
	movl	%r11d, %esi
	movl	%r11d, %eax
	andl	$2147479552, %esi
	je	.L1347
	cmpl	88(%rbx), %esi
	je	.L1347
.L1348:
	movq	%rbx, %rsi
	movq	%r11, %rdi
	movq	%r10, 48(%rsp)
	movl	%ecx, 44(%rsp)
	movq	%r9, 32(%rsp)
	movq	%rdx, 24(%rsp)
	movl	%r8d, 16(%rsp)
	movq	%r11, 8(%rsp)
	call	s390_fetch_fullword_absolute
	movq	8(%rsp), %r11
	testb	$4, %ah
	movl	%eax, %esi
	movl	16(%rsp), %r8d
	movq	24(%rsp), %rdx
	movq	32(%rsp), %r9
	movl	44(%rsp), %ecx
	movq	48(%rsp), %r10
	jne	.L1349
	testl	$-2147481344, %eax
	jne	.L1344
	testb	$2, %ah
	je	.L1350
	orb	$2, 994(%rbx)
.L1350:
	testl	$256, %r13d
	jne	.L1337
	movq	968(%rbx), %rdx
	movl	%edx, 2232(%r9)
	movl	2224(%rbx), %edx
	movl	%eax, 18616(%r9)
	movl	%ecx, %eax
	shrl	$4, %eax
	andl	$1, %eax
	orl	%r8d, %edx
	movl	%edx, 10424(%r9)
	movb	%al, 44216(%rbx,%r12)
	movb	$0, 46264(%rbx,%r12)
	movzbl	994(%rbx), %eax
	shrb	%al
	andl	$3, %eax
	movb	%al, 45240(%rbx,%r12)
	movq	$0, 26808(%r9)
.L1337:
	testl	$512, %r13d
	jne	.L1351
	movl	%ebp, %r11d
	andl	$2147479552, %esi
	andl	$4095, %r11d
	movq	%rsi, 960(%rbx)
	orq	%rsi, %r11
.L1351:
	xorl	%r9d, %r9d
	movq	%r11, 944(%rbx)
	movw	%r9w, 992(%rbx)
	jmp	.L1274
	.p2align 4,,10
	.p2align 3
.L1354:
	movl	$16, %ecx
	movq	%rdx, 944(%rbx)
	movl	$16, %esi
	movw	%cx, 992(%rbx)
.L1356:
	movl	976(%rbx), %eax
	andl	$2147479552, %ebp
	movl	%ebp, 792(%rbx)
	cmpl	$1, %eax
	je	.L1615
	cmpl	$2, %eax
	movzbl	99(%rbx), %edx
	je	.L1616
.L1364:
	orl	%eax, %ebp
	movl	%ebp, 792(%rbx)
.L1360:
	cmpb	$64, %dl
	je	.L1365
	testb	$1, 1144(%rbx)
	je	.L1416
	movq	1064(%rbx), %rax
	movq	1080(%rax), %rdx
	testb	$1, 2(%rdx)
	je	.L1416
	testb	$64, 99(%rax)
	je	.L1416
.L1365:
	xorl	%eax, %eax
	testl	%r14d, %r14d
	cmovns	%r14d, %eax
	movb	%al, 1012(%rbx)
	jmp	.L1416
	.p2align 4,,10
	.p2align 3
.L1338:
	movl	$16, %eax
	movq	%rdx, 944(%rbx)
	movl	$16, %esi
	movw	%ax, 992(%rbx)
.L1357:
	andl	$1024, %r13d
	jne	.L1416
	jmp	.L1356
	.p2align 4,,10
	.p2align 3
.L1615:
	movq	968(%rbx), %rdx
	movl	336(%rbx), %eax
	xorq	%rdx, %rax
	testl	$2147479552, %eax
	je	.L1605
	movl	384(%rbx), %eax
	xorq	%rdx, %rax
	testl	$2147479552, %eax
	jne	.L1361
	orl	$2, %ebp
	movl	%ebp, 792(%rbx)
.L1605:
	movzbl	99(%rbx), %edx
	jmp	.L1360
	.p2align 4,,10
	.p2align 3
.L1367:
	movzbl	1144(%rbx), %edi
	andl	$2147479552, %ebp
.L1426:
	movl	%ebp, %eax
	orl	$4, %eax
.L1414:
	orl	976(%rbx), %eax
	movl	%eax, %ebp
	movl	%eax, 792(%rbx)
	xorl	%eax, %eax
	testl	%r14d, %r14d
	cmovns	%r14d, %eax
	andl	$2, %edi
	movb	%al, 1012(%rbx)
	jne	.L1617
.L1415:
	movl	$4, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movzwl	992(%rbx), %esi
	jmp	.L1416
	.p2align 4,,10
	.p2align 3
.L1373:
	movq	%rbx, %rdi
	movl	$5, %esi
	call	*2032(%rbx)
	movzbl	994(%rbx), %eax
	movzbl	1144(%rbx), %edi
	andl	$6, %eax
.L1394:
	andl	$2147479552, %ebp
	testb	%al, %al
	movl	%ebp, 792(%rbx)
	movl	%ebp, %eax
	je	.L1414
	andb	$3, %r13b
	je	.L1414
	jmp	.L1426
	.p2align 4,,10
	.p2align 3
.L1283:
	movl	$0, 976(%rbx)
	jmp	.L1285
	.p2align 4,,10
	.p2align 3
.L1614:
	cmpb	$0, 44216(%rbx,%r12)
	je	.L1618
	testb	$1, %al
	jne	.L1334
.L1336:
	testl	$256, %r13d
	jne	.L1334
	movzbl	45240(%rbx,%r12), %eax
	xorl	%r11d, %r11d
	movl	18616(%r9), %esi
	testb	%al, %al
	je	.L1337
	andl	$3, %eax
	leal	(%rax,%rax), %edx
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	%edx, %eax
	movb	%al, 994(%rbx)
	jmp	.L1337
	.p2align 4,,10
	.p2align 3
.L1339:
	movl	$5, %edi
	movl	$5, %esi
	movw	%di, 992(%rbx)
	jmp	.L1353
.L1613:
	movq	1064(%rbx), %rax
	movq	1080(%rax), %rdx
	testb	$1, 2(%rdx)
	je	.L1333
	testb	$64, 99(%rax)
	je	.L1333
	movslq	%r11d, %rcx
	movl	584(%rax,%rcx,4), %eax
	movq	%rcx, 16(%rsp)
	movl	%eax, 8(%rsp)
	jmp	.L1292
.L1618:
	movl	2232(%r9), %eax
	cmpq	%rax, %rcx
	jne	.L1334
	jmp	.L1336
.L1340:
	cmpl	88(%rbx), %ecx
	jne	.L1342
	movl	%ecx, %edx
	.p2align 4,,6
	jmp	.L1341
.L1295:
	movzwl	394(%rbx), %eax
	testl	$-33554432, 8(%rsp)
	movw	%ax, 32(%rsp)
	je	.L1619
.L1296:
	movl	$40, %r10d
	movl	$40, %esi
	movw	%r10w, 992(%rbx)
.L1331:
	movb	%r14b, 1012(%rbx)
	jmp	.L1416
.L1616:
	testb	$127, %dl
	jne	.L1364
	orl	$-2147483646, %ebp
	movl	%ebp, 792(%rbx)
	jmp	.L1360
.L1361:
	movl	432(%rbx), %eax
	xorq	%rdx, %rax
	testl	$2147479552, %eax
	jne	.L1362
	orl	$3, %ebp
	movzbl	99(%rbx), %edx
	movl	%ebp, 792(%rbx)
	jmp	.L1360
.L1619:
	testl	$16777216, 8(%rsp)
	je	.L1297
	movl	368(%rbx), %eax
	andl	$2147483584, %eax
.L1298:
	movl	%eax, %edx
	cmpq	1040(%rbx), %rdx
	jbe	.L1620
.L1299:
	movl	$5, %r11d
	movl	$5, %esi
	movw	%r11w, 992(%rbx)
.L1330:
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L1296
.L1346:
	movl	$17, %edx
	movq	%r11, 944(%rbx)
	movw	%dx, 992(%rbx)
.L1604:
	movl	$17, %esi
	jmp	.L1357
.L1297:
	movl	344(%rbx), %eax
	andl	$2147483584, %eax
	jmp	.L1298
.L1362:
	orl	$1, %ebp
	movzbl	99(%rbx), %edx
	movl	%ebp, 792(%rbx)
	jmp	.L1360
.L1620:
	movl	%eax, %edx
	andl	$2147479552, %edx
	je	.L1300
	cmpl	88(%rbx), %edx
	je	.L1300
.L1301:
	addl	$16, %eax
	testb	$2, %dil
	movl	%eax, %ecx
	jne	.L1621
.L1302:
	movq	%rcx, %rax
	movzwl	8(%rsp), %edx
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	movl	(%rax,%rcx), %eax
	movl	%edx, %ecx
	shrl	$3, %ecx
	bswap	%eax
	movl	%eax, %esi
	andl	$127, %esi
	cmpl	%ecx, %esi
	jae	.L1622
.L1305:
	movw	$41, 992(%rbx)
	movl	$41, %esi
	jmp	.L1331
.L1347:
	movl	%eax, %r11d
	xorl	88(%rbx), %r11d
	jmp	.L1348
.L1300:
	xorl	88(%rbx), %eax
	jmp	.L1301
.L1349:
	testl	$512, %r13d
	movq	%r11, 944(%rbx)
	movw	$17, 992(%rbx)
	je	.L1604
	jmp	.L1274
.L1622:
	andl	$2147483520, %eax
	sall	$4, %edx
	addl	%edx, %eax
	movl	%eax, %edi
	cmpq	1040(%rbx), %rdi
	ja	.L1299
	movl	%eax, %edx
	andl	$2147479552, %edx
	je	.L1306
	cmpl	88(%rbx), %edx
	je	.L1306
.L1307:
	movq	%rbx, %rsi
	movq	%r10, 48(%rsp)
	movl	%r11d, 44(%rsp)
	call	s390_fetch_main_absolute
	movl	44(%rsp), %r11d
	xorl	%edx, %edx
	movq	48(%rsp), %r10
.L1309:
	movl	(%rax,%rdx), %ecx
	bswap	%ecx
	movl	%ecx, 64(%rsp,%rdx)
	addq	$4, %rdx
	cmpq	$16, %rdx
	jne	.L1309
	movl	64(%rsp), %eax
	testl	%eax, %eax
	movl	%eax, 44(%rsp)
	js	.L1305
	movl	%r13d, %eax
	andl	$2048, %eax
	movl	%eax, 48(%rsp)
	jne	.L1310
	movl	8(%rsp), %eax
	xorl	44(%rsp), %eax
	testl	$16711680, %eax
	je	.L1310
.L1311:
	movw	$42, 992(%rbx)
	movl	$42, %esi
	jmp	.L1331
.L1609:
	addq	1024(%rbx), %rax
	jmp	.L1596
.L1608:
	movq	1056(%rbx), %rdx
	andb	$-7, 994(%rdx)
	testb	$4, %dil
	jne	.L1374
	cmpl	$1, 80(%rdx)
	movl	$-3, %esi
	je	.L1623
	testl	%r14d, %r14d
	jle	.L1378
	movq	1080(%rbx), %rcx
	testb	$1, 2(%rcx)
	je	.L1378
	testb	$64, 99(%rbx)
	cmovne	%r14d, %esi
.L1378:
	addq	1096(%rbx), %rax
	xorl	%ecx, %ecx
	movq	%r10, 16(%rsp)
	movl	%r8d, 8(%rsp)
	movq	%rax, %rdi
	call	z900_translate_addr
	movq	16(%rsp), %r10
	movl	8(%rsp), %r8d
	testl	%eax, %eax
	setne	%al
.L1377:
	testb	%al, %al
	jne	.L1624
.L1379:
	movzbl	994(%rbx), %eax
	movq	1056(%rbx), %rdx
	movl	%eax, %ecx
	andl	$-7, %eax
	orb	994(%rdx), %cl
	andl	$6, %ecx
	orl	%ecx, %eax
	movb	%al, 994(%rbx)
	movzbl	994(%rdx), %eax
	shrb	%al
	andl	$3, %eax
	orb	%al, 45240(%rbx,%r12)
	testb	$4, 96(%rbx)
	je	.L1380
	cmpl	$-2, %r14d
	je	.L1380
.L1381:
	testl	%r14d, %r14d
	jle	.L1382
	movq	1080(%rbx), %rcx
	testb	$1, 2(%rcx)
	je	.L1382
	testb	$64, 99(%rbx)
	je	.L1382
	movq	968(%rbx), %rcx
	leal	5(%r14), %edi
	andl	$2, %eax
	leal	16(%r14), %r8d
	movslq	%edi, %rdi
	movl	%ecx, 2232(%rbx,%r12,8)
	movzbl	994(%rdx), %esi
	movzbl	994(%rbx), %ecx
	andl	$1, %esi
	andl	$-2, %ecx
	orl	%esi, %ecx
	movb	%cl, 994(%rbx)
	movq	968(%rdx), %rcx
	leal	17(%r14), %esi
	movslq	%esi, %rsi
	xorb	$8, %ch
	movq	%rcx, 968(%rbx)
	movl	%ecx, 320(%rbx,%rsi,8)
	shrq	$8, %rcx
	xorq	$1, %rcx
	movl	%r8d, 1892(%rbx,%rdi,4)
	andl	$1, %ecx
	movb	%cl, 1976(%rbx,%rsi)
	movslq	%r14d, %rcx
	movb	%al, 2009(%rbx,%rcx)
.L1382:
	movq	944(%rdx), %rax
	movl	%eax, %esi
	movl	%eax, %ecx
	andl	$2147479552, %esi
	je	.L1383
	cmpl	88(%rdx), %esi
	je	.L1383
.L1384:
	movq	960(%rdx), %rsi
	movq	%rax, 952(%rdx)
	movl	%esi, %edi
	movl	%esi, %ecx
	andl	$2147479552, %edi
	je	.L1385
	cmpl	88(%rdx), %edi
	je	.L1385
.L1386:
	cmpq	1040(%rdx), %rax
	ja	.L1373
	movzbl	1144(%rbx), %edi
	jmp	.L1374
.L1610:
	movl	%edx, %r8d
	andl	$-16, %r8d
	cmpb	%r8b, %r15b
	je	.L1390
	testb	$8, %dl
	je	.L1390
	cmpl	$2047, %ebp
	ja	.L1392
	testb	$2, 331(%rbx)
	je	.L1392
	testb	$1, 994(%rbx)
	je	.L1390
.L1392:
	cmpb	$-112, %r8b
	je	.L1625
.L1393:
	testb	$2, %dil
	jne	.L1421
	movzbl	994(%rbx), %r8d
.L1425:
	movl	%r8d, %eax
	andl	$6, %eax
	jmp	.L1394
.L1389:
	cmpl	$511, %ebp
	movzbl	(%rcx), %r11d
	jbe	.L1598
	movzbl	994(%rbx), %r8d
.L1395:
	testb	$6, %r8b
	jne	.L1396
	movl	%edi, %r9d
	shrb	%r9b
	andb	$1, %r9b
	jne	.L1626
.L1397:
	testb	%r15b, %r15b
	je	.L1399
	movl	%r11d, %edx
	andl	$-16, %edx
	cmpb	$-112, %dl
	je	.L1627
.L1400:
	cmpb	%dl, %r15b
	je	.L1399
.L1396:
	testb	$2, %dil
	je	.L1425
	movq	1056(%rbx), %rdx
.L1398:
	andb	$-7, 994(%rdx)
	movzbl	994(%rbx), %eax
	andl	$6, %eax
	jmp	.L1394
.L1598:
	testb	$16, 331(%rbx)
	movzbl	994(%rbx), %r8d
	je	.L1395
	testb	$1, %r8b
	jne	.L1395
	jmp	.L1396
.L1380:
	movl	%r8d, 18616(%rbx,%r12,8)
	jmp	.L1381
.L1306:
	movl	%eax, %edi
	xorl	88(%rbx), %edi
	jmp	.L1307
.L1385:
	movl	%ecx, %esi
	xorl	88(%rdx), %esi
	jmp	.L1386
.L1383:
	movl	%ecx, %eax
	xorl	88(%rdx), %eax
	jmp	.L1384
.L1625:
	testb	$1, 331(%rbx)
	je	.L1393
	jmp	.L1390
.L1421:
	movq	1056(%rbx), %rax
	andb	$-7, 994(%rax)
	movzbl	994(%rbx), %eax
	andl	$6, %eax
	jmp	.L1394
.L1310:
	movl	72(%rsp), %edx
	movl	%edx, %eax
	andl	$2147483584, %eax
	andl	$2147479552, %edx
	je	.L1312
	cmpl	88(%rbx), %edx
	je	.L1312
.L1313:
	movl	%eax, %edi
	cmpq	1040(%rbx), %rdi
	ja	.L1299
	movq	%rbx, %rsi
	movq	%r10, 56(%rsp)
	movl	%r11d, 8(%rsp)
	call	s390_fetch_main_absolute
	movl	8(%rsp), %r11d
	xorl	%edx, %edx
	movq	56(%rsp), %r10
.L1315:
	movl	(%rax,%rdx), %ecx
	bswap	%ecx
	movl	%ecx, 80(%rsp,%rdx)
	addq	$4, %rdx
	cmpq	$64, %rdx
	jne	.L1315
	movl	80(%rsp), %eax
	testl	%eax, %eax
	js	.L1316
	movl	76(%rsp), %edi
	cmpl	%edi, 100(%rsp)
	je	.L1628
.L1317:
	movw	$44, 992(%rbx)
	movl	$44, %esi
	jmp	.L1331
.L1627:
	testb	$1, 331(%rbx)
	je	.L1400
.L1399:
	testb	%r9b, %r9b
	jne	.L1629
.L1424:
	testb	$2, %r13b
	je	.L1402
	orl	$6, %r11d
	movb	%r11b, (%rcx)
.L1402:
	movq	984(%rbx), %rdx
	leaq	(%rbx,%r12,8), %rcx
	movq	%rdx, 35000(%rcx)
	movzbl	(%rdx), %edx
	andl	$-16, %edx
	cmpl	$4095, %ebp
	movb	%dl, 43192(%rbx,%r12)
	ja	.L1403
	testb	$1, 994(%rbx)
	movl	$4, %edx
	je	.L1404
.L1403:
	movl	%r13d, %edx
	orl	$5, %edx
.L1404:
	movb	%dl, 46264(%rbx,%r12)
	movq	1024(%rbx), %rdx
	movl	%ebp, %edi
	andl	$2147479552, %edi
	addq	%rdx, %rsi
	xorq	%rdi, %rsi
	movq	%rsi, 26808(%rcx)
	testb	$4, 808(%rbx)
	je	.L1405
	testb	$32, 54(%rbx)
	je	.L1405
	movb	$4, 46264(%rbx,%r12)
	cmpl	$-2, %r14d
	je	.L1405
	testb	$4, 96(%rbx)
	je	.L1406
	testb	$-128, 968(%rbx)
	jne	.L1407
	testb	$32, 402(%rbx)
	jne	.L1405
.L1407:
	xorl	%ecx, %ecx
	testl	%r14d, %r14d
	cmovns	%r14d, %ecx
	movb	%cl, 1160(%rbx)
	movl	976(%rbx), %ecx
	orw	%cx, 1146(%rbx)
.L1406:
	movl	416(%rbx), %ecx
	movl	408(%rbx), %esi
	andl	$2147483647, %ecx
	andl	$2147483647, %esi
	cmpl	%esi, %ecx
	jb	.L1408
	cmpl	%esi, %ebp
	jb	.L1409
	cmpl	%ecx, %ebp
	movl	$1, %edi
	jbe	.L1413
.L1409:
	movl	%ebp, %edi
	leaq	-1(%r10,%rdi), %r8
	movl	%esi, %edi
	cmpq	%rdi, %r8
	jb	.L1411
	movl	%ecx, %r9d
	movl	$1, %edi
	cmpq	%r9, %r8
	jbe	.L1413
.L1411:
	xorl	%edi, %edi
	cmpl	%esi, %ebp
	ja	.L1413
	xorl	%edi, %edi
	cmpq	%rcx, %r8
	setae	%dil
.L1413:
	andl	$1, %edi
	testb	%dil, %dil
	je	.L1405
	orl	$2097152, 56(%rbx)
	jmp	.L1405
.L1408:
	movl	%ebp, %edi
	leaq	-1(%r10,%rdi), %r8
	movl	$1, %edi
	cmpq	%rsi, %r8
	jae	.L1413
	xorl	%edi, %edi
	cmpl	%ecx, %ebp
	setbe	%dil
	jmp	.L1413
.L1629:
	movq	1056(%rbx), %rdx
	testb	$6, 994(%rdx)
	je	.L1424
	movl	%ebp, %eax
	andl	$2147479552, %eax
	jmp	.L1414
.L1626:
	movq	1056(%rbx), %rdx
	testb	$6, 994(%rdx)
	je	.L1397
	jmp	.L1398
.L1312:
	xorl	88(%rbx), %eax
	jmp	.L1313
.L1628:
	cmpl	$0, 48(%rsp)
	.p2align 4,,3
	jne	.L1318
	testl	$16777216, 44(%rsp)
	je	.L1318
	movzwl	44(%rsp), %edi
	cmpw	%di, 32(%rsp)
	je	.L1318
	testb	$2, %al
	je	.L1630
.L1319:
	movw	$23, 992(%rbx)
	movl	$23, %esi
	jmp	.L1330
.L1316:
	movw	$43, 992(%rbx)
	movl	$43, %esi
	jmp	.L1331
.L1630:
	movl	84(%rsp), %ecx
	testb	$15, %cl
	jne	.L1319
	testb	$1, %al
	je	.L1320
	testb	$1, 330(%rbx)
	je	.L1319
.L1320:
	movzwl	32(%rsp), %edi
	andl	$65520, %ecx
	andl	$2147483644, %eax
	movl	%edi, %edx
	andl	$65520, %edx
	cmpl	%edx, %ecx
	jl	.L1328
	movl	%edi, %edx
	shrw	$2, %dx
	movzwl	%dx, %edx
	addl	%eax, %edx
	movl	%edx, %eax
	andl	$2147483647, %eax
	movl	%eax, %ecx
	cmpq	1040(%rbx), %rcx
	ja	.L1322
	andl	$2147479552, %edx
	je	.L1323
	cmpl	88(%rbx), %edx
	je	.L1323
.L1324:
	movzbl	1144(%rbx), %edx
	testb	$2, %dl
	jne	.L1631
.L1325:
	movq	1024(%rbx), %rcx
	movl	%eax, %edx
	shrl	$11, %eax
	addq	1032(%rbx), %rax
	movzbl	(%rcx,%rdx), %edx
	movl	32(%rsp), %ecx
	orb	$4, (%rax)
	andl	$3, %ecx
	addl	%ecx, %ecx
	sall	%cl, %edx
	andb	$64, %dl
	jne	.L1318
.L1328:
	movw	$45, 992(%rbx)
	movl	$45, %esi
	jmp	.L1331
.L1624:
	movq	1056(%rbx), %rax
	movq	%r10, 16(%rsp)
	movl	%r8d, 8(%rsp)
	movzwl	992(%rax), %esi
	movq	%rax, %rdi
	call	*2032(%rax)
	movq	16(%rsp), %r10
	movl	8(%rsp), %r8d
	jmp	.L1379
.L1623:
	testl	%r14d, %r14d
	jle	.L1376
	movq	1080(%rbx), %rcx
	testb	$1, 2(%rcx)
	je	.L1376
	testb	$64, 99(%rbx)
	cmovne	%r14d, %esi
.L1376:
	movl	1096(%rbx), %edi
	xorl	%ecx, %ecx
	movq	%r10, 16(%rsp)
	movl	%r8d, 8(%rsp)
	addl	%eax, %edi
	call	s390_translate_addr
	movl	8(%rsp), %r8d
	testl	%eax, %eax
	movq	16(%rsp), %r10
	setne	%al
	jmp	.L1377
.L1617:
	movq	1056(%rbx), %rdx
	testb	$6, 994(%rdx)
	je	.L1415
	movl	$4, %esi
	movl	%ebp, 792(%rdx)
	movq	%rdx, %rdi
	movb	%al, 1012(%rdx)
	call	*2032(%rdx)
	movzwl	992(%rbx), %esi
	jmp	.L1416
.L1621:
	andb	$4, %dil
	jne	.L1302
	movq	1056(%rbx), %rdx
	movq	%r10, 48(%rsp)
	movl	%r11d, 44(%rsp)
	cmpl	$1, 80(%rdx)
	je	.L1632
	movq	%rcx, %rdi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	addq	1096(%rbx), %rdi
	movl	$4, %ecx
	movl	$-3, %esi
	call	z900_logical_to_main_l
	movq	48(%rsp), %r10
	movl	44(%rsp), %r11d
.L1304:
	movq	1056(%rbx), %rax
	movq	952(%rax), %rcx
	jmp	.L1302
.L1318:
	testl	$33554432, 44(%rsp)
	je	.L1329
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	$4, %eax
	movb	%al, 994(%rbx)
.L1329:
	movl	$1, 976(%rbx)
	movl	88(%rsp), %eax
	movzbl	994(%rbx), %esi
	movl	%eax, %edx
	shrb	%sil
	movq	%rdx, 968(%rbx)
	andb	$2, %sil
	je	.L1633
	xorb	$12, %ah
	orl	$256, %eax
	movq	%rax, 968(%rbx)
.L1418:
	leal	17(%r11), %edx
	movq	24(%rsp), %rdi
	leal	16(%r11), %ecx
	movslq	%edx, %rdx
	movl	%eax, 320(%rbx,%rdx,8)
	shrq	$8, %rax
	xorq	$1, %rax
	andl	$1, %eax
	movl	%ecx, 1892(%rdi)
	movb	%al, 1976(%rbx,%rdx)
	movq	16(%rsp), %rax
	movb	%sil, 2009(%rbx,%rax)
	jmp	.L1286
.L1323:
	xorl	88(%rbx), %eax
	jmp	.L1324
.L1631:
	andb	$4, %dl
	jne	.L1325
	movq	1056(%rbx), %rdx
	movq	%r10, 48(%rsp)
	movl	%r11d, 8(%rsp)
	cmpl	$1, 80(%rdx)
	je	.L1634
	movl	%eax, %edi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	addq	1096(%rbx), %rdi
	xorl	%ecx, %ecx
	movl	$-3, %esi
	call	z900_logical_to_main_l
	movq	48(%rsp), %r10
	movl	8(%rsp), %r11d
.L1327:
	movq	1056(%rbx), %rax
	movl	952(%rax), %eax
	jmp	.L1325
.L1632:
	addl	1096(%rbx), %eax
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$4, %ecx
	movl	$-3, %esi
	movl	%eax, %edi
	call	s390_logical_to_main_l
	movl	44(%rsp), %r11d
	movq	48(%rsp), %r10
	jmp	.L1304
.L1634:
	addl	1096(%rbx), %eax
	movl	$1, %r9d
	xorl	%r8d, %r8d
	xorl	%ecx, %ecx
	movl	$-3, %esi
	movl	%eax, %edi
	call	s390_logical_to_main_l
	movl	8(%rsp), %r11d
	movq	48(%rsp), %r10
	jmp	.L1327
.L1322:
	movl	$5, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L1328
.L1633:
	movq	%rdx, %rax
	jmp	.L1418
	.cfi_endproc
.LFE1148:
	.size	s390_logical_to_main_l, .-s390_logical_to_main_l
	.p2align 4,,15
	.type	s370_fetch_main_absolute, @function
s370_fetch_main_absolute:
.LFB130:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movzbl	1144(%rsi), %eax
	testb	$2, %al
	jne	.L1641
.L1636:
	movq	%rdi, %rdx
	movq	%rdi, %rax
	shrq	$11, %rdx
	addq	1032(%rbx), %rdx
	orb	$4, (%rdx)
	addq	1024(%rbx), %rax
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L1641:
	.cfi_restore_state
	testb	$4, %al
	jne	.L1636
	addl	1096(%rsi), %edi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movq	1056(%rsi), %rdx
	movl	$4, %ecx
	movl	$-3, %esi
	call	s390_logical_to_main_l
	movq	1056(%rbx), %rax
	movq	952(%rax), %rdi
	jmp	.L1636
	.cfi_endproc
.LFE130:
	.size	s370_fetch_main_absolute, .-s370_fetch_main_absolute
	.p2align 4,,15
	.type	s390_fetch_main_absolute, @function
s390_fetch_main_absolute:
.LFB1126:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movzbl	1144(%rsi), %eax
	testb	$2, %al
	jne	.L1650
.L1643:
	movq	%rdi, %rdx
	movq	%rdi, %rax
	shrq	$11, %rdx
	addq	1032(%rbx), %rdx
	orb	$4, (%rdx)
	addq	1024(%rbx), %rax
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L1650:
	.cfi_restore_state
	testb	$4, %al
	jne	.L1643
	movq	1056(%rsi), %rdx
	cmpl	$1, 80(%rdx)
	je	.L1651
	addq	1096(%rsi), %rdi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$4, %ecx
	movl	$-3, %esi
	call	z900_logical_to_main_l
.L1645:
	movq	1056(%rbx), %rax
	movq	952(%rax), %rdi
	jmp	.L1643
.L1651:
	addl	1096(%rsi), %edi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$4, %ecx
	movl	$-3, %esi
	call	s390_logical_to_main_l
	jmp	.L1645
	.cfi_endproc
.LFE1126:
	.size	s390_fetch_main_absolute, .-s390_fetch_main_absolute
	.section	.text.unlikely
	.type	s390_vfetch2_full, @function
s390_vfetch2_full:
.LFB1160:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	leal	5(%rsi), %eax
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	cltq
	movl	%esi, %r13d
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	leaq	(%rdx,%rax,4), %r14
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	movl	%edi, %ebp
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rdx, %rbx
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L1653
	movl	%edi, %ecx
	incl	%eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rdx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	je	.L1654
	movb	1976(%rbx,%rax), %al
	testb	%al, 44216(%rbx,%rcx)
	je	.L1653
.L1654:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L1655
	cmpb	43192(%rbx,%rcx), %al
	jne	.L1653
.L1655:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L1653
	testb	$4, 46264(%rbx,%rcx)
	je	.L1653
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
	jmp	.L1656
.L1653:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%ebp, %edi
	call	s390_logical_to_main_l
.L1656:
	movzbl	(%rax), %r12d
	leal	1(%rbp), %edi
	movl	1892(%r14), %eax
	sall	$8, %r12d
	testl	%eax, %eax
	je	.L1657
	movl	120(%rbx), %ecx
	incl	%eax
	cltq
	andl	%edi, %ecx
	movl	%ecx, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %r10d
	cmpl	%r10d, 320(%rbx,%rax,8)
	je	.L1658
	movb	1976(%rbx,%rax), %al
	testb	%al, 44216(%rbx,%rsi)
	je	.L1657
.L1658:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L1659
	cmpb	43192(%rbx,%rsi), %al
	jne	.L1657
.L1659:
	movl	%ecx, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L1657
	testb	$4, 46264(%rbx,%rsi)
	je	.L1657
	movl	%ecx, %eax
	xorq	26808(%rdx), %rax
	jmp	.L1660
.L1657:
	andl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	%r13d, %esi
	call	s390_logical_to_main_l
.L1660:
	popq	%rbx
	.cfi_def_cfa_offset 40
	movzbl	(%rax), %eax
	popq	%rbp
	.cfi_def_cfa_offset 32
	orl	%r12d, %eax
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE1160:
	.size	s390_vfetch2_full, .-s390_vfetch2_full
	.type	s390_validate_operand.part.8, @function
s390_validate_operand.part.8:
.LFB3142:
	.cfi_startproc
	addl	%edx, %edi
	movq	%r8, %rax
	movl	$1, %r9d
	andl	120(%r8), %edi
	movq	%rax, %rdx
	movzbl	97(%r8), %r8d
	jmp	s390_logical_to_main_l
	.cfi_endproc
.LFE3142:
	.size	s390_validate_operand.part.8, .-s390_validate_operand.part.8
	.type	s390_vfetch4_full, @function
s390_vfetch4_full:
.LFB1162:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	leal	5(%rsi), %eax
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	cltq
	movl	%esi, %r13d
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	leaq	(%rdx,%rax,4), %r14
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	movl	%edi, %ebp
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rdx, %rbx
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L1688
	movl	%edi, %ecx
	incl	%eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rdx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	je	.L1689
	movb	1976(%rbx,%rax), %al
	testb	%al, 44216(%rbx,%rcx)
	je	.L1688
.L1689:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L1690
	cmpb	43192(%rbx,%rcx), %al
	jne	.L1688
.L1690:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L1688
	testb	$4, 46264(%rbx,%rcx)
	je	.L1688
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
	jmp	.L1691
.L1688:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%ebp, %edi
	call	s390_logical_to_main_l
.L1691:
	movl	(%rax), %eax
	movl	$2048, %r12d
	movl	%eax, (%rsp)
	movl	%ebp, %eax
	andl	$2047, %eax
	subl	%eax, %r12d
	movl	1892(%r14), %eax
	leal	(%r12,%rbp), %edi
	testl	%eax, %eax
	je	.L1692
	movl	120(%rbx), %ecx
	incl	%eax
	cltq
	andl	%edi, %ecx
	movl	%ecx, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %r10d
	cmpl	%r10d, 320(%rbx,%rax,8)
	je	.L1693
	movb	44216(%rbx,%rsi), %r8b
	testb	%r8b, 1976(%rbx,%rax)
	je	.L1692
.L1693:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L1694
	cmpb	43192(%rbx,%rsi), %al
	jne	.L1692
.L1694:
	movl	%ecx, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L1692
	testb	$4, 46264(%rbx,%rsi)
	je	.L1692
	movl	%ecx, %eax
	xorq	26808(%rdx), %rax
	jmp	.L1695
.L1692:
	andl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	%r13d, %esi
	call	s390_logical_to_main_l
.L1695:
	movl	(%rax), %eax
	movl	%eax, (%rsp,%r12)
	movl	(%rsp), %eax
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	bswap	%eax
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE1162:
	.size	s390_vfetch4_full, .-s390_vfetch4_full
	.type	s390_vstore4_full, @function
s390_vstore4_full:
.LFB1154:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	movl	%esi, %eax
	movl	%edi, %r11d
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	andl	$2047, %eax
	movl	%edx, %r10d
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movl	%esi, %r12d
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movl	$2048, %ebp
	subl	%eax, %ebp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rcx, %rbx
	leal	5(%rdx), %eax
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	%ebp, %edi
	cltq
	movq	%rdi, (%rsp)
	leaq	(%rcx,%rax,4), %r15
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L1722
	leal	1(%rax), %edx
	movl	%esi, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	je	.L1723
	movb	44216(%rbx,%rcx), %sil
	testb	%sil, 1976(%rbx,%rdx)
	je	.L1722
.L1723:
	movb	97(%rbx), %dl
	testb	%dl, %dl
	je	.L1724
	cmpb	43192(%rbx,%rcx), %dl
	jne	.L1722
.L1724:
	movl	%r12d, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L1722
	testb	$1, 46264(%rbx,%rcx)
	je	.L1722
	movq	35000(%rax), %rdx
	movl	%r12d, %r13d
	movq	%rdx, 984(%rbx)
	xorq	26808(%rax), %r13
	jmp	.L1725
.L1722:
	movq	(%rsp), %r9
	movl	%r10d, %esi
	movl	$1, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r11d, 12(%rsp)
	movl	%r10d, 8(%rsp)
	call	s390_logical_to_main_l
	movl	12(%rsp), %r11d
	movl	8(%rsp), %r10d
	movq	%rax, %r13
.L1725:
	movl	1892(%r15), %eax
	leal	0(%rbp,%r12), %edi
	movq	984(%rbx), %r14
	testl	%eax, %eax
	je	.L1726
	leal	1(%rax), %edx
	movl	%edi, %eax
	andl	120(%rbx), %eax
	movslq	%edx, %rdx
	movl	%eax, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r8d
	cmpl	%r8d, 320(%rbx,%rdx,8)
	je	.L1727
	movb	44216(%rbx,%rsi), %r8b
	testb	%r8b, 1976(%rbx,%rdx)
	je	.L1726
.L1727:
	movb	97(%rbx), %dl
	testb	%dl, %dl
	je	.L1728
	cmpb	43192(%rbx,%rsi), %dl
	jne	.L1726
.L1728:
	movl	%eax, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L1726
	testb	$2, 46264(%rbx,%rsi)
	je	.L1726
	xorq	26808(%rcx), %rax
	jmp	.L1729
.L1726:
	andl	120(%rbx), %edi
	movl	$4, %r9d
	movl	$2, %ecx
	movzbl	97(%rbx), %r8d
	subl	%ebp, %r9d
	movq	%rbx, %rdx
	movslq	%r9d, %r9
	movl	%r10d, %esi
	movl	%r11d, 8(%rsp)
	call	s390_logical_to_main_l
	movl	8(%rsp), %r11d
.L1729:
	orb	$6, (%r14)
	leaq	16(%rsp), %rsi
	movq	%r13, %rdi
	movq	(%rsp), %rcx
	bswap	%r11d
	movl	%r11d, 16(%rsp)
	rep movsb
	movq	%rax, %rdi
	movb	$4, %cl
	subl	%ebp, %ecx
	movslq	%ecx, %rcx
	rep movsb
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE1154:
	.size	s390_vstore4_full, .-s390_vstore4_full
	.text
	.p2align 4,,15
	.type	s390_fetch_fullword_absolute, @function
s390_fetch_fullword_absolute:
.LFB1128:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movzbl	1144(%rsi), %eax
	testb	$2, %al
	jne	.L1763
.L1756:
	movq	%rdi, %rax
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	(%rax,%rdi), %eax
	bswap	%eax
	ret
.L1763:
	.cfi_restore_state
	testb	$4, %al
	jne	.L1756
	movq	1056(%rsi), %rdx
	cmpl	$1, 80(%rdx)
	je	.L1764
	addq	1096(%rsi), %rdi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$4, %ecx
	movl	$-3, %esi
	call	z900_logical_to_main_l
.L1758:
	movq	1056(%rbx), %rax
	movq	952(%rax), %rdi
	jmp	.L1756
.L1764:
	addl	1096(%rsi), %edi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$4, %ecx
	movl	$-3, %esi
	call	s390_logical_to_main_l
	jmp	.L1758
	.cfi_endproc
.LFE1128:
	.size	s390_fetch_fullword_absolute, .-s390_fetch_fullword_absolute
	.p2align 4,,15
	.type	s370_logical_to_main_l, @function
s370_logical_to_main_l:
.LFB148:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	movl	%esi, %r11d
	movl	%ecx, %r15d
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	movl	%r8d, %r10d
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	movl	%edi, %r13d
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	shrl	$11, %r13d
	movl	%edi, %r12d
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	andl	$1023, %r13d
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rdx, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	testb	$8, 98(%rdx)
	movq	%r9, (%rsp)
	je	.L1766
	testb	$4, 96(%rdx)
	jne	.L1986
.L1766:
	movl	%r12d, %eax
	movslq	%r13d, %rbp
	movl	%r12d, %r14d
	movq	%rax, 944(%rbx)
	movl	%r12d, %eax
	andl	$14680064, %r14d
	andb	$-8, 994(%rbx)
	andl	$2147481600, %eax
	movq	%rax, 960(%rbx)
	leaq	(%rbx,%rbp,8), %rax
	movl	$-1, 2232(%rax)
	movl	2224(%rbx), %edx
	movl	%r14d, 18616(%rax)
	orl	%r14d, %edx
	movl	%edx, 10424(%rax)
	movb	$0, 45240(%rbx,%rbp)
	movb	$0, 44216(%rbx,%rbp)
	movb	$0, 46264(%rbx,%rbp)
.L1768:
	testb	$6, 994(%rbx)
	je	.L1822
	testb	$3, %r15b
	jne	.L1984
.L1822:
	movq	944(%rbx), %rax
	movl	88(%rbx), %edx
	movl	%eax, %esi
	movl	%eax, %ecx
	andl	$2147479552, %esi
	jne	.L1824
.L1825:
	movl	%ecx, %eax
	xorl	%edx, %eax
.L1826:
	movq	960(%rbx), %rsi
	movq	%rax, 952(%rbx)
	movl	%esi, %edi
	movl	%esi, %ecx
	andl	$2147479552, %edi
	jne	.L1987
.L1827:
	movl	%edx, %esi
	xorl	%ecx, %esi
.L1828:
	cmpq	1040(%rbx), %rax
	ja	.L1829
	movzbl	1144(%rbx), %edi
	testb	$2, %dil
	jne	.L1988
.L1830:
	movq	%rax, %rcx
	shrq	$11, %rcx
	addq	1032(%rbx), %rcx
	testb	$4, %r15b
	movq	%rcx, 984(%rbx)
	je	.L1840
	testb	%r10b, %r10b
	movzbl	(%rcx), %edx
	jne	.L1989
.L1841:
	orl	$4, %edx
	andl	$16775168, %r12d
	movb	%dl, (%rcx)
	leaq	(%rbx,%rbp,8), %rcx
	movq	984(%rbx), %rdx
	movq	%rdx, 35000(%rcx)
	movzbl	(%rdx), %edx
	movb	$4, 46264(%rbx,%rbp)
	andl	$-16, %edx
	movb	%dl, 43192(%rbx,%rbp)
	movq	1024(%rbx), %rdx
	addq	%rdx, %rsi
	xorq	%r12, %rsi
	movq	%rsi, 26808(%rcx)
.L1855:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	addq	%rdx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L1987:
	.cfi_restore_state
	cmpl	%edx, %edi
	jne	.L1828
	jmp	.L1827
	.p2align 4,,10
	.p2align 3
.L1824:
	cmpl	%edx, %esi
	jne	.L1826
	.p2align 4,,9
	jmp	.L1825
	.p2align 4,,10
	.p2align 3
.L1986:
	cmpl	$-2, %esi
	je	.L1766
	andb	$-8, 994(%rdx)
	cmpl	$-4, %esi
	je	.L1981
	jle	.L1990
	cmpl	$-3, %esi
	je	.L1779
	cmpl	$-1, %esi
	.p2align 4,,5
	jne	.L1769
	movl	$0, 976(%rdx)
	movl	1908(%rdx), %eax
	addl	$1, %eax
	cltq
	movl	320(%rdx,%rax,8), %edx
	movq	%rdx, 968(%rbx)
	.p2align 4,,10
	.p2align 3
.L1778:
	movl	328(%rbx), %esi
	movl	%esi, %eax
	andl	$12582912, %eax
	cmpl	$8388608, %eax
	jne	.L1991
.L1885:
	testl	$2621440, %esi
	jne	.L1872
	movslq	%r13d, %rbp
	movl	%r12d, %r14d
	leaq	(%rbx,%rbp,8), %rax
	andl	$14680064, %r14d
	movq	%rax, %rdi
	movq	%rax, 16(%rsp)
	movl	2224(%rbx), %eax
	orl	%r14d, %eax
	cmpl	10424(%rdi), %eax
	je	.L1992
.L1782:
	andl	$3670016, %esi
	movq	%rdx, %rcx
	movq	%r12, %rax
	andl	$16777152, %ecx
	cmpl	$1048576, %esi
	je	.L1993
	shrq	$14, %rax
	andl	$1020, %eax
	addq	%rcx, %rax
	testl	%esi, %esi
	movq	%rax, 8(%rsp)
	jne	.L1787
	movl	%r12d, %eax
	andl	$-16777216, %edx
	sall	$4, %eax
	andl	$-16777216, %eax
	cmpl	%eax, %edx
	jae	.L1787
.L1788:
	movl	$16, %eax
	movl	$16, %esi
	movw	%ax, 992(%rbx)
	movq	8(%rsp), %rax
	movq	%rax, 944(%rbx)
.L1816:
	andl	$1024, %r15d
	jne	.L1864
	.p2align 4,,10
	.p2align 3
.L1815:
	movl	976(%rbx), %eax
	andl	$2147481600, %r12d
	movl	%r12d, 792(%rbx)
	cmpl	$1, %eax
	je	.L1994
	cmpl	$2, %eax
	je	.L1995
.L1821:
	orl	%eax, %r12d
	movl	%r12d, 792(%rbx)
.L1818:
	cmpb	$64, 99(%rbx)
	jne	.L1864
	xorl	%eax, %eax
	testl	%r11d, %r11d
	cmovns	%r11d, %eax
	movb	%al, 1012(%rbx)
	jmp	.L1864
	.p2align 4,,10
	.p2align 3
.L1829:
	movl	$5, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L1984:
	movzbl	1144(%rbx), %edi
.L1823:
	andl	$2, %edi
	jne	.L1996
.L1851:
	movl	$4, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movzwl	992(%rbx), %esi
.L1864:
	movq	%rbx, %rdi
	call	*2032(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	xorl	%eax, %eax
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L1769:
	.cfi_restore_state
	cmpb	$-128, 99(%rbx)
	je	.L1981
.L1779:
	movl	$0, 976(%rbx)
	movl	336(%rbx), %edx
	movq	%rdx, 968(%rbx)
	jmp	.L1778
	.p2align 4,,10
	.p2align 3
.L1991:
	cmpl	$4194304, %eax
	je	.L1885
.L1872:
	movq	$0, 8(%rsp)
.L1780:
	movl	$18, %ecx
	movl	$18, %esi
	movw	%cx, 992(%rbx)
.L1812:
	movq	%rbx, %rdi
	movl	%r11d, (%rsp)
	call	*2032(%rbx)
	movl	(%rsp), %r11d
.L1793:
	andl	$1024, %r15d
	je	.L1813
	movq	8(%rsp), %rax
	movzwl	992(%rbx), %esi
	movq	%rax, 944(%rbx)
	jmp	.L1864
	.p2align 4,,10
	.p2align 3
.L1990:
	cmpl	$-5, %esi
	jne	.L1769
	movl	$3, 976(%rdx)
	movl	432(%rdx), %edx
	movq	%rdx, 968(%rbx)
	jmp	.L1778
	.p2align 4,,10
	.p2align 3
.L1981:
	movl	$2, 976(%rbx)
	movl	384(%rbx), %edx
	movq	%rdx, 968(%rbx)
	jmp	.L1778
	.p2align 4,,10
	.p2align 3
.L1813:
	movq	8(%rsp), %rax
	movl	$16, %edx
	movl	$16, %esi
	movw	%dx, 992(%rbx)
	movq	%rax, 944(%rbx)
	jmp	.L1815
.L1993:
	shrq	$18, %rax
	andl	$60, %eax
	addq	%rcx, %rax
	movq	%rax, 8(%rsp)
.L1787:
	movq	8(%rsp), %rax
	cmpq	%rax, 1040(%rbx)
	jb	.L1789
	movq	%rax, %rdi
	movl	%edi, %edx
	andl	$2147479552, %edx
	je	.L1790
	cmpl	88(%rbx), %edx
	je	.L1790
.L1791:
	movzbl	1144(%rbx), %eax
	movq	8(%rsp), %rdx
	testb	$2, %al
	jne	.L1997
.L1792:
	movq	%rdx, %rax
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	movl	(%rax,%rdx), %eax
	bswap	%eax
	testb	$1, %al
	movl	%eax, 28(%rsp)
	jne	.L1793
	testl	$251658240, %eax
	jne	.L1780
	movl	%eax, %edx
	movl	%eax, %ecx
	movl	328(%rbx), %eax
	andl	$16777208, %ecx
	andl	$-268435456, %edx
	movl	%eax, %esi
	andl	$12582912, %eax
	andl	$3670016, %esi
	cmpl	$1048576, %esi
	je	.L1998
	movl	%eax, %edi
	movq	%r12, %rax
	shrq	$10, %rax
	andl	$62, %eax
	cmpl	$8388608, %edi
	je	.L1999
.L1798:
	addq	%rcx, %rax
	cmpq	1040(%rbx), %rax
	movq	%rax, 32(%rsp)
	ja	.L1789
	testl	%esi, %esi
	jne	.L1800
	movl	%r12d, %eax
	andl	$61440, %eax
	shrl	$12, %eax
	cmpl	%eax, %edx
	jae	.L1800
.L1799:
	movw	$17, 992(%rbx)
	movq	32(%rsp), %rax
	movq	%rax, 944(%rbx)
.L1983:
	movl	$17, %esi
	jmp	.L1816
	.p2align 4,,10
	.p2align 3
.L1789:
	movl	$5, %esi
	movw	%si, 992(%rbx)
	movl	$5, %esi
	jmp	.L1812
.L1992:
	cmpb	$0, 44216(%rbx,%rbp)
	je	.L2000
	testb	$1, 994(%rbx)
	jne	.L1782
.L1784:
	testl	$256, %r15d
	jne	.L1782
	movq	16(%rsp), %rax
	movzwl	18616(%rax), %edx
	movzbl	45240(%rbx,%rbp), %eax
	testb	%al, %al
	je	.L1785
	andl	$3, %eax
	leal	(%rax,%rax), %ecx
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	%ecx, %eax
	movb	%al, 994(%rbx)
.L1785:
	andl	$12582912, %esi
	cmpl	$8388608, %esi
	je	.L2001
	andl	$65528, %edx
	movl	%r12d, %eax
	andl	$2047, %eax
	sall	$8, %edx
	orl	%eax, %edx
	movl	%edx, %eax
.L1810:
	movq	%rax, 944(%rbx)
	xorl	%edi, %edi
	andl	$2147481600, %eax
	movq	%rax, 960(%rbx)
	movw	%di, 992(%rbx)
	jmp	.L1768
.L1790:
	movl	%eax, %edi
	xorl	88(%rbx), %edi
	movq	%rdi, 8(%rsp)
	jmp	.L1791
.L2000:
	movl	2232(%rdi), %eax
	cmpq	%rax, %rdx
	jne	.L1782
	jmp	.L1784
.L1994:
	movq	968(%rbx), %rdx
	movl	336(%rbx), %eax
	xorq	%rdx, %rax
	testl	$2147479552, %eax
	je	.L1818
	movl	384(%rbx), %eax
	xorq	%rdx, %rax
	testl	$2147479552, %eax
	jne	.L1819
	orl	$2, %r12d
	movl	%r12d, 792(%rbx)
	jmp	.L1818
.L1995:
	testb	$127, 99(%rbx)
	jne	.L1821
	orl	$-2147483646, %r12d
	movl	%r12d, 792(%rbx)
	jmp	.L1818
.L1998:
	cmpl	$8388608, %eax
	movq	%r12, %rax
	je	.L2002
	shrq	$10, %rax
	andl	$1022, %eax
.L1796:
	addq	%rcx, %rax
	cmpq	%rax, 1040(%rbx)
	movq	%rax, 32(%rsp)
	jb	.L1789
	movl	%r12d, %eax
	andl	$983040, %eax
	shrl	$16, %eax
	cmpl	%eax, %edx
	jb	.L1799
.L1800:
	movq	32(%rsp), %rdi
	movl	%edi, %edx
	movl	%edi, %eax
	andl	$2147479552, %edx
	je	.L1801
	cmpl	88(%rbx), %edx
	je	.L1801
.L1802:
	movzbl	1144(%rbx), %eax
	testb	$2, %al
	jne	.L2003
	movq	32(%rsp), %rdi
	movq	%rdi, %rax
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	movzwl	(%rax,%rdi), %edi
.L1870:
	movl	328(%rbx), %esi
#APP
# 545 "inline.h" 1
	rorw $8, %di
# 0 "" 2
#NO_APP
	movl	%edi, %edx
	movl	%esi, %ecx
	andl	$12582912, %ecx
	cmpl	$8388608, %ecx
	je	.L2004
	cmpl	$4194304, %ecx
	je	.L2005
.L1807:
	testb	$4, 28(%rsp)
	je	.L1808
	orb	$2, 994(%rbx)
.L1808:
	testl	$256, %r15d
	jne	.L1785
	movq	968(%rbx), %r9
	movzwl	%di, %edi
	movq	16(%rsp), %rsi
	movl	28(%rsp), %eax
	movl	%r9d, 2232(%rsi)
	movl	2224(%rbx), %r8d
	shrl	%eax
	movl	%edi, 18616(%rsi)
	andl	$1, %eax
	movb	%al, 8(%rsp)
	orl	%r14d, %r8d
	movl	%r8d, 10424(%rsi)
	movb	%al, 44216(%rbx,%rbp)
	movzbl	994(%rbx), %eax
	movb	$0, 46264(%rbx,%rbp)
	shrb	%al
	andl	$3, %eax
	cmpl	$8388608, %ecx
	movb	%al, 45240(%rbx,%rbp)
	movq	$0, 26808(%rsi)
	je	.L1972
.L1982:
	movl	328(%rbx), %esi
	jmp	.L1785
.L1819:
	movl	432(%rbx), %eax
	xorq	%rdx, %rax
	testl	$2147479552, %eax
	jne	.L1820
	orl	$3, %r12d
	movl	%r12d, 792(%rbx)
	jmp	.L1818
.L1989:
	movl	%edx, %edi
	andl	$-16, %edi
	cmpb	%dil, %r10b
	je	.L1841
	testb	$8, %dl
	je	.L1841
	movzbl	1144(%rbx), %edi
	testb	$2, %dil
	je	.L1851
	movq	1056(%rbx), %rax
	andb	$-7, 994(%rax)
	jmp	.L1823
.L1840:
	cmpl	$511, %r12d
	movzbl	(%rcx), %r9d
	ja	.L1985
	testb	$16, 331(%rbx)
	je	.L1985
	movzbl	1144(%rbx), %edi
	movzbl	994(%rbx), %edx
	testb	$1, %dil
	jne	.L1843
	testb	$1, %dl
	jne	.L1843
.L1844:
	testb	$2, %dil
	je	.L1851
	movq	1056(%rbx), %rdx
.L1846:
	andb	$-7, 994(%rdx)
	jmp	.L1823
.L1988:
	movq	1056(%rbx), %rdx
	andb	$-7, 994(%rdx)
	andb	$4, %dil
	jne	.L1830
	testl	%r11d, %r11d
	movl	$-3, %esi
	jle	.L1831
	movq	1080(%rbx), %rcx
	testb	$1, 2(%rcx)
	je	.L1831
	testb	$64, 99(%rbx)
	cmovne	%r11d, %esi
.L1831:
	movl	1096(%rbx), %edi
	xorl	%ecx, %ecx
	movl	%r10d, 16(%rsp)
	movl	%r11d, 8(%rsp)
	addl	%eax, %edi
	call	s390_translate_addr
	movl	8(%rsp), %r11d
	testl	%eax, %eax
	movl	16(%rsp), %r10d
	je	.L1832
	movq	1056(%rbx), %rax
	movzwl	992(%rax), %esi
	movq	%rax, %rdi
	call	*2032(%rax)
	movl	16(%rsp), %r10d
	movl	8(%rsp), %r11d
.L1832:
	movzbl	994(%rbx), %eax
	movq	1056(%rbx), %rdx
	movl	%eax, %ecx
	andl	$-7, %eax
	orb	994(%rdx), %cl
	andl	$6, %ecx
	orl	%ecx, %eax
	movb	%al, 994(%rbx)
	movzbl	994(%rdx), %eax
	shrb	%al
	andl	$3, %eax
	orb	%al, 45240(%rbx,%rbp)
	testb	$8, 98(%rbx)
	je	.L1833
	testb	$4, 96(%rbx)
	je	.L1833
	cmpl	$-2, %r11d
	je	.L1833
.L1834:
	testl	%r11d, %r11d
	jle	.L1835
	movq	1080(%rbx), %rcx
	testb	$1, 2(%rcx)
	je	.L1835
	testb	$64, 99(%rbx)
	je	.L1835
	movq	968(%rbx), %rcx
	leal	5(%r11), %edi
	andl	$2, %eax
	leal	16(%r11), %r8d
	movslq	%edi, %rdi
	movl	%ecx, 2232(%rbx,%rbp,8)
	movzbl	994(%rdx), %esi
	movzbl	994(%rbx), %ecx
	andl	$1, %esi
	andl	$-2, %ecx
	orl	%esi, %ecx
	movb	%cl, 994(%rbx)
	movq	968(%rdx), %rcx
	leal	17(%r11), %esi
	movslq	%esi, %rsi
	xorb	$8, %ch
	movq	%rcx, 968(%rbx)
	movl	%ecx, 320(%rbx,%rsi,8)
	shrq	%rcx
	xorq	$1, %rcx
	movl	%r8d, 1892(%rbx,%rdi,4)
	andl	$1, %ecx
	movb	%cl, 1976(%rbx,%rsi)
	movslq	%r11d, %rcx
	movb	%al, 2009(%rbx,%rcx)
.L1835:
	movq	944(%rdx), %rax
	movl	%eax, %esi
	movl	%eax, %ecx
	andl	$2147479552, %esi
	je	.L1836
	cmpl	88(%rdx), %esi
	je	.L1836
.L1837:
	movq	960(%rdx), %rsi
	movq	%rax, 952(%rdx)
	movl	%esi, %edi
	movl	%esi, %ecx
	andl	$2147479552, %edi
	je	.L1838
	cmpl	88(%rdx), %edi
	je	.L1838
.L1839:
	cmpq	1040(%rdx), %rax
	ja	.L1829
	movq	%rsi, %rdx
	orb	$8, %dh
	testl	$2048, %r12d
	cmovne	%rdx, %rsi
	jmp	.L1830
.L2001:
	movl	%edx, %eax
	andl	$65520, %edx
	andl	$6, %eax
	sall	$8, %edx
	sall	$23, %eax
	orl	%edx, %eax
	movl	%r12d, %edx
	andl	$4095, %edx
	orl	%edx, %eax
	jmp	.L1810
.L1985:
	movzbl	994(%rbx), %edx
	movzbl	1144(%rbx), %edi
.L1843:
	andb	$6, %dl
	jne	.L1844
	movl	%edi, %r8d
	shrb	%r8b
	andb	$1, %r8b
	jne	.L2006
.L1845:
	testb	%r10b, %r10b
	je	.L1847
	movl	%r9d, %edx
	andl	$-16, %edx
	cmpb	%dl, %r10b
	jne	.L1844
.L1847:
	testb	%r8b, %r8b
	jne	.L2007
.L1849:
	testb	$2, %r15b
	je	.L1852
	orl	$6, %r9d
	movb	%r9b, (%rcx)
.L1852:
	movq	984(%rbx), %rdx
	leaq	(%rbx,%rbp,8), %rcx
	movq	%rdx, 35000(%rcx)
	movzbl	(%rdx), %edx
	andl	$-16, %edx
	cmpl	$4095, %r12d
	movb	%dl, 43192(%rbx,%rbp)
	ja	.L1853
	testb	$1, 994(%rbx)
	movl	$4, %edx
	je	.L1854
.L1853:
	movl	%r15d, %edx
	orl	$5, %edx
.L1854:
	movb	%dl, 46264(%rbx,%rbp)
	movq	1024(%rbx), %rdx
	movl	%r12d, %edi
	andl	$16775168, %edi
	addq	%rdx, %rsi
	xorq	%rdi, %rsi
	movq	%rsi, 26808(%rcx)
	testb	$4, 808(%rbx)
	je	.L1855
	testb	$32, 54(%rbx)
	je	.L1855
	cmpl	$-2, %r11d
	movb	$4, 46264(%rbx,%rbp)
	je	.L1855
	movl	416(%rbx), %ecx
	movl	408(%rbx), %esi
	andl	$16777215, %ecx
	andl	$16777215, %esi
	cmpl	%esi, %ecx
	jb	.L1856
	cmpl	%esi, %r12d
	jb	.L1857
	cmpl	%ecx, %r12d
	movl	$1, %edi
	jbe	.L1861
.L1857:
	movq	(%rsp), %r9
	movl	%r12d, %edi
	leaq	-1(%r9,%rdi), %r8
	movl	%esi, %edi
	cmpq	%rdi, %r8
	jb	.L1859
	movl	%ecx, %r9d
	movl	$1, %edi
	cmpq	%r9, %r8
	jbe	.L1861
.L1859:
	xorl	%edi, %edi
	cmpl	%esi, %r12d
	ja	.L1861
	xorl	%edi, %edi
	cmpq	%rcx, %r8
	setae	%dil
.L1861:
	andl	$1, %edi
	testb	%dil, %dil
	je	.L1855
	orl	$2097152, 56(%rbx)
	jmp	.L1855
.L1801:
	movl	%eax, %edi
	xorl	88(%rbx), %edi
	movq	%rdi, 32(%rsp)
	jmp	.L1802
.L1999:
	movq	%r12, %rax
	shrq	$11, %rax
	andl	$30, %eax
	jmp	.L1798
.L1820:
	orl	$1, %r12d
	movl	%r12d, 792(%rbx)
	jmp	.L1818
.L2002:
	shrq	$11, %rax
	andl	$510, %eax
	jmp	.L1796
.L1838:
	movl	%ecx, %esi
	xorl	88(%rdx), %esi
	jmp	.L1839
.L1836:
	movl	%ecx, %eax
	xorl	88(%rdx), %eax
	jmp	.L1837
.L2004:
	testb	$8, %dil
	je	.L1807
.L1806:
	movq	32(%rsp), %rax
	testl	$512, %r15d
	movw	$17, 992(%rbx)
	movq	%rax, 944(%rbx)
	je	.L1983
	jmp	.L1768
.L1833:
	movl	%r14d, 18616(%rbx,%rbp,8)
	jmp	.L1834
.L2005:
	testb	$4, %dil
	jne	.L1806
	testb	$2, %dil
	jne	.L1780
	.p2align 4,,3
	jmp	.L1807
.L2003:
	testb	$4, %al
	movq	32(%rsp), %rdx
	jne	.L1804
	movl	32(%rsp), %edi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$4, %ecx
	movl	$-3, %esi
	movl	%r10d, 44(%rsp)
	movq	1056(%rbx), %rdx
	movl	%r11d, 40(%rsp)
	addl	1096(%rbx), %edi
	call	s390_logical_to_main_l
	movq	1056(%rbx), %rax
	movl	44(%rsp), %r10d
	movl	40(%rsp), %r11d
	movq	952(%rax), %rdx
.L1804:
	movq	%rdx, %rax
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	movzwl	(%rax,%rdx), %edi
	jmp	.L1870
.L2007:
	movq	1056(%rbx), %rdx
	testb	$6, 994(%rdx)
	je	.L1849
	movq	%rdx, %rax
.L1850:
	movl	$4, %esi
	movq	%rax, %rdi
	call	*2032(%rax)
	movzwl	992(%rbx), %esi
	jmp	.L1864
.L2006:
	movq	1056(%rbx), %rdx
	testb	$6, 994(%rdx)
	je	.L1845
	jmp	.L1846
.L1997:
	testb	$4, %al
	jne	.L1792
	movl	8(%rsp), %edi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$4, %ecx
	movl	$-3, %esi
	movl	%r10d, 32(%rsp)
	movq	1056(%rbx), %rdx
	movl	%r11d, 28(%rsp)
	addl	1096(%rbx), %edi
	call	s390_logical_to_main_l
	movq	1056(%rbx), %rax
	movl	28(%rsp), %r11d
	movl	32(%rsp), %r10d
	movq	952(%rax), %rdx
	jmp	.L1792
.L1972:
	movl	%r13d, %esi
	xorl	$1, %esi
	movslq	%esi, %rsi
	leaq	(%rbx,%rsi,8), %rcx
	movl	%edi, 18616(%rcx)
	movzbl	8(%rsp), %edi
	movl	%r9d, 2232(%rcx)
	movl	%r8d, 10424(%rcx)
	movb	%al, 45240(%rbx,%rsi)
	movb	%dil, 44216(%rbx,%rsi)
	movb	$0, 46264(%rbx,%rsi)
	movq	$0, 26808(%rcx)
	jmp	.L1982
.L1856:
	movq	(%rsp), %r9
	movl	%r12d, %edi
	leaq	-1(%r9,%rdi), %r8
	movl	$1, %edi
	cmpq	%rsi, %r8
	jae	.L1861
	xorl	%edi, %edi
	cmpl	%ecx, %r12d
	setbe	%dil
	jmp	.L1861
.L1996:
	movq	1056(%rbx), %rax
	testb	$6, 994(%rax)
	je	.L1851
	jmp	.L1850
	.cfi_endproc
.LFE148:
	.size	s370_logical_to_main_l, .-s370_logical_to_main_l
	.section	.text.unlikely
	.type	s370_vfetch2_full, @function
s370_vfetch2_full:
.LFB160:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	leal	5(%rsi), %eax
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	cltq
	movl	%esi, %r13d
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	leaq	(%rdx,%rax,4), %r14
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	movl	%edi, %ebp
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rdx, %rbx
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L2009
	movl	%edi, %ecx
	incl	%eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rdx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	je	.L2010
	movb	1976(%rbx,%rax), %al
	testb	%al, 44216(%rbx,%rcx)
	je	.L2009
.L2010:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L2011
	cmpb	43192(%rbx,%rcx), %al
	jne	.L2009
.L2011:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L2009
	testb	$4, 46264(%rbx,%rcx)
	je	.L2009
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
	jmp	.L2012
.L2009:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%ebp, %edi
	call	s370_logical_to_main_l
.L2012:
	movzbl	(%rax), %r12d
	leal	1(%rbp), %ecx
	movl	1892(%r14), %eax
	sall	$8, %r12d
	testl	%eax, %eax
	je	.L2013
	movl	%ecx, %edi
	incl	%eax
	andl	$16777215, %edi
	cltq
	movl	%edi, %esi
	shrl	$11, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %r10d
	cmpl	%r10d, 320(%rbx,%rax,8)
	je	.L2014
	movb	1976(%rbx,%rax), %al
	testb	%al, 44216(%rbx,%rsi)
	je	.L2013
.L2014:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L2015
	cmpb	43192(%rbx,%rsi), %al
	jne	.L2013
.L2015:
	movl	%ecx, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L2013
	testb	$4, 46264(%rbx,%rsi)
	je	.L2013
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
	jmp	.L2016
.L2013:
	movzbl	97(%rbx), %r8d
	movl	%ecx, %edi
	movl	$1, %r9d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	call	s370_logical_to_main_l
.L2016:
	popq	%rbx
	.cfi_def_cfa_offset 40
	movzbl	(%rax), %eax
	popq	%rbp
	.cfi_def_cfa_offset 32
	orl	%r12d, %eax
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE160:
	.size	s370_vfetch2_full, .-s370_vfetch2_full
	.type	s370_validate_operand.part.11, @function
s370_validate_operand.part.11:
.LFB3145:
	.cfi_startproc
	movq	%r8, %rax
	movzbl	97(%r8), %r8d
	addl	%edx, %edi
	andl	$16777215, %edi
	movl	$1, %r9d
	movq	%rax, %rdx
	jmp	s370_logical_to_main_l
	.cfi_endproc
.LFE3145:
	.size	s370_validate_operand.part.11, .-s370_validate_operand.part.11
	.type	s370_vfetch4_full, @function
s370_vfetch4_full:
.LFB162:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	leal	5(%rsi), %eax
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	cltq
	movl	%esi, %r13d
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	leaq	(%rdx,%rax,4), %r14
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	movl	%edi, %ebp
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rdx, %rbx
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L2044
	movl	%edi, %ecx
	incl	%eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rdx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	je	.L2045
	movb	1976(%rbx,%rax), %al
	testb	%al, 44216(%rbx,%rcx)
	je	.L2044
.L2045:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L2046
	cmpb	43192(%rbx,%rcx), %al
	jne	.L2044
.L2046:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L2044
	testb	$4, 46264(%rbx,%rcx)
	je	.L2044
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
	jmp	.L2047
.L2044:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%ebp, %edi
	call	s370_logical_to_main_l
.L2047:
	movl	(%rax), %eax
	movl	$2048, %r12d
	movl	%eax, (%rsp)
	movl	%ebp, %eax
	andl	$2047, %eax
	subl	%eax, %r12d
	movl	1892(%r14), %eax
	leal	(%r12,%rbp), %ecx
	testl	%eax, %eax
	je	.L2048
	movl	%ecx, %edi
	incl	%eax
	andl	$16777215, %edi
	cltq
	movl	%edi, %esi
	shrl	$11, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %r10d
	cmpl	%r10d, 320(%rbx,%rax,8)
	je	.L2049
	movb	44216(%rbx,%rsi), %r8b
	testb	%r8b, 1976(%rbx,%rax)
	je	.L2048
.L2049:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L2050
	cmpb	43192(%rbx,%rsi), %al
	jne	.L2048
.L2050:
	movl	%ecx, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L2048
	testb	$4, 46264(%rbx,%rsi)
	je	.L2048
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
	jmp	.L2051
.L2048:
	movzbl	97(%rbx), %r8d
	movl	%ecx, %edi
	movl	$1, %r9d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	call	s370_logical_to_main_l
.L2051:
	movl	(%rax), %eax
	movl	%eax, (%rsp,%r12)
	movl	(%rsp), %eax
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	bswap	%eax
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE162:
	.size	s370_vfetch4_full, .-s370_vfetch4_full
	.type	s370_vstore4_full, @function
s370_vstore4_full:
.LFB154:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	movl	%esi, %eax
	movl	%edi, %r11d
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	andl	$2047, %eax
	movl	%edx, %r10d
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movl	%esi, %r12d
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movl	$2048, %ebp
	subl	%eax, %ebp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rcx, %rbx
	leal	5(%rdx), %eax
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	%ebp, %edi
	cltq
	movq	%rdi, (%rsp)
	leaq	(%rcx,%rax,4), %r15
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L2078
	leal	1(%rax), %edx
	movl	%esi, %ecx
	shrl	$11, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	je	.L2079
	movb	44216(%rbx,%rcx), %sil
	testb	%sil, 1976(%rbx,%rdx)
	je	.L2078
.L2079:
	movb	97(%rbx), %dl
	testb	%dl, %dl
	je	.L2080
	cmpb	43192(%rbx,%rcx), %dl
	jne	.L2078
.L2080:
	movl	%r12d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L2078
	testb	$1, 46264(%rbx,%rcx)
	je	.L2078
	movq	35000(%rax), %rdx
	movl	%r12d, %r13d
	movq	%rdx, 984(%rbx)
	xorq	26808(%rax), %r13
	jmp	.L2081
.L2078:
	movq	(%rsp), %r9
	movl	%r10d, %esi
	movl	$1, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r11d, 12(%rsp)
	movl	%r10d, 8(%rsp)
	call	s370_logical_to_main_l
	movl	12(%rsp), %r11d
	movl	8(%rsp), %r10d
	movq	%rax, %r13
.L2081:
	movl	1892(%r15), %eax
	leal	0(%rbp,%r12), %esi
	movq	984(%rbx), %r14
	testl	%eax, %eax
	je	.L2082
	movl	%esi, %r8d
	incl	%eax
	andl	$16777215, %r8d
	cltq
	movl	%r8d, %edx
	shrl	$11, %edx
	andl	$1023, %edx
	movl	%edx, %edi
	leaq	(%rbx,%rdi,8), %rcx
	movl	2232(%rcx), %r9d
	cmpl	%r9d, 320(%rbx,%rax,8)
	je	.L2083
	movb	44216(%rbx,%rdi), %r9b
	testb	%r9b, 1976(%rbx,%rax)
	je	.L2082
.L2083:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L2084
	cmpb	43192(%rbx,%rdx), %al
	jne	.L2082
.L2084:
	movl	%esi, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L2082
	testb	$2, 46264(%rbx,%rdi)
	je	.L2082
	movl	%r8d, %eax
	xorq	26808(%rcx), %rax
	jmp	.L2085
.L2082:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	%esi, %edi
	subl	%ebp, %r9d
	andl	$16777215, %edi
	movl	$2, %ecx
	movslq	%r9d, %r9
	movq	%rbx, %rdx
	movl	%r10d, %esi
	movl	%r11d, 8(%rsp)
	call	s370_logical_to_main_l
	movl	8(%rsp), %r11d
.L2085:
	movq	(%rsp), %rcx
	leaq	16(%rsp), %rsi
	movq	%r13, %rdi
	bswap	%r11d
	orb	$6, (%r14)
	movl	%r11d, 16(%rsp)
	rep movsb
	movq	%rax, %rdi
	movb	$4, %cl
	subl	%ebp, %ecx
	movslq	%ecx, %rcx
	rep movsb
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE154:
	.size	s370_vstore4_full, .-s370_vstore4_full
	.type	s370_instfetch.constprop.20, @function
s370_instfetch.constprop.20:
.LFB3153:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rdi, %rbx
	movl	800(%rdi), %ebp
	movl	%ebp, %r12d
	andl	$2047, %r12d
	testb	$1, %bpl
	je	.L2112
	movl	$6, %esi
	call	*2032(%rbx)
.L2112:
	testb	$4, 808(%rbx)
	je	.L2114
	movw	$0, 1146(%rbx)
	testb	$64, 54(%rbx)
	je	.L2114
	movl	416(%rbx), %eax
	movl	408(%rbx), %edx
	andl	$16777215, %eax
	andl	$16777215, %edx
	cmpl	%edx, %eax
	jb	.L2116
	xorl	%ecx, %ecx
	cmpl	%edx, %ebp
	jb	.L2119
	jmp	.L2168
.L2116:
	cmpl	%edx, %ebp
	movl	$1, %ecx
	jae	.L2119
.L2168:
	xorl	%ecx, %ecx
	cmpl	%eax, %ebp
	setbe	%cl
.L2119:
	movb	%cl, %al
	andl	$1, %eax
	testb	%al, %al
	je	.L2114
	orl	$4194304, 56(%rbx)
.L2114:
	movl	1908(%rbx), %eax
	testl	%eax, %eax
	je	.L2120
	movl	%ebp, %ecx
	incl	%eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	je	.L2121
	movb	44216(%rbx,%rcx), %sil
	testb	%sil, 1976(%rbx,%rax)
	je	.L2120
.L2121:
	movb	97(%rbx), %al
	testb	%al, %al
	je	.L2122
	cmpb	43192(%rbx,%rcx), %al
	jne	.L2120
.L2122:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L2120
	testb	$4, 46264(%rbx,%rcx)
	je	.L2120
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
	jmp	.L2123
.L2120:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	orl	$-1, %esi
	movl	%ebp, %edi
	call	s370_logical_to_main_l
.L2123:
	movb	(%rax), %cl
	movl	$2, %edx
	cmpb	$63, %cl
	jbe	.L2124
	cmpb	$-64, %cl
	sbbl	%edx, %edx
	andl	$-2, %edx
	addl	$6, %edx
.L2124:
	addl	%r12d, %edx
	cmpl	$2048, %edx
	jle	.L2125
	movl	(%rax), %eax
	leaq	1014(%rbx), %r13
	movl	$2048, %r14d
	movl	1908(%rbx), %esi
	subl	%r12d, %r14d
	addl	%r14d, %ebp
	movl	%ebp, %edi
	andl	$16777215, %edi
	movl	%eax, 1014(%rbx)
	testl	%esi, %esi
	je	.L2126
	movl	%edi, %ecx
	incl	%esi
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	je	.L2127
	movb	44216(%rbx,%rcx), %al
	testb	%al, 1976(%rbx,%rsi)
	je	.L2126
.L2127:
	movb	97(%rbx), %sil
	testb	%sil, %sil
	je	.L2128
	cmpb	43192(%rbx,%rcx), %sil
	jne	.L2126
.L2128:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L2126
	testb	$4, 46264(%rbx,%rcx)
	je	.L2126
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
	jmp	.L2129
.L2126:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	orl	$-1, %esi
	call	s370_logical_to_main_l
.L2129:
	movl	(%rax), %eax
	movslq	%r14d, %r14
	movl	%eax, 0(%r13,%r14)
	movq	%r13, %rax
.L2125:
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE3153:
	.size	s370_instfetch.constprop.20, .-s370_instfetch.constprop.20
	.text
	.p2align 4,,15
	.globl	s370_add_register
	.type	s370_add_register, @function
s370_add_register:
.LFB170:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	movb	$2, 130(%rsi)
	movq	%rsi, %rax
	addq	$2, 136(%rsi)
	movq	%rcx, %rdx
	andl	$15, %ecx
	shrq	%rdx
	andl	$120, %edx
	addq	%rsi, %rdx
	movl	192(%rsi,%rcx,8), %esi
	movl	192(%rdx), %edi
	leal	(%rdi,%rsi), %ecx
	cmpl	$0, %ecx
	movl	%ecx, 192(%rdx)
	jle	.L2170
	shrl	$31, %esi
	testb	%sil, %sil
	jne	.L2182
.L2179:
	movl	$2, %edx
.L2173:
	movb	%dl, 100(%rax)
.L2169:
	rep ret
	.p2align 4,,10
	.p2align 3
.L2182:
	shrl	$31, %edi
	testb	%dil, %dil
	je	.L2179
.L2171:
	testb	$8, 101(%rax)
	movb	$3, 100(%rax)
	je	.L2169
	movq	2032(%rax), %rdx
	movl	$8, %esi
	movq	%rax, %rdi
	jmp	*%rdx
	.p2align 4,,10
	.p2align 3
.L2170:
	jne	.L2183
	shrl	$31, %esi
	testb	%sil, %sil
	je	.L2181
	shrl	$31, %edi
	testb	%dil, %dil
	jne	.L2171
.L2181:
	xorl	%edx, %edx
	jmp	.L2173
	.p2align 4,,10
	.p2align 3
.L2183:
	testl	%esi, %esi
	js	.L2180
	testl	%edi, %edi
	.p2align 4,,5
	jns	.L2171
.L2180:
	movl	$1, %edx
	.p2align 4,,2
	jmp	.L2173
	.cfi_endproc
.LFE170:
	.size	s370_add_register, .-s370_add_register
	.p2align 4,,15
	.globl	s370_add
	.type	s370_add, @function
s370_add:
.LFB171:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %edx
	shrl	$20, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L2229
.L2185:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L2186
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L2186:
	movl	%ebp, %r13d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r13d
	testb	$3, %bpl
	jne	.L2230
.L2187:
	leal	-77(%r13), %edx
	cmpl	$6, %edx
	jbe	.L2231
.L2189:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L2190
	leal	1(%rdx), %esi
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L2232
.L2191:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L2233
.L2192:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L2190
	testb	$4, 46264(%rbx,%rcx)
	je	.L2190
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L2193:
	movl	(%rax), %eax
	bswap	%eax
.L2194:
	movslq	%r12d, %r12
	leaq	(%rbx,%r12,8), %rcx
	movl	192(%rcx), %esi
	leal	(%rsi,%rax), %edx
	cmpl	$0, %edx
	movl	%edx, 192(%rcx)
	jle	.L2195
	shrl	$31, %eax
	testb	%al, %al
	jne	.L2234
.L2204:
	movl	$2, %eax
.L2198:
	movb	%al, 100(%rbx)
.L2184:
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L2234:
	.cfi_restore_state
	shrl	$31, %esi
	testb	%sil, %sil
	je	.L2204
.L2196:
	testb	$8, 101(%rbx)
	movb	$3, 100(%rbx)
	je	.L2184
	movq	2032(%rbx), %rax
	movq	%rbx, %rdi
	movl	$8, %esi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L2195:
	.cfi_restore_state
	jne	.L2235
	shrl	$31, %eax
	testb	%al, %al
	je	.L2206
	shrl	$31, %esi
	testb	%sil, %sil
	jne	.L2196
.L2206:
	xorl	%eax, %eax
	jmp	.L2198
	.p2align 4,,10
	.p2align 3
.L2235:
	testl	%eax, %eax
	js	.L2205
	testl	%esi, %esi
	.p2align 4,,5
	jns	.L2196
.L2205:
	movl	$1, %eax
	.p2align 4,,2
	jmp	.L2198
.L2232:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L2191
.L2190:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	jmp	.L2193
.L2230:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L2187
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_vfetch4_full
	jmp	.L2194
.L2229:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	jmp	.L2185
.L2233:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L2192
	jmp	.L2190
.L2231:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L2189
	.cfi_endproc
.LFE171:
	.size	s370_add, .-s370_add
	.p2align 4,,15
	.globl	s370_add_halfword
	.type	s370_add_halfword, @function
s370_add_halfword:
.LFB172:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %edx
	shrl	$20, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L2281
.L2237:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L2238
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L2238:
	movl	%ebp, %r13d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r13d
	testb	$1, %bpl
	jne	.L2282
.L2239:
	leal	-79(%r13), %edx
	cmpl	$4, %edx
	jbe	.L2283
.L2241:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L2242
	leal	1(%rdx), %esi
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L2284
.L2243:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L2285
.L2244:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L2242
	testb	$4, 46264(%rbx,%rcx)
	je	.L2242
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L2245:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L2246:
	movslq	%r12d, %r12
	cwtl
	leaq	(%rbx,%r12,8), %rcx
	movl	192(%rcx), %esi
	leal	(%rsi,%rax), %edx
	cmpl	$0, %edx
	movl	%edx, 192(%rcx)
	jle	.L2247
	shrl	$31, %eax
	testb	%al, %al
	jne	.L2286
.L2256:
	movl	$2, %eax
.L2250:
	movb	%al, 100(%rbx)
.L2236:
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L2286:
	.cfi_restore_state
	shrl	$31, %esi
	testb	%sil, %sil
	je	.L2256
.L2248:
	testb	$8, 101(%rbx)
	movb	$3, 100(%rbx)
	je	.L2236
	movq	2032(%rbx), %rax
	movq	%rbx, %rdi
	movl	$8, %esi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L2247:
	.cfi_restore_state
	jne	.L2287
	shrl	$31, %eax
	testb	%al, %al
	je	.L2258
	shrl	$31, %esi
	testb	%sil, %sil
	jne	.L2248
.L2258:
	xorl	%eax, %eax
	jmp	.L2250
	.p2align 4,,10
	.p2align 3
.L2287:
	testl	%eax, %eax
	js	.L2257
	testl	%esi, %esi
	.p2align 4,,5
	jns	.L2248
.L2257:
	movl	$1, %eax
	.p2align 4,,2
	jmp	.L2250
.L2284:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L2243
.L2242:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	jmp	.L2245
.L2282:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2047, %edx
	jne	.L2239
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_vfetch2_full
	jmp	.L2246
.L2281:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	jmp	.L2237
.L2285:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L2244
	jmp	.L2242
.L2283:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L2241
	.cfi_endproc
.LFE172:
	.size	s370_add_halfword, .-s370_add_halfword
	.p2align 4,,15
	.globl	s370_add_halfword_immediate
	.type	s370_add_halfword_immediate, @function
s370_add_halfword_immediate:
.LFB173:
	.cfi_startproc
	movl	(%rdi), %edx
	movq	%rsi, %rax
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	bswap	%edx
	movl	%edx, %ecx
	movswl	%dx, %edx
	shrl	$20, %ecx
	andl	$15, %ecx
	leaq	(%rsi,%rcx,8), %rsi
	movl	192(%rsi), %edi
	leal	(%rdi,%rdx), %ecx
	cmpl	$0, %ecx
	movl	%ecx, 192(%rsi)
	jle	.L2289
	shrl	$31, %edx
	testb	%dl, %dl
	jne	.L2301
.L2298:
	movl	$2, %edx
.L2292:
	movb	%dl, 100(%rax)
.L2288:
	rep ret
	.p2align 4,,10
	.p2align 3
.L2301:
	shrl	$31, %edi
	testb	%dil, %dil
	je	.L2298
.L2290:
	testb	$8, 101(%rax)
	movb	$3, 100(%rax)
	je	.L2288
	movq	2032(%rax), %rdx
	movl	$8, %esi
	movq	%rax, %rdi
	jmp	*%rdx
	.p2align 4,,10
	.p2align 3
.L2289:
	jne	.L2302
	shrl	$31, %edx
	testb	%dl, %dl
	je	.L2300
	shrl	$31, %edi
	testb	%dil, %dil
	jne	.L2290
.L2300:
	xorl	%edx, %edx
	jmp	.L2292
	.p2align 4,,10
	.p2align 3
.L2302:
	testl	%edx, %edx
	js	.L2299
	testl	%edi, %edi
	.p2align 4,,5
	jns	.L2290
.L2299:
	movl	$1, %edx
	.p2align 4,,2
	jmp	.L2292
	.cfi_endproc
.LFE173:
	.size	s370_add_halfword_immediate, .-s370_add_halfword_immediate
	.p2align 4,,15
	.globl	s370_add_logical_register
	.type	s370_add_logical_register, @function
s370_add_logical_register:
.LFB174:
	.cfi_startproc
	movzbl	1(%rdi), %edi
	addq	$2, 136(%rsi)
	movq	%rdi, %rax
	andl	$15, %edi
	shrq	%rax
	andl	$120, %eax
	leaq	(%rsi,%rax), %rcx
	movl	192(%rsi,%rdi,8), %eax
	movl	192(%rcx), %edx
	addl	%edx, %eax
	movl	%eax, 192(%rcx)
	xorl	%ecx, %ecx
	testl	%eax, %eax
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE174:
	.size	s370_add_logical_register, .-s370_add_logical_register
	.p2align 4,,15
	.globl	s370_1E00
	.type	s370_1E00, @function
s370_1E00:
.LFB175:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE175:
	.size	s370_1E00, .-s370_1E00
	.p2align 4,,15
	.globl	s370_1E01
	.type	s370_1E01, @function
s370_1E01:
.LFB176:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE176:
	.size	s370_1E01, .-s370_1E01
	.p2align 4,,15
	.globl	s370_1E02
	.type	s370_1E02, @function
s370_1E02:
.LFB177:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE177:
	.size	s370_1E02, .-s370_1E02
	.p2align 4,,15
	.globl	s370_1E03
	.type	s370_1E03, @function
s370_1E03:
.LFB178:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE178:
	.size	s370_1E03, .-s370_1E03
	.p2align 4,,15
	.globl	s370_1E04
	.type	s370_1E04, @function
s370_1E04:
.LFB179:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE179:
	.size	s370_1E04, .-s370_1E04
	.p2align 4,,15
	.globl	s370_1E05
	.type	s370_1E05, @function
s370_1E05:
.LFB180:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE180:
	.size	s370_1E05, .-s370_1E05
	.p2align 4,,15
	.globl	s370_1E06
	.type	s370_1E06, @function
s370_1E06:
.LFB181:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE181:
	.size	s370_1E06, .-s370_1E06
	.p2align 4,,15
	.globl	s370_1E07
	.type	s370_1E07, @function
s370_1E07:
.LFB182:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE182:
	.size	s370_1E07, .-s370_1E07
	.p2align 4,,15
	.globl	s370_1E08
	.type	s370_1E08, @function
s370_1E08:
.LFB183:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE183:
	.size	s370_1E08, .-s370_1E08
	.p2align 4,,15
	.globl	s370_1E09
	.type	s370_1E09, @function
s370_1E09:
.LFB184:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE184:
	.size	s370_1E09, .-s370_1E09
	.p2align 4,,15
	.globl	s370_1E0A
	.type	s370_1E0A, @function
s370_1E0A:
.LFB185:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE185:
	.size	s370_1E0A, .-s370_1E0A
	.p2align 4,,15
	.globl	s370_1E0B
	.type	s370_1E0B, @function
s370_1E0B:
.LFB186:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE186:
	.size	s370_1E0B, .-s370_1E0B
	.p2align 4,,15
	.globl	s370_1E0C
	.type	s370_1E0C, @function
s370_1E0C:
.LFB187:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE187:
	.size	s370_1E0C, .-s370_1E0C
	.p2align 4,,15
	.globl	s370_1E0D
	.type	s370_1E0D, @function
s370_1E0D:
.LFB188:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE188:
	.size	s370_1E0D, .-s370_1E0D
	.p2align 4,,15
	.globl	s370_1E0E
	.type	s370_1E0E, @function
s370_1E0E:
.LFB189:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE189:
	.size	s370_1E0E, .-s370_1E0E
	.p2align 4,,15
	.globl	s370_1E0F
	.type	s370_1E0F, @function
s370_1E0F:
.LFB190:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE190:
	.size	s370_1E0F, .-s370_1E0F
	.p2align 4,,15
	.globl	s370_1E10
	.type	s370_1E10, @function
s370_1E10:
.LFB191:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE191:
	.size	s370_1E10, .-s370_1E10
	.p2align 4,,15
	.globl	s370_1E11
	.type	s370_1E11, @function
s370_1E11:
.LFB192:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE192:
	.size	s370_1E11, .-s370_1E11
	.p2align 4,,15
	.globl	s370_1E12
	.type	s370_1E12, @function
s370_1E12:
.LFB193:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE193:
	.size	s370_1E12, .-s370_1E12
	.p2align 4,,15
	.globl	s370_1E13
	.type	s370_1E13, @function
s370_1E13:
.LFB194:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE194:
	.size	s370_1E13, .-s370_1E13
	.p2align 4,,15
	.globl	s370_1E14
	.type	s370_1E14, @function
s370_1E14:
.LFB195:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE195:
	.size	s370_1E14, .-s370_1E14
	.p2align 4,,15
	.globl	s370_1E15
	.type	s370_1E15, @function
s370_1E15:
.LFB196:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE196:
	.size	s370_1E15, .-s370_1E15
	.p2align 4,,15
	.globl	s370_1E16
	.type	s370_1E16, @function
s370_1E16:
.LFB197:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE197:
	.size	s370_1E16, .-s370_1E16
	.p2align 4,,15
	.globl	s370_1E17
	.type	s370_1E17, @function
s370_1E17:
.LFB198:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE198:
	.size	s370_1E17, .-s370_1E17
	.p2align 4,,15
	.globl	s370_1E18
	.type	s370_1E18, @function
s370_1E18:
.LFB199:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE199:
	.size	s370_1E18, .-s370_1E18
	.p2align 4,,15
	.globl	s370_1E19
	.type	s370_1E19, @function
s370_1E19:
.LFB200:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE200:
	.size	s370_1E19, .-s370_1E19
	.p2align 4,,15
	.globl	s370_1E1A
	.type	s370_1E1A, @function
s370_1E1A:
.LFB201:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE201:
	.size	s370_1E1A, .-s370_1E1A
	.p2align 4,,15
	.globl	s370_1E1B
	.type	s370_1E1B, @function
s370_1E1B:
.LFB202:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE202:
	.size	s370_1E1B, .-s370_1E1B
	.p2align 4,,15
	.globl	s370_1E1C
	.type	s370_1E1C, @function
s370_1E1C:
.LFB203:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE203:
	.size	s370_1E1C, .-s370_1E1C
	.p2align 4,,15
	.globl	s370_1E1D
	.type	s370_1E1D, @function
s370_1E1D:
.LFB204:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE204:
	.size	s370_1E1D, .-s370_1E1D
	.p2align 4,,15
	.globl	s370_1E1E
	.type	s370_1E1E, @function
s370_1E1E:
.LFB205:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE205:
	.size	s370_1E1E, .-s370_1E1E
	.p2align 4,,15
	.globl	s370_1E1F
	.type	s370_1E1F, @function
s370_1E1F:
.LFB206:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE206:
	.size	s370_1E1F, .-s370_1E1F
	.p2align 4,,15
	.globl	s370_1E20
	.type	s370_1E20, @function
s370_1E20:
.LFB207:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE207:
	.size	s370_1E20, .-s370_1E20
	.p2align 4,,15
	.globl	s370_1E21
	.type	s370_1E21, @function
s370_1E21:
.LFB208:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE208:
	.size	s370_1E21, .-s370_1E21
	.p2align 4,,15
	.globl	s370_1E22
	.type	s370_1E22, @function
s370_1E22:
.LFB209:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE209:
	.size	s370_1E22, .-s370_1E22
	.p2align 4,,15
	.globl	s370_1E23
	.type	s370_1E23, @function
s370_1E23:
.LFB210:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE210:
	.size	s370_1E23, .-s370_1E23
	.p2align 4,,15
	.globl	s370_1E24
	.type	s370_1E24, @function
s370_1E24:
.LFB211:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE211:
	.size	s370_1E24, .-s370_1E24
	.p2align 4,,15
	.globl	s370_1E25
	.type	s370_1E25, @function
s370_1E25:
.LFB212:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE212:
	.size	s370_1E25, .-s370_1E25
	.p2align 4,,15
	.globl	s370_1E26
	.type	s370_1E26, @function
s370_1E26:
.LFB213:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE213:
	.size	s370_1E26, .-s370_1E26
	.p2align 4,,15
	.globl	s370_1E27
	.type	s370_1E27, @function
s370_1E27:
.LFB214:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE214:
	.size	s370_1E27, .-s370_1E27
	.p2align 4,,15
	.globl	s370_1E28
	.type	s370_1E28, @function
s370_1E28:
.LFB215:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE215:
	.size	s370_1E28, .-s370_1E28
	.p2align 4,,15
	.globl	s370_1E29
	.type	s370_1E29, @function
s370_1E29:
.LFB216:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE216:
	.size	s370_1E29, .-s370_1E29
	.p2align 4,,15
	.globl	s370_1E2A
	.type	s370_1E2A, @function
s370_1E2A:
.LFB217:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE217:
	.size	s370_1E2A, .-s370_1E2A
	.p2align 4,,15
	.globl	s370_1E2B
	.type	s370_1E2B, @function
s370_1E2B:
.LFB218:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE218:
	.size	s370_1E2B, .-s370_1E2B
	.p2align 4,,15
	.globl	s370_1E2C
	.type	s370_1E2C, @function
s370_1E2C:
.LFB219:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE219:
	.size	s370_1E2C, .-s370_1E2C
	.p2align 4,,15
	.globl	s370_1E2D
	.type	s370_1E2D, @function
s370_1E2D:
.LFB220:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE220:
	.size	s370_1E2D, .-s370_1E2D
	.p2align 4,,15
	.globl	s370_1E2E
	.type	s370_1E2E, @function
s370_1E2E:
.LFB221:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE221:
	.size	s370_1E2E, .-s370_1E2E
	.p2align 4,,15
	.globl	s370_1E2F
	.type	s370_1E2F, @function
s370_1E2F:
.LFB222:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE222:
	.size	s370_1E2F, .-s370_1E2F
	.p2align 4,,15
	.globl	s370_1E30
	.type	s370_1E30, @function
s370_1E30:
.LFB223:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE223:
	.size	s370_1E30, .-s370_1E30
	.p2align 4,,15
	.globl	s370_1E31
	.type	s370_1E31, @function
s370_1E31:
.LFB224:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE224:
	.size	s370_1E31, .-s370_1E31
	.p2align 4,,15
	.globl	s370_1E32
	.type	s370_1E32, @function
s370_1E32:
.LFB225:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE225:
	.size	s370_1E32, .-s370_1E32
	.p2align 4,,15
	.globl	s370_1E33
	.type	s370_1E33, @function
s370_1E33:
.LFB226:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE226:
	.size	s370_1E33, .-s370_1E33
	.p2align 4,,15
	.globl	s370_1E34
	.type	s370_1E34, @function
s370_1E34:
.LFB227:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE227:
	.size	s370_1E34, .-s370_1E34
	.p2align 4,,15
	.globl	s370_1E35
	.type	s370_1E35, @function
s370_1E35:
.LFB228:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE228:
	.size	s370_1E35, .-s370_1E35
	.p2align 4,,15
	.globl	s370_1E36
	.type	s370_1E36, @function
s370_1E36:
.LFB229:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE229:
	.size	s370_1E36, .-s370_1E36
	.p2align 4,,15
	.globl	s370_1E37
	.type	s370_1E37, @function
s370_1E37:
.LFB230:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE230:
	.size	s370_1E37, .-s370_1E37
	.p2align 4,,15
	.globl	s370_1E38
	.type	s370_1E38, @function
s370_1E38:
.LFB231:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE231:
	.size	s370_1E38, .-s370_1E38
	.p2align 4,,15
	.globl	s370_1E39
	.type	s370_1E39, @function
s370_1E39:
.LFB232:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE232:
	.size	s370_1E39, .-s370_1E39
	.p2align 4,,15
	.globl	s370_1E3A
	.type	s370_1E3A, @function
s370_1E3A:
.LFB233:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE233:
	.size	s370_1E3A, .-s370_1E3A
	.p2align 4,,15
	.globl	s370_1E3B
	.type	s370_1E3B, @function
s370_1E3B:
.LFB234:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE234:
	.size	s370_1E3B, .-s370_1E3B
	.p2align 4,,15
	.globl	s370_1E3C
	.type	s370_1E3C, @function
s370_1E3C:
.LFB235:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE235:
	.size	s370_1E3C, .-s370_1E3C
	.p2align 4,,15
	.globl	s370_1E3D
	.type	s370_1E3D, @function
s370_1E3D:
.LFB236:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE236:
	.size	s370_1E3D, .-s370_1E3D
	.p2align 4,,15
	.globl	s370_1E3E
	.type	s370_1E3E, @function
s370_1E3E:
.LFB237:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE237:
	.size	s370_1E3E, .-s370_1E3E
	.p2align 4,,15
	.globl	s370_1E3F
	.type	s370_1E3F, @function
s370_1E3F:
.LFB238:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE238:
	.size	s370_1E3F, .-s370_1E3F
	.p2align 4,,15
	.globl	s370_1E40
	.type	s370_1E40, @function
s370_1E40:
.LFB239:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE239:
	.size	s370_1E40, .-s370_1E40
	.p2align 4,,15
	.globl	s370_1E41
	.type	s370_1E41, @function
s370_1E41:
.LFB240:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE240:
	.size	s370_1E41, .-s370_1E41
	.p2align 4,,15
	.globl	s370_1E42
	.type	s370_1E42, @function
s370_1E42:
.LFB241:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE241:
	.size	s370_1E42, .-s370_1E42
	.p2align 4,,15
	.globl	s370_1E43
	.type	s370_1E43, @function
s370_1E43:
.LFB242:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE242:
	.size	s370_1E43, .-s370_1E43
	.p2align 4,,15
	.globl	s370_1E44
	.type	s370_1E44, @function
s370_1E44:
.LFB243:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE243:
	.size	s370_1E44, .-s370_1E44
	.p2align 4,,15
	.globl	s370_1E45
	.type	s370_1E45, @function
s370_1E45:
.LFB244:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE244:
	.size	s370_1E45, .-s370_1E45
	.p2align 4,,15
	.globl	s370_1E46
	.type	s370_1E46, @function
s370_1E46:
.LFB245:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE245:
	.size	s370_1E46, .-s370_1E46
	.p2align 4,,15
	.globl	s370_1E47
	.type	s370_1E47, @function
s370_1E47:
.LFB246:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE246:
	.size	s370_1E47, .-s370_1E47
	.p2align 4,,15
	.globl	s370_1E48
	.type	s370_1E48, @function
s370_1E48:
.LFB247:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE247:
	.size	s370_1E48, .-s370_1E48
	.p2align 4,,15
	.globl	s370_1E49
	.type	s370_1E49, @function
s370_1E49:
.LFB248:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE248:
	.size	s370_1E49, .-s370_1E49
	.p2align 4,,15
	.globl	s370_1E4A
	.type	s370_1E4A, @function
s370_1E4A:
.LFB249:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE249:
	.size	s370_1E4A, .-s370_1E4A
	.p2align 4,,15
	.globl	s370_1E4B
	.type	s370_1E4B, @function
s370_1E4B:
.LFB250:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE250:
	.size	s370_1E4B, .-s370_1E4B
	.p2align 4,,15
	.globl	s370_1E4C
	.type	s370_1E4C, @function
s370_1E4C:
.LFB251:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE251:
	.size	s370_1E4C, .-s370_1E4C
	.p2align 4,,15
	.globl	s370_1E4D
	.type	s370_1E4D, @function
s370_1E4D:
.LFB252:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE252:
	.size	s370_1E4D, .-s370_1E4D
	.p2align 4,,15
	.globl	s370_1E4E
	.type	s370_1E4E, @function
s370_1E4E:
.LFB253:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE253:
	.size	s370_1E4E, .-s370_1E4E
	.p2align 4,,15
	.globl	s370_1E4F
	.type	s370_1E4F, @function
s370_1E4F:
.LFB254:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE254:
	.size	s370_1E4F, .-s370_1E4F
	.p2align 4,,15
	.globl	s370_1E50
	.type	s370_1E50, @function
s370_1E50:
.LFB255:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE255:
	.size	s370_1E50, .-s370_1E50
	.p2align 4,,15
	.globl	s370_1E51
	.type	s370_1E51, @function
s370_1E51:
.LFB256:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE256:
	.size	s370_1E51, .-s370_1E51
	.p2align 4,,15
	.globl	s370_1E52
	.type	s370_1E52, @function
s370_1E52:
.LFB257:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE257:
	.size	s370_1E52, .-s370_1E52
	.p2align 4,,15
	.globl	s370_1E53
	.type	s370_1E53, @function
s370_1E53:
.LFB258:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE258:
	.size	s370_1E53, .-s370_1E53
	.p2align 4,,15
	.globl	s370_1E54
	.type	s370_1E54, @function
s370_1E54:
.LFB259:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE259:
	.size	s370_1E54, .-s370_1E54
	.p2align 4,,15
	.globl	s370_1E55
	.type	s370_1E55, @function
s370_1E55:
.LFB260:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE260:
	.size	s370_1E55, .-s370_1E55
	.p2align 4,,15
	.globl	s370_1E56
	.type	s370_1E56, @function
s370_1E56:
.LFB261:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE261:
	.size	s370_1E56, .-s370_1E56
	.p2align 4,,15
	.globl	s370_1E57
	.type	s370_1E57, @function
s370_1E57:
.LFB262:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE262:
	.size	s370_1E57, .-s370_1E57
	.p2align 4,,15
	.globl	s370_1E58
	.type	s370_1E58, @function
s370_1E58:
.LFB263:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE263:
	.size	s370_1E58, .-s370_1E58
	.p2align 4,,15
	.globl	s370_1E59
	.type	s370_1E59, @function
s370_1E59:
.LFB264:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE264:
	.size	s370_1E59, .-s370_1E59
	.p2align 4,,15
	.globl	s370_1E5A
	.type	s370_1E5A, @function
s370_1E5A:
.LFB265:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE265:
	.size	s370_1E5A, .-s370_1E5A
	.p2align 4,,15
	.globl	s370_1E5B
	.type	s370_1E5B, @function
s370_1E5B:
.LFB266:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE266:
	.size	s370_1E5B, .-s370_1E5B
	.p2align 4,,15
	.globl	s370_1E5C
	.type	s370_1E5C, @function
s370_1E5C:
.LFB267:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE267:
	.size	s370_1E5C, .-s370_1E5C
	.p2align 4,,15
	.globl	s370_1E5D
	.type	s370_1E5D, @function
s370_1E5D:
.LFB268:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE268:
	.size	s370_1E5D, .-s370_1E5D
	.p2align 4,,15
	.globl	s370_1E5E
	.type	s370_1E5E, @function
s370_1E5E:
.LFB269:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE269:
	.size	s370_1E5E, .-s370_1E5E
	.p2align 4,,15
	.globl	s370_1E5F
	.type	s370_1E5F, @function
s370_1E5F:
.LFB270:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE270:
	.size	s370_1E5F, .-s370_1E5F
	.p2align 4,,15
	.globl	s370_1E60
	.type	s370_1E60, @function
s370_1E60:
.LFB271:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE271:
	.size	s370_1E60, .-s370_1E60
	.p2align 4,,15
	.globl	s370_1E61
	.type	s370_1E61, @function
s370_1E61:
.LFB272:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE272:
	.size	s370_1E61, .-s370_1E61
	.p2align 4,,15
	.globl	s370_1E62
	.type	s370_1E62, @function
s370_1E62:
.LFB273:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE273:
	.size	s370_1E62, .-s370_1E62
	.p2align 4,,15
	.globl	s370_1E63
	.type	s370_1E63, @function
s370_1E63:
.LFB274:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE274:
	.size	s370_1E63, .-s370_1E63
	.p2align 4,,15
	.globl	s370_1E64
	.type	s370_1E64, @function
s370_1E64:
.LFB275:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE275:
	.size	s370_1E64, .-s370_1E64
	.p2align 4,,15
	.globl	s370_1E65
	.type	s370_1E65, @function
s370_1E65:
.LFB276:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE276:
	.size	s370_1E65, .-s370_1E65
	.p2align 4,,15
	.globl	s370_1E66
	.type	s370_1E66, @function
s370_1E66:
.LFB277:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE277:
	.size	s370_1E66, .-s370_1E66
	.p2align 4,,15
	.globl	s370_1E67
	.type	s370_1E67, @function
s370_1E67:
.LFB278:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE278:
	.size	s370_1E67, .-s370_1E67
	.p2align 4,,15
	.globl	s370_1E68
	.type	s370_1E68, @function
s370_1E68:
.LFB279:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE279:
	.size	s370_1E68, .-s370_1E68
	.p2align 4,,15
	.globl	s370_1E69
	.type	s370_1E69, @function
s370_1E69:
.LFB280:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE280:
	.size	s370_1E69, .-s370_1E69
	.p2align 4,,15
	.globl	s370_1E6A
	.type	s370_1E6A, @function
s370_1E6A:
.LFB281:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE281:
	.size	s370_1E6A, .-s370_1E6A
	.p2align 4,,15
	.globl	s370_1E6B
	.type	s370_1E6B, @function
s370_1E6B:
.LFB282:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE282:
	.size	s370_1E6B, .-s370_1E6B
	.p2align 4,,15
	.globl	s370_1E6C
	.type	s370_1E6C, @function
s370_1E6C:
.LFB283:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE283:
	.size	s370_1E6C, .-s370_1E6C
	.p2align 4,,15
	.globl	s370_1E6D
	.type	s370_1E6D, @function
s370_1E6D:
.LFB284:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE284:
	.size	s370_1E6D, .-s370_1E6D
	.p2align 4,,15
	.globl	s370_1E6E
	.type	s370_1E6E, @function
s370_1E6E:
.LFB285:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE285:
	.size	s370_1E6E, .-s370_1E6E
	.p2align 4,,15
	.globl	s370_1E6F
	.type	s370_1E6F, @function
s370_1E6F:
.LFB286:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE286:
	.size	s370_1E6F, .-s370_1E6F
	.p2align 4,,15
	.globl	s370_1E70
	.type	s370_1E70, @function
s370_1E70:
.LFB287:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE287:
	.size	s370_1E70, .-s370_1E70
	.p2align 4,,15
	.globl	s370_1E71
	.type	s370_1E71, @function
s370_1E71:
.LFB288:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE288:
	.size	s370_1E71, .-s370_1E71
	.p2align 4,,15
	.globl	s370_1E72
	.type	s370_1E72, @function
s370_1E72:
.LFB289:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE289:
	.size	s370_1E72, .-s370_1E72
	.p2align 4,,15
	.globl	s370_1E73
	.type	s370_1E73, @function
s370_1E73:
.LFB290:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE290:
	.size	s370_1E73, .-s370_1E73
	.p2align 4,,15
	.globl	s370_1E74
	.type	s370_1E74, @function
s370_1E74:
.LFB291:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE291:
	.size	s370_1E74, .-s370_1E74
	.p2align 4,,15
	.globl	s370_1E75
	.type	s370_1E75, @function
s370_1E75:
.LFB292:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE292:
	.size	s370_1E75, .-s370_1E75
	.p2align 4,,15
	.globl	s370_1E76
	.type	s370_1E76, @function
s370_1E76:
.LFB293:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE293:
	.size	s370_1E76, .-s370_1E76
	.p2align 4,,15
	.globl	s370_1E77
	.type	s370_1E77, @function
s370_1E77:
.LFB294:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE294:
	.size	s370_1E77, .-s370_1E77
	.p2align 4,,15
	.globl	s370_1E78
	.type	s370_1E78, @function
s370_1E78:
.LFB295:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE295:
	.size	s370_1E78, .-s370_1E78
	.p2align 4,,15
	.globl	s370_1E79
	.type	s370_1E79, @function
s370_1E79:
.LFB296:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE296:
	.size	s370_1E79, .-s370_1E79
	.p2align 4,,15
	.globl	s370_1E7A
	.type	s370_1E7A, @function
s370_1E7A:
.LFB297:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE297:
	.size	s370_1E7A, .-s370_1E7A
	.p2align 4,,15
	.globl	s370_1E7B
	.type	s370_1E7B, @function
s370_1E7B:
.LFB298:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE298:
	.size	s370_1E7B, .-s370_1E7B
	.p2align 4,,15
	.globl	s370_1E7C
	.type	s370_1E7C, @function
s370_1E7C:
.LFB299:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE299:
	.size	s370_1E7C, .-s370_1E7C
	.p2align 4,,15
	.globl	s370_1E7D
	.type	s370_1E7D, @function
s370_1E7D:
.LFB300:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE300:
	.size	s370_1E7D, .-s370_1E7D
	.p2align 4,,15
	.globl	s370_1E7E
	.type	s370_1E7E, @function
s370_1E7E:
.LFB301:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE301:
	.size	s370_1E7E, .-s370_1E7E
	.p2align 4,,15
	.globl	s370_1E7F
	.type	s370_1E7F, @function
s370_1E7F:
.LFB302:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE302:
	.size	s370_1E7F, .-s370_1E7F
	.p2align 4,,15
	.globl	s370_1E80
	.type	s370_1E80, @function
s370_1E80:
.LFB303:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE303:
	.size	s370_1E80, .-s370_1E80
	.p2align 4,,15
	.globl	s370_1E81
	.type	s370_1E81, @function
s370_1E81:
.LFB304:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE304:
	.size	s370_1E81, .-s370_1E81
	.p2align 4,,15
	.globl	s370_1E82
	.type	s370_1E82, @function
s370_1E82:
.LFB305:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE305:
	.size	s370_1E82, .-s370_1E82
	.p2align 4,,15
	.globl	s370_1E83
	.type	s370_1E83, @function
s370_1E83:
.LFB306:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE306:
	.size	s370_1E83, .-s370_1E83
	.p2align 4,,15
	.globl	s370_1E84
	.type	s370_1E84, @function
s370_1E84:
.LFB307:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE307:
	.size	s370_1E84, .-s370_1E84
	.p2align 4,,15
	.globl	s370_1E85
	.type	s370_1E85, @function
s370_1E85:
.LFB308:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE308:
	.size	s370_1E85, .-s370_1E85
	.p2align 4,,15
	.globl	s370_1E86
	.type	s370_1E86, @function
s370_1E86:
.LFB309:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE309:
	.size	s370_1E86, .-s370_1E86
	.p2align 4,,15
	.globl	s370_1E87
	.type	s370_1E87, @function
s370_1E87:
.LFB310:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE310:
	.size	s370_1E87, .-s370_1E87
	.p2align 4,,15
	.globl	s370_1E88
	.type	s370_1E88, @function
s370_1E88:
.LFB311:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE311:
	.size	s370_1E88, .-s370_1E88
	.p2align 4,,15
	.globl	s370_1E89
	.type	s370_1E89, @function
s370_1E89:
.LFB312:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE312:
	.size	s370_1E89, .-s370_1E89
	.p2align 4,,15
	.globl	s370_1E8A
	.type	s370_1E8A, @function
s370_1E8A:
.LFB313:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE313:
	.size	s370_1E8A, .-s370_1E8A
	.p2align 4,,15
	.globl	s370_1E8B
	.type	s370_1E8B, @function
s370_1E8B:
.LFB314:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE314:
	.size	s370_1E8B, .-s370_1E8B
	.p2align 4,,15
	.globl	s370_1E8C
	.type	s370_1E8C, @function
s370_1E8C:
.LFB315:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE315:
	.size	s370_1E8C, .-s370_1E8C
	.p2align 4,,15
	.globl	s370_1E8D
	.type	s370_1E8D, @function
s370_1E8D:
.LFB316:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE316:
	.size	s370_1E8D, .-s370_1E8D
	.p2align 4,,15
	.globl	s370_1E8E
	.type	s370_1E8E, @function
s370_1E8E:
.LFB317:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE317:
	.size	s370_1E8E, .-s370_1E8E
	.p2align 4,,15
	.globl	s370_1E8F
	.type	s370_1E8F, @function
s370_1E8F:
.LFB318:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE318:
	.size	s370_1E8F, .-s370_1E8F
	.p2align 4,,15
	.globl	s370_1E90
	.type	s370_1E90, @function
s370_1E90:
.LFB319:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE319:
	.size	s370_1E90, .-s370_1E90
	.p2align 4,,15
	.globl	s370_1E91
	.type	s370_1E91, @function
s370_1E91:
.LFB320:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE320:
	.size	s370_1E91, .-s370_1E91
	.p2align 4,,15
	.globl	s370_1E92
	.type	s370_1E92, @function
s370_1E92:
.LFB321:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE321:
	.size	s370_1E92, .-s370_1E92
	.p2align 4,,15
	.globl	s370_1E93
	.type	s370_1E93, @function
s370_1E93:
.LFB322:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE322:
	.size	s370_1E93, .-s370_1E93
	.p2align 4,,15
	.globl	s370_1E94
	.type	s370_1E94, @function
s370_1E94:
.LFB323:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE323:
	.size	s370_1E94, .-s370_1E94
	.p2align 4,,15
	.globl	s370_1E95
	.type	s370_1E95, @function
s370_1E95:
.LFB324:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE324:
	.size	s370_1E95, .-s370_1E95
	.p2align 4,,15
	.globl	s370_1E96
	.type	s370_1E96, @function
s370_1E96:
.LFB325:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE325:
	.size	s370_1E96, .-s370_1E96
	.p2align 4,,15
	.globl	s370_1E97
	.type	s370_1E97, @function
s370_1E97:
.LFB326:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE326:
	.size	s370_1E97, .-s370_1E97
	.p2align 4,,15
	.globl	s370_1E98
	.type	s370_1E98, @function
s370_1E98:
.LFB327:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE327:
	.size	s370_1E98, .-s370_1E98
	.p2align 4,,15
	.globl	s370_1E99
	.type	s370_1E99, @function
s370_1E99:
.LFB328:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE328:
	.size	s370_1E99, .-s370_1E99
	.p2align 4,,15
	.globl	s370_1E9A
	.type	s370_1E9A, @function
s370_1E9A:
.LFB329:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE329:
	.size	s370_1E9A, .-s370_1E9A
	.p2align 4,,15
	.globl	s370_1E9B
	.type	s370_1E9B, @function
s370_1E9B:
.LFB330:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE330:
	.size	s370_1E9B, .-s370_1E9B
	.p2align 4,,15
	.globl	s370_1E9C
	.type	s370_1E9C, @function
s370_1E9C:
.LFB331:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE331:
	.size	s370_1E9C, .-s370_1E9C
	.p2align 4,,15
	.globl	s370_1E9D
	.type	s370_1E9D, @function
s370_1E9D:
.LFB332:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE332:
	.size	s370_1E9D, .-s370_1E9D
	.p2align 4,,15
	.globl	s370_1E9E
	.type	s370_1E9E, @function
s370_1E9E:
.LFB333:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE333:
	.size	s370_1E9E, .-s370_1E9E
	.p2align 4,,15
	.globl	s370_1E9F
	.type	s370_1E9F, @function
s370_1E9F:
.LFB334:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE334:
	.size	s370_1E9F, .-s370_1E9F
	.p2align 4,,15
	.globl	s370_1EA0
	.type	s370_1EA0, @function
s370_1EA0:
.LFB335:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE335:
	.size	s370_1EA0, .-s370_1EA0
	.p2align 4,,15
	.globl	s370_1EA1
	.type	s370_1EA1, @function
s370_1EA1:
.LFB336:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE336:
	.size	s370_1EA1, .-s370_1EA1
	.p2align 4,,15
	.globl	s370_1EA2
	.type	s370_1EA2, @function
s370_1EA2:
.LFB337:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE337:
	.size	s370_1EA2, .-s370_1EA2
	.p2align 4,,15
	.globl	s370_1EA3
	.type	s370_1EA3, @function
s370_1EA3:
.LFB338:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE338:
	.size	s370_1EA3, .-s370_1EA3
	.p2align 4,,15
	.globl	s370_1EA4
	.type	s370_1EA4, @function
s370_1EA4:
.LFB339:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE339:
	.size	s370_1EA4, .-s370_1EA4
	.p2align 4,,15
	.globl	s370_1EA5
	.type	s370_1EA5, @function
s370_1EA5:
.LFB340:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE340:
	.size	s370_1EA5, .-s370_1EA5
	.p2align 4,,15
	.globl	s370_1EA6
	.type	s370_1EA6, @function
s370_1EA6:
.LFB341:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE341:
	.size	s370_1EA6, .-s370_1EA6
	.p2align 4,,15
	.globl	s370_1EA7
	.type	s370_1EA7, @function
s370_1EA7:
.LFB342:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE342:
	.size	s370_1EA7, .-s370_1EA7
	.p2align 4,,15
	.globl	s370_1EA8
	.type	s370_1EA8, @function
s370_1EA8:
.LFB343:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE343:
	.size	s370_1EA8, .-s370_1EA8
	.p2align 4,,15
	.globl	s370_1EA9
	.type	s370_1EA9, @function
s370_1EA9:
.LFB344:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE344:
	.size	s370_1EA9, .-s370_1EA9
	.p2align 4,,15
	.globl	s370_1EAA
	.type	s370_1EAA, @function
s370_1EAA:
.LFB345:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE345:
	.size	s370_1EAA, .-s370_1EAA
	.p2align 4,,15
	.globl	s370_1EAB
	.type	s370_1EAB, @function
s370_1EAB:
.LFB346:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE346:
	.size	s370_1EAB, .-s370_1EAB
	.p2align 4,,15
	.globl	s370_1EAC
	.type	s370_1EAC, @function
s370_1EAC:
.LFB347:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE347:
	.size	s370_1EAC, .-s370_1EAC
	.p2align 4,,15
	.globl	s370_1EAD
	.type	s370_1EAD, @function
s370_1EAD:
.LFB348:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE348:
	.size	s370_1EAD, .-s370_1EAD
	.p2align 4,,15
	.globl	s370_1EAE
	.type	s370_1EAE, @function
s370_1EAE:
.LFB349:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE349:
	.size	s370_1EAE, .-s370_1EAE
	.p2align 4,,15
	.globl	s370_1EAF
	.type	s370_1EAF, @function
s370_1EAF:
.LFB350:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE350:
	.size	s370_1EAF, .-s370_1EAF
	.p2align 4,,15
	.globl	s370_1EB0
	.type	s370_1EB0, @function
s370_1EB0:
.LFB351:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE351:
	.size	s370_1EB0, .-s370_1EB0
	.p2align 4,,15
	.globl	s370_1EB1
	.type	s370_1EB1, @function
s370_1EB1:
.LFB352:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE352:
	.size	s370_1EB1, .-s370_1EB1
	.p2align 4,,15
	.globl	s370_1EB2
	.type	s370_1EB2, @function
s370_1EB2:
.LFB353:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE353:
	.size	s370_1EB2, .-s370_1EB2
	.p2align 4,,15
	.globl	s370_1EB3
	.type	s370_1EB3, @function
s370_1EB3:
.LFB354:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE354:
	.size	s370_1EB3, .-s370_1EB3
	.p2align 4,,15
	.globl	s370_1EB4
	.type	s370_1EB4, @function
s370_1EB4:
.LFB355:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE355:
	.size	s370_1EB4, .-s370_1EB4
	.p2align 4,,15
	.globl	s370_1EB5
	.type	s370_1EB5, @function
s370_1EB5:
.LFB356:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE356:
	.size	s370_1EB5, .-s370_1EB5
	.p2align 4,,15
	.globl	s370_1EB6
	.type	s370_1EB6, @function
s370_1EB6:
.LFB357:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE357:
	.size	s370_1EB6, .-s370_1EB6
	.p2align 4,,15
	.globl	s370_1EB7
	.type	s370_1EB7, @function
s370_1EB7:
.LFB358:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE358:
	.size	s370_1EB7, .-s370_1EB7
	.p2align 4,,15
	.globl	s370_1EB8
	.type	s370_1EB8, @function
s370_1EB8:
.LFB359:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE359:
	.size	s370_1EB8, .-s370_1EB8
	.p2align 4,,15
	.globl	s370_1EB9
	.type	s370_1EB9, @function
s370_1EB9:
.LFB360:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE360:
	.size	s370_1EB9, .-s370_1EB9
	.p2align 4,,15
	.globl	s370_1EBA
	.type	s370_1EBA, @function
s370_1EBA:
.LFB361:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE361:
	.size	s370_1EBA, .-s370_1EBA
	.p2align 4,,15
	.globl	s370_1EBB
	.type	s370_1EBB, @function
s370_1EBB:
.LFB362:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE362:
	.size	s370_1EBB, .-s370_1EBB
	.p2align 4,,15
	.globl	s370_1EBC
	.type	s370_1EBC, @function
s370_1EBC:
.LFB363:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE363:
	.size	s370_1EBC, .-s370_1EBC
	.p2align 4,,15
	.globl	s370_1EBD
	.type	s370_1EBD, @function
s370_1EBD:
.LFB364:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE364:
	.size	s370_1EBD, .-s370_1EBD
	.p2align 4,,15
	.globl	s370_1EBE
	.type	s370_1EBE, @function
s370_1EBE:
.LFB365:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE365:
	.size	s370_1EBE, .-s370_1EBE
	.p2align 4,,15
	.globl	s370_1EBF
	.type	s370_1EBF, @function
s370_1EBF:
.LFB366:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE366:
	.size	s370_1EBF, .-s370_1EBF
	.p2align 4,,15
	.globl	s370_1EC0
	.type	s370_1EC0, @function
s370_1EC0:
.LFB367:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE367:
	.size	s370_1EC0, .-s370_1EC0
	.p2align 4,,15
	.globl	s370_1EC1
	.type	s370_1EC1, @function
s370_1EC1:
.LFB368:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE368:
	.size	s370_1EC1, .-s370_1EC1
	.p2align 4,,15
	.globl	s370_1EC2
	.type	s370_1EC2, @function
s370_1EC2:
.LFB369:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE369:
	.size	s370_1EC2, .-s370_1EC2
	.p2align 4,,15
	.globl	s370_1EC3
	.type	s370_1EC3, @function
s370_1EC3:
.LFB370:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE370:
	.size	s370_1EC3, .-s370_1EC3
	.p2align 4,,15
	.globl	s370_1EC4
	.type	s370_1EC4, @function
s370_1EC4:
.LFB371:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE371:
	.size	s370_1EC4, .-s370_1EC4
	.p2align 4,,15
	.globl	s370_1EC5
	.type	s370_1EC5, @function
s370_1EC5:
.LFB372:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE372:
	.size	s370_1EC5, .-s370_1EC5
	.p2align 4,,15
	.globl	s370_1EC6
	.type	s370_1EC6, @function
s370_1EC6:
.LFB373:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE373:
	.size	s370_1EC6, .-s370_1EC6
	.p2align 4,,15
	.globl	s370_1EC7
	.type	s370_1EC7, @function
s370_1EC7:
.LFB374:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE374:
	.size	s370_1EC7, .-s370_1EC7
	.p2align 4,,15
	.globl	s370_1EC8
	.type	s370_1EC8, @function
s370_1EC8:
.LFB375:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE375:
	.size	s370_1EC8, .-s370_1EC8
	.p2align 4,,15
	.globl	s370_1EC9
	.type	s370_1EC9, @function
s370_1EC9:
.LFB376:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE376:
	.size	s370_1EC9, .-s370_1EC9
	.p2align 4,,15
	.globl	s370_1ECA
	.type	s370_1ECA, @function
s370_1ECA:
.LFB377:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE377:
	.size	s370_1ECA, .-s370_1ECA
	.p2align 4,,15
	.globl	s370_1ECB
	.type	s370_1ECB, @function
s370_1ECB:
.LFB378:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE378:
	.size	s370_1ECB, .-s370_1ECB
	.p2align 4,,15
	.globl	s370_1ECC
	.type	s370_1ECC, @function
s370_1ECC:
.LFB379:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE379:
	.size	s370_1ECC, .-s370_1ECC
	.p2align 4,,15
	.globl	s370_1ECD
	.type	s370_1ECD, @function
s370_1ECD:
.LFB380:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE380:
	.size	s370_1ECD, .-s370_1ECD
	.p2align 4,,15
	.globl	s370_1ECE
	.type	s370_1ECE, @function
s370_1ECE:
.LFB381:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE381:
	.size	s370_1ECE, .-s370_1ECE
	.p2align 4,,15
	.globl	s370_1ECF
	.type	s370_1ECF, @function
s370_1ECF:
.LFB382:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE382:
	.size	s370_1ECF, .-s370_1ECF
	.p2align 4,,15
	.globl	s370_1ED0
	.type	s370_1ED0, @function
s370_1ED0:
.LFB383:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE383:
	.size	s370_1ED0, .-s370_1ED0
	.p2align 4,,15
	.globl	s370_1ED1
	.type	s370_1ED1, @function
s370_1ED1:
.LFB384:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE384:
	.size	s370_1ED1, .-s370_1ED1
	.p2align 4,,15
	.globl	s370_1ED2
	.type	s370_1ED2, @function
s370_1ED2:
.LFB385:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE385:
	.size	s370_1ED2, .-s370_1ED2
	.p2align 4,,15
	.globl	s370_1ED3
	.type	s370_1ED3, @function
s370_1ED3:
.LFB386:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE386:
	.size	s370_1ED3, .-s370_1ED3
	.p2align 4,,15
	.globl	s370_1ED4
	.type	s370_1ED4, @function
s370_1ED4:
.LFB387:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE387:
	.size	s370_1ED4, .-s370_1ED4
	.p2align 4,,15
	.globl	s370_1ED5
	.type	s370_1ED5, @function
s370_1ED5:
.LFB388:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE388:
	.size	s370_1ED5, .-s370_1ED5
	.p2align 4,,15
	.globl	s370_1ED6
	.type	s370_1ED6, @function
s370_1ED6:
.LFB389:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE389:
	.size	s370_1ED6, .-s370_1ED6
	.p2align 4,,15
	.globl	s370_1ED7
	.type	s370_1ED7, @function
s370_1ED7:
.LFB390:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE390:
	.size	s370_1ED7, .-s370_1ED7
	.p2align 4,,15
	.globl	s370_1ED8
	.type	s370_1ED8, @function
s370_1ED8:
.LFB391:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE391:
	.size	s370_1ED8, .-s370_1ED8
	.p2align 4,,15
	.globl	s370_1ED9
	.type	s370_1ED9, @function
s370_1ED9:
.LFB392:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE392:
	.size	s370_1ED9, .-s370_1ED9
	.p2align 4,,15
	.globl	s370_1EDA
	.type	s370_1EDA, @function
s370_1EDA:
.LFB393:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE393:
	.size	s370_1EDA, .-s370_1EDA
	.p2align 4,,15
	.globl	s370_1EDB
	.type	s370_1EDB, @function
s370_1EDB:
.LFB394:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE394:
	.size	s370_1EDB, .-s370_1EDB
	.p2align 4,,15
	.globl	s370_1EDC
	.type	s370_1EDC, @function
s370_1EDC:
.LFB395:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE395:
	.size	s370_1EDC, .-s370_1EDC
	.p2align 4,,15
	.globl	s370_1EDD
	.type	s370_1EDD, @function
s370_1EDD:
.LFB396:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE396:
	.size	s370_1EDD, .-s370_1EDD
	.p2align 4,,15
	.globl	s370_1EDE
	.type	s370_1EDE, @function
s370_1EDE:
.LFB397:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE397:
	.size	s370_1EDE, .-s370_1EDE
	.p2align 4,,15
	.globl	s370_1EDF
	.type	s370_1EDF, @function
s370_1EDF:
.LFB398:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE398:
	.size	s370_1EDF, .-s370_1EDF
	.p2align 4,,15
	.globl	s370_1EE0
	.type	s370_1EE0, @function
s370_1EE0:
.LFB399:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE399:
	.size	s370_1EE0, .-s370_1EE0
	.p2align 4,,15
	.globl	s370_1EE1
	.type	s370_1EE1, @function
s370_1EE1:
.LFB400:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE400:
	.size	s370_1EE1, .-s370_1EE1
	.p2align 4,,15
	.globl	s370_1EE2
	.type	s370_1EE2, @function
s370_1EE2:
.LFB401:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE401:
	.size	s370_1EE2, .-s370_1EE2
	.p2align 4,,15
	.globl	s370_1EE3
	.type	s370_1EE3, @function
s370_1EE3:
.LFB402:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE402:
	.size	s370_1EE3, .-s370_1EE3
	.p2align 4,,15
	.globl	s370_1EE4
	.type	s370_1EE4, @function
s370_1EE4:
.LFB403:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE403:
	.size	s370_1EE4, .-s370_1EE4
	.p2align 4,,15
	.globl	s370_1EE5
	.type	s370_1EE5, @function
s370_1EE5:
.LFB404:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE404:
	.size	s370_1EE5, .-s370_1EE5
	.p2align 4,,15
	.globl	s370_1EE6
	.type	s370_1EE6, @function
s370_1EE6:
.LFB405:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE405:
	.size	s370_1EE6, .-s370_1EE6
	.p2align 4,,15
	.globl	s370_1EE7
	.type	s370_1EE7, @function
s370_1EE7:
.LFB406:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE406:
	.size	s370_1EE7, .-s370_1EE7
	.p2align 4,,15
	.globl	s370_1EE8
	.type	s370_1EE8, @function
s370_1EE8:
.LFB407:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE407:
	.size	s370_1EE8, .-s370_1EE8
	.p2align 4,,15
	.globl	s370_1EE9
	.type	s370_1EE9, @function
s370_1EE9:
.LFB408:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE408:
	.size	s370_1EE9, .-s370_1EE9
	.p2align 4,,15
	.globl	s370_1EEA
	.type	s370_1EEA, @function
s370_1EEA:
.LFB409:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE409:
	.size	s370_1EEA, .-s370_1EEA
	.p2align 4,,15
	.globl	s370_1EEB
	.type	s370_1EEB, @function
s370_1EEB:
.LFB410:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE410:
	.size	s370_1EEB, .-s370_1EEB
	.p2align 4,,15
	.globl	s370_1EEC
	.type	s370_1EEC, @function
s370_1EEC:
.LFB411:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE411:
	.size	s370_1EEC, .-s370_1EEC
	.p2align 4,,15
	.globl	s370_1EED
	.type	s370_1EED, @function
s370_1EED:
.LFB412:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE412:
	.size	s370_1EED, .-s370_1EED
	.p2align 4,,15
	.globl	s370_1EEE
	.type	s370_1EEE, @function
s370_1EEE:
.LFB413:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE413:
	.size	s370_1EEE, .-s370_1EEE
	.p2align 4,,15
	.globl	s370_1EEF
	.type	s370_1EEF, @function
s370_1EEF:
.LFB414:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE414:
	.size	s370_1EEF, .-s370_1EEF
	.p2align 4,,15
	.globl	s370_1EF0
	.type	s370_1EF0, @function
s370_1EF0:
.LFB415:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE415:
	.size	s370_1EF0, .-s370_1EF0
	.p2align 4,,15
	.globl	s370_1EF1
	.type	s370_1EF1, @function
s370_1EF1:
.LFB416:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE416:
	.size	s370_1EF1, .-s370_1EF1
	.p2align 4,,15
	.globl	s370_1EF2
	.type	s370_1EF2, @function
s370_1EF2:
.LFB417:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE417:
	.size	s370_1EF2, .-s370_1EF2
	.p2align 4,,15
	.globl	s370_1EF3
	.type	s370_1EF3, @function
s370_1EF3:
.LFB418:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE418:
	.size	s370_1EF3, .-s370_1EF3
	.p2align 4,,15
	.globl	s370_1EF4
	.type	s370_1EF4, @function
s370_1EF4:
.LFB419:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE419:
	.size	s370_1EF4, .-s370_1EF4
	.p2align 4,,15
	.globl	s370_1EF5
	.type	s370_1EF5, @function
s370_1EF5:
.LFB420:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE420:
	.size	s370_1EF5, .-s370_1EF5
	.p2align 4,,15
	.globl	s370_1EF6
	.type	s370_1EF6, @function
s370_1EF6:
.LFB421:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE421:
	.size	s370_1EF6, .-s370_1EF6
	.p2align 4,,15
	.globl	s370_1EF7
	.type	s370_1EF7, @function
s370_1EF7:
.LFB422:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE422:
	.size	s370_1EF7, .-s370_1EF7
	.p2align 4,,15
	.globl	s370_1EF8
	.type	s370_1EF8, @function
s370_1EF8:
.LFB423:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE423:
	.size	s370_1EF8, .-s370_1EF8
	.p2align 4,,15
	.globl	s370_1EF9
	.type	s370_1EF9, @function
s370_1EF9:
.LFB424:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE424:
	.size	s370_1EF9, .-s370_1EF9
	.p2align 4,,15
	.globl	s370_1EFA
	.type	s370_1EFA, @function
s370_1EFA:
.LFB425:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE425:
	.size	s370_1EFA, .-s370_1EFA
	.p2align 4,,15
	.globl	s370_1EFB
	.type	s370_1EFB, @function
s370_1EFB:
.LFB426:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE426:
	.size	s370_1EFB, .-s370_1EFB
	.p2align 4,,15
	.globl	s370_1EFC
	.type	s370_1EFC, @function
s370_1EFC:
.LFB427:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE427:
	.size	s370_1EFC, .-s370_1EFC
	.p2align 4,,15
	.globl	s370_1EFD
	.type	s370_1EFD, @function
s370_1EFD:
.LFB428:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE428:
	.size	s370_1EFD, .-s370_1EFD
	.p2align 4,,15
	.globl	s370_1EFE
	.type	s370_1EFE, @function
s370_1EFE:
.LFB429:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE429:
	.size	s370_1EFE, .-s370_1EFE
	.p2align 4,,15
	.globl	s370_1EFF
	.type	s370_1EFF, @function
s370_1EFF:
.LFB430:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE430:
	.size	s370_1EFF, .-s370_1EFF
	.p2align 4,,15
	.globl	s370_and_register
	.type	s370_and_register, @function
s370_and_register:
.LFB431:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	addq	$2, 136(%rsi)
	movq	%rcx, %rax
	andl	$15, %ecx
	shrq	%rax
	andl	$120, %eax
	leaq	(%rsi,%rax), %rdx
	movl	192(%rsi,%rcx,8), %eax
	andl	%eax, 192(%rdx)
	setne	100(%rsi)
	ret
	.cfi_endproc
.LFE431:
	.size	s370_and_register, .-s370_and_register
	.p2align 4,,15
	.globl	s370_and_immediate
	.type	s370_and_immediate, @function
s370_and_immediate:
.LFB432:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %eax
	movl	%ebp, %r12d
	shrl	$12, %eax
	shrl	$16, %r12d
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %esi
	je	.L3076
	cltq
	addl	192(%rbx,%rax,8), %ebp
	andl	$16777215, %ebp
.L3076:
	leal	5(%rsi), %eax
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	cltq
	movl	1892(%rbx,%rax,4), %edx
	testl	%edx, %edx
	je	.L3077
	leal	1(%rdx), %eax
	movl	%ebp, %ecx
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L3098
.L3078:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L3099
.L3079:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L3077
	testb	$2, 46264(%rbx,%rcx)
	je	.L3077
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L3080:
	andb	%r12b, (%rax)
	setne	100(%rbx)
	subl	$77, %ebp
	cmpl	$6, %ebp
	jbe	.L3100
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L3098:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L3078
.L3077:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L3080
.L3099:
	cmpb	43192(%rbx,%rcx), %al
	je	.L3079
	.p2align 4,,4
	jmp	.L3077
.L3100:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE432:
	.size	s370_and_immediate, .-s370_and_immediate
	.p2align 4,,15
	.globl	s370_and_character
	.type	s370_and_character, @function
s370_and_character:
.LFB433:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rsi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r14d
	movl	%eax, %esi
	shrl	$16, %r14d
	shrl	$28, %esi
	andl	$4095, %r14d
	testl	%esi, %esi
	movl	%esi, 8(%rsp)
	je	.L3102
	movslq	%esi, %rdx
	addl	192(%rbp,%rdx,8), %r14d
	andl	$16777215, %r14d
.L3102:
	movl	%eax, %r15d
	shrl	$12, %eax
	andl	$4095, %r15d
	andl	$15, %eax
	movl	%eax, 56(%rsp)
	je	.L3103
	cltq
	addl	192(%rbp,%rax,8), %r15d
	andl	$16777215, %r15d
.L3103:
	movzbl	1(%rdi), %r13d
	movb	$6, 130(%rbp)
	addq	$6, 136(%rbp)
	cmpl	$83, %r15d
	jbe	.L3253
.L3105:
	xorl	%eax, %eax
	cmpl	$83, %r14d
	setbe	%al
	movq	%rax, 16(%rsp)
	jbe	.L3254
.L3107:
	testl	%r13d, %r13d
	je	.L3255
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	0(%rbp,%rax,4), %rax
	movq	%rax, 32(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L3119
	leal	1(%rax), %edx
	movl	%r14d, %esi
	shrl	$11, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	0(%rbp,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbp,%rdx,8)
	jne	.L3256
.L3120:
	movzbl	97(%rbp), %ecx
	testb	%cl, %cl
	jne	.L3257
.L3121:
	movl	%r14d, %edx
	andl	$14680064, %edx
	orl	2224(%rbp), %edx
	cmpl	10424(%rax), %edx
	jne	.L3183
	testb	$1, 46264(%rbp,%rsi)
	je	.L3183
	movq	35000(%rax), %r11
	movl	%r14d, %ebx
	movzbl	%cl, %r8d
	movq	%r11, 984(%rbp)
	xorq	26808(%rax), %rbx
.L3123:
	movl	56(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	0(%rbp,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L3124
	leal	1(%rax), %edx
	movl	%r15d, %esi
	shrl	$11, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	0(%rbp,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbp,%rdx,8)
	jne	.L3258
.L3125:
	testb	%r8b, %r8b
	jne	.L3259
.L3126:
	movl	%r15d, %edx
	andl	$14680064, %edx
	orl	2224(%rbp), %edx
	cmpl	10424(%rax), %edx
	jne	.L3124
	testb	$4, 46264(%rbp,%rsi)
	je	.L3124
	movl	%r15d, %r12d
	xorq	26808(%rax), %r12
.L3127:
	movl	$2047, %r10d
	movl	%r14d, %eax
	subl	%r13d, %r10d
	andl	$2047, %eax
	cmpl	%r10d, %eax
	jg	.L3128
	movl	%r15d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L3129
	xorl	%eax, %eax
	xorl	%r15d, %r15d
	movl	$1, %ecx
	.p2align 4,,10
	.p2align 3
.L3131:
	movzbl	(%r12,%rax), %edx
	andb	%dl, (%rbx,%rax)
	cmovne	%ecx, %r15d
	addq	$1, %rax
	cmpl	%eax, %r13d
	jge	.L3131
.L3130:
	orb	$6, (%r11)
.L3140:
	cmpq	$0, 16(%rsp)
	jne	.L3260
.L3174:
	movb	%r15b, 100(%rbp)
.L3101:
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L3258:
	.cfi_restore_state
	movzbl	44216(%rbp,%rsi), %edi
	testb	%dil, 1976(%rbp,%rdx)
	jne	.L3125
.L3124:
	movl	56(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r15d, %edi
	movq	%r11, 40(%rsp)
	call	s370_logical_to_main_l
	movq	40(%rsp), %r11
	movq	%rax, %r12
	jmp	.L3127
.L3257:
	cmpb	43192(%rbp,%rsi), %cl
	je	.L3121
.L3183:
	movzbl	%cl, %r8d
.L3122:
	movl	8(%rsp), %esi
	leal	1(%r13), %r9d
	movl	$1, %ecx
	andl	$511, %r9d
	movq	%rbp, %rdx
	movl	%r14d, %edi
	call	s370_logical_to_main_l
	movq	984(%rbp), %r11
	movq	%rax, %rbx
	movzbl	97(%rbp), %r8d
	jmp	.L3123
.L3256:
	movzbl	44216(%rbp,%rsi), %ecx
	testb	%cl, 1976(%rbp,%rdx)
	jne	.L3120
.L3119:
	movzbl	97(%rbp), %r8d
	jmp	.L3122
.L3255:
	movl	56(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbp,%rax,4), %eax
	testl	%eax, %eax
	je	.L3109
	leal	1(%rax), %edx
	movl	%r15d, %eax
	shrl	$11, %eax
	movslq	%edx, %rdx
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbp,%rdx,8)
	jne	.L3261
.L3110:
	movzbl	97(%rbp), %edx
	testb	%dl, %dl
	jne	.L3262
.L3111:
	movl	%r15d, %esi
	andl	$14680064, %esi
	orl	2224(%rbp), %esi
	cmpl	10424(%rcx), %esi
	jne	.L3180
	testb	$4, 46264(%rbp,%rax)
	je	.L3180
	xorq	26808(%rcx), %r15
	movzbl	%dl, %r8d
.L3113:
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbp,%rax,4), %eax
	testl	%eax, %eax
	je	.L3114
	leal	1(%rax), %esi
	movl	%r14d, %eax
	shrl	$11, %eax
	movslq	%esi, %rsi
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbp,%rsi,8)
	jne	.L3263
.L3115:
	testb	%r8b, %r8b
	jne	.L3264
.L3116:
	movl	%r14d, %esi
	andl	$14680064, %esi
	orl	2224(%rbp), %esi
	cmpl	10424(%rcx), %esi
	jne	.L3114
	testb	$2, 46264(%rbp,%rax)
	je	.L3114
	movl	%r14d, %edx
	xorq	26808(%rcx), %rdx
.L3117:
	movzbl	(%rdx), %eax
	andb	(%r15), %al
	testb	%al, %al
	movb	%al, (%rdx)
	setne	100(%rbp)
	subl	$80, %r14d
	cmpl	$3, %r14d
	ja	.L3101
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	movq	%rbp, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
.L3254:
	.cfi_restore_state
	leal	(%r14,%r13), %eax
	cmpl	$79, %eax
	jbe	.L3107
	movq	%rbp, %rdi
	call	s370_store_int_timer
	jmp	.L3107
.L3264:
	cmpb	%r8b, 43192(%rbp,%rax)
	je	.L3116
.L3114:
	movl	8(%rsp), %esi
	movq	%rbp, %rdx
	movl	$1, %r9d
	movl	$2, %ecx
	movl	%r14d, %edi
	call	s370_logical_to_main_l
	movq	%rax, %rdx
	jmp	.L3117
.L3263:
	movzbl	44216(%rbp,%rax), %edi
	testb	%dil, 1976(%rbp,%rsi)
	jne	.L3115
	jmp	.L3114
.L3262:
	cmpb	43192(%rbp,%rax), %dl
	je	.L3111
.L3180:
	movzbl	%dl, %r8d
.L3112:
	movl	56(%rsp), %esi
	movl	%r15d, %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	call	s370_logical_to_main_l
	movzbl	97(%rbp), %r8d
	movq	%rax, %r15
	jmp	.L3113
.L3261:
	movzbl	44216(%rbp,%rax), %esi
	testb	%sil, 1976(%rbp,%rdx)
	jne	.L3110
.L3109:
	movzbl	97(%rbp), %r8d
	jmp	.L3112
.L3253:
	leal	(%r15,%r13), %eax
	cmpl	$79, %eax
	jbe	.L3105
	movq	%rbp, %rdi
	call	s370_store_int_timer
	jmp	.L3105
.L3260:
	addl	%r14d, %r13d
	cmpl	$79, %r13d
	jbe	.L3174
	movq	%rbp, %rdi
	call	s370_fetch_int_timer
	jmp	.L3174
.L3129:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L3132
	leal	(%r10,%r15), %ecx
	leal	1(%rax), %esi
	movl	%ecx, %edi
	andl	$16777215, %edi
	movslq	%esi, %rsi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbp,%rsi,8)
	jne	.L3265
.L3133:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L3266
.L3135:
	andl	$14680064, %ecx
	orl	2224(%rbp), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L3134
	testb	$4, 46264(%rbp,%rax)
	je	.L3134
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L3136:
	movq	%r12, %rdx
	xorl	%r15d, %r15d
	movl	$1, %esi
.L3138:
	addq	$1, %rdx
	movzbl	-1(%rdx), %ecx
	addq	$1, %rbx
	andb	%cl, -1(%rbx)
	movl	%edx, %ecx
	cmovne	%esi, %r15d
	subl	%r12d, %ecx
	cmpl	%ecx, %r10d
	jg	.L3138
	movl	%r13d, %edi
	subl	%r10d, %edi
	js	.L3130
	xorl	%edx, %edx
	movl	$1, %esi
.L3139:
	movzbl	(%rax,%rdx), %ecx
	andb	%cl, (%rbx,%rdx)
	cmovne	%esi, %r15d
	addq	$1, %rdx
	cmpl	%edx, %edi
	jge	.L3139
	jmp	.L3130
.L3128:
	movl	$2048, 40(%rsp)
	subl	%eax, 40(%rsp)
	movq	32(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L3141
	leal	1(%rax), %esi
	movl	40(%rsp), %eax
	movslq	%esi, %rsi
	leal	(%rax,%r14), %ecx
	movl	%ecx, %edi
	andl	$16777215, %edi
	movl	%edi, %edx
	shrl	$11, %edx
	andl	$1023, %edx
	leaq	0(%rbp,%rdx,8), %rax
	movl	2232(%rax), %r9d
	cmpl	%r9d, 320(%rbp,%rsi,8)
	jne	.L3267
.L3142:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L3268
.L3144:
	andl	$14680064, %ecx
	orl	2224(%rbp), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L3143
	testb	$1, 46264(%rbp,%rdx)
	je	.L3143
	movq	35000(%rax), %rcx
	movq	%rdi, 8(%rsp)
	movq	%rcx, 984(%rbp)
	movq	26808(%rax), %rax
	movq	%rcx, 32(%rsp)
	xorq	%rax, 8(%rsp)
.L3145:
	movl	%r15d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L3146
	movq	%rbx, %rax
	xorl	%r15d, %r15d
	movl	$1, %ecx
.L3148:
	addq	$1, %r12
	movzbl	-1(%r12), %edx
	addq	$1, %rax
	andb	%dl, -1(%rax)
	movl	%eax, %edx
	cmovne	%ecx, %r15d
	subl	%ebx, %edx
	cmpl	%edx, 40(%rsp)
	jg	.L3148
	movl	%r13d, %esi
	subl	40(%rsp), %esi
	js	.L3149
	movq	8(%rsp), %rdi
	xorl	%eax, %eax
	movl	$1, %ecx
.L3150:
	movzbl	(%r12,%rax), %edx
	andb	%dl, (%rdi,%rax)
	cmovne	%ecx, %r15d
	addq	$1, %rax
	cmpl	%eax, %esi
	jge	.L3150
.L3149:
	orb	$6, (%r11)
	movq	32(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L3140
.L3146:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L3151
	leal	(%r10,%r15), %ecx
	leal	1(%rax), %esi
	movl	%ecx, %edi
	andl	$16777215, %edi
	movslq	%esi, %rsi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbp,%rsi,8)
	jne	.L3269
.L3152:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L3270
.L3154:
	andl	$14680064, %ecx
	orl	2224(%rbp), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L3153
	testb	$4, 46264(%rbp,%rax)
	je	.L3153
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L3155:
	cmpl	%r10d, 40(%rsp)
	je	.L3271
	movq	%rbx, %rdx
	movl	$0, %r15d
	movl	$1, %esi
	jge	.L3168
.L3162:
	addq	$1, %r12
	movzbl	-1(%r12), %ecx
	addq	$1, %rdx
	andb	%cl, -1(%rdx)
	movl	%edx, %ecx
	cmovne	%esi, %r15d
	subl	%ebx, %ecx
	cmpl	%ecx, 40(%rsp)
	jg	.L3162
	movl	%r10d, %esi
	subl	40(%rsp), %esi
	testl	%esi, %esi
	jle	.L3163
	movq	8(%rsp), %r8
	xorl	%edx, %edx
	movl	$1, %edi
.L3165:
	movzbl	(%r12,%rdx), %ecx
	andb	%cl, (%r8,%rdx)
	cmovne	%edi, %r15d
	addq	$1, %rdx
	cmpl	%edx, %esi
	jg	.L3165
	movq	8(%rsp), %rdi
	subl	$1, %esi
	leaq	1(%rdi,%rsi), %rdi
	movq	%rdi, 8(%rsp)
.L3163:
	movl	%r13d, %edi
	subl	%r10d, %edi
	js	.L3149
	movq	8(%rsp), %r8
	xorl	%edx, %edx
	movl	$1, %esi
.L3166:
	movzbl	(%rax,%rdx), %ecx
	andb	%cl, (%r8,%rdx)
	cmovne	%esi, %r15d
	addq	$1, %rdx
	cmpl	%edx, %edi
	jge	.L3166
	jmp	.L3149
.L3168:
	addq	$1, %r12
	movzbl	-1(%r12), %ecx
	addq	$1, %rdx
	andb	%cl, -1(%rdx)
	movl	%edx, %ecx
	cmovne	%esi, %r15d
	subl	%ebx, %ecx
	cmpl	%ecx, %r10d
	jg	.L3168
	movl	40(%rsp), %edi
	subl	%r10d, %edi
	testl	%edi, %edi
	jle	.L3169
	xorl	%ecx, %ecx
	movl	$1, %r8d
.L3171:
	movzbl	(%rax,%rcx), %esi
	andb	%sil, (%rdx,%rcx)
	cmovne	%r8d, %r15d
	addq	$1, %rcx
	cmpl	%ecx, %edi
	jg	.L3171
	subl	$1, %edi
	leaq	1(%rax,%rdi), %rax
.L3169:
	movl	%r13d, %edi
	subl	40(%rsp), %edi
	js	.L3149
	movq	8(%rsp), %r8
	xorl	%edx, %edx
	movl	$1, %esi
.L3172:
	movzbl	(%rax,%rdx), %ecx
	andb	%cl, (%r8,%rdx)
	cmovne	%esi, %r15d
	addq	$1, %rdx
	cmpl	%edx, %edi
	jge	.L3172
	jmp	.L3149
.L3271:
	xorl	%edx, %edx
	xorl	%r15d, %r15d
	movl	$1, %esi
.L3158:
	movzbl	(%r12,%rdx), %ecx
	andb	%cl, (%rbx,%rdx)
	cmovne	%esi, %r15d
	addq	$1, %rdx
	cmpl	%edx, 40(%rsp)
	jg	.L3158
	movl	%r13d, %edi
	subl	40(%rsp), %edi
	js	.L3149
	movq	8(%rsp), %r8
	xorl	%edx, %edx
	movl	$1, %esi
.L3159:
	movzbl	(%rax,%rdx), %ecx
	andb	%cl, (%r8,%rdx)
	cmovne	%esi, %r15d
	addq	$1, %rdx
	cmpl	%edx, %edi
	jge	.L3159
	jmp	.L3149
.L3267:
	movzbl	44216(%rbp,%rdx), %r8d
	testb	%r8b, 1976(%rbp,%rsi)
	jne	.L3142
	movzbl	97(%rbp), %r8d
.L3143:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 60(%rsp)
	movq	%r11, 48(%rsp)
	call	s370_logical_to_main_l
	movl	60(%rsp), %r10d
	movq	%rax, 8(%rsp)
	movq	984(%rbp), %rax
	movq	48(%rsp), %r11
	movq	%rax, 32(%rsp)
	jmp	.L3145
.L3269:
	movzbl	44216(%rbp,%rax), %r8d
	testb	%r8b, 1976(%rbp,%rsi)
	jne	.L3152
.L3252:
	movzbl	97(%rbp), %r8d
.L3153:
	movl	56(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 48(%rsp)
	movq	%r11, 24(%rsp)
	call	s370_logical_to_main_l
	movl	48(%rsp), %r10d
	movq	24(%rsp), %r11
	jmp	.L3155
.L3151:
	leal	(%r10,%r15), %edi
	andl	$16777215, %edi
	jmp	.L3252
.L3270:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L3154
	jmp	.L3153
.L3265:
	movzbl	44216(%rbp,%rax), %r8d
	testb	%r8b, 1976(%rbp,%rsi)
	jne	.L3133
.L3251:
	movzbl	97(%rbp), %r8d
.L3134:
	movl	56(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 24(%rsp)
	movq	%r11, 8(%rsp)
	call	s370_logical_to_main_l
	movl	24(%rsp), %r10d
	movq	8(%rsp), %r11
	jmp	.L3136
.L3259:
	cmpb	43192(%rbp,%rsi), %r8b
	je	.L3126
	jmp	.L3124
.L3132:
	leal	(%r10,%r15), %edi
	andl	$16777215, %edi
	jmp	.L3251
.L3266:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L3135
	jmp	.L3134
.L3141:
	movl	40(%rsp), %eax
	movzbl	97(%rbp), %r8d
	leal	(%rax,%r14), %edi
	andl	$16777215, %edi
	jmp	.L3143
.L3268:
	cmpb	43192(%rbp,%rdx), %r8b
	je	.L3144
	jmp	.L3143
	.cfi_endproc
.LFE433:
	.size	s370_and_character, .-s370_and_character
	.p2align 4,,15
	.globl	s370_branch_and_link_register
	.type	s370_branch_and_link_register, @function
s370_branch_and_link_register:
.LFB434:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	movzbl	%cl, %edx
	andl	$15, %ecx
	sarl	$4, %edx
	testb	$2, 103(%rsi)
	movslq	%ecx, %rax
	movl	192(%rsi,%rax,8), %r9d
	je	.L3273
	movl	168(%rsi), %r10d
	movslq	%edx, %rdx
	movq	136(%rsi), %r8
	leal	2(%r10,%r8), %eax
	subl	144(%rsi), %eax
	orl	$-2147483648, %eax
	testl	%ecx, %ecx
	movl	%eax, 192(%rsi,%rdx,8)
	je	.L3276
.L3284:
	movzbl	808(%rsi), %edx
	movl	%r9d, %eax
	andl	$16777215, %eax
	testb	$5, %dl
	jne	.L3277
	andl	$16775169, %r9d
	cmpl	%r10d, %r9d
	jne	.L3277
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3273:
	movzbl	808(%rsi), %eax
	testb	$1, %al
	jne	.L3283
	movl	$1073741824, %r11d
.L3275:
	movzbl	101(%rsi), %eax
	movslq	%edx, %rdx
	movzbl	100(%rsi), %edi
	movl	168(%rsi), %r10d
	movq	136(%rsi), %r8
	sall	$24, %eax
	sall	$28, %edi
	orl	%edi, %eax
	leal	2(%r10,%r8), %edi
	orl	%r11d, %eax
	subl	144(%rsi), %edi
	andl	$16777215, %edi
	orl	%edi, %eax
	testl	%ecx, %ecx
	movl	%eax, 192(%rsi,%rdx,8)
	jne	.L3284
.L3276:
	addq	$2, %r8
	movq	%r8, 136(%rsi)
	ret
.L3277:
	andb	$4, %dl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3285
.L3272:
	rep ret
.L3283:
	andl	$2, %eax
	cmpb	$1, %al
	sbbl	%r11d, %r11d
	andl	$-1073741824, %r11d
	subl	$1073741824, %r11d
	jmp	.L3275
.L3285:
	testb	$-128, 54(%rsi)
	je	.L3272
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE434:
	.size	s370_branch_and_link_register, .-s370_branch_and_link_register
	.p2align 4,,15
	.globl	s370_branch_and_link
	.type	s370_branch_and_link, @function
s370_branch_and_link:
.LFB435:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edi
	shrl	$20, %ecx
	shrl	$16, %edi
	movl	%eax, %edx
	andl	$15, %ecx
	andl	$4095, %edx
	andl	$15, %edi
	jne	.L3301
.L3287:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L3288
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3288:
	testb	$2, 103(%rsi)
	je	.L3289
	movl	168(%rsi), %edi
	movq	136(%rsi), %rax
	leal	4(%rdi,%rax), %eax
	subl	144(%rsi), %eax
	orl	$-2147483648, %eax
.L3290:
	movslq	%ecx, %rcx
	movl	%eax, 192(%rsi,%rcx,8)
	movl	%edx, %eax
	movzbl	808(%rsi), %ecx
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3291
	andl	$16775169, %edx
	cmpl	%edi, %edx
	jne	.L3291
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3289:
	movl	168(%rsi), %r9d
	movq	136(%rsi), %rax
	movzbl	100(%rsi), %edi
	movzbl	101(%rsi), %r8d
	leal	4(%r9,%rax), %eax
	subl	144(%rsi), %eax
	sall	$28, %edi
	sall	$24, %r8d
	orl	%r8d, %edi
	orl	$-2147483648, %edi
	andl	$16777215, %eax
	orl	%edi, %eax
	movl	%r9d, %edi
	jmp	.L3290
.L3291:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3302
.L3286:
	rep ret
.L3301:
	movslq	%edi, %rdi
	addl	192(%rsi,%rdi,8), %edx
	jmp	.L3287
.L3302:
	testb	$-128, 54(%rsi)
	je	.L3286
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE435:
	.size	s370_branch_and_link, .-s370_branch_and_link
	.p2align 4,,15
	.globl	s370_branch_and_save_register
	.type	s370_branch_and_save_register, @function
s370_branch_and_save_register:
.LFB436:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	movl	168(%rsi), %r9d
	movq	136(%rsi), %rdi
	movzbl	%cl, %edx
	andl	$15, %ecx
	sarl	$4, %edx
	testb	$2, 103(%rsi)
	movslq	%ecx, %rax
	movl	192(%rsi,%rax,8), %r8d
	leal	2(%r9,%rdi), %eax
	je	.L3304
	subl	144(%rsi), %eax
	movslq	%edx, %rdx
	orl	$-2147483648, %eax
	testl	%ecx, %ecx
	movl	%eax, 192(%rsi,%rdx,8)
	je	.L3306
.L3311:
	movzbl	808(%rsi), %edx
	movl	%r8d, %eax
	andl	$16777215, %eax
	testb	$5, %dl
	jne	.L3307
	andl	$16775169, %r8d
	cmpl	%r8d, %r9d
	jne	.L3307
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3304:
	subl	144(%rsi), %eax
	movslq	%edx, %rdx
	andl	$16777215, %eax
	testl	%ecx, %ecx
	movl	%eax, 192(%rsi,%rdx,8)
	jne	.L3311
.L3306:
	addq	$2, %rdi
	movq	%rdi, 136(%rsi)
	ret
.L3307:
	andb	$4, %dl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3312
.L3303:
	rep ret
.L3312:
	testb	$-128, 54(%rsi)
	je	.L3303
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE436:
	.size	s370_branch_and_save_register, .-s370_branch_and_save_register
	.p2align 4,,15
	.globl	s370_branch_and_save
	.type	s370_branch_and_save, @function
s370_branch_and_save:
.LFB437:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edi
	shrl	$20, %ecx
	shrl	$16, %edi
	movl	%eax, %edx
	andl	$15, %ecx
	andl	$4095, %edx
	andl	$15, %edi
	jne	.L3328
.L3314:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L3315
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3315:
	movl	168(%rsi), %edi
	movq	136(%rsi), %rax
	testb	$2, 103(%rsi)
	leal	4(%rdi,%rax), %eax
	je	.L3316
	subl	144(%rsi), %eax
	orl	$-2147483648, %eax
.L3317:
	movslq	%ecx, %rcx
	movl	%eax, 192(%rsi,%rcx,8)
	movl	%edx, %eax
	movzbl	808(%rsi), %ecx
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3318
	andl	$16775169, %edx
	cmpl	%edi, %edx
	jne	.L3318
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3316:
	subl	144(%rsi), %eax
	andl	$16777215, %eax
	jmp	.L3317
.L3318:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3329
.L3313:
	rep ret
.L3328:
	movslq	%edi, %rdi
	addl	192(%rsi,%rdi,8), %edx
	jmp	.L3314
.L3329:
	testb	$-128, 54(%rsi)
	je	.L3313
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE437:
	.size	s370_branch_and_save, .-s370_branch_and_save
	.p2align 4,,15
	.globl	s370_branch_on_condition_register
	.type	s370_branch_on_condition_register, @function
s370_branch_on_condition_register:
.LFB438:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	movl	%eax, %edi
	andl	$15, %edi
	je	.L3331
	movzbl	100(%rsi), %ecx
	movl	$128, %edx
	sarl	%cl, %edx
	testl	%edx, %eax
	je	.L3331
	andl	$15, %edi
	movzbl	808(%rsi), %ecx
	movl	192(%rsi,%rdi,8), %edx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3332
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3332
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3331:
	addq	$2, 136(%rsi)
	ret
.L3332:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3342
.L3330:
	rep ret
.L3342:
	testb	$-128, 54(%rsi)
	je	.L3330
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE438:
	.size	s370_branch_on_condition_register, .-s370_branch_on_condition_register
	.p2align 4,,15
	.globl	s370_store_character
	.type	s370_store_character, @function
s370_store_character:
.LFB439:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %esi
	shrl	$20, %ecx
	shrl	$16, %esi
	movl	%eax, %edx
	andl	$15, %ecx
	andl	$4095, %edx
	andl	$15, %esi
	jne	.L3370
.L3344:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L3345
	movslq	%eax, %rsi
	addl	192(%rbx,%rsi,8), %edx
.L3345:
	addq	$4, 136(%rbx)
	movslq	%ecx, %rcx
	movl	%edx, %ebp
	movb	$4, 130(%rbx)
	andl	$16777215, %ebp
	movzbl	192(%rbx,%rcx,8), %r12d
	leal	5(%rax), %ecx
	movslq	%ecx, %rcx
	movl	1892(%rbx,%rcx,4), %ecx
	testl	%ecx, %ecx
	je	.L3346
	leal	1(%rcx), %edi
	movl	%ebp, %esi
	shrl	$11, %esi
	movslq	%edi, %rdi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L3371
.L3347:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L3372
.L3348:
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L3346
	testb	$2, 46264(%rbx,%rsi)
	je	.L3346
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L3349:
	subl	$80, %ebp
	movb	%r12b, (%rax)
	cmpl	$3, %ebp
	jbe	.L3373
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L3371:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L3347
.L3346:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L3349
.L3370:
	movslq	%esi, %rsi
	addl	192(%rbx,%rsi,8), %edx
	jmp	.L3344
.L3372:
	cmpb	43192(%rbx,%rsi), %dil
	je	.L3348
	jmp	.L3346
.L3373:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE439:
	.size	s370_store_character, .-s370_store_character
	.p2align 4,,15
	.globl	s370_branch_on_condition
	.type	s370_branch_on_condition, @function
s370_branch_on_condition:
.LFB440:
	.cfi_startproc
	movzbl	100(%rsi), %ecx
	movl	$128, %eax
	movzbl	1(%rdi), %edx
	sarl	%cl, %eax
	testl	%eax, %edx
	je	.L3375
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %ecx
	movl	%edx, %eax
	shrl	$16, %ecx
	andl	$4095, %eax
	shrl	$12, %edx
	andl	$15, %ecx
	addl	192(%rsi,%rcx,8), %eax
	andl	$15, %edx
	je	.L3376
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %eax
.L3376:
	movzbl	808(%rsi), %edx
	movl	%eax, %ecx
	andl	$16777215, %ecx
	testb	$5, %dl
	jne	.L3377
	andl	$16775169, %eax
	cmpl	168(%rsi), %eax
	jne	.L3377
	movl	%ecx, %eax
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3375:
	addq	$4, 136(%rsi)
	ret
.L3377:
	andb	$4, %dl
	movl	%ecx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3384
.L3374:
	rep ret
.L3384:
	testb	$-128, 54(%rsi)
	je	.L3374
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE440:
	.size	s370_branch_on_condition, .-s370_branch_on_condition
	.p2align 4,,15
	.globl	s370_47_0
	.type	s370_47_0, @function
s370_47_0:
.LFB441:
	.cfi_startproc
	movzbl	100(%rsi), %ecx
	movl	$128, %eax
	movzbl	1(%rdi), %edx
	sarl	%cl, %eax
	testl	%eax, %edx
	je	.L3386
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3387
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3387:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3388
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3388
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3386:
	addq	$4, 136(%rsi)
	ret
.L3388:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3395
.L3385:
	rep ret
.L3395:
	testb	$-128, 54(%rsi)
	je	.L3385
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE441:
	.size	s370_47_0, .-s370_47_0
	.p2align 4,,15
	.globl	s370_nop4
	.type	s370_nop4, @function
s370_nop4:
.LFB442:
	.cfi_startproc
	addq	$4, 136(%rsi)
	ret
	.cfi_endproc
.LFE442:
	.size	s370_nop4, .-s370_nop4
	.p2align 4,,15
	.globl	s370_4710
	.type	s370_4710, @function
s370_4710:
.LFB443:
	.cfi_startproc
	cmpb	$3, 100(%rsi)
	je	.L3407
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3407:
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3399
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3399:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3400
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3400
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
.L3400:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3408
.L3397:
	rep ret
.L3408:
	testb	$-128, 54(%rsi)
	je	.L3397
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE443:
	.size	s370_4710, .-s370_4710
	.p2align 4,,15
	.globl	s370_4720
	.type	s370_4720, @function
s370_4720:
.LFB444:
	.cfi_startproc
	cmpb	$2, 100(%rsi)
	je	.L3419
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3419:
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3411
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3411:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3412
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3412
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
.L3412:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3420
.L3409:
	rep ret
.L3420:
	testb	$-128, 54(%rsi)
	je	.L3409
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE444:
	.size	s370_4720, .-s370_4720
	.p2align 4,,15
	.globl	s370_4730
	.type	s370_4730, @function
s370_4730:
.LFB445:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	jbe	.L3422
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3423
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3423:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3424
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3424
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3422:
	addq	$4, 136(%rsi)
	ret
.L3424:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3431
.L3421:
	rep ret
.L3431:
	testb	$-128, 54(%rsi)
	je	.L3421
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE445:
	.size	s370_4730, .-s370_4730
	.p2align 4,,15
	.globl	s370_4740
	.type	s370_4740, @function
s370_4740:
.LFB446:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	je	.L3442
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3442:
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3434
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3434:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3435
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3435
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
.L3435:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3443
.L3432:
	rep ret
.L3443:
	testb	$-128, 54(%rsi)
	je	.L3432
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE446:
	.size	s370_4740, .-s370_4740
	.p2align 4,,15
	.globl	s370_4750
	.type	s370_4750, @function
s370_4750:
.LFB447:
	.cfi_startproc
	testb	$1, 100(%rsi)
	je	.L3445
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3446
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3446:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3447
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3447
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3445:
	addq	$4, 136(%rsi)
	ret
.L3447:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3454
.L3444:
	rep ret
.L3454:
	testb	$-128, 54(%rsi)
	je	.L3444
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE447:
	.size	s370_4750, .-s370_4750
	.p2align 4,,15
	.globl	s370_4770
	.type	s370_4770, @function
s370_4770:
.LFB448:
	.cfi_startproc
	cmpb	$0, 100(%rsi)
	je	.L3456
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3457
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3457:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3458
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3458
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3456:
	addq	$4, 136(%rsi)
	ret
.L3458:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3465
.L3455:
	rep ret
.L3465:
	testb	$-128, 54(%rsi)
	je	.L3455
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE448:
	.size	s370_4770, .-s370_4770
	.p2align 4,,15
	.globl	s370_4780
	.type	s370_4780, @function
s370_4780:
.LFB449:
	.cfi_startproc
	cmpb	$0, 100(%rsi)
	jne	.L3467
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3468
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3468:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3469
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3469
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3467:
	addq	$4, 136(%rsi)
	ret
.L3469:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3476
.L3466:
	rep ret
.L3476:
	testb	$-128, 54(%rsi)
	je	.L3466
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE449:
	.size	s370_4780, .-s370_4780
	.p2align 4,,15
	.globl	s370_47A0
	.type	s370_47A0, @function
s370_47A0:
.LFB450:
	.cfi_startproc
	testb	$1, 100(%rsi)
	jne	.L3478
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3479
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3479:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3480
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3480
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3478:
	addq	$4, 136(%rsi)
	ret
.L3480:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3487
.L3477:
	rep ret
.L3487:
	testb	$-128, 54(%rsi)
	je	.L3477
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE450:
	.size	s370_47A0, .-s370_47A0
	.p2align 4,,15
	.globl	s370_47B0
	.type	s370_47B0, @function
s370_47B0:
.LFB451:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	je	.L3489
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3490
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3490:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3491
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3491
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3489:
	addq	$4, 136(%rsi)
	ret
.L3491:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3498
.L3488:
	rep ret
.L3498:
	testb	$-128, 54(%rsi)
	je	.L3488
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE451:
	.size	s370_47B0, .-s370_47B0
	.p2align 4,,15
	.globl	s370_47C0
	.type	s370_47C0, @function
s370_47C0:
.LFB452:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	jbe	.L3509
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3509:
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3501
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3501:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3502
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3502
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
.L3502:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3510
.L3499:
	rep ret
.L3510:
	testb	$-128, 54(%rsi)
	je	.L3499
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE452:
	.size	s370_47C0, .-s370_47C0
	.p2align 4,,15
	.globl	s370_47D0
	.type	s370_47D0, @function
s370_47D0:
.LFB453:
	.cfi_startproc
	cmpb	$2, 100(%rsi)
	je	.L3512
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3513
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3513:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3514
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3514
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3512:
	addq	$4, 136(%rsi)
	ret
.L3514:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3521
.L3511:
	rep ret
.L3521:
	testb	$-128, 54(%rsi)
	je	.L3511
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE453:
	.size	s370_47D0, .-s370_47D0
	.p2align 4,,15
	.globl	s370_47E0
	.type	s370_47E0, @function
s370_47E0:
.LFB454:
	.cfi_startproc
	cmpb	$3, 100(%rsi)
	je	.L3523
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3524
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3524:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3525
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3525
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L3523:
	addq	$4, 136(%rsi)
	ret
.L3525:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3532
.L3522:
	rep ret
.L3532:
	testb	$-128, 54(%rsi)
	je	.L3522
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE454:
	.size	s370_47E0, .-s370_47E0
	.p2align 4,,15
	.globl	s370_47F0
	.type	s370_47F0, @function
s370_47F0:
.LFB455:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L3534
	cltq
	addl	192(%rsi,%rax,8), %edx
.L3534:
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	$16777215, %eax
	testb	$5, %cl
	jne	.L3535
	andl	$16775169, %edx
	cmpl	168(%rsi), %edx
	jne	.L3535
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
.L3535:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L3542
.L3533:
	rep ret
.L3542:
	testb	$-128, 54(%rsi)
	je	.L3533
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE455:
	.size	s370_47F0, .-s370_47F0
	.p2align 4,,15
	.globl	s370_and
	.type	s370_and, @function
s370_and:
.LFB456:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %edx
	shrl	$20, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L3576
.L3544:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L3545
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L3545:
	movl	%ebp, %r13d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r13d
	testb	$3, %bpl
	jne	.L3577
.L3546:
	leal	-77(%r13), %edx
	cmpl	$6, %edx
	jbe	.L3578
.L3548:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3549
	leal	1(%rdx), %esi
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L3579
.L3550:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L3580
.L3551:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3549
	testb	$4, 46264(%rbx,%rcx)
	je	.L3549
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L3552:
	movl	(%rax), %eax
	bswap	%eax
.L3553:
	movslq	%r12d, %r12
	leaq	(%rbx,%r12,8), %rdx
	andl	%eax, 192(%rdx)
	setne	100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L3579:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3550
.L3549:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	jmp	.L3552
.L3577:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3546
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_vfetch4_full
	jmp	.L3553
.L3576:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	jmp	.L3544
.L3580:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3551
	jmp	.L3549
.L3578:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3548
	.cfi_endproc
.LFE456:
	.size	s370_and, .-s370_and
	.p2align 4,,15
	.globl	s370_load
	.type	s370_load, @function
s370_load:
.LFB457:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	shrl	$20, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	shrl	$12, %eax
	andl	$15, %r12d
	addl	192(%rsi,%rdx,8), %ebp
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L3582
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L3582:
	movl	%ebp, %r13d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r13d
	testb	$3, %bpl
	jne	.L3610
.L3583:
	leal	-77(%r13), %edx
	cmpl	$6, %edx
	jbe	.L3611
.L3585:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3586
	leal	1(%rdx), %esi
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L3612
.L3587:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L3613
.L3588:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3586
	testb	$4, 46264(%rbx,%rcx)
	je	.L3586
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L3589:
	movl	(%rax), %eax
	bswap	%eax
.L3590:
	movslq	%r12d, %r12
	movl	%eax, 192(%rbx,%r12,8)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L3612:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3587
.L3586:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	jmp	.L3589
.L3610:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3583
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_vfetch4_full
	jmp	.L3590
.L3613:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3588
	.p2align 4,,3
	jmp	.L3586
.L3611:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3585
	.cfi_endproc
.LFE457:
	.size	s370_load, .-s370_load
	.p2align 4,,15
	.globl	s370_5800
	.type	s370_5800, @function
s370_5800:
.LFB458:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L3615
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L3615:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L3643
.L3616:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L3644
.L3618:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3619
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L3645
.L3620:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L3646
.L3621:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3619
	testb	$4, 46264(%rbx,%rcx)
	je	.L3619
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L3622:
	movl	(%rax), %eax
	bswap	%eax
.L3623:
	movl	%eax, 192(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L3645:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3620
.L3619:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L3622
.L3643:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3616
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L3623
.L3646:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3621
	.p2align 4,,3
	jmp	.L3619
.L3644:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3618
	.cfi_endproc
.LFE458:
	.size	s370_5800, .-s370_5800
	.p2align 4,,15
	.globl	s370_5810
	.type	s370_5810, @function
s370_5810:
.LFB459:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L3648
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L3648:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L3676
.L3649:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L3677
.L3651:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3652
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L3678
.L3653:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L3679
.L3654:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3652
	testb	$4, 46264(%rbx,%rcx)
	je	.L3652
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L3655:
	movl	(%rax), %eax
	bswap	%eax
.L3656:
	movl	%eax, 200(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L3678:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3653
.L3652:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L3655
.L3676:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3649
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L3656
.L3679:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3654
	.p2align 4,,3
	jmp	.L3652
.L3677:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3651
	.cfi_endproc
.LFE459:
	.size	s370_5810, .-s370_5810
	.p2align 4,,15
	.globl	s370_5820
	.type	s370_5820, @function
s370_5820:
.LFB460:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L3681
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L3681:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L3709
.L3682:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L3710
.L3684:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3685
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L3711
.L3686:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L3712
.L3687:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3685
	testb	$4, 46264(%rbx,%rcx)
	je	.L3685
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L3688:
	movl	(%rax), %eax
	bswap	%eax
.L3689:
	movl	%eax, 208(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L3711:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3686
.L3685:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L3688
.L3709:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3682
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L3689
.L3712:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3687
	.p2align 4,,3
	jmp	.L3685
.L3710:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3684
	.cfi_endproc
.LFE460:
	.size	s370_5820, .-s370_5820
	.p2align 4,,15
	.globl	s370_5830
	.type	s370_5830, @function
s370_5830:
.LFB461:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L3714
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L3714:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L3742
.L3715:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L3743
.L3717:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3718
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L3744
.L3719:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L3745
.L3720:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3718
	testb	$4, 46264(%rbx,%rcx)
	je	.L3718
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L3721:
	movl	(%rax), %eax
	bswap	%eax
.L3722:
	movl	%eax, 216(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L3744:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3719
.L3718:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L3721
.L3742:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3715
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L3722
.L3745:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3720
	.p2align 4,,3
	jmp	.L3718
.L3743:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3717
	.cfi_endproc
.LFE461:
	.size	s370_5830, .-s370_5830
	.p2align 4,,15
	.globl	s370_5840
	.type	s370_5840, @function
s370_5840:
.LFB462:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L3747
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L3747:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L3775
.L3748:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L3776
.L3750:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3751
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L3777
.L3752:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L3778
.L3753:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3751
	testb	$4, 46264(%rbx,%rcx)
	je	.L3751
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L3754:
	movl	(%rax), %eax
	bswap	%eax
.L3755:
	movl	%eax, 224(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L3777:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3752
.L3751:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L3754
.L3775:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3748
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L3755
.L3778:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3753
	.p2align 4,,3
	jmp	.L3751
.L3776:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3750
	.cfi_endproc
.LFE462:
	.size	s370_5840, .-s370_5840
	.p2align 4,,15
	.globl	s370_5850
	.type	s370_5850, @function
s370_5850:
.LFB463:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L3780
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L3780:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L3808
.L3781:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L3809
.L3783:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3784
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L3810
.L3785:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L3811
.L3786:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3784
	testb	$4, 46264(%rbx,%rcx)
	je	.L3784
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L3787:
	movl	(%rax), %eax
	bswap	%eax
.L3788:
	movl	%eax, 232(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L3810:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3785
.L3784:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L3787
.L3808:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3781
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L3788
.L3811:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3786
	.p2align 4,,3
	jmp	.L3784
.L3809:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3783
	.cfi_endproc
.LFE463:
	.size	s370_5850, .-s370_5850
	.p2align 4,,15
	.globl	s370_5860
	.type	s370_5860, @function
s370_5860:
.LFB464:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L3813
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L3813:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L3841
.L3814:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L3842
.L3816:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3817
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L3843
.L3818:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L3844
.L3819:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3817
	testb	$4, 46264(%rbx,%rcx)
	je	.L3817
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L3820:
	movl	(%rax), %eax
	bswap	%eax
.L3821:
	movl	%eax, 240(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L3843:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3818
.L3817:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L3820
.L3841:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3814
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L3821
.L3844:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3819
	.p2align 4,,3
	jmp	.L3817
.L3842:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3816
	.cfi_endproc
.LFE464:
	.size	s370_5860, .-s370_5860
	.p2align 4,,15
	.globl	s370_5870
	.type	s370_5870, @function
s370_5870:
.LFB465:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L3846
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L3846:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L3874
.L3847:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L3875
.L3849:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3850
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L3876
.L3851:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L3877
.L3852:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3850
	testb	$4, 46264(%rbx,%rcx)
	je	.L3850
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L3853:
	movl	(%rax), %eax
	bswap	%eax
.L3854:
	movl	%eax, 248(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L3876:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3851
.L3850:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L3853
.L3874:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3847
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L3854
.L3877:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3852
	.p2align 4,,3
	jmp	.L3850
.L3875:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3849
	.cfi_endproc
.LFE465:
	.size	s370_5870, .-s370_5870
	.p2align 4,,15
	.globl	s370_5880
	.type	s370_5880, @function
s370_5880:
.LFB466:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L3879
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L3879:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L3907
.L3880:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L3908
.L3882:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3883
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L3909
.L3884:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L3910
.L3885:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3883
	testb	$4, 46264(%rbx,%rcx)
	je	.L3883
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L3886:
	movl	(%rax), %eax
	bswap	%eax
.L3887:
	movl	%eax, 256(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L3909:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3884
.L3883:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L3886
.L3907:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3880
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L3887
.L3910:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3885
	.p2align 4,,3
	jmp	.L3883
.L3908:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3882
	.cfi_endproc
.LFE466:
	.size	s370_5880, .-s370_5880
	.p2align 4,,15
	.globl	s370_5890
	.type	s370_5890, @function
s370_5890:
.LFB467:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L3912
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L3912:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L3940
.L3913:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L3941
.L3915:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3916
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L3942
.L3917:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L3943
.L3918:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3916
	testb	$4, 46264(%rbx,%rcx)
	je	.L3916
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L3919:
	movl	(%rax), %eax
	bswap	%eax
.L3920:
	movl	%eax, 264(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L3942:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3917
.L3916:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L3919
.L3940:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3913
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L3920
.L3943:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3918
	.p2align 4,,3
	jmp	.L3916
.L3941:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3915
	.cfi_endproc
.LFE467:
	.size	s370_5890, .-s370_5890
	.p2align 4,,15
	.globl	s370_58A0
	.type	s370_58A0, @function
s370_58A0:
.LFB468:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L3945
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L3945:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L3973
.L3946:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L3974
.L3948:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3949
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L3975
.L3950:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L3976
.L3951:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3949
	testb	$4, 46264(%rbx,%rcx)
	je	.L3949
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L3952:
	movl	(%rax), %eax
	bswap	%eax
.L3953:
	movl	%eax, 272(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L3975:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3950
.L3949:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L3952
.L3973:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3946
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L3953
.L3976:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3951
	.p2align 4,,3
	jmp	.L3949
.L3974:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3948
	.cfi_endproc
.LFE468:
	.size	s370_58A0, .-s370_58A0
	.p2align 4,,15
	.globl	s370_58B0
	.type	s370_58B0, @function
s370_58B0:
.LFB469:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L3978
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L3978:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L4006
.L3979:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L4007
.L3981:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L3982
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L4008
.L3983:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L4009
.L3984:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L3982
	testb	$4, 46264(%rbx,%rcx)
	je	.L3982
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L3985:
	movl	(%rax), %eax
	bswap	%eax
.L3986:
	movl	%eax, 280(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L4008:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L3983
.L3982:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L3985
.L4006:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L3979
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L3986
.L4009:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L3984
	.p2align 4,,3
	jmp	.L3982
.L4007:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L3981
	.cfi_endproc
.LFE469:
	.size	s370_58B0, .-s370_58B0
	.p2align 4,,15
	.globl	s370_58C0
	.type	s370_58C0, @function
s370_58C0:
.LFB470:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L4011
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L4011:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L4039
.L4012:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L4040
.L4014:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4015
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L4041
.L4016:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L4042
.L4017:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L4015
	testb	$4, 46264(%rbx,%rcx)
	je	.L4015
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L4018:
	movl	(%rax), %eax
	bswap	%eax
.L4019:
	movl	%eax, 288(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L4041:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L4016
.L4015:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L4018
.L4039:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4012
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L4019
.L4042:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L4017
	.p2align 4,,3
	jmp	.L4015
.L4040:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L4014
	.cfi_endproc
.LFE470:
	.size	s370_58C0, .-s370_58C0
	.p2align 4,,15
	.globl	s370_58D0
	.type	s370_58D0, @function
s370_58D0:
.LFB471:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L4044
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L4044:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L4072
.L4045:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L4073
.L4047:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4048
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L4074
.L4049:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L4075
.L4050:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L4048
	testb	$4, 46264(%rbx,%rcx)
	je	.L4048
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L4051:
	movl	(%rax), %eax
	bswap	%eax
.L4052:
	movl	%eax, 296(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L4074:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L4049
.L4048:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L4051
.L4072:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4045
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L4052
.L4075:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L4050
	.p2align 4,,3
	jmp	.L4048
.L4073:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L4047
	.cfi_endproc
.LFE471:
	.size	s370_58D0, .-s370_58D0
	.p2align 4,,15
	.globl	s370_58E0
	.type	s370_58E0, @function
s370_58E0:
.LFB472:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L4077
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L4077:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L4105
.L4078:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L4106
.L4080:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4081
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L4107
.L4082:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L4108
.L4083:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L4081
	testb	$4, 46264(%rbx,%rcx)
	je	.L4081
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L4084:
	movl	(%rax), %eax
	bswap	%eax
.L4085:
	movl	%eax, 304(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L4107:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L4082
.L4081:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L4084
.L4105:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4078
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L4085
.L4108:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L4083
	.p2align 4,,3
	jmp	.L4081
.L4106:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L4080
	.cfi_endproc
.LFE472:
	.size	s370_58E0, .-s370_58E0
	.p2align 4,,15
	.globl	s370_58F0
	.type	s370_58F0, @function
s370_58F0:
.LFB473:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L4110
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L4110:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L4138
.L4111:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L4139
.L4113:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4114
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L4140
.L4115:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L4141
.L4116:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L4114
	testb	$4, 46264(%rbx,%rcx)
	je	.L4114
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L4117:
	movl	(%rax), %eax
	bswap	%eax
.L4118:
	movl	%eax, 312(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L4140:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L4115
.L4114:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L4117
.L4138:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4111
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L4118
.L4141:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L4116
	.p2align 4,,3
	jmp	.L4114
.L4139:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L4113
	.cfi_endproc
.LFE473:
	.size	s370_58F0, .-s370_58F0
	.p2align 4,,15
	.globl	s370_store
	.type	s370_store, @function
s370_store:
.LFB474:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %esi
	movl	%edx, %eax
	shrl	$16, %esi
	movl	%edx, %ecx
	andl	$4095, %eax
	shrl	$12, %edx
	andl	$15, %esi
	shrl	$20, %ecx
	addl	192(%rbx,%rsi,8), %eax
	movl	%edx, %esi
	andl	$15, %ecx
	andl	$15, %esi
	je	.L4143
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4143:
	addq	$4, 136(%rbx)
	movl	%eax, %ebp
	movslq	%ecx, %rcx
	andl	$16777215, %ebp
	movb	$4, 130(%rbx)
	testb	$3, %al
	movl	192(%rbx,%rcx,8), %r12d
	jne	.L4170
.L4144:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4146
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4171
.L4147:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4172
.L4148:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4146
	testb	$2, 46264(%rbx,%rdx)
	je	.L4146
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4149:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4173
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4171:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4147
.L4146:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4149
.L4170:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4144
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4172:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4148
	jmp	.L4146
.L4173:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE474:
	.size	s370_store, .-s370_store
	.p2align 4,,15
	.globl	s370_5000
	.type	s370_5000, @function
s370_5000:
.LFB475:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4175
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4175:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	192(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4202
.L4176:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4178
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4203
.L4179:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4204
.L4180:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4178
	testb	$2, 46264(%rbx,%rdx)
	je	.L4178
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4181:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4205
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4203:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4179
.L4178:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4181
.L4202:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4176
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4204:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4180
	jmp	.L4178
.L4205:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE475:
	.size	s370_5000, .-s370_5000
	.p2align 4,,15
	.globl	s370_5010
	.type	s370_5010, @function
s370_5010:
.LFB476:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4207
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4207:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	200(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4234
.L4208:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4210
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4235
.L4211:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4236
.L4212:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4210
	testb	$2, 46264(%rbx,%rdx)
	je	.L4210
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4213:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4237
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4235:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4211
.L4210:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4213
.L4234:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4208
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4236:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4212
	jmp	.L4210
.L4237:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE476:
	.size	s370_5010, .-s370_5010
	.p2align 4,,15
	.globl	s370_5020
	.type	s370_5020, @function
s370_5020:
.LFB477:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4239
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4239:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	208(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4266
.L4240:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4242
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4267
.L4243:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4268
.L4244:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4242
	testb	$2, 46264(%rbx,%rdx)
	je	.L4242
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4245:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4269
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4267:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4243
.L4242:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4245
.L4266:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4240
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4268:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4244
	jmp	.L4242
.L4269:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE477:
	.size	s370_5020, .-s370_5020
	.p2align 4,,15
	.globl	s370_5030
	.type	s370_5030, @function
s370_5030:
.LFB478:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4271
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4271:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	216(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4298
.L4272:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4274
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4299
.L4275:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4300
.L4276:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4274
	testb	$2, 46264(%rbx,%rdx)
	je	.L4274
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4277:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4301
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4299:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4275
.L4274:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4277
.L4298:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4272
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4300:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4276
	jmp	.L4274
.L4301:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE478:
	.size	s370_5030, .-s370_5030
	.p2align 4,,15
	.globl	s370_5040
	.type	s370_5040, @function
s370_5040:
.LFB479:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4303
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4303:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	224(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4330
.L4304:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4306
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4331
.L4307:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4332
.L4308:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4306
	testb	$2, 46264(%rbx,%rdx)
	je	.L4306
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4309:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4333
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4331:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4307
.L4306:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4309
.L4330:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4304
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4332:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4308
	jmp	.L4306
.L4333:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE479:
	.size	s370_5040, .-s370_5040
	.p2align 4,,15
	.globl	s370_5050
	.type	s370_5050, @function
s370_5050:
.LFB480:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4335
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4335:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	232(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4362
.L4336:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4338
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4363
.L4339:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4364
.L4340:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4338
	testb	$2, 46264(%rbx,%rdx)
	je	.L4338
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4341:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4365
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4363:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4339
.L4338:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4341
.L4362:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4336
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4364:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4340
	jmp	.L4338
.L4365:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE480:
	.size	s370_5050, .-s370_5050
	.p2align 4,,15
	.globl	s370_5060
	.type	s370_5060, @function
s370_5060:
.LFB481:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4367
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4367:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	240(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4394
.L4368:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4370
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4395
.L4371:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4396
.L4372:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4370
	testb	$2, 46264(%rbx,%rdx)
	je	.L4370
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4373:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4397
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4395:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4371
.L4370:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4373
.L4394:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4368
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4396:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4372
	jmp	.L4370
.L4397:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE481:
	.size	s370_5060, .-s370_5060
	.p2align 4,,15
	.globl	s370_5070
	.type	s370_5070, @function
s370_5070:
.LFB482:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4399
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4399:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	248(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4426
.L4400:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4402
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4427
.L4403:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4428
.L4404:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4402
	testb	$2, 46264(%rbx,%rdx)
	je	.L4402
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4405:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4429
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4427:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4403
.L4402:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4405
.L4426:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4400
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4428:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4404
	jmp	.L4402
.L4429:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE482:
	.size	s370_5070, .-s370_5070
	.p2align 4,,15
	.globl	s370_5080
	.type	s370_5080, @function
s370_5080:
.LFB483:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4431
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4431:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	256(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4458
.L4432:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4434
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4459
.L4435:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4460
.L4436:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4434
	testb	$2, 46264(%rbx,%rdx)
	je	.L4434
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4437:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4461
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4459:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4435
.L4434:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4437
.L4458:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4432
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4460:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4436
	jmp	.L4434
.L4461:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE483:
	.size	s370_5080, .-s370_5080
	.p2align 4,,15
	.globl	s370_5090
	.type	s370_5090, @function
s370_5090:
.LFB484:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4463
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4463:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	264(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4490
.L4464:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4466
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4491
.L4467:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4492
.L4468:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4466
	testb	$2, 46264(%rbx,%rdx)
	je	.L4466
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4469:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4493
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4491:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4467
.L4466:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4469
.L4490:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4464
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4492:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4468
	jmp	.L4466
.L4493:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE484:
	.size	s370_5090, .-s370_5090
	.p2align 4,,15
	.globl	s370_50A0
	.type	s370_50A0, @function
s370_50A0:
.LFB485:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4495
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4495:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	272(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4522
.L4496:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4498
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4523
.L4499:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4524
.L4500:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4498
	testb	$2, 46264(%rbx,%rdx)
	je	.L4498
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4501:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4525
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4523:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4499
.L4498:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4501
.L4522:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4496
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4524:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4500
	jmp	.L4498
.L4525:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE485:
	.size	s370_50A0, .-s370_50A0
	.p2align 4,,15
	.globl	s370_50B0
	.type	s370_50B0, @function
s370_50B0:
.LFB486:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4527
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4527:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	280(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4554
.L4528:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4530
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4555
.L4531:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4556
.L4532:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4530
	testb	$2, 46264(%rbx,%rdx)
	je	.L4530
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4533:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4557
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4555:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4531
.L4530:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4533
.L4554:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4528
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4556:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4532
	jmp	.L4530
.L4557:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE486:
	.size	s370_50B0, .-s370_50B0
	.p2align 4,,15
	.globl	s370_50C0
	.type	s370_50C0, @function
s370_50C0:
.LFB487:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4559
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4559:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	288(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4586
.L4560:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4562
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4587
.L4563:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4588
.L4564:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4562
	testb	$2, 46264(%rbx,%rdx)
	je	.L4562
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4565:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4589
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4587:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4563
.L4562:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4565
.L4586:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4560
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4588:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4564
	jmp	.L4562
.L4589:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE487:
	.size	s370_50C0, .-s370_50C0
	.p2align 4,,15
	.globl	s370_50D0
	.type	s370_50D0, @function
s370_50D0:
.LFB488:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4591
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4591:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	296(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4618
.L4592:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4594
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4619
.L4595:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4620
.L4596:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4594
	testb	$2, 46264(%rbx,%rdx)
	je	.L4594
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4597:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4621
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4619:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4595
.L4594:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4597
.L4618:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4592
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4620:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4596
	jmp	.L4594
.L4621:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE488:
	.size	s370_50D0, .-s370_50D0
	.p2align 4,,15
	.globl	s370_50E0
	.type	s370_50E0, @function
s370_50E0:
.LFB489:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4623
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4623:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	304(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4650
.L4624:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4626
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4651
.L4627:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4652
.L4628:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4626
	testb	$2, 46264(%rbx,%rdx)
	je	.L4626
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4629:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4653
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4651:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4627
.L4626:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4629
.L4650:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4624
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4652:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4628
	jmp	.L4626
.L4653:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE489:
	.size	s370_50E0, .-s370_50E0
	.p2align 4,,15
	.globl	s370_50F0
	.type	s370_50F0, @function
s370_50F0:
.LFB490:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L4655
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
.L4655:
	movl	%eax, %ebp
	movb	$4, 130(%rbx)
	movl	312(%rbx), %r12d
	addq	$4, 136(%rbx)
	andl	$16777215, %ebp
	testb	$3, %al
	jne	.L4682
.L4656:
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4658
	leal	1(%rdx), %edi
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%edi, %rdi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdi,8)
	jne	.L4683
.L4659:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L4684
.L4660:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L4658
	testb	$2, 46264(%rbx,%rdx)
	je	.L4658
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L4661:
	subl	$77, %ebp
	bswap	%r12d
	movl	%r12d, (%rax)
	cmpl	$6, %ebp
	jbe	.L4685
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L4683:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L4659
.L4658:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L4661
.L4682:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4656
	movq	%rbx, %rcx
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movl	%esi, %edx
	movl	%ebp, %esi
	movl	%r12d, %edi
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_vstore4_full
.L4684:
	.cfi_restore_state
	cmpb	43192(%rbx,%rdx), %dil
	je	.L4660
	jmp	.L4658
.L4685:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE490:
	.size	s370_50F0, .-s370_50F0
	.p2align 4,,15
	.globl	s370_load_address
	.type	s370_load_address, @function
s370_load_address:
.LFB491:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	movl	%eax, %ecx
	shrl	$16, %edi
	movl	%eax, %edx
	shrl	$20, %ecx
	andl	$4095, %edx
	andl	$15, %edi
	shrl	$12, %eax
	andl	$15, %ecx
	addl	192(%rsi,%rdi,8), %edx
	andl	$15, %eax
	je	.L4687
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4687:
	movslq	%ecx, %rcx
	andl	$16777215, %edx
	addq	$4, 136(%rsi)
	movl	%edx, 192(%rsi,%rcx,8)
	ret
	.cfi_endproc
.LFE491:
	.size	s370_load_address, .-s370_load_address
	.p2align 4,,15
	.globl	s370_4100
	.type	s370_4100, @function
s370_4100:
.LFB492:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4692
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4692:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 192(%rsi)
	ret
	.cfi_endproc
.LFE492:
	.size	s370_4100, .-s370_4100
	.p2align 4,,15
	.globl	s370_4110
	.type	s370_4110, @function
s370_4110:
.LFB493:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4697
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4697:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 200(%rsi)
	ret
	.cfi_endproc
.LFE493:
	.size	s370_4110, .-s370_4110
	.p2align 4,,15
	.globl	s370_4120
	.type	s370_4120, @function
s370_4120:
.LFB494:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4702
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4702:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 208(%rsi)
	ret
	.cfi_endproc
.LFE494:
	.size	s370_4120, .-s370_4120
	.p2align 4,,15
	.globl	s370_4130
	.type	s370_4130, @function
s370_4130:
.LFB495:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4707
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4707:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 216(%rsi)
	ret
	.cfi_endproc
.LFE495:
	.size	s370_4130, .-s370_4130
	.p2align 4,,15
	.globl	s370_4140
	.type	s370_4140, @function
s370_4140:
.LFB496:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4712
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4712:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 224(%rsi)
	ret
	.cfi_endproc
.LFE496:
	.size	s370_4140, .-s370_4140
	.p2align 4,,15
	.globl	s370_4150
	.type	s370_4150, @function
s370_4150:
.LFB497:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4717
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4717:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 232(%rsi)
	ret
	.cfi_endproc
.LFE497:
	.size	s370_4150, .-s370_4150
	.p2align 4,,15
	.globl	s370_4160
	.type	s370_4160, @function
s370_4160:
.LFB498:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4722
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4722:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 240(%rsi)
	ret
	.cfi_endproc
.LFE498:
	.size	s370_4160, .-s370_4160
	.p2align 4,,15
	.globl	s370_4170
	.type	s370_4170, @function
s370_4170:
.LFB499:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4727
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4727:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 248(%rsi)
	ret
	.cfi_endproc
.LFE499:
	.size	s370_4170, .-s370_4170
	.p2align 4,,15
	.globl	s370_4180
	.type	s370_4180, @function
s370_4180:
.LFB500:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4732
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4732:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 256(%rsi)
	ret
	.cfi_endproc
.LFE500:
	.size	s370_4180, .-s370_4180
	.p2align 4,,15
	.globl	s370_4190
	.type	s370_4190, @function
s370_4190:
.LFB501:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4737
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4737:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 264(%rsi)
	ret
	.cfi_endproc
.LFE501:
	.size	s370_4190, .-s370_4190
	.p2align 4,,15
	.globl	s370_41A0
	.type	s370_41A0, @function
s370_41A0:
.LFB502:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4742
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4742:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 272(%rsi)
	ret
	.cfi_endproc
.LFE502:
	.size	s370_41A0, .-s370_41A0
	.p2align 4,,15
	.globl	s370_41B0
	.type	s370_41B0, @function
s370_41B0:
.LFB503:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4747
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4747:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 280(%rsi)
	ret
	.cfi_endproc
.LFE503:
	.size	s370_41B0, .-s370_41B0
	.p2align 4,,15
	.globl	s370_41C0
	.type	s370_41C0, @function
s370_41C0:
.LFB504:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4752
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4752:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 288(%rsi)
	ret
	.cfi_endproc
.LFE504:
	.size	s370_41C0, .-s370_41C0
	.p2align 4,,15
	.globl	s370_41D0
	.type	s370_41D0, @function
s370_41D0:
.LFB505:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4757
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4757:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 296(%rsi)
	ret
	.cfi_endproc
.LFE505:
	.size	s370_41D0, .-s370_41D0
	.p2align 4,,15
	.globl	s370_41E0
	.type	s370_41E0, @function
s370_41E0:
.LFB506:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4762
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4762:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 304(%rsi)
	ret
	.cfi_endproc
.LFE506:
	.size	s370_41E0, .-s370_41E0
	.p2align 4,,15
	.globl	s370_41F0
	.type	s370_41F0, @function
s370_41F0:
.LFB507:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L4767
	cltq
	addl	192(%rsi,%rax,8), %edx
.L4767:
	addq	$4, 136(%rsi)
	andl	$16777215, %edx
	movl	%edx, 312(%rsi)
	ret
	.cfi_endproc
.LFE507:
	.size	s370_41F0, .-s370_41F0
	.p2align 4,,15
	.globl	s370_insert_character
	.type	s370_insert_character, @function
s370_insert_character:
.LFB508:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %edx
	shrl	$20, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L4798
.L4772:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L4773
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L4773:
	movl	%ebp, %r13d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r13d
	leal	-80(%r13), %edx
	cmpl	$3, %edx
	jbe	.L4799
.L4774:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4775
	leal	1(%rdx), %esi
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L4800
.L4776:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L4801
.L4777:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L4775
	testb	$4, 46264(%rbx,%rcx)
	je	.L4775
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L4778:
	movzbl	(%rax), %eax
	movslq	%r12d, %r12
	movb	%al, 192(%rbx,%r12,8)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L4800:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L4776
.L4775:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	jmp	.L4778
.L4798:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	jmp	.L4772
.L4801:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L4777
	jmp	.L4775
.L4799:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L4774
	.cfi_endproc
.LFE508:
	.size	s370_insert_character, .-s370_insert_character
	.p2align 4,,15
	.globl	s370_add_logical
	.type	s370_add_logical, @function
s370_add_logical:
.LFB509:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %edx
	shrl	$20, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L4837
.L4803:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L4804
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L4804:
	movl	%ebp, %r13d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r13d
	testb	$3, %bpl
	jne	.L4838
.L4805:
	leal	-77(%r13), %edx
	cmpl	$6, %edx
	jbe	.L4839
.L4807:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4808
	leal	1(%rdx), %esi
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L4840
.L4809:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L4841
.L4810:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L4808
	testb	$4, 46264(%rbx,%rcx)
	je	.L4808
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L4811:
	movl	(%rax), %eax
	bswap	%eax
.L4812:
	movslq	%r12d, %r12
	leaq	(%rbx,%r12,8), %rcx
	movl	192(%rcx), %edx
	addl	%edx, %eax
	movl	%eax, 192(%rcx)
	xorl	%ecx, %ecx
	testl	%eax, %eax
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L4840:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L4809
.L4808:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	jmp	.L4811
.L4838:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4805
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_vfetch4_full
	jmp	.L4812
.L4837:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	jmp	.L4803
.L4841:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L4810
	jmp	.L4808
.L4839:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L4807
	.cfi_endproc
.LFE509:
	.size	s370_add_logical, .-s370_add_logical
	.p2align 4,,15
	.globl	s370_compare_logical
	.type	s370_compare_logical, @function
s370_compare_logical:
.LFB510:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	shrl	$20, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	shrl	$12, %eax
	andl	$15, %r12d
	addl	192(%rsi,%rdx,8), %ebp
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L4843
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L4843:
	movl	%ebp, %r13d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r13d
	testb	$3, %bpl
	jne	.L4874
.L4844:
	leal	-77(%r13), %edx
	cmpl	$6, %edx
	jbe	.L4875
.L4846:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4847
	leal	1(%rdx), %esi
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L4876
.L4848:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L4877
.L4849:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L4847
	testb	$4, 46264(%rbx,%rcx)
	je	.L4847
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L4850:
	movl	(%rax), %eax
	bswap	%eax
.L4851:
	movslq	%r12d, %r12
	movl	$1, %edx
	movl	192(%rbx,%r12,8), %ecx
	cmpl	%eax, %ecx
	jb	.L4852
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L4852:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L4876:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L4848
.L4847:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	jmp	.L4850
.L4874:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4844
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_vfetch4_full
	jmp	.L4851
.L4877:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L4849
	.p2align 4,,3
	jmp	.L4847
.L4875:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L4846
	.cfi_endproc
.LFE510:
	.size	s370_compare_logical, .-s370_compare_logical
	.p2align 4,,15
	.globl	s370_5500
	.type	s370_5500, @function
s370_5500:
.LFB511:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L4879
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L4879:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L4910
.L4880:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L4911
.L4882:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4883
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L4912
.L4884:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L4913
.L4885:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L4883
	testb	$4, 46264(%rbx,%rcx)
	je	.L4883
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L4886:
	movl	(%rax), %eax
	bswap	%eax
.L4887:
	movl	192(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L4888
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L4888:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L4912:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L4884
.L4883:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L4886
.L4910:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4880
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L4887
.L4913:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L4885
	.p2align 4,,3
	jmp	.L4883
.L4911:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L4882
	.cfi_endproc
.LFE511:
	.size	s370_5500, .-s370_5500
	.p2align 4,,15
	.globl	s370_5510
	.type	s370_5510, @function
s370_5510:
.LFB512:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L4915
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L4915:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L4946
.L4916:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L4947
.L4918:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4919
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L4948
.L4920:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L4949
.L4921:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L4919
	testb	$4, 46264(%rbx,%rcx)
	je	.L4919
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L4922:
	movl	(%rax), %eax
	bswap	%eax
.L4923:
	movl	200(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L4924
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L4924:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L4948:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L4920
.L4919:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L4922
.L4946:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4916
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L4923
.L4949:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L4921
	.p2align 4,,3
	jmp	.L4919
.L4947:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L4918
	.cfi_endproc
.LFE512:
	.size	s370_5510, .-s370_5510
	.p2align 4,,15
	.globl	s370_5520
	.type	s370_5520, @function
s370_5520:
.LFB513:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L4951
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L4951:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L4982
.L4952:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L4983
.L4954:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4955
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L4984
.L4956:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L4985
.L4957:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L4955
	testb	$4, 46264(%rbx,%rcx)
	je	.L4955
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L4958:
	movl	(%rax), %eax
	bswap	%eax
.L4959:
	movl	208(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L4960
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L4960:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L4984:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L4956
.L4955:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L4958
.L4982:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4952
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L4959
.L4985:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L4957
	.p2align 4,,3
	jmp	.L4955
.L4983:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L4954
	.cfi_endproc
.LFE513:
	.size	s370_5520, .-s370_5520
	.p2align 4,,15
	.globl	s370_5530
	.type	s370_5530, @function
s370_5530:
.LFB514:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L4987
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L4987:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L5018
.L4988:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L5019
.L4990:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L4991
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5020
.L4992:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5021
.L4993:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L4991
	testb	$4, 46264(%rbx,%rcx)
	je	.L4991
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L4994:
	movl	(%rax), %eax
	bswap	%eax
.L4995:
	movl	216(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L4996
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L4996:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L5020:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L4992
.L4991:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L4994
.L5018:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L4988
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L4995
.L5021:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L4993
	.p2align 4,,3
	jmp	.L4991
.L5019:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L4990
	.cfi_endproc
.LFE514:
	.size	s370_5530, .-s370_5530
	.p2align 4,,15
	.globl	s370_5540
	.type	s370_5540, @function
s370_5540:
.LFB515:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L5023
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L5023:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L5054
.L5024:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L5055
.L5026:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5027
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5056
.L5028:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5057
.L5029:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5027
	testb	$4, 46264(%rbx,%rcx)
	je	.L5027
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5030:
	movl	(%rax), %eax
	bswap	%eax
.L5031:
	movl	224(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L5032
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L5032:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L5056:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5028
.L5027:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L5030
.L5054:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L5024
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L5031
.L5057:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5029
	.p2align 4,,3
	jmp	.L5027
.L5055:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5026
	.cfi_endproc
.LFE515:
	.size	s370_5540, .-s370_5540
	.p2align 4,,15
	.globl	s370_5550
	.type	s370_5550, @function
s370_5550:
.LFB516:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L5059
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L5059:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L5090
.L5060:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L5091
.L5062:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5063
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5092
.L5064:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5093
.L5065:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5063
	testb	$4, 46264(%rbx,%rcx)
	je	.L5063
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5066:
	movl	(%rax), %eax
	bswap	%eax
.L5067:
	movl	232(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L5068
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L5068:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L5092:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5064
.L5063:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L5066
.L5090:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L5060
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L5067
.L5093:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5065
	.p2align 4,,3
	jmp	.L5063
.L5091:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5062
	.cfi_endproc
.LFE516:
	.size	s370_5550, .-s370_5550
	.p2align 4,,15
	.globl	s370_5560
	.type	s370_5560, @function
s370_5560:
.LFB517:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L5095
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L5095:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L5126
.L5096:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L5127
.L5098:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5099
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5128
.L5100:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5129
.L5101:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5099
	testb	$4, 46264(%rbx,%rcx)
	je	.L5099
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5102:
	movl	(%rax), %eax
	bswap	%eax
.L5103:
	movl	240(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L5104
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L5104:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L5128:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5100
.L5099:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L5102
.L5126:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L5096
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L5103
.L5129:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5101
	.p2align 4,,3
	jmp	.L5099
.L5127:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5098
	.cfi_endproc
.LFE517:
	.size	s370_5560, .-s370_5560
	.p2align 4,,15
	.globl	s370_5570
	.type	s370_5570, @function
s370_5570:
.LFB518:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L5131
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L5131:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L5162
.L5132:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L5163
.L5134:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5135
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5164
.L5136:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5165
.L5137:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5135
	testb	$4, 46264(%rbx,%rcx)
	je	.L5135
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5138:
	movl	(%rax), %eax
	bswap	%eax
.L5139:
	movl	248(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L5140
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L5140:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L5164:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5136
.L5135:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L5138
.L5162:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L5132
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L5139
.L5165:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5137
	.p2align 4,,3
	jmp	.L5135
.L5163:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5134
	.cfi_endproc
.LFE518:
	.size	s370_5570, .-s370_5570
	.p2align 4,,15
	.globl	s370_5580
	.type	s370_5580, @function
s370_5580:
.LFB519:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L5167
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L5167:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L5198
.L5168:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L5199
.L5170:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5171
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5200
.L5172:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5201
.L5173:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5171
	testb	$4, 46264(%rbx,%rcx)
	je	.L5171
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5174:
	movl	(%rax), %eax
	bswap	%eax
.L5175:
	movl	256(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L5176
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L5176:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L5200:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5172
.L5171:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L5174
.L5198:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L5168
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L5175
.L5201:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5173
	.p2align 4,,3
	jmp	.L5171
.L5199:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5170
	.cfi_endproc
.LFE519:
	.size	s370_5580, .-s370_5580
	.p2align 4,,15
	.globl	s370_5590
	.type	s370_5590, @function
s370_5590:
.LFB520:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L5203
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L5203:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L5234
.L5204:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L5235
.L5206:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5207
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5236
.L5208:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5237
.L5209:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5207
	testb	$4, 46264(%rbx,%rcx)
	je	.L5207
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5210:
	movl	(%rax), %eax
	bswap	%eax
.L5211:
	movl	264(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L5212
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L5212:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L5236:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5208
.L5207:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L5210
.L5234:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L5204
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L5211
.L5237:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5209
	.p2align 4,,3
	jmp	.L5207
.L5235:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5206
	.cfi_endproc
.LFE520:
	.size	s370_5590, .-s370_5590
	.p2align 4,,15
	.globl	s370_55A0
	.type	s370_55A0, @function
s370_55A0:
.LFB521:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L5239
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L5239:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L5270
.L5240:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L5271
.L5242:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5243
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5272
.L5244:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5273
.L5245:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5243
	testb	$4, 46264(%rbx,%rcx)
	je	.L5243
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5246:
	movl	(%rax), %eax
	bswap	%eax
.L5247:
	movl	272(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L5248
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L5248:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L5272:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5244
.L5243:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L5246
.L5270:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L5240
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L5247
.L5273:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5245
	.p2align 4,,3
	jmp	.L5243
.L5271:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5242
	.cfi_endproc
.LFE521:
	.size	s370_55A0, .-s370_55A0
	.p2align 4,,15
	.globl	s370_55B0
	.type	s370_55B0, @function
s370_55B0:
.LFB522:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L5275
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L5275:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L5306
.L5276:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L5307
.L5278:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5279
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5308
.L5280:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5309
.L5281:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5279
	testb	$4, 46264(%rbx,%rcx)
	je	.L5279
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5282:
	movl	(%rax), %eax
	bswap	%eax
.L5283:
	movl	280(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L5284
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L5284:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L5308:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5280
.L5279:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L5282
.L5306:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L5276
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L5283
.L5309:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5281
	.p2align 4,,3
	jmp	.L5279
.L5307:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5278
	.cfi_endproc
.LFE522:
	.size	s370_55B0, .-s370_55B0
	.p2align 4,,15
	.globl	s370_55C0
	.type	s370_55C0, @function
s370_55C0:
.LFB523:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L5311
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L5311:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L5342
.L5312:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L5343
.L5314:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5315
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5344
.L5316:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5345
.L5317:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5315
	testb	$4, 46264(%rbx,%rcx)
	je	.L5315
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5318:
	movl	(%rax), %eax
	bswap	%eax
.L5319:
	movl	288(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L5320
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L5320:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L5344:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5316
.L5315:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L5318
.L5342:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L5312
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L5319
.L5345:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5317
	.p2align 4,,3
	jmp	.L5315
.L5343:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5314
	.cfi_endproc
.LFE523:
	.size	s370_55C0, .-s370_55C0
	.p2align 4,,15
	.globl	s370_55D0
	.type	s370_55D0, @function
s370_55D0:
.LFB524:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L5347
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L5347:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L5378
.L5348:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L5379
.L5350:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5351
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5380
.L5352:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5381
.L5353:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5351
	testb	$4, 46264(%rbx,%rcx)
	je	.L5351
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5354:
	movl	(%rax), %eax
	bswap	%eax
.L5355:
	movl	296(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L5356
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L5356:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L5380:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5352
.L5351:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L5354
.L5378:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L5348
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L5355
.L5381:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5353
	.p2align 4,,3
	jmp	.L5351
.L5379:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5350
	.cfi_endproc
.LFE524:
	.size	s370_55D0, .-s370_55D0
	.p2align 4,,15
	.globl	s370_55E0
	.type	s370_55E0, @function
s370_55E0:
.LFB525:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L5383
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L5383:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L5414
.L5384:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L5415
.L5386:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5387
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5416
.L5388:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5417
.L5389:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5387
	testb	$4, 46264(%rbx,%rcx)
	je	.L5387
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5390:
	movl	(%rax), %eax
	bswap	%eax
.L5391:
	movl	304(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L5392
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L5392:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L5416:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5388
.L5387:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L5390
.L5414:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L5384
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L5391
.L5417:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5389
	.p2align 4,,3
	jmp	.L5387
.L5415:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5386
	.cfi_endproc
.LFE525:
	.size	s370_55E0, .-s370_55E0
	.p2align 4,,15
	.globl	s370_55F0
	.type	s370_55F0, @function
s370_55F0:
.LFB526:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L5419
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ebp
.L5419:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$3, %bpl
	jne	.L5450
.L5420:
	leal	-77(%r12), %edx
	cmpl	$6, %edx
	jbe	.L5451
.L5422:
	leal	5(%r13), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5423
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5452
.L5424:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5453
.L5425:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5423
	testb	$4, 46264(%rbx,%rcx)
	je	.L5423
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5426:
	movl	(%rax), %eax
	bswap	%eax
.L5427:
	movl	312(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L5428
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L5428:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L5452:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5424
.L5423:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L5426
.L5450:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L5420
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L5427
.L5453:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5425
	.p2align 4,,3
	jmp	.L5423
.L5451:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5422
	.cfi_endproc
.LFE526:
	.size	s370_55F0, .-s370_55F0
	.p2align 4,,15
	.globl	s370_load_halfword
	.type	s370_load_halfword, @function
s370_load_halfword:
.LFB527:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %edx
	shrl	$20, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L5487
.L5455:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L5456
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L5456:
	movl	%ebp, %r13d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r13d
	testb	$1, %bpl
	jne	.L5488
.L5457:
	leal	-79(%r13), %edx
	cmpl	$4, %edx
	jbe	.L5489
.L5459:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5460
	leal	1(%rdx), %esi
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5490
.L5461:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5491
.L5462:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5460
	testb	$4, 46264(%rbx,%rcx)
	je	.L5460
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L5463:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L5464:
	movslq	%r12d, %r12
	cwtl
	movl	%eax, 192(%rbx,%r12,8)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L5490:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5461
.L5460:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	jmp	.L5463
.L5488:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2047, %edx
	jne	.L5457
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_vfetch2_full
	jmp	.L5464
.L5487:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	jmp	.L5455
.L5491:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5462
	jmp	.L5460
.L5489:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5459
	.cfi_endproc
.LFE527:
	.size	s370_load_halfword, .-s370_load_halfword
	.p2align 4,,15
	.globl	s370_branch_relative_on_condition
	.type	s370_branch_relative_on_condition, @function
s370_branch_relative_on_condition:
.LFB528:
	.cfi_startproc
	movzbl	100(%rsi), %ecx
	movl	$128, %eax
	movzbl	1(%rdi), %edx
	sarl	%cl, %eax
	testl	%eax, %edx
	je	.L5493
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5494
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5494
	cmpq	160(%rsi), %rax
	jae	.L5494
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5493:
	addq	$4, 136(%rsi)
	ret
.L5494:
	testb	$1, %dl
	jne	.L5496
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5497:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L5502
.L5492:
	rep ret
.L5502:
	testb	$-128, 54(%rsi)
	je	.L5492
	orl	$8388608, 56(%rsi)
	ret
.L5496:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5497
	.cfi_endproc
.LFE528:
	.size	s370_branch_relative_on_condition, .-s370_branch_relative_on_condition
	.p2align 4,,15
	.globl	s370_A714
	.type	s370_A714, @function
s370_A714:
.LFB529:
	.cfi_startproc
	cmpb	$3, 100(%rsi)
	je	.L5513
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5513:
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5505
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5505
	cmpq	160(%rsi), %rax
	jae	.L5505
	movq	%rax, 136(%rsi)
	ret
.L5505:
	testb	$1, %dl
	jne	.L5507
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5508:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L5514
.L5503:
	rep ret
.L5514:
	testb	$-128, 54(%rsi)
	je	.L5503
	orl	$8388608, 56(%rsi)
	ret
.L5507:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5508
	.cfi_endproc
.LFE529:
	.size	s370_A714, .-s370_A714
	.p2align 4,,15
	.globl	s370_A724
	.type	s370_A724, @function
s370_A724:
.LFB530:
	.cfi_startproc
	cmpb	$2, 100(%rsi)
	je	.L5525
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5525:
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5517
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5517
	cmpq	160(%rsi), %rax
	jae	.L5517
	movq	%rax, 136(%rsi)
	ret
.L5517:
	testb	$1, %dl
	jne	.L5519
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5520:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L5526
.L5515:
	rep ret
.L5526:
	testb	$-128, 54(%rsi)
	je	.L5515
	orl	$8388608, 56(%rsi)
	ret
.L5519:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5520
	.cfi_endproc
.LFE530:
	.size	s370_A724, .-s370_A724
	.p2align 4,,15
	.globl	s370_A734
	.type	s370_A734, @function
s370_A734:
.LFB531:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	jbe	.L5528
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5529
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5529
	cmpq	160(%rsi), %rax
	jae	.L5529
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5528:
	addq	$4, 136(%rsi)
	ret
.L5529:
	testb	$1, %dl
	jne	.L5531
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5532:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L5537
.L5527:
	rep ret
.L5537:
	testb	$-128, 54(%rsi)
	je	.L5527
	orl	$8388608, 56(%rsi)
	ret
.L5531:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5532
	.cfi_endproc
.LFE531:
	.size	s370_A734, .-s370_A734
	.p2align 4,,15
	.globl	s370_A744
	.type	s370_A744, @function
s370_A744:
.LFB532:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	je	.L5548
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5548:
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5540
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5540
	cmpq	160(%rsi), %rax
	jae	.L5540
	movq	%rax, 136(%rsi)
	ret
.L5540:
	testb	$1, %dl
	jne	.L5542
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5543:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L5549
.L5538:
	rep ret
.L5549:
	testb	$-128, 54(%rsi)
	je	.L5538
	orl	$8388608, 56(%rsi)
	ret
.L5542:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5543
	.cfi_endproc
.LFE532:
	.size	s370_A744, .-s370_A744
	.p2align 4,,15
	.globl	s370_A754
	.type	s370_A754, @function
s370_A754:
.LFB533:
	.cfi_startproc
	testb	$1, 100(%rsi)
	je	.L5551
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5552
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5552
	cmpq	160(%rsi), %rax
	jae	.L5552
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5551:
	addq	$4, 136(%rsi)
	ret
.L5552:
	testb	$1, %dl
	jne	.L5554
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5555:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L5560
.L5550:
	rep ret
.L5560:
	testb	$-128, 54(%rsi)
	je	.L5550
	orl	$8388608, 56(%rsi)
	ret
.L5554:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5555
	.cfi_endproc
.LFE533:
	.size	s370_A754, .-s370_A754
	.p2align 4,,15
	.globl	s370_A774
	.type	s370_A774, @function
s370_A774:
.LFB534:
	.cfi_startproc
	cmpb	$0, 100(%rsi)
	je	.L5562
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5563
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5563
	cmpq	160(%rsi), %rax
	jae	.L5563
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5562:
	addq	$4, 136(%rsi)
	ret
.L5563:
	testb	$1, %dl
	jne	.L5565
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5566:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L5571
.L5561:
	rep ret
.L5571:
	testb	$-128, 54(%rsi)
	je	.L5561
	orl	$8388608, 56(%rsi)
	ret
.L5565:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5566
	.cfi_endproc
.LFE534:
	.size	s370_A774, .-s370_A774
	.p2align 4,,15
	.globl	s370_A784
	.type	s370_A784, @function
s370_A784:
.LFB535:
	.cfi_startproc
	cmpb	$0, 100(%rsi)
	jne	.L5573
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5574
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5574
	cmpq	160(%rsi), %rax
	jae	.L5574
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5573:
	addq	$4, 136(%rsi)
	ret
.L5574:
	testb	$1, %dl
	jne	.L5576
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5577:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L5582
.L5572:
	rep ret
.L5582:
	testb	$-128, 54(%rsi)
	je	.L5572
	orl	$8388608, 56(%rsi)
	ret
.L5576:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5577
	.cfi_endproc
.LFE535:
	.size	s370_A784, .-s370_A784
	.p2align 4,,15
	.globl	s370_A7A4
	.type	s370_A7A4, @function
s370_A7A4:
.LFB536:
	.cfi_startproc
	testb	$1, 100(%rsi)
	jne	.L5584
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5585
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5585
	cmpq	160(%rsi), %rax
	jae	.L5585
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5584:
	addq	$4, 136(%rsi)
	ret
.L5585:
	testb	$1, %dl
	jne	.L5587
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5588:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L5593
.L5583:
	rep ret
.L5593:
	testb	$-128, 54(%rsi)
	je	.L5583
	orl	$8388608, 56(%rsi)
	ret
.L5587:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5588
	.cfi_endproc
.LFE536:
	.size	s370_A7A4, .-s370_A7A4
	.p2align 4,,15
	.globl	s370_A7B4
	.type	s370_A7B4, @function
s370_A7B4:
.LFB537:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	je	.L5595
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5596
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5596
	cmpq	160(%rsi), %rax
	jae	.L5596
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5595:
	addq	$4, 136(%rsi)
	ret
.L5596:
	testb	$1, %dl
	jne	.L5598
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5599:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L5604
.L5594:
	rep ret
.L5604:
	testb	$-128, 54(%rsi)
	je	.L5594
	orl	$8388608, 56(%rsi)
	ret
.L5598:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5599
	.cfi_endproc
.LFE537:
	.size	s370_A7B4, .-s370_A7B4
	.p2align 4,,15
	.globl	s370_A7C4
	.type	s370_A7C4, @function
s370_A7C4:
.LFB538:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	jbe	.L5615
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5615:
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5607
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5607
	cmpq	160(%rsi), %rax
	jae	.L5607
	movq	%rax, 136(%rsi)
	ret
.L5607:
	testb	$1, %dl
	jne	.L5609
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5610:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L5616
.L5605:
	rep ret
.L5616:
	testb	$-128, 54(%rsi)
	je	.L5605
	orl	$8388608, 56(%rsi)
	ret
.L5609:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5610
	.cfi_endproc
.LFE538:
	.size	s370_A7C4, .-s370_A7C4
	.p2align 4,,15
	.globl	s370_A7D4
	.type	s370_A7D4, @function
s370_A7D4:
.LFB539:
	.cfi_startproc
	cmpb	$2, 100(%rsi)
	je	.L5618
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5619
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5619
	cmpq	160(%rsi), %rax
	jae	.L5619
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5618:
	addq	$4, 136(%rsi)
	ret
.L5619:
	testb	$1, %dl
	jne	.L5621
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5622:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L5627
.L5617:
	rep ret
.L5627:
	testb	$-128, 54(%rsi)
	je	.L5617
	orl	$8388608, 56(%rsi)
	ret
.L5621:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5622
	.cfi_endproc
.LFE539:
	.size	s370_A7D4, .-s370_A7D4
	.p2align 4,,15
	.globl	s370_A7E4
	.type	s370_A7E4, @function
s370_A7E4:
.LFB540:
	.cfi_startproc
	cmpb	$3, 100(%rsi)
	je	.L5629
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5630
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5630
	cmpq	160(%rsi), %rax
	jae	.L5630
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5629:
	addq	$4, 136(%rsi)
	ret
.L5630:
	testb	$1, %dl
	jne	.L5632
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5633:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L5638
.L5628:
	rep ret
.L5638:
	testb	$-128, 54(%rsi)
	je	.L5628
	orl	$8388608, 56(%rsi)
	ret
.L5632:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5633
	.cfi_endproc
.LFE540:
	.size	s370_A7E4, .-s370_A7E4
	.p2align 4,,15
	.globl	s370_A7F4
	.type	s370_A7F4, @function
s370_A7F4:
.LFB541:
	.cfi_startproc
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L5640
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L5640
	cmpq	160(%rsi), %rax
	jae	.L5640
	movq	%rax, 136(%rsi)
	ret
.L5640:
	testb	$1, %dl
	jne	.L5642
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5643:
	movq	$0, 160(%rsi)
	andl	$4, %edx
	jne	.L5648
.L5639:
	rep ret
.L5648:
	testb	$-128, 54(%rsi)
	je	.L5639
	orl	$8388608, 56(%rsi)
	ret
.L5642:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5643
	.cfi_endproc
.LFE541:
	.size	s370_A7F4, .-s370_A7F4
	.p2align 4,,15
	.globl	s370_branch_on_count_register
	.type	s370_branch_on_count_register, @function
s370_branch_on_count_register:
.LFB542:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	movl	%eax, %ecx
	shrq	%rax
	andl	$15, %ecx
	andl	$120, %eax
	movslq	%ecx, %rdx
	addq	%rsi, %rax
	movl	192(%rsi,%rdx,8), %edi
	subl	$1, 192(%rax)
	je	.L5650
	testl	%ecx, %ecx
	je	.L5650
	movzbl	808(%rsi), %edx
	movl	%edi, %eax
	andl	$16777215, %eax
	testb	$5, %dl
	jne	.L5651
	andl	$16775169, %edi
	cmpl	168(%rsi), %edi
	jne	.L5651
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5650:
	addq	$2, 136(%rsi)
	ret
.L5651:
	andb	$4, %dl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L5661
.L5649:
	rep ret
.L5661:
	testb	$-128, 54(%rsi)
	je	.L5649
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE542:
	.size	s370_branch_on_count_register, .-s370_branch_on_count_register
	.p2align 4,,15
	.globl	s370_branch_on_count
	.type	s370_branch_on_count, @function
s370_branch_on_count:
.LFB543:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %edi
	shrl	$20, %edx
	shrl	$16, %edi
	movl	%eax, %ecx
	andl	$15, %edx
	andl	$4095, %ecx
	andl	$15, %edi
	jne	.L5676
.L5663:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L5664
	cltq
	addl	192(%rsi,%rax,8), %ecx
.L5664:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rdx
	subl	$1, 192(%rdx)
	je	.L5665
	movzbl	808(%rsi), %edx
	movl	%ecx, %eax
	andl	$16777215, %eax
	testb	$5, %dl
	jne	.L5666
	andl	$16775169, %ecx
	cmpl	168(%rsi), %ecx
	jne	.L5666
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5665:
	addq	$4, 136(%rsi)
	ret
.L5666:
	andb	$4, %dl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L5677
.L5662:
	rep ret
.L5676:
	movslq	%edi, %rdi
	addl	192(%rsi,%rdi,8), %ecx
	jmp	.L5663
.L5677:
	testb	$-128, 54(%rsi)
	je	.L5662
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE543:
	.size	s370_branch_on_count, .-s370_branch_on_count
	.p2align 4,,15
	.globl	s370_branch_on_index_high
	.type	s370_branch_on_index_high, @function
s370_branch_on_index_high:
.LFB544:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	movl	%eax, %edi
	shrl	$20, %edx
	movl	%ecx, %r9d
	shrl	$12, %edi
	andl	$15, %edx
	andl	$15, %r9d
	andl	$4095, %eax
	andl	$15, %edi
	je	.L5679
	movslq	%edi, %rdi
	addl	192(%rsi,%rdi,8), %eax
.L5679:
	movslq	%r9d, %rdi
	andl	$1, %ecx
	movl	192(%rsi,%rdi,8), %edi
	movl	%edi, %r8d
	jne	.L5680
	addl	$1, %r9d
	movslq	%r9d, %r9
	movl	192(%rsi,%r9,8), %r8d
.L5680:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rcx
	movl	192(%rcx), %edx
	addl	%edi, %edx
	cmpl	%edx, %r8d
	movl	%edx, 192(%rcx)
	jge	.L5681
	movzbl	808(%rsi), %edx
	movl	%eax, %ecx
	andl	$16777215, %ecx
	testb	$5, %dl
	jne	.L5682
	andl	$16775169, %eax
	cmpl	168(%rsi), %eax
	jne	.L5682
	movl	%ecx, %eax
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5681:
	addq	$4, 136(%rsi)
	ret
.L5682:
	andb	$4, %dl
	movl	%ecx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L5690
.L5678:
	rep ret
.L5690:
	testb	$-128, 54(%rsi)
	je	.L5678
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE544:
	.size	s370_branch_on_index_high, .-s370_branch_on_index_high
	.p2align 4,,15
	.globl	s370_branch_on_index_low_or_equal
	.type	s370_branch_on_index_low_or_equal, @function
s370_branch_on_index_low_or_equal:
.LFB545:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	movl	%eax, %edi
	shrl	$20, %edx
	movl	%ecx, %r9d
	shrl	$12, %edi
	andl	$15, %edx
	andl	$15, %r9d
	andl	$4095, %eax
	andl	$15, %edi
	je	.L5692
	movslq	%edi, %rdi
	addl	192(%rsi,%rdi,8), %eax
.L5692:
	movslq	%r9d, %rdi
	andl	$1, %ecx
	movl	192(%rsi,%rdi,8), %edi
	movl	%edi, %r8d
	jne	.L5693
	addl	$1, %r9d
	movslq	%r9d, %r9
	movl	192(%rsi,%r9,8), %r8d
.L5693:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rcx
	movl	192(%rcx), %edx
	addl	%edi, %edx
	cmpl	%edx, %r8d
	movl	%edx, 192(%rcx)
	jl	.L5694
	movzbl	808(%rsi), %edx
	movl	%eax, %ecx
	andl	$16777215, %ecx
	testb	$5, %dl
	jne	.L5695
	andl	$16775169, %eax
	cmpl	168(%rsi), %eax
	jne	.L5695
	movl	%ecx, %eax
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5694:
	addq	$4, 136(%rsi)
	ret
.L5695:
	andb	$4, %dl
	movl	%ecx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L5703
.L5691:
	rep ret
.L5703:
	testb	$-128, 54(%rsi)
	je	.L5691
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE545:
	.size	s370_branch_on_index_low_or_equal, .-s370_branch_on_index_low_or_equal
	.p2align 4,,15
	.globl	s370_branch_relative_and_save
	.type	s370_branch_relative_and_save, @function
s370_branch_relative_and_save:
.LFB546:
	.cfi_startproc
	movl	(%rdi), %edx
	movl	168(%rsi), %r9d
	movq	136(%rsi), %r8
	movq	144(%rsi), %rdi
	bswap	%edx
	movl	%edx, %ecx
	shrl	$20, %ecx
	leal	4(%r9,%r8), %eax
	andl	$15, %ecx
	testb	$2, 103(%rsi)
	je	.L5705
	subl	%edi, %eax
	orl	$-2147483648, %eax
.L5706:
	movslq	%ecx, %rcx
	movswl	%dx, %edx
	movl	%eax, 192(%rsi,%rcx,8)
	movzbl	808(%rsi), %ecx
	testb	$5, %cl
	jne	.L5707
	leal	(%rdx,%rdx), %eax
	cltq
	addq	%r8, %rax
	cmpq	%rdi, %rax
	jb	.L5707
	cmpq	160(%rsi), %rax
	jae	.L5707
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5705:
	subl	%edi, %eax
	andl	$16777215, %eax
	jmp	.L5706
.L5707:
	testb	$1, %cl
	jne	.L5709
	leal	(%r9,%rdx,2), %eax
	subq	%rdi, %r8
	addl	%r8d, %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5710:
	movq	$0, 160(%rsi)
	andl	$4, %ecx
	jne	.L5715
.L5704:
	rep ret
.L5715:
	testb	$-128, 54(%rsi)
	je	.L5704
	orl	$8388608, 56(%rsi)
	ret
.L5709:
	movl	800(%rsi), %eax
	leal	(%rax,%rdx,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5710
	.cfi_endproc
.LFE546:
	.size	s370_branch_relative_and_save, .-s370_branch_relative_and_save
	.p2align 4,,15
	.globl	s370_branch_relative_on_count
	.type	s370_branch_relative_on_count, @function
s370_branch_relative_on_count:
.LFB547:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$20, %edx
	andl	$15, %edx
	leaq	(%rsi,%rdx,8), %rcx
	movl	192(%rcx), %edi
	leal	-1(%rdi), %edx
	testl	%edx, %edx
	movl	%edx, 192(%rcx)
	je	.L5717
	movzbl	808(%rsi), %ecx
	cwtl
	testb	$5, %cl
	jne	.L5718
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	136(%rsi), %rdx
	cmpq	144(%rsi), %rdx
	jb	.L5718
	cmpq	160(%rsi), %rdx
	jae	.L5718
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5717:
	addq	$4, 136(%rsi)
	ret
.L5718:
	testb	$1, %cl
	jne	.L5720
	movq	136(%rsi), %rdx
	subq	144(%rsi), %rdx
	addl	168(%rsi), %edx
	leal	(%rdx,%rax,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5721:
	movq	$0, 160(%rsi)
	andb	$4, %cl
	jne	.L5726
.L5716:
	rep ret
.L5726:
	testb	$-128, 54(%rsi)
	je	.L5716
	orl	$8388608, 56(%rsi)
	ret
.L5720:
	movl	800(%rsi), %edx
	leal	(%rdx,%rax,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5721
	.cfi_endproc
.LFE547:
	.size	s370_branch_relative_on_count, .-s370_branch_relative_on_count
	.p2align 4,,15
	.globl	s370_branch_relative_on_index_high
	.type	s370_branch_relative_on_index_high, @function
s370_branch_relative_on_index_high:
.LFB548:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	shrl	$20, %edx
	movl	%ecx, %r9d
	andl	$15, %edx
	andl	$15, %r9d
	andl	$1, %ecx
	movslq	%r9d, %rdi
	movl	192(%rsi,%rdi,8), %edi
	movl	%edi, %r8d
	jne	.L5728
	addl	$1, %r9d
	movslq	%r9d, %r9
	movl	192(%rsi,%r9,8), %r8d
.L5728:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rcx
	addl	192(%rcx), %edi
	cmpl	%edi, %r8d
	movl	%edi, 192(%rcx)
	jge	.L5729
	movzbl	808(%rsi), %ecx
	cwtl
	testb	$5, %cl
	jne	.L5730
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	136(%rsi), %rdx
	cmpq	144(%rsi), %rdx
	jb	.L5730
	cmpq	160(%rsi), %rdx
	jae	.L5730
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5729:
	addq	$4, 136(%rsi)
	ret
.L5730:
	testb	$1, %cl
	jne	.L5732
	movq	136(%rsi), %rdx
	subq	144(%rsi), %rdx
	addl	168(%rsi), %edx
	leal	(%rdx,%rax,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5733:
	movq	$0, 160(%rsi)
	andb	$4, %cl
	jne	.L5739
.L5727:
	rep ret
.L5739:
	testb	$-128, 54(%rsi)
	je	.L5727
	orl	$8388608, 56(%rsi)
	ret
.L5732:
	movl	800(%rsi), %edx
	leal	(%rdx,%rax,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5733
	.cfi_endproc
.LFE548:
	.size	s370_branch_relative_on_index_high, .-s370_branch_relative_on_index_high
	.p2align 4,,15
	.globl	s370_branch_relative_on_index_low_or_equal
	.type	s370_branch_relative_on_index_low_or_equal, @function
s370_branch_relative_on_index_low_or_equal:
.LFB549:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	shrl	$20, %edx
	movl	%ecx, %r9d
	andl	$15, %edx
	andl	$15, %r9d
	andl	$1, %ecx
	movslq	%r9d, %rdi
	movl	192(%rsi,%rdi,8), %edi
	movl	%edi, %r8d
	jne	.L5741
	addl	$1, %r9d
	movslq	%r9d, %r9
	movl	192(%rsi,%r9,8), %r8d
.L5741:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rcx
	addl	192(%rcx), %edi
	cmpl	%edi, %r8d
	movl	%edi, 192(%rcx)
	jl	.L5742
	movzbl	808(%rsi), %ecx
	cwtl
	testb	$5, %cl
	jne	.L5743
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	136(%rsi), %rdx
	cmpq	144(%rsi), %rdx
	jb	.L5743
	cmpq	160(%rsi), %rdx
	jae	.L5743
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L5742:
	addq	$4, 136(%rsi)
	ret
.L5743:
	testb	$1, %cl
	jne	.L5745
	movq	136(%rsi), %rdx
	subq	144(%rsi), %rdx
	addl	168(%rsi), %edx
	leal	(%rdx,%rax,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
.L5746:
	movq	$0, 160(%rsi)
	andb	$4, %cl
	jne	.L5752
.L5740:
	rep ret
.L5752:
	testb	$-128, 54(%rsi)
	je	.L5740
	orl	$8388608, 56(%rsi)
	ret
.L5745:
	movl	800(%rsi), %edx
	leal	(%rdx,%rax,2), %eax
	andl	$16777215, %eax
	movl	%eax, 112(%rsi)
	jmp	.L5746
	.cfi_endproc
.LFE549:
	.size	s370_branch_relative_on_index_low_or_equal, .-s370_branch_relative_on_index_low_or_equal
	.p2align 4,,15
	.globl	s370_checksum
	.type	s370_checksum, @function
s370_checksum:
.LFB550:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	movq	%rsi, %r14
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movzbl	3(%rdi), %eax
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	%eax, %ebp
	movzbl	%al, %ebx
	andl	$15, %ebp
	sarl	$4, %ebx
	testb	$1, %al
	movzbl	%bpl, %edi
	movl	%edi, 32(%rsp)
	jne	.L5819
.L5754:
	movl	32(%rsp), %esi
	movzbl	%bpl, %ebp
	movslq	%ebx, %rbx
	leaq	(%r14,%rbp,8), %rax
	movl	192(%rax), %r12d
	movq	%rax, 24(%rsp)
	movl	%esi, %eax
	addl	$1, %eax
	cltq
	andl	$16777215, %r12d
	leaq	(%r14,%rax,8), %rax
	movl	192(%rax), %r13d
	movq	%rax, 8(%rsp)
	leaq	(%r14,%rbx,8), %rax
	movq	%rax, 16(%rsp)
	movl	192(%rax), %r15d
	testl	%r13d, %r13d
	je	.L5780
	leal	5(%rsi), %r11d
	movl	$1024, %r10d
	movslq	%r11d, %r11
	.p2align 4,,10
	.p2align 3
.L5756:
	xorl	%ebx, %ebx
	cmpl	$3, %r13d
	movl	$4, %ebp
	ja	.L5820
.L5815:
	sall	$8, %ebx
	testl	%r13d, %r13d
	jne	.L5821
.L5769:
	subl	$1, %ebp
	jne	.L5815
.L5767:
	movl	%ebx, %ebx
	movl	$4294967295, %eax
	addq	%rbx, %r15
	cmpq	%rax, %r15
	jbe	.L5776
	movl	%r15d, %r15d
	addq	$1, %r15
.L5776:
	testl	%r13d, %r13d
	je	.L5780
	subl	$1, %r10d
	jne	.L5756
	movl	$3, %eax
	jmp	.L5755
	.p2align 4,,10
	.p2align 3
.L5820:
	testb	$3, %r12b
	jne	.L5822
.L5758:
	leal	-77(%r12), %eax
	cmpl	$6, %eax
	jbe	.L5823
.L5760:
	movl	1892(%r14,%r11,4), %eax
	testl	%eax, %eax
	je	.L5761
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%r14,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%r14,%rax,8)
	jne	.L5824
.L5762:
	movzbl	97(%r14), %esi
	testb	%sil, %sil
	jne	.L5825
.L5763:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%r14), %eax
	cmpl	10424(%rdx), %eax
	jne	.L5784
	testb	$4, 46264(%r14,%rcx)
	je	.L5784
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5765:
	movl	(%rax), %ebx
	bswap	%ebx
.L5766:
	addl	$4, %r12d
	subl	$4, %r13d
	andl	$16777215, %r12d
	jmp	.L5767
	.p2align 4,,10
	.p2align 3
.L5780:
	xorl	%eax, %eax
.L5755:
	movq	16(%rsp), %rsi
	movq	24(%rsp), %rdi
	movl	%r15d, 192(%rsi)
	movq	8(%rsp), %rsi
	movl	%r12d, 192(%rdi)
	movl	%r13d, 192(%rsi)
	movb	%al, 100(%r14)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L5819:
	.cfi_restore_state
	movl	$6, %esi
	movq	%r14, %rdi
	call	*2032(%r14)
	jmp	.L5754
	.p2align 4,,10
	.p2align 3
.L5821:
	leal	-80(%r12), %eax
	cmpl	$3, %eax
	jbe	.L5826
.L5779:
	movl	1892(%r14,%r11,4), %eax
	testl	%eax, %eax
	je	.L5770
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%r14,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%r14,%rax,8)
	jne	.L5827
.L5771:
	movzbl	97(%r14), %esi
	testb	%sil, %sil
	jne	.L5828
.L5772:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%r14), %eax
	cmpl	10424(%rdx), %eax
	jne	.L5787
	testb	$4, 46264(%r14,%rcx)
	je	.L5787
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L5774:
	movzbl	(%rax), %eax
	addl	$1, %r12d
	subl	$1, %r13d
	andl	$16777215, %r12d
	orl	%eax, %ebx
	jmp	.L5769
.L5828:
	cmpb	43192(%r14,%rcx), %sil
	je	.L5772
.L5787:
	movzbl	%sil, %r8d
.L5773:
	movl	32(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%r14, %rdx
	movl	%r12d, %edi
	movq	%r11, 40(%rsp)
	movl	%r10d, 36(%rsp)
	call	s370_logical_to_main_l
	movq	40(%rsp), %r11
	movl	36(%rsp), %r10d
	jmp	.L5774
.L5827:
	movzbl	44216(%r14,%rcx), %esi
	testb	%sil, 1976(%r14,%rax)
	jne	.L5771
.L5770:
	movzbl	97(%r14), %r8d
	jmp	.L5773
.L5826:
	movq	%r14, %rdi
	movq	%r11, 40(%rsp)
	movl	%r10d, 36(%rsp)
	call	s370_store_int_timer
	movq	40(%rsp), %r11
	movl	36(%rsp), %r10d
	jmp	.L5779
.L5825:
	cmpb	43192(%r14,%rcx), %sil
	je	.L5763
.L5784:
	movzbl	%sil, %r8d
.L5764:
	movl	32(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%r14, %rdx
	movl	%r12d, %edi
	movq	%r11, 40(%rsp)
	movl	%r10d, 36(%rsp)
	call	s370_logical_to_main_l
	movq	40(%rsp), %r11
	movl	36(%rsp), %r10d
	jmp	.L5765
.L5824:
	movzbl	44216(%r14,%rcx), %esi
	testb	%sil, 1976(%r14,%rax)
	jne	.L5762
.L5761:
	movzbl	97(%r14), %r8d
	jmp	.L5764
.L5822:
	movl	%r12d, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L5758
	movl	32(%rsp), %esi
	movq	%r14, %rdx
	movl	%r12d, %edi
	movq	%r11, 40(%rsp)
	movl	%r10d, 36(%rsp)
	call	s370_vfetch4_full
	movq	40(%rsp), %r11
	movl	%eax, %ebx
	movl	36(%rsp), %r10d
	jmp	.L5766
.L5823:
	movq	%r14, %rdi
	movq	%r11, 40(%rsp)
	movl	%r10d, 36(%rsp)
	call	s370_store_int_timer
	movq	40(%rsp), %r11
	movl	36(%rsp), %r10d
	jmp	.L5760
	.cfi_endproc
.LFE550:
	.size	s370_checksum, .-s370_checksum
	.p2align 4,,15
	.globl	s370_compare_register
	.type	s370_compare_register, @function
s370_compare_register:
.LFB551:
	.cfi_startproc
	movzbl	1(%rdi), %edx
	movl	$1, %ecx
	addq	$2, 136(%rsi)
	movq	%rdx, %rax
	andl	$15, %edx
	movl	192(%rsi,%rdx,8), %edi
	shrq	$4, %rax
	andl	$15, %eax
	cmpl	%edi, 192(%rsi,%rax,8)
	jl	.L5830
	setg	%cl
	addl	%ecx, %ecx
.L5830:
	movb	%cl, 100(%rsi)
	ret
	.cfi_endproc
.LFE551:
	.size	s370_compare_register, .-s370_compare_register
	.p2align 4,,15
	.globl	s370_compare
	.type	s370_compare, @function
s370_compare:
.LFB552:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %edx
	shrl	$20, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L5869
.L5834:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L5835
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L5835:
	movl	%ebp, %r13d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r13d
	testb	$3, %bpl
	jne	.L5870
.L5836:
	leal	-77(%r13), %edx
	cmpl	$6, %edx
	jbe	.L5871
.L5838:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L5839
	leal	1(%rdx), %esi
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L5872
.L5840:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L5873
.L5841:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L5839
	testb	$4, 46264(%rbx,%rcx)
	je	.L5839
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L5842:
	movl	(%rax), %eax
	bswap	%eax
.L5843:
	movslq	%r12d, %r12
	movl	$1, %edx
	cmpl	%eax, 192(%rbx,%r12,8)
	jl	.L5844
	setg	%dl
	addl	%edx, %edx
.L5844:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L5872:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L5840
.L5839:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	jmp	.L5842
.L5870:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L5836
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_vfetch4_full
	jmp	.L5843
.L5869:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	jmp	.L5834
.L5873:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5841
	jmp	.L5839
.L5871:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L5838
	.cfi_endproc
.LFE552:
	.size	s370_compare, .-s370_compare
	.p2align 4,,15
	.globl	s370_compare_and_form_codeword
	.type	s370_compare_and_form_codeword, @function
s370_compare_and_form_codeword:
.LFB553:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	andl	$4095, %eax
	shrl	$12, %edx
	movl	%eax, 24(%rsp)
	andl	$15, %edx
	je	.L5875
	movslq	%edx, %rdx
	movl	192(%rsi,%rdx,8), %eax
	addl	%eax, 24(%rsp)
	andl	$16777215, 24(%rsp)
.L5875:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	testb	$1, 200(%rbx)
	jne	.L5876
	movl	208(%rbx), %eax
	testb	$1, %al
	je	.L6275
.L5876:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movl	208(%rbx), %eax
	movl	216(%rbx), %r13d
.L5877:
	movzwl	24(%rsp), %edi
	andw	$32766, %di
	movl	%edi, %r15d
	jmp	.L6071
	.p2align 4,,10
	.p2align 3
.L5878:
	movl	200(%rbx), %r14d
	movzwl	%ax, %eax
	addl	%eax, %r13d
	movl	%r13d, %ebp
	andl	$16777215, %ebp
	addl	%eax, %r14d
	movl	1916(%rbx), %eax
	movl	%r14d, %r12d
	andl	$16777215, %r12d
	testl	%eax, %eax
	je	.L5880
	movl	%r12d, %edi
	addl	$1, %eax
	shrl	$11, %edi
	cltq
	movl	%edi, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L6276
.L5881:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L6277
.L5883:
	movl	%r14d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L6089
	testb	$4, 46264(%rbx,%rcx)
	je	.L6089
	movl	%r12d, %r10d
	xorq	26808(%rdx), %r10
.L5884:
	movl	%r12d, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	je	.L5955
	subl	$79, %r12d
	cmpl	$4, %r12d
	jbe	.L6278
.L5956:
	movzwl	(%r10), %eax
	movl	1916(%rbx), %r14d
	movzbl	97(%rbx), %r12d
	movw	%ax, 64(%rsp)
.L5957:
	testl	%r14d, %r14d
	je	.L5975
	leal	1(%r14), %r8d
	movl	%ebp, %esi
	shrl	$11, %esi
	movslq	%r8d, %r8
	movl	%esi, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%r8,8)
	jne	.L6279
.L5976:
	testb	%r12b, %r12b
	jne	.L6280
.L5978:
	movl	%r13d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L5977
	testb	$4, 46264(%rbx,%rcx)
	je	.L5977
	movl	%ebp, %r12d
	xorq	26808(%rdx), %r12
.L5979:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	je	.L6050
	subl	$79, %ebp
	cmpl	$4, %ebp
	jbe	.L6281
.L6051:
	movzwl	(%r12), %eax
	movw	%ax, 80(%rsp)
.L6052:
	movl	208(%rbx), %eax
	leaq	80(%rsp), %rsi
	movl	$2, %edx
	leaq	64(%rsp), %rdi
	leal	2(%rax), %ebp
	movl	%ebp, 208(%rbx)
	call	memcmp
	testl	%eax, %eax
	jne	.L6070
	movl	216(%rbx), %r13d
	movl	%ebp, %eax
.L6071:
	cmpw	%ax, %r15w
	jae	.L5878
	orl	$-2147483648, %r13d
	movb	$0, 100(%rbx)
	movl	%r13d, 208(%rbx)
	addq	$120, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L6275:
	.cfi_restore_state
	movl	216(%rbx), %r13d
	testb	$1, %r13b
	je	.L5877
	jmp	.L5876
	.p2align 4,,10
	.p2align 3
.L6070:
	movzbl	24(%rsp), %edx
	andl	$1, %edx
	testl	%eax, %eax
	js	.L6282
	testb	%dl, %dl
	jne	.L6075
	movl	200(%rbx), %ecx
	movb	$2, 100(%rbx)
	movl	216(%rbx), %esi
	movzbl	64(%rsp), %eax
	movzbl	65(%rsp), %edx
	movl	%ecx, 216(%rbx)
	movl	%esi, 200(%rbx)
	notl	%eax
	notl	%edx
.L6074:
	sall	$16, %ebp
	movzbl	%dl, %edx
	movzbl	%al, %eax
	orl	%ebp, %edx
	sall	$8, %eax
	orl	%eax, %edx
	movl	%edx, 208(%rbx)
	addq	$120, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L6282:
	.cfi_restore_state
	testb	%dl, %dl
	jne	.L6073
	movzbl	80(%rsp), %eax
	movb	$1, 100(%rbx)
	movzbl	81(%rsp), %edx
	notl	%eax
	notl	%edx
	jmp	.L6074
.L6075:
	movzwl	80(%rsp), %edx
	movb	$1, 100(%rbx)
	movl	%edx, %eax
	shrw	$8, %dx
	jmp	.L6074
.L6073:
	movl	200(%rbx), %eax
	movb	$2, 100(%rbx)
	movzwl	64(%rsp), %edx
	movl	216(%rbx), %ecx
	movl	%eax, 216(%rbx)
	movl	%edx, %eax
	shrw	$8, %dx
	movl	%ecx, 200(%rbx)
	jmp	.L6074
.L5975:
	movl	%ebp, %esi
	shrl	$11, %esi
.L5977:
	andl	$1023, %esi
	testb	$8, 98(%rbx)
	movl	%esi, 28(%rsp)
	je	.L5980
	testb	$4, 96(%rbx)
	je	.L5980
	movzbl	99(%rbx), %ecx
	andb	$-8, 994(%rbx)
	cmpb	$-128, %cl
	je	.L6283
	movl	336(%rbx), %edx
	xorl	%eax, %eax
.L5984:
	movl	328(%rbx), %esi
	movq	%rdx, 968(%rbx)
	movl	%eax, 976(%rbx)
	movl	%esi, %edi
	andl	$12582912, %edi
	cmpl	$8388608, %edi
	jne	.L6284
.L6111:
	testl	$2621440, %esi
	jne	.L6101
	movl	%r13d, %r9d
	movslq	28(%rsp), %r14
	andl	$14680064, %r9d
	movl	%r9d, 8(%rsp)
	orl	2224(%rbx), %r9d
	leaq	(%rbx,%r14,8), %r11
	movq	%r11, 16(%rsp)
	cmpl	10424(%r11), %r9d
	je	.L6285
.L5987:
	movl	%esi, %edi
	movq	%rdx, %r11
	andl	$-16777216, %edx
	andl	$3670016, %edi
	andl	$16777152, %r11d
	cmpl	$1048576, %edi
	je	.L6286
	movq	%r13, %rsi
	shrq	$14, %rsi
	andl	$1020, %esi
	addq	%r11, %rsi
	testl	%edi, %edi
	movq	%rsi, (%rsp)
	jne	.L5992
	movl	%ebp, %esi
	sall	$4, %esi
	andl	$-16777216, %esi
	cmpl	%esi, %edx
	jb	.L5993
.L5992:
	movq	(%rsp), %rax
	cmpq	1040(%rbx), %rax
	ja	.L5994
	movl	%eax, %edx
	andl	$2147479552, %eax
	jne	.L5995
	movl	88(%rbx), %r11d
.L5996:
	movl	%r11d, %eax
	xorl	%edx, %eax
	movq	%rax, (%rsp)
.L5997:
	movq	(%rsp), %rdi
	movq	%rbx, %rsi
	call	s370_fetch_main_absolute
	movl	(%rax), %r11d
	bswap	%r11d
	testb	$1, %r11b
	jne	.L5998
	testl	$251658240, %r11d
	jne	.L5985
	movl	328(%rbx), %eax
	movl	%r11d, %r10d
	movl	%r11d, %edx
	andl	$16777208, %r10d
	andl	$-268435456, %edx
	movl	%eax, %ecx
	andl	$12582912, %eax
	andl	$3670016, %ecx
	cmpl	$1048576, %ecx
	je	.L6287
	movl	%eax, %esi
	movq	%r13, %rax
	shrq	$10, %rax
	andl	$62, %eax
	cmpl	$8388608, %esi
	jne	.L6003
	movq	%r13, %rax
	shrq	$11, %rax
	andl	$30, %eax
.L6003:
	addq	%rax, %r10
	cmpq	%r10, 1040(%rbx)
	jae	.L6288
.L5994:
	movl	$5, %r8d
	movl	$5, %esi
	movw	%r8w, 992(%rbx)
.L6019:
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L5998:
	movq	(%rsp), %rax
	movl	$16, %esi
	movzbl	99(%rbx), %ecx
	movw	%si, 992(%rbx)
	movq	%rax, 944(%rbx)
	movl	976(%rbx), %eax
.L6020:
	movl	%r13d, %edx
	andl	$16775168, %edx
	cmpl	$1, %eax
	movl	%edx, 792(%rbx)
	je	.L6289
	cmpl	$2, %eax
	je	.L6290
.L6025:
	orl	%edx, %eax
	movl	%eax, 792(%rbx)
.L6022:
	cmpb	$64, %cl
	jne	.L6049
	movb	$1, 1012(%rbx)
.L6048:
.L6049:
	movzwl	992(%rbx), %esi
	movq	%rbx, %rdi
	xorl	%r12d, %r12d
	call	*2032(%rbx)
	jmp	.L5979
.L5980:
	movslq	28(%rsp), %r14
	movl	%r13d, %ecx
	movl	%ebp, %eax
	andl	$16775168, %ecx
	movq	%rax, 944(%rbx)
	movl	%r13d, %edi
	andb	$-8, 994(%rbx)
	movq	%rcx, 960(%rbx)
	andl	$14680064, %edi
	movl	%edi, 8(%rsp)
	leaq	(%rbx,%r14,8), %rdx
	movl	$-1, 2232(%rdx)
	movl	2224(%rbx), %esi
	movl	%edi, 18616(%rdx)
	orl	%edi, %esi
	movl	%esi, 10424(%rdx)
	movb	$0, 45240(%rbx,%r14)
	movb	$0, 44216(%rbx,%r14)
	movb	$0, 46264(%rbx,%r14)
.L5982:
	movl	%eax, %edi
	movl	%eax, %esi
	movl	88(%rbx), %edx
	andl	$2147479552, %edi
	je	.L6028
	cmpl	%edx, %edi
	je	.L6028
.L6029:
	movl	%ecx, %edi
	movq	%rax, 952(%rbx)
	movl	%ecx, %esi
	andl	$2147479552, %edi
	je	.L6030
	cmpl	%edi, %edx
	je	.L6030
.L6031:
	cmpq	1040(%rbx), %rax
	ja	.L6032
	movzbl	1144(%rbx), %esi
	testb	$2, %sil
	jne	.L6291
.L6033:
	movq	%rax, %rdx
	shrq	$11, %rdx
	addq	1032(%rbx), %rdx
	testb	%r12b, %r12b
	movq	%rdx, 984(%rbx)
	movzbl	(%rdx), %esi
	jne	.L6292
.L6044:
	orl	$4, %esi
	movb	%sil, (%rdx)
	leaq	(%rbx,%r14,8), %rsi
	movq	984(%rbx), %rdx
	movq	%rdx, 35000(%rsi)
	movzbl	(%rdx), %edx
	movb	$4, 46264(%rbx,%r14)
	movq	1024(%rbx), %r12
	andl	$-16, %edx
	movb	%dl, 43192(%rbx,%r14)
	movl	%r13d, %edx
	addq	%r12, %rcx
	andl	$16775168, %edx
	addq	%rax, %r12
	xorq	%rdx, %rcx
	movq	%rcx, 26808(%rsi)
	jmp	.L5979
.L6277:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L5883
.L6089:
	movb	%sil, 8(%rsp)
.L5882:
	andl	$1023, %edi
	testb	$8, 98(%rbx)
	movl	%edi, 28(%rsp)
	je	.L5885
	testb	$4, 96(%rbx)
	je	.L5885
	movzbl	99(%rbx), %ecx
	andb	$-8, 994(%rbx)
	cmpb	$-128, %cl
	je	.L6293
	movl	336(%rbx), %edx
	xorl	%eax, %eax
.L5889:
	movl	328(%rbx), %edi
	movq	%rdx, 968(%rbx)
	movl	%eax, 976(%rbx)
	movl	%edi, %esi
	andl	$12582912, %esi
	cmpl	$8388608, %esi
	jne	.L6294
.L6110:
	testl	$2621440, %edi
	jne	.L6091
	movl	%r14d, %r9d
	movslq	28(%rsp), %r10
	andl	$14680064, %r9d
	movl	%r9d, 32(%rsp)
	orl	2224(%rbx), %r9d
	leaq	(%rbx,%r10,8), %r11
	movq	%r11, 40(%rsp)
	cmpl	10424(%r11), %r9d
	je	.L6295
.L5892:
	movq	%rdx, %r8
	andl	$3670016, %edi
	andl	$-16777216, %edx
	andl	$16777152, %r8d
	cmpl	$1048576, %edi
	je	.L6296
	movq	%r14, %rsi
	shrq	$14, %rsi
	andl	$1020, %esi
	addq	%r8, %rsi
	testl	%edi, %edi
	movq	%rsi, (%rsp)
	jne	.L5897
	movl	%r12d, %esi
	sall	$4, %esi
	andl	$-16777216, %esi
	cmpl	%esi, %edx
	jb	.L5898
.L5897:
	movq	(%rsp), %rax
	cmpq	%rax, 1040(%rbx)
	jb	.L5899
	movl	%eax, %edx
	andl	$2147479552, %eax
	jne	.L5900
	movl	88(%rbx), %eax
.L5901:
	movl	%eax, %edi
	xorl	%edx, %edi
	movq	%rdi, (%rsp)
.L5902:
	movq	(%rsp), %rdi
	movq	%rbx, %rsi
	movq	%r10, 48(%rsp)
	call	s370_fetch_main_absolute
	movq	48(%rsp), %r10
	movl	(%rax), %eax
	bswap	%eax
	testb	$1, %al
	movl	%eax, 16(%rsp)
	jne	.L5903
	testl	$251658240, %eax
	jne	.L5890
	movl	%eax, %edx
	movl	%eax, %r11d
	movl	328(%rbx), %eax
	andl	$16777208, %r11d
	andl	$-268435456, %edx
	movl	%eax, %ecx
	andl	$12582912, %eax
	andl	$3670016, %ecx
	cmpl	$1048576, %ecx
	je	.L6297
	movl	%eax, %esi
	movq	%r14, %rax
	shrq	$10, %rax
	andl	$62, %eax
	cmpl	$8388608, %esi
	jne	.L5908
	movq	%r14, %rax
	shrq	$11, %rax
	andl	$30, %eax
.L5908:
	addq	%rax, %r11
	cmpq	%r11, 1040(%rbx)
	jae	.L6298
.L5899:
	movl	$5, %eax
	movl	$5, %esi
	movw	%ax, 992(%rbx)
.L5924:
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L5903:
	movl	$16, %eax
	movzbl	99(%rbx), %ecx
	movw	%ax, 992(%rbx)
	movq	(%rsp), %rax
	movq	%rax, 944(%rbx)
	movl	976(%rbx), %eax
.L5925:
	movl	%r14d, %edx
	andl	$16775168, %edx
	cmpl	$1, %eax
	movl	%edx, 792(%rbx)
	je	.L6299
	cmpl	$2, %eax
	je	.L6300
.L5930:
	orl	%edx, %eax
	movl	%eax, 792(%rbx)
.L5927:
	cmpb	$64, %cl
	jne	.L5954
	movb	$1, 1012(%rbx)
.L5953:
.L5954:
	movzwl	992(%rbx), %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	xorl	%r10d, %r10d
	jmp	.L5884
.L5885:
	movslq	28(%rsp), %r10
	movl	%r14d, %ecx
	movl	%r12d, %eax
	andl	$16775168, %ecx
	movq	%rax, 944(%rbx)
	movl	%r14d, %edi
	andb	$-8, 994(%rbx)
	movq	%rcx, 960(%rbx)
	andl	$14680064, %edi
	movl	%edi, 32(%rsp)
	leaq	(%rbx,%r10,8), %rdx
	movl	$-1, 2232(%rdx)
	movl	2224(%rbx), %esi
	movl	%edi, 18616(%rdx)
	orl	%edi, %esi
	movl	%esi, 10424(%rdx)
	movb	$0, 45240(%rbx,%r10)
	movb	$0, 44216(%rbx,%r10)
	movb	$0, 46264(%rbx,%r10)
.L5887:
	movl	%eax, %edi
	movl	%eax, %esi
	movl	88(%rbx), %edx
	andl	$2147479552, %edi
	je	.L5933
	cmpl	%edx, %edi
	je	.L5933
.L5934:
	movl	%ecx, %edi
	movq	%rax, 952(%rbx)
	movl	%ecx, %esi
	andl	$2147479552, %edi
	je	.L5935
	cmpl	%edx, %edi
	je	.L5935
.L5936:
	cmpq	1040(%rbx), %rax
	ja	.L5937
	movzbl	1144(%rbx), %esi
	testb	$2, %sil
	jne	.L6301
.L5938:
	movq	%rax, %rdx
	shrq	$11, %rdx
	addq	1032(%rbx), %rdx
	cmpb	$0, 8(%rsp)
	movq	%rdx, 984(%rbx)
	movzbl	(%rdx), %esi
	jne	.L6302
.L5949:
	orl	$4, %esi
	movb	%sil, (%rdx)
	leaq	(%rbx,%r10,8), %rsi
	movq	984(%rbx), %rdx
	movq	%rdx, 35000(%rsi)
	movzbl	(%rdx), %edx
	movb	$4, 46264(%rbx,%r10)
	andl	$-16, %edx
	movb	%dl, 43192(%rbx,%r10)
	movq	1024(%rbx), %r10
	movl	%r14d, %edx
	andl	$16775168, %edx
	addq	%r10, %rcx
	addq	%rax, %r10
	xorq	%rdx, %rcx
	movq	%rcx, 26808(%rsi)
	jmp	.L5884
.L6030:
	movl	%edx, %ecx
	xorl	%esi, %ecx
	jmp	.L6031
.L6028:
	movl	%esi, %eax
	xorl	%edx, %eax
	jmp	.L6029
.L5935:
	movl	%edx, %ecx
	xorl	%esi, %ecx
	jmp	.L5936
.L5933:
	movl	%esi, %eax
	xorl	%edx, %eax
	jmp	.L5934
.L5955:
	andl	$2047, %r14d
	movl	$2048, %eax
	subl	%r14d, %eax
	movl	1916(%rbx), %r14d
	movl	%eax, %edi
	movl	%eax, (%rsp)
	testl	%r14d, %r14d
	je	.L5958
	leal	(%rdi,%r12), %esi
	leal	1(%r14), %eax
	movl	%esi, %edi
	andl	$16777215, %edi
	cltq
	movl	%edi, %edx
	shrl	$11, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %r9d
	cmpl	%r9d, 320(%rbx,%rax,8)
	jne	.L6303
.L5959:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L6304
.L5961:
	andl	$14680064, %esi
	orl	2224(%rbx), %esi
	cmpl	10424(%rcx), %esi
	jne	.L6099
	testb	$4, 46264(%rbx,%rdx)
	je	.L6099
	movl	%edi, %r11d
	movl	%eax, %r12d
	xorq	26808(%rcx), %r11
.L5962:
	movl	(%rsp), %r9d
	movq	%r10, %rsi
	leaq	64(%rsp), %rdi
	cmpq	$8, %r9
	jae	.L6305
.L5963:
	xorl	%eax, %eax
	testb	$4, %r9b
	je	.L5966
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L5966:
	testb	$2, %r9b
	je	.L5967
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L5967:
	testb	$1, %r9b
	je	.L5965
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L5965:
	leaq	64(%rsp), %rax
	movl	$2, %edx
	movq	%r11, %rsi
	subl	(%rsp), %edx
	leaq	(%rax,%r9), %rdi
	movq	%rdi, %r10
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L6306
.L5969:
	xorl	%eax, %eax
	testb	$4, %dl
	je	.L5972
	movl	(%rsi), %eax
	movl	%eax, (%r10)
	movl	$4, %eax
.L5972:
	testb	$2, %dl
	je	.L5973
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%r10,%rax)
	addq	$2, %rax
.L5973:
	andl	$1, %edx
	je	.L5957
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%r10,%rax)
	jmp	.L5957
.L6050:
	andl	$2047, %r13d
	movl	$2048, %eax
	subl	%r13d, %eax
	movl	%eax, %r13d
	movl	1916(%rbx), %eax
	testl	%eax, %eax
	je	.L6053
	leal	0(%r13,%rbp), %ecx
	leal	1(%rax), %esi
	movl	%ecx, %edi
	andl	$16777215, %edi
	movslq	%esi, %rsi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbx,%rsi,8)
	jne	.L6307
.L6054:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L6308
.L6056:
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L6055
	testb	$4, 46264(%rbx,%rax)
	je	.L6055
	movl	%edi, %r14d
	xorq	26808(%rdx), %r14
.L6057:
	movl	%r13d, %ebp
	movq	%r12, %rsi
	leaq	80(%rsp), %rdi
	cmpq	$8, %rbp
	jae	.L6309
.L6058:
	xorl	%edx, %edx
	testb	$4, %bpl
	je	.L6061
	movl	(%rsi), %eax
	movb	$4, %dl
	movl	%eax, (%rdi)
.L6061:
	testb	$2, %bpl
	je	.L6062
	movzwl	(%rsi,%rdx), %eax
	movw	%ax, (%rdi,%rdx)
	addq	$2, %rdx
.L6062:
	testb	$1, %bpl
	je	.L6060
	movzbl	(%rsi,%rdx), %eax
	movb	%al, (%rdi,%rdx)
.L6060:
	leaq	80(%rsp), %rax
	movl	$2, %edx
	movq	%r14, %rsi
	leaq	(%rax,%rbp), %rdi
	subl	%r13d, %edx
	movslq	%edx, %rdx
	movq	%rdi, %r8
	cmpq	$8, %rdx
	jae	.L6310
.L6064:
	xorl	%eax, %eax
	testb	$4, %dl
	je	.L6067
	movl	(%rsi), %eax
	movl	%eax, (%r8)
	movl	$4, %eax
.L6067:
	testb	$2, %dl
	je	.L6068
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%r8,%rax)
	addq	$2, %rax
.L6068:
	andl	$1, %edx
	je	.L6052
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%r8,%rax)
	jmp	.L6052
.L6280:
	cmpb	%r12b, 43192(%rbx,%rcx)
	je	.L5978
	jmp	.L5977
	.p2align 4,,10
	.p2align 3
.L6276:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L5881
.L6272:
	movzbl	97(%rbx), %eax
	movb	%al, 8(%rsp)
	jmp	.L5882
.L5880:
	movl	%r12d, %edi
	shrl	$11, %edi
	jmp	.L6272
.L6279:
	movzbl	1976(%rbx,%r8), %eax
	testb	%al, 44216(%rbx,%rcx)
	jne	.L5976
	jmp	.L5977
	.p2align 4,,10
	.p2align 3
.L6294:
	cmpl	$4194304, %esi
	je	.L6110
.L6091:
	movq	$0, (%rsp)
.L5890:
	movl	$18, %eax
	movl	$18, %esi
	movw	%ax, 992(%rbx)
	jmp	.L5924
.L6284:
	cmpl	$4194304, %edi
	je	.L6111
.L6101:
	movq	$0, (%rsp)
.L5985:
	movl	$18, %edi
	movl	$18, %esi
	movw	%di, 992(%rbx)
	jmp	.L6019
.L6281:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	jmp	.L6051
.L6278:
	movq	%rbx, %rdi
	movq	%r10, (%rsp)
	call	s370_store_int_timer
	movq	(%rsp), %r10
	jmp	.L5956
.L6310:
	cmpq	$127, %rdx
	ja	.L6311
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rdi, %r8
	jmp	.L6064
.L6309:
	cmpq	$127, %rbp
	ja	.L6312
	leaq	80(%rsp), %rdi
	movq	%rbp, %rcx
	shrq	$3, %rcx
	rep movsq
	jmp	.L6058
.L6306:
	cmpq	$127, %rdx
	ja	.L6313
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rdi, %r10
	jmp	.L5969
.L6305:
	cmpq	$127, %r9
	ja	.L6314
	leaq	64(%rsp), %rdi
	movq	%r9, %rcx
	shrq	$3, %rcx
	rep movsq
	jmp	.L5963
.L6283:
	movl	384(%rbx), %edx
	movl	$2, %eax
	jmp	.L5984
.L6293:
	movl	384(%rbx), %edx
	movl	$2, %eax
	jmp	.L5889
.L6302:
	movl	%esi, %edi
	andl	$-16, %edi
	cmpb	%dil, 8(%rsp)
	je	.L5949
	testb	$8, %sil
	je	.L5949
	testb	$2, 1144(%rbx)
	jne	.L6315
.L5952:
	movl	$4, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L5954
.L6296:
	movq	%r14, %rax
	shrq	$18, %rax
	andl	$60, %eax
	addq	%r8, %rax
	movq	%rax, (%rsp)
	jmp	.L5897
.L6290:
	testb	$127, %cl
	jne	.L6025
	orl	$-2147483646, %edx
	movl	%edx, 792(%rbx)
	jmp	.L6022
.L6289:
	movq	968(%rbx), %rsi
	movl	336(%rbx), %eax
	xorq	%rsi, %rax
	testl	$2147479552, %eax
	je	.L6022
	movl	384(%rbx), %eax
	xorq	%rsi, %rax
	testl	$2147479552, %eax
	jne	.L6023
	orl	$2, %edx
	movl	%edx, 792(%rbx)
	jmp	.L6022
.L6298:
	testl	%ecx, %ecx
	jne	.L5910
	movl	%r14d, %eax
	andl	$61440, %eax
	shrl	$12, %eax
	cmpl	%eax, %edx
	jb	.L5909
.L5910:
	movl	%r11d, %eax
	movl	%r11d, %edx
	andl	$2147479552, %eax
	jne	.L5911
	movl	88(%rbx), %r11d
.L5912:
	xorl	%edx, %r11d
.L5913:
	movzbl	1144(%rbx), %eax
	testb	$2, %al
	jne	.L6316
	movq	%r11, %rax
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	movzwl	(%rax,%r11), %edi
.L6082:
	movl	328(%rbx), %ecx
#APP
# 545 "inline.h" 1
	rorw $8, %di
# 0 "" 2
#NO_APP
	movl	%edi, %edx
	andl	$12582912, %ecx
	cmpl	$8388608, %ecx
	je	.L6317
	cmpl	$4194304, %ecx
	je	.L6318
.L5918:
	testb	$4, 16(%rsp)
	jne	.L5919
	movzbl	994(%rbx), %eax
	shrb	%al
	andl	$3, %eax
.L5920:
	movq	968(%rbx), %r9
	movzwl	%di, %edi
	movq	40(%rsp), %rsi
	movl	32(%rsp), %r8d
	movl	16(%rsp), %r11d
	movl	%r9d, 2232(%rsi)
	orl	2224(%rbx), %r8d
	movl	%edi, 18616(%rsi)
	shrl	%r11d
	andl	$1, %r11d
	cmpl	$8388608, %ecx
	movl	%r8d, 10424(%rsi)
	movb	%r11b, 44216(%rbx,%r10)
	movb	%al, 45240(%rbx,%r10)
	movb	$0, 46264(%rbx,%r10)
	movq	$0, 26808(%rsi)
	je	.L6319
.L5921:
	andl	$65528, %edx
	movl	%r14d, %eax
	andl	$2047, %eax
	sall	$8, %edx
	orl	%eax, %edx
	movl	%edx, %eax
.L5923:
	movq	%rax, %rcx
	xorl	%edx, %edx
	movq	%rax, 944(%rbx)
	andl	$2147481600, %ecx
	movw	%dx, 992(%rbx)
	movq	%rcx, 960(%rbx)
	jmp	.L5887
.L6297:
	movl	%eax, %ecx
	movq	%r14, %rax
	shrq	$10, %rax
	andl	$1022, %eax
	cmpl	$8388608, %ecx
	jne	.L5906
	movq	%r14, %rax
	shrq	$11, %rax
	andl	$510, %eax
.L5906:
	addq	%rax, %r11
	cmpq	1040(%rbx), %r11
	ja	.L5899
	movl	%r14d, %eax
	andl	$983040, %eax
	shrl	$16, %eax
	cmpl	%eax, %edx
	jae	.L5910
.L5917:
.L5909:
	movl	$17, %eax
	movq	%r11, 944(%rbx)
	movzbl	99(%rbx), %ecx
	movw	%ax, 992(%rbx)
	movl	976(%rbx), %eax
	jmp	.L5925
.L6319:
	movl	28(%rsp), %esi
	xorl	$1, %esi
	movslq	%esi, %rsi
	leaq	(%rbx,%rsi,8), %rcx
	movl	%r9d, 2232(%rcx)
	movl	%r8d, 10424(%rcx)
	movl	%edi, 18616(%rcx)
	movb	%r11b, 44216(%rbx,%rsi)
	movb	%al, 45240(%rbx,%rsi)
	movb	$0, 46264(%rbx,%rsi)
	movq	$0, 26808(%rcx)
.L5922:
	movl	%edx, %eax
	andl	$65520, %edx
	andl	$6, %eax
	sall	$8, %edx
	sall	$23, %eax
	orl	%edx, %eax
	movl	%r14d, %edx
	andl	$4095, %edx
	orl	%edx, %eax
	jmp	.L5923
.L5919:
	movzbl	994(%rbx), %esi
	movl	%esi, %eax
	andl	$-7, %esi
	shrb	%al
	andl	$3, %eax
	orl	$1, %eax
	leal	(%rax,%rax), %r8d
	orl	%r8d, %esi
	movb	%sil, 994(%rbx)
	jmp	.L5920
.L6318:
	testb	$4, %dil
	jne	.L5909
	testb	$2, %dil
	jne	.L5890
	.p2align 4,,3
	jmp	.L5918
.L6317:
	testb	$8, %dil
	.p2align 4,,3
	jne	.L5909
	.p2align 4,,7
	jmp	.L5918
.L6316:
	testb	$4, %al
	movq	%r11, %rdx
	.p2align 4,,2
	jne	.L5915
	movl	%r11d, %edi
	movq	1056(%rbx), %rdx
	movl	$1, %r9d
	addl	1096(%rbx), %edi
	xorl	%r8d, %r8d
	movl	$4, %ecx
	movl	$-3, %esi
	movq	%r10, 56(%rsp)
	movq	%r11, 48(%rsp)
	call	s390_logical_to_main_l
	movq	1056(%rbx), %rax
	movq	56(%rsp), %r10
	movq	48(%rsp), %r11
	movq	952(%rax), %rdx
.L5915:
	movq	%rdx, %rax
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	movzwl	(%rax,%rdx), %edi
	jmp	.L6082
.L5911:
	cmpl	88(%rbx), %eax
	jne	.L5913
	movl	%eax, %r11d
	jmp	.L5912
.L6023:
	movl	432(%rbx), %eax
	xorq	%rsi, %rax
	testl	$2147479552, %eax
	jne	.L6024
	orl	$3, %edx
	movl	%edx, 792(%rbx)
	jmp	.L6022
.L6301:
	movq	1056(%rbx), %rdx
	andb	$-7, 994(%rdx)
	andl	$4, %esi
	jne	.L5938
	movq	1080(%rbx), %rcx
	movl	$-3, %esi
	testb	$1, 2(%rcx)
	je	.L5939
	movzbl	99(%rbx), %ecx
	andl	$64, %ecx
	cmpb	$1, %cl
	sbbl	%esi, %esi
	andl	$-4, %esi
	addl	$1, %esi
.L5939:
	movl	1096(%rbx), %edi
	xorl	%ecx, %ecx
	movq	%r10, (%rsp)
	addl	%eax, %edi
	call	s390_translate_addr
	movq	(%rsp), %r10
	testl	%eax, %eax
	je	.L5940
	movq	1056(%rbx), %rax
	movzwl	992(%rax), %esi
	movq	%rax, %rdi
	call	*2032(%rax)
	movq	(%rsp), %r10
.L5940:
	movzbl	994(%rbx), %eax
	movq	1056(%rbx), %rdx
	movl	%eax, %ecx
	andl	$-7, %eax
	orb	994(%rdx), %cl
	andl	$6, %ecx
	orl	%ecx, %eax
	movb	%al, 994(%rbx)
	movzbl	994(%rdx), %eax
	shrb	%al
	andl	$3, %eax
	orb	%al, 45240(%rbx,%r10)
	testb	$8, 98(%rbx)
	je	.L5941
	testb	$4, 96(%rbx)
	jne	.L5942
.L5941:
	movl	32(%rsp), %edi
	movl	%edi, 18616(%rbx,%r10,8)
.L5942:
	movq	1080(%rbx), %rcx
	testb	$1, 2(%rcx)
	je	.L5943
	testb	$64, 99(%rbx)
	je	.L5943
	movq	968(%rbx), %rcx
	andl	$2, %eax
	movl	%ecx, 2232(%rbx,%r10,8)
	movzbl	994(%rdx), %esi
	movzbl	994(%rbx), %ecx
	andl	$1, %esi
	andl	$-2, %ecx
	orl	%esi, %ecx
	movb	%cl, 994(%rbx)
	movq	968(%rdx), %rcx
	movl	$17, 1916(%rbx)
	movb	%al, 2010(%rbx)
	xorb	$8, %ch
	movq	%rcx, 968(%rbx)
	movl	%ecx, 464(%rbx)
	shrq	%rcx
	xorq	$1, %rcx
	andl	$1, %ecx
	movb	%cl, 1994(%rbx)
.L5943:
	movq	944(%rdx), %rax
	movl	88(%rdx), %esi
	movl	%eax, %edi
	movl	%eax, %ecx
	andl	$2147479552, %edi
	je	.L5945
	cmpl	%esi, %edi
	je	.L5945
.L5946:
	movq	960(%rdx), %rcx
	movq	%rax, 952(%rdx)
	movl	%ecx, %r8d
	movl	%ecx, %edi
	andl	$2147479552, %r8d
	je	.L5947
	cmpl	%r8d, %esi
	je	.L5947
.L5948:
	cmpq	1040(%rdx), %rax
	ja	.L5937
	movq	%rcx, %rdx
	orb	$8, %dh
	testl	$2048, %r14d
	cmovne	%rdx, %rcx
	jmp	.L5938
.L5993:
	movq	(%rsp), %rdi
	movl	$16, %edx
	movw	%dx, 992(%rbx)
	movq	%rdi, 944(%rbx)
	jmp	.L6020
.L6292:
	movl	%esi, %edi
	andl	$-16, %edi
	cmpb	%r12b, %dil
	je	.L6044
	testb	$8, %sil
	je	.L6044
	testb	$2, 1144(%rbx)
	jne	.L6320
.L6047:
	movl	$4, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L6049
.L5937:
	movl	$5, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	testb	$2, 1144(%rbx)
	je	.L5952
	movq	1056(%rbx), %rax
.L5951:
	testb	$6, 994(%rax)
	je	.L5952
	movl	$4, %esi
	movq	%rax, %rdi
	call	*2032(%rax)
	jmp	.L5954
.L5947:
	movl	%esi, %ecx
	xorl	%edi, %ecx
	jmp	.L5948
.L5945:
	movl	%ecx, %eax
	xorl	%esi, %eax
	.p2align 4,,3
	jmp	.L5946
.L6024:
	orl	$1, %edx
	movl	%edx, 792(%rbx)
	jmp	.L6022
.L6320:
	movq	1056(%rbx), %rax
	andb	$-7, 994(%rax)
.L6046:
	testb	$6, 994(%rax)
	je	.L6047
	movl	$4, %esi
	movq	%rax, %rdi
	call	*2032(%rax)
	jmp	.L6049
.L6288:
	testl	%ecx, %ecx
	jne	.L6005
	movl	%r13d, %eax
	andl	$61440, %eax
	shrl	$12, %eax
	cmpl	%eax, %edx
	jb	.L6004
.L6005:
	movl	%r10d, %eax
	movl	%r10d, %edx
	andl	$2147479552, %eax
	jne	.L6006
	movl	88(%rbx), %r10d
.L6007:
	xorl	%edx, %r10d
.L6008:
	movzbl	1144(%rbx), %eax
	testb	$2, %al
	jne	.L6321
	movq	%r10, %rax
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	movzwl	(%rax,%r10), %edx
.L6085:
	movl	328(%rbx), %ecx
#APP
# 545 "inline.h" 1
	rorw $8, %dx
# 0 "" 2
#NO_APP
	movl	%edx, %esi
	andl	$12582912, %ecx
	cmpl	$8388608, %ecx
	je	.L6322
	cmpl	$4194304, %ecx
	je	.L6323
.L6013:
	testb	$4, %r11b
	jne	.L6014
	movzbl	994(%rbx), %eax
	shrb	%al
	andl	$3, %eax
.L6015:
	movq	968(%rbx), %r9
	movl	%r11d, %edi
	movzwl	%dx, %edx
	movq	16(%rsp), %r10
	shrl	%edi
	movl	8(%rsp), %r8d
	andl	$1, %edi
	movl	%r9d, 2232(%r10)
	orl	2224(%rbx), %r8d
	cmpl	$8388608, %ecx
	movl	%edx, 18616(%r10)
	movl	%r8d, 10424(%r10)
	movb	%dil, 44216(%rbx,%r14)
	movb	%al, 45240(%rbx,%r14)
	movb	$0, 46264(%rbx,%r14)
	movq	$0, 26808(%r10)
	je	.L6324
.L6016:
	movl	%esi, %eax
	movl	%r13d, %edx
	andl	$65528, %eax
	andl	$2047, %edx
	sall	$8, %eax
	orl	%edx, %eax
.L6018:
	movq	%rax, %rcx
	xorl	%r9d, %r9d
	movq	%rax, 944(%rbx)
	andl	$2147481600, %ecx
	movw	%r9w, 992(%rbx)
	movq	%rcx, 960(%rbx)
	jmp	.L5982
.L6300:
	testb	$127, %cl
	jne	.L5930
	orl	$-2147483646, %edx
	movl	%edx, 792(%rbx)
	jmp	.L5927
.L6299:
	movq	968(%rbx), %rsi
	movl	336(%rbx), %eax
	xorq	%rsi, %rax
	testl	$2147479552, %eax
	je	.L5927
	movl	384(%rbx), %eax
	xorq	%rsi, %rax
	testl	$2147479552, %eax
	jne	.L5928
	orl	$2, %edx
	movl	%edx, 792(%rbx)
	jmp	.L5927
.L5995:
	cmpl	88(%rbx), %eax
	jne	.L5997
	movl	%eax, %r11d
	jmp	.L5996
.L5928:
	movl	432(%rbx), %eax
	xorq	%rsi, %rax
	testl	$2147479552, %eax
	jne	.L5929
	orl	$3, %edx
	movl	%edx, 792(%rbx)
	jmp	.L5927
.L6287:
	movl	%eax, %ecx
	movq	%r13, %rax
	shrq	$10, %rax
	andl	$1022, %eax
	cmpl	$8388608, %ecx
	jne	.L6001
	movq	%r13, %rax
	shrq	$11, %rax
	andl	$510, %eax
.L6001:
	addq	%rax, %r10
	cmpq	%r10, 1040(%rbx)
	jb	.L5994
	movl	%r13d, %eax
	andl	$983040, %eax
	shrl	$16, %eax
	cmpl	%eax, %edx
	jae	.L6005
.L6012:
.L6004:
	movl	$17, %ecx
	movq	%r10, 944(%rbx)
	movl	976(%rbx), %eax
	movw	%cx, 992(%rbx)
	movzbl	99(%rbx), %ecx
	jmp	.L6020
.L5929:
	orl	$1, %edx
	movl	%edx, 792(%rbx)
	jmp	.L5927
.L6286:
	movq	%r13, %rax
	shrq	$18, %rax
	andl	$60, %eax
	addq	%r11, %rax
	movq	%rax, (%rsp)
	jmp	.L5992
.L6285:
	cmpb	$0, 44216(%rbx,%r14)
	jne	.L5988
	movl	2232(%r11), %r8d
	cmpq	%rdx, %r8
	jne	.L5987
.L5989:
	movq	16(%rsp), %rax
	movzwl	18616(%rax), %esi
	movzbl	45240(%rbx,%r14), %eax
	testb	%al, %al
	je	.L5990
	movzbl	994(%rbx), %edx
	andl	$3, %eax
	addl	%eax, %eax
	andl	$-7, %edx
	orl	%eax, %edx
	movb	%dl, 994(%rbx)
.L5990:
	cmpl	$8388608, %edi
	jne	.L6016
.L6017:
	movl	%esi, %eax
	andl	$65520, %esi
	movl	%r13d, %edx
	andl	$6, %eax
	sall	$8, %esi
	andl	$4095, %edx
	sall	$23, %eax
	orl	%esi, %eax
	orl	%edx, %eax
	jmp	.L6018
.L5988:
	testb	$1, 994(%rbx)
	jne	.L5987
	jmp	.L5989
.L5898:
	movq	(%rsp), %rdi
	movl	$16, %r10d
	movw	%r10w, 992(%rbx)
	movq	%rdi, 944(%rbx)
	jmp	.L5925
.L6314:
	movq	%r9, %rdx
	movq	%r11, 16(%rsp)
	movq	%r9, 8(%rsp)
	call	memcpy
	movq	8(%rsp), %r9
	movq	16(%rsp), %r11
	jmp	.L5965
.L6324:
	movl	28(%rsp), %r10d
	xorl	$1, %r10d
	movslq	%r10d, %r10
	leaq	(%rbx,%r10,8), %rcx
	movl	%r9d, 2232(%rcx)
	movl	%r8d, 10424(%rcx)
	movl	%edx, 18616(%rcx)
	movb	%dil, 44216(%rbx,%r10)
	movb	%al, 45240(%rbx,%r10)
	movb	$0, 46264(%rbx,%r10)
	movq	$0, 26808(%rcx)
	jmp	.L6017
.L6014:
	movzbl	994(%rbx), %edi
	movl	%edi, %eax
	andl	$-7, %edi
	shrb	%al
	andl	$3, %eax
	orl	$1, %eax
	leal	(%rax,%rax), %r8d
	orl	%r8d, %edi
	movb	%dil, 994(%rbx)
	jmp	.L6015
.L6323:
	testb	$4, %dl
	jne	.L6004
	testb	$2, %dl
	jne	.L5985
	.p2align 4,,5
	jmp	.L6013
.L6322:
	testb	$8, %dl
	.p2align 4,,5
	jne	.L6004
	.p2align 4,,8
	jmp	.L6013
.L6321:
	testb	$4, %al
	movq	%r10, %rdx
	.p2align 4,,3
	jne	.L6010
	movl	%r10d, %edi
	movq	1056(%rbx), %rdx
	movl	$1, %r9d
	addl	1096(%rbx), %edi
	xorl	%r8d, %r8d
	movl	$4, %ecx
	movl	$-3, %esi
	movl	%r11d, 40(%rsp)
	movq	%r10, 32(%rsp)
	call	s390_logical_to_main_l
	movq	1056(%rbx), %rax
	movl	40(%rsp), %r11d
	movq	32(%rsp), %r10
	movq	952(%rax), %rdx
.L6010:
	movq	%rdx, %rax
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	movzwl	(%rax,%rdx), %edx
	jmp	.L6085
.L6006:
	cmpl	88(%rbx), %eax
	jne	.L6008
	movl	%eax, %r10d
	jmp	.L6007
.L6307:
	movzbl	44216(%rbx,%rax), %r8d
	testb	%r8b, 1976(%rbx,%rsi)
	jne	.L6054
.L6274:
	movzbl	97(%rbx), %r8d
.L6055:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	call	s370_logical_to_main_l
	movq	%rax, %r14
	jmp	.L6057
.L6308:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L6056
	jmp	.L6055
.L5900:
	cmpl	88(%rbx), %eax
	jne	.L5902
	.p2align 4,,8
	jmp	.L5901
.L6311:
	.p2align 4,,8
	call	memcpy
	.p2align 4,,8
	jmp	.L6052
.L6053:
	leal	0(%r13,%rbp), %edi
	andl	$16777215, %edi
	jmp	.L6274
.L6304:
	cmpb	43192(%rbx,%rdx), %al
	je	.L5961
.L6099:
	movzbl	%al, %r8d
.L5960:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	movq	%r10, 8(%rsp)
	call	s370_logical_to_main_l
	movl	1916(%rbx), %r14d
	movq	%rax, %r11
	movzbl	97(%rbx), %r12d
	movq	8(%rsp), %r10
	jmp	.L5962
.L6313:
	call	memcpy
	jmp	.L5957
.L6303:
	movzbl	44216(%rbx,%rdx), %r9d
	testb	%r9b, 1976(%rbx,%rax)
	jne	.L5959
.L6273:
	movzbl	97(%rbx), %r8d
	jmp	.L5960
.L5958:
	leal	(%rax,%r12), %edi
	andl	$16777215, %edi
	jmp	.L6273
.L6312:
	movq	%rbp, %rdx
	call	memcpy
	jmp	.L6060
.L6291:
	movq	1056(%rbx), %rdx
	andb	$-7, 994(%rdx)
	andl	$4, %esi
	jne	.L6033
	movq	1080(%rbx), %rcx
	movl	$-3, %esi
	testb	$1, 2(%rcx)
	je	.L6034
	movzbl	99(%rbx), %ecx
	andl	$64, %ecx
	cmpb	$1, %cl
	sbbl	%esi, %esi
	andl	$-4, %esi
	addl	$1, %esi
.L6034:
	movl	1096(%rbx), %edi
	xorl	%ecx, %ecx
	addl	%eax, %edi
	call	s390_translate_addr
	testl	%eax, %eax
	je	.L6035
	movq	1056(%rbx), %rax
	movzwl	992(%rax), %esi
	movq	%rax, %rdi
	call	*2032(%rax)
.L6035:
	movzbl	994(%rbx), %eax
	movq	1056(%rbx), %rdx
	movl	%eax, %ecx
	andl	$-7, %eax
	orb	994(%rdx), %cl
	andl	$6, %ecx
	orl	%ecx, %eax
	movb	%al, 994(%rbx)
	movzbl	994(%rdx), %eax
	shrb	%al
	andl	$3, %eax
	orb	%al, 45240(%rbx,%r14)
	testb	$8, 98(%rbx)
	je	.L6036
	testb	$4, 96(%rbx)
	jne	.L6037
.L6036:
	movl	8(%rsp), %edi
	movl	%edi, 18616(%rbx,%r14,8)
.L6037:
	movq	1080(%rbx), %rcx
	testb	$1, 2(%rcx)
	je	.L6038
	testb	$64, 99(%rbx)
	je	.L6038
	movq	968(%rbx), %rcx
	andl	$2, %eax
	movl	%ecx, 2232(%rbx,%r14,8)
	movzbl	994(%rdx), %esi
	movzbl	994(%rbx), %ecx
	andl	$1, %esi
	andl	$-2, %ecx
	orl	%esi, %ecx
	movb	%cl, 994(%rbx)
	movq	968(%rdx), %rcx
	movl	$17, 1916(%rbx)
	movb	%al, 2010(%rbx)
	xorb	$8, %ch
	movq	%rcx, 968(%rbx)
	movl	%ecx, 464(%rbx)
	shrq	%rcx
	xorq	$1, %rcx
	andl	$1, %ecx
	movb	%cl, 1994(%rbx)
.L6038:
	movq	944(%rdx), %rax
	movl	88(%rdx), %esi
	movl	%eax, %edi
	movl	%eax, %ecx
	andl	$2147479552, %edi
	je	.L6040
	cmpl	%esi, %edi
	je	.L6040
.L6041:
	movq	960(%rdx), %rcx
	movq	%rax, 952(%rdx)
	movl	%ecx, %r8d
	movl	%ecx, %edi
	andl	$2147479552, %r8d
	je	.L6042
	cmpl	%r8d, %esi
	je	.L6042
.L6043:
	cmpq	1040(%rdx), %rax
	ja	.L6032
	movq	%rcx, %rdx
	orb	$8, %dh
	testl	$2048, %r13d
	cmovne	%rdx, %rcx
	jmp	.L6033
.L6295:
	cmpb	$0, 44216(%rbx,%r10)
	jne	.L5893
	movl	2232(%r11), %r8d
	cmpq	%rdx, %r8
	jne	.L5892
.L5894:
	movq	40(%rsp), %rax
	movzwl	18616(%rax), %edx
	movzbl	45240(%rbx,%r10), %eax
	testb	%al, %al
	je	.L5895
	andl	$3, %eax
	leal	(%rax,%rax), %ecx
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	%ecx, %eax
	movb	%al, 994(%rbx)
.L5895:
	cmpl	$8388608, %esi
	jne	.L5921
	jmp	.L5922
.L5893:
	testb	$1, 994(%rbx)
	jne	.L5892
	.p2align 4,,4
	jmp	.L5894
.L6032:
	movl	$5, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	testb	$2, 1144(%rbx)
	je	.L6047
	movq	1056(%rbx), %rax
	jmp	.L6046
.L6315:
	movq	1056(%rbx), %rax
	andb	$-7, 994(%rax)
	jmp	.L5951
.L6042:
	movl	%esi, %ecx
	xorl	%edi, %ecx
	jmp	.L6043
.L6040:
	movl	%ecx, %eax
	xorl	%esi, %eax
	jmp	.L6041
	.cfi_endproc
.LFE553:
	.size	s370_compare_and_form_codeword, .-s370_compare_and_form_codeword
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:
	.string	"general1.c:2068"
.LC1:
	.string	"general1.c:2074"
.LC2:
	.string	"general1.c:2081"
.LC3:
	.string	"*CS"
	.text
	.p2align 4,,15
	.globl	s370_compare_and_swap
	.type	s370_compare_and_swap, @function
s370_compare_and_swap:
.LFB554:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %r15d
	movl	%ebp, %r13d
	shrl	$20, %r15d
	movl	%ebp, %esi
	shrl	$16, %r13d
	shrl	$12, %esi
	andl	$15, %r15d
	andl	$15, %r13d
	andl	$4095, %ebp
	andl	$15, %esi
	movl	%esi, %r12d
	je	.L6326
	movslq	%esi, %rax
	addl	192(%rbx,%rax,8), %ebp
	andl	$16777215, %ebp
.L6326:
	addq	$4, 136(%rbx)
	testb	$3, %bpl
	movb	$4, 130(%rbx)
	jne	.L6371
.L6327:
	leal	-77(%rbp), %r14d
	cmpl	$6, %r14d
	jbe	.L6372
.L6328:
	leal	5(%r12), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L6329
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L6373
.L6330:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L6374
.L6331:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L6329
	testb	$2, 46264(%rbx,%rcx)
	je	.L6329
	movl	%ebp, %r12d
	xorq	26808(%rdx), %r12
.L6332:
	movq	40(%rbx), %rdi
	movslq	%r15d, %r15
	movq	1056(%rbx), %rcx
	leaq	(%rbx,%r15,8), %r15
	movl	192(%r15), %r8d
	movl	3000(%rdi), %eax
	bswap	%r8d
	cmpl	%eax, 48(%rcx)
	je	.L6333
	addq	$1936, %rdi
	movl	$.LC0, %esi
	movl	%r8d, 8(%rsp)
	call	ptt_pthread_mutex_lock
	movq	1056(%rbx), %rcx
	movq	40(%rbx), %rdi
	movl	8(%rsp), %r8d
	movzwl	1010(%rcx), %eax
	movw	%ax, 1928(%rdi)
.L6333:
	movslq	%r13d, %r13
	movl	%r8d, %eax
	leaq	(%rbx,%r13,8), %r9
	movl	192(%r9), %edx
	bswap	%edx
#APP
# 406 "machdep.h" 1
	lock;   cmpxchgl %edx,(%r12)
	setnz   %dl
	
# 0 "" 2
#NO_APP
	movl	%eax, %r13d
	movzwl	1010(%rcx), %eax
	movb	%dl, 100(%rbx)
	cmpw	%ax, 1928(%rdi)
	je	.L6375
.L6334:
	cmpb	$1, %dl
	je	.L6376
	cmpl	$6, %r14d
	jbe	.L6377
.L6325:
	addq	$24, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L6371:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L6327
	.p2align 4,,10
	.p2align 3
.L6376:
	testb	$8, pttclass+1(%rip)
	jne	.L6378
.L6336:
	bswap	%r13d
	movl	%r13d, 192(%r15)
	testb	$2, 1144(%rbx)
	jne	.L6379
.L6337:
	cmpl	$1, sysblk+236(%rip)
	jle	.L6325
	addq	$24, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	sched_yield
	.p2align 4,,10
	.p2align 3
.L6378:
	.cfi_restore_state
	movl	$.LC2, %r8d
	movl	$.LC3, %esi
	movl	$2048, %edi
	movl	192(%r9), %ecx
	movl	%ebp, %r9d
	movl	192(%r15), %edx
	call	ptt_pthread_trace
	jmp	.L6336
	.p2align 4,,10
	.p2align 3
.L6375:
	movl	$-1, %eax
	movl	$.LC1, %esi
	movq	%r9, 8(%rsp)
	movw	%ax, 1928(%rdi)
	addq	$1936, %rdi
	call	ptt_pthread_mutex_unlock
	movzbl	100(%rbx), %edx
	movq	8(%rsp), %r9
	jmp	.L6334
.L6373:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L6330
.L6329:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %esi
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	movq	%rax, %r12
	jmp	.L6332
.L6374:
	cmpb	43192(%rbx,%rcx), %al
	je	.L6331
	jmp	.L6329
.L6377:
	addq	$24, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
.L6372:
	.cfi_restore_state
	movq	%rbx, %rdi
	call	s370_store_int_timer
	jmp	.L6328
.L6379:
	movq	1080(%rbx), %rax
	testb	$4, 72(%rax)
	je	.L6337
	movl	52(%rbx), %eax
	leaq	1232(%rbx), %rdi
	andl	56(%rbx), %eax
	testl	$16318464, %eax
	jne	.L6338
	movl	$-4, %esi
	call	longjmp
.L6338:
	movl	$-5, %esi
	call	longjmp
	.cfi_endproc
.LFE554:
	.size	s370_compare_and_swap, .-s370_compare_and_swap
	.section	.rodata.str1.1
.LC4:
	.string	"general1.c:2132"
.LC5:
	.string	"general1.c:2138"
.LC6:
	.string	"general1.c:2145"
.LC7:
	.string	"*CDS"
	.text
	.p2align 4,,15
	.globl	s370_compare_double_and_swap
	.type	s370_compare_double_and_swap, @function
s370_compare_double_and_swap:
.LFB555:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	(%rdi), %r12d
	bswap	%r12d
	movl	%r12d, %eax
	movl	%r12d, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%r12d, %r13d
	movl	%eax, %ebp
	movl	%edx, %r14d
	shrl	$12, %r13d
	andl	$15, %ebp
	andl	$15, %r14d
	andl	$4095, %r12d
	andl	$15, %r13d
	je	.L6381
	movslq	%r13d, %rcx
	addl	192(%rsi,%rcx,8), %r12d
	andl	$16777215, %r12d
.L6381:
	orl	%edx, %eax
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %al
	je	.L6382
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L6382:
	testb	$7, %r12b
	jne	.L6430
.L6383:
	leal	-73(%r12), %r15d
	cmpl	$10, %r15d
	jbe	.L6431
.L6384:
	leal	5(%r13), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L6385
	movl	%r12d, %edx
	addl	$1, %eax
	shrl	$11, %edx
	cltq
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L6432
.L6386:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L6433
.L6387:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L6385
	testb	$2, 46264(%rbx,%rdx)
	je	.L6385
	movl	%r12d, %edx
	xorq	26808(%rcx), %rdx
.L6388:
	movslq	%ebp, %rax
	addl	$1, %ebp
	movq	40(%rbx), %rdi
	leaq	(%rbx,%rax,8), %r10
	movslq	%ebp, %rbp
	movq	1056(%rbx), %rsi
	leaq	(%rbx,%rbp,8), %r11
	movl	192(%r10), %r13d
	movl	192(%r11), %eax
	salq	$32, %r13
	orq	%rax, %r13
	movslq	%r14d, %rax
	addl	$1, %r14d
	leaq	(%rbx,%rax,8), %rcx
	movslq	%r14d, %r14
	bswap	%r13
	movl	192(%rcx), %ebp
	movl	192(%rbx,%r14,8), %eax
	salq	$32, %rbp
	orq	%rax, %rbp
	movl	3000(%rdi), %eax
	bswap	%rbp
	cmpl	%eax, 48(%rsi)
	je	.L6389
	addq	$1936, %rdi
	movl	$.LC4, %esi
	movq	%rdx, (%rsp)
	movq	%rcx, 24(%rsp)
	movq	%r10, 16(%rsp)
	movq	%r11, 8(%rsp)
	call	ptt_pthread_mutex_lock
	movq	1056(%rbx), %rsi
	movq	40(%rbx), %rdi
	movq	24(%rsp), %rcx
	movq	16(%rsp), %r10
	movzwl	1010(%rsi), %eax
	movq	8(%rsp), %r11
	movq	(%rsp), %rdx
	movw	%ax, 1928(%rdi)
.L6389:
	movq	%r13, %rax
#APP
# 422 "machdep.h" 1
	lock;   cmpxchgq %rbp,(%rdx)
	setnz   %bpl
	
# 0 "" 2
#NO_APP
	movq	%rax, %r13
	movzwl	1010(%rsi), %eax
	movb	%bpl, 100(%rbx)
	cmpw	%ax, 1928(%rdi)
	je	.L6434
.L6390:
	cmpb	$1, %bpl
	je	.L6435
	cmpl	$10, %r15d
	jbe	.L6436
.L6380:
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L6430:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L6383
	.p2align 4,,10
	.p2align 3
.L6435:
	testb	$8, pttclass+1(%rip)
	jne	.L6437
.L6392:
	bswap	%r13
	movq	%r13, %rax
	shrq	$32, %rax
	movl	%eax, 192(%r10)
	movl	%r13d, 192(%r11)
	testb	$2, 1144(%rbx)
	jne	.L6438
.L6393:
	cmpl	$1, sysblk+236(%rip)
	jle	.L6380
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	sched_yield
	.p2align 4,,10
	.p2align 3
.L6437:
	.cfi_restore_state
	movl	192(%r10), %edx
	movl	%r12d, %r9d
	movl	$.LC6, %r8d
	movl	192(%rcx), %ecx
	movl	$.LC7, %esi
	movl	$2048, %edi
	movq	%r11, 8(%rsp)
	movq	%r10, (%rsp)
	call	ptt_pthread_trace
	movq	8(%rsp), %r11
	movq	(%rsp), %r10
	jmp	.L6392
	.p2align 4,,10
	.p2align 3
.L6434:
	movl	$-1, %eax
	addq	$1936, %rdi
	movq	%r11, (%rsp)
	movw	%ax, -8(%rdi)
	movl	$.LC5, %esi
	movq	%rcx, 16(%rsp)
	movq	%r10, 8(%rsp)
	call	ptt_pthread_mutex_unlock
	movzbl	100(%rbx), %ebp
	movq	16(%rsp), %rcx
	movq	8(%rsp), %r10
	movq	(%rsp), %r11
	jmp	.L6390
.L6432:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L6386
.L6385:
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	$8, %r9d
	movl	$2, %ecx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	movq	%rax, %rdx
	jmp	.L6388
.L6433:
	cmpb	43192(%rbx,%rdx), %al
	je	.L6387
	jmp	.L6385
.L6436:
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
.L6431:
	.cfi_restore_state
	movq	%rbx, %rdi
	call	s370_store_int_timer
	jmp	.L6384
.L6438:
	movq	1080(%rbx), %rax
	testb	$4, 72(%rax)
	je	.L6393
	movl	52(%rbx), %eax
	leaq	1232(%rbx), %rdi
	andl	56(%rbx), %eax
	testl	$16318464, %eax
	jne	.L6394
	movl	$-4, %esi
	call	longjmp
.L6394:
	movl	$-5, %esi
	call	longjmp
	.cfi_endproc
.LFE555:
	.size	s370_compare_double_and_swap, .-s370_compare_double_and_swap
	.p2align 4,,15
	.globl	s370_compare_halfword
	.type	s370_compare_halfword, @function
s370_compare_halfword:
.LFB556:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %edx
	shrl	$20, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L6475
.L6440:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L6441
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L6441:
	movl	%ebp, %r13d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r13d
	testb	$1, %bpl
	jne	.L6476
.L6442:
	leal	-79(%r13), %edx
	cmpl	$4, %edx
	jbe	.L6477
.L6444:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L6445
	leal	1(%rdx), %esi
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L6478
.L6446:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L6479
.L6447:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L6445
	testb	$4, 46264(%rbx,%rcx)
	je	.L6445
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L6448:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L6449:
	cwtl
	movslq	%r12d, %r12
	movl	$1, %edx
	cmpl	192(%rbx,%r12,8), %eax
	jg	.L6450
	setl	%dl
	addl	%edx, %edx
.L6450:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L6478:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L6446
.L6445:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	jmp	.L6448
.L6476:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2047, %edx
	jne	.L6442
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_vfetch2_full
	jmp	.L6449
.L6475:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	jmp	.L6440
.L6479:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L6447
	jmp	.L6445
.L6477:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L6444
	.cfi_endproc
.LFE556:
	.size	s370_compare_halfword, .-s370_compare_halfword
	.p2align 4,,15
	.globl	s370_compare_halfword_immediate
	.type	s370_compare_halfword_immediate, @function
s370_compare_halfword_immediate:
.LFB557:
	.cfi_startproc
	movl	(%rdi), %eax
	movl	$1, %edx
	addq	$4, 136(%rsi)
	bswap	%eax
	movl	%eax, %ecx
	cwtl
	shrl	$20, %ecx
	andl	$15, %ecx
	cmpl	%eax, 192(%rsi,%rcx,8)
	jl	.L6481
	setg	%dl
	addl	%edx, %edx
.L6481:
	movb	%dl, 100(%rsi)
	ret
	.cfi_endproc
.LFE557:
	.size	s370_compare_halfword_immediate, .-s370_compare_halfword_immediate
	.p2align 4,,15
	.globl	s370_compare_logical_register
	.type	s370_compare_logical_register, @function
s370_compare_logical_register:
.LFB558:
	.cfi_startproc
	movzbl	1(%rdi), %edx
	addq	$2, 136(%rsi)
	movq	%rdx, %rax
	andl	$15, %edx
	shrq	$4, %rax
	movl	192(%rsi,%rdx,8), %edx
	andl	$15, %eax
	movl	192(%rsi,%rax,8), %ecx
	movl	$1, %eax
	cmpl	%edx, %ecx
	jb	.L6485
	cmpl	%ecx, %edx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6485:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE558:
	.size	s370_compare_logical_register, .-s370_compare_logical_register
	.p2align 4,,15
	.globl	s370_1500
	.type	s370_1500, @function
s370_1500:
.LFB559:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE559:
	.size	s370_1500, .-s370_1500
	.p2align 4,,15
	.globl	s370_1501
	.type	s370_1501, @function
s370_1501:
.LFB560:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6490
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6490:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE560:
	.size	s370_1501, .-s370_1501
	.p2align 4,,15
	.globl	s370_1502
	.type	s370_1502, @function
s370_1502:
.LFB561:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6494
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6494:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE561:
	.size	s370_1502, .-s370_1502
	.p2align 4,,15
	.globl	s370_1503
	.type	s370_1503, @function
s370_1503:
.LFB562:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6498
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6498:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE562:
	.size	s370_1503, .-s370_1503
	.p2align 4,,15
	.globl	s370_1504
	.type	s370_1504, @function
s370_1504:
.LFB563:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6502
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6502:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE563:
	.size	s370_1504, .-s370_1504
	.p2align 4,,15
	.globl	s370_1505
	.type	s370_1505, @function
s370_1505:
.LFB564:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6506
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6506:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE564:
	.size	s370_1505, .-s370_1505
	.p2align 4,,15
	.globl	s370_1506
	.type	s370_1506, @function
s370_1506:
.LFB565:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6510
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6510:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE565:
	.size	s370_1506, .-s370_1506
	.p2align 4,,15
	.globl	s370_1507
	.type	s370_1507, @function
s370_1507:
.LFB566:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6514
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6514:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE566:
	.size	s370_1507, .-s370_1507
	.p2align 4,,15
	.globl	s370_1508
	.type	s370_1508, @function
s370_1508:
.LFB567:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6518
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6518:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE567:
	.size	s370_1508, .-s370_1508
	.p2align 4,,15
	.globl	s370_1509
	.type	s370_1509, @function
s370_1509:
.LFB568:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6522
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6522:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE568:
	.size	s370_1509, .-s370_1509
	.p2align 4,,15
	.globl	s370_150A
	.type	s370_150A, @function
s370_150A:
.LFB569:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6526
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6526:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE569:
	.size	s370_150A, .-s370_150A
	.p2align 4,,15
	.globl	s370_150B
	.type	s370_150B, @function
s370_150B:
.LFB570:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6530
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6530:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE570:
	.size	s370_150B, .-s370_150B
	.p2align 4,,15
	.globl	s370_150C
	.type	s370_150C, @function
s370_150C:
.LFB571:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6534
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6534:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE571:
	.size	s370_150C, .-s370_150C
	.p2align 4,,15
	.globl	s370_150D
	.type	s370_150D, @function
s370_150D:
.LFB572:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6538
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6538:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE572:
	.size	s370_150D, .-s370_150D
	.p2align 4,,15
	.globl	s370_150E
	.type	s370_150E, @function
s370_150E:
.LFB573:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6542
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6542:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE573:
	.size	s370_150E, .-s370_150E
	.p2align 4,,15
	.globl	s370_150F
	.type	s370_150F, @function
s370_150F:
.LFB574:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6546
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6546:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE574:
	.size	s370_150F, .-s370_150F
	.p2align 4,,15
	.globl	s370_1510
	.type	s370_1510, @function
s370_1510:
.LFB575:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6550
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6550:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE575:
	.size	s370_1510, .-s370_1510
	.p2align 4,,15
	.globl	s370_1511
	.type	s370_1511, @function
s370_1511:
.LFB576:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE576:
	.size	s370_1511, .-s370_1511
	.p2align 4,,15
	.globl	s370_1512
	.type	s370_1512, @function
s370_1512:
.LFB577:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6555
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6555:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE577:
	.size	s370_1512, .-s370_1512
	.p2align 4,,15
	.globl	s370_1513
	.type	s370_1513, @function
s370_1513:
.LFB578:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6559
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6559:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE578:
	.size	s370_1513, .-s370_1513
	.p2align 4,,15
	.globl	s370_1514
	.type	s370_1514, @function
s370_1514:
.LFB579:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6563
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6563:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE579:
	.size	s370_1514, .-s370_1514
	.p2align 4,,15
	.globl	s370_1515
	.type	s370_1515, @function
s370_1515:
.LFB580:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6567
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6567:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE580:
	.size	s370_1515, .-s370_1515
	.p2align 4,,15
	.globl	s370_1516
	.type	s370_1516, @function
s370_1516:
.LFB581:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6571
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6571:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE581:
	.size	s370_1516, .-s370_1516
	.p2align 4,,15
	.globl	s370_1517
	.type	s370_1517, @function
s370_1517:
.LFB582:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6575
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6575:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE582:
	.size	s370_1517, .-s370_1517
	.p2align 4,,15
	.globl	s370_1518
	.type	s370_1518, @function
s370_1518:
.LFB583:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6579
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6579:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE583:
	.size	s370_1518, .-s370_1518
	.p2align 4,,15
	.globl	s370_1519
	.type	s370_1519, @function
s370_1519:
.LFB584:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6583
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6583:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE584:
	.size	s370_1519, .-s370_1519
	.p2align 4,,15
	.globl	s370_151A
	.type	s370_151A, @function
s370_151A:
.LFB585:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6587
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6587:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE585:
	.size	s370_151A, .-s370_151A
	.p2align 4,,15
	.globl	s370_151B
	.type	s370_151B, @function
s370_151B:
.LFB586:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6591
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6591:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE586:
	.size	s370_151B, .-s370_151B
	.p2align 4,,15
	.globl	s370_151C
	.type	s370_151C, @function
s370_151C:
.LFB587:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6595
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6595:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE587:
	.size	s370_151C, .-s370_151C
	.p2align 4,,15
	.globl	s370_151D
	.type	s370_151D, @function
s370_151D:
.LFB588:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6599
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6599:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE588:
	.size	s370_151D, .-s370_151D
	.p2align 4,,15
	.globl	s370_151E
	.type	s370_151E, @function
s370_151E:
.LFB589:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6603
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6603:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE589:
	.size	s370_151E, .-s370_151E
	.p2align 4,,15
	.globl	s370_151F
	.type	s370_151F, @function
s370_151F:
.LFB590:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6607
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6607:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE590:
	.size	s370_151F, .-s370_151F
	.p2align 4,,15
	.globl	s370_1520
	.type	s370_1520, @function
s370_1520:
.LFB591:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6611
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6611:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE591:
	.size	s370_1520, .-s370_1520
	.p2align 4,,15
	.globl	s370_1521
	.type	s370_1521, @function
s370_1521:
.LFB592:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6615
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6615:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE592:
	.size	s370_1521, .-s370_1521
	.p2align 4,,15
	.globl	s370_1522
	.type	s370_1522, @function
s370_1522:
.LFB593:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE593:
	.size	s370_1522, .-s370_1522
	.p2align 4,,15
	.globl	s370_1523
	.type	s370_1523, @function
s370_1523:
.LFB594:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6620
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6620:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE594:
	.size	s370_1523, .-s370_1523
	.p2align 4,,15
	.globl	s370_1524
	.type	s370_1524, @function
s370_1524:
.LFB595:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6624
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6624:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE595:
	.size	s370_1524, .-s370_1524
	.p2align 4,,15
	.globl	s370_1525
	.type	s370_1525, @function
s370_1525:
.LFB596:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6628
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6628:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE596:
	.size	s370_1525, .-s370_1525
	.p2align 4,,15
	.globl	s370_1526
	.type	s370_1526, @function
s370_1526:
.LFB597:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6632
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6632:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE597:
	.size	s370_1526, .-s370_1526
	.p2align 4,,15
	.globl	s370_1527
	.type	s370_1527, @function
s370_1527:
.LFB598:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6636
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6636:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE598:
	.size	s370_1527, .-s370_1527
	.p2align 4,,15
	.globl	s370_1528
	.type	s370_1528, @function
s370_1528:
.LFB599:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6640
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6640:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE599:
	.size	s370_1528, .-s370_1528
	.p2align 4,,15
	.globl	s370_1529
	.type	s370_1529, @function
s370_1529:
.LFB600:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6644
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6644:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE600:
	.size	s370_1529, .-s370_1529
	.p2align 4,,15
	.globl	s370_152A
	.type	s370_152A, @function
s370_152A:
.LFB601:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6648
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6648:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE601:
	.size	s370_152A, .-s370_152A
	.p2align 4,,15
	.globl	s370_152B
	.type	s370_152B, @function
s370_152B:
.LFB602:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6652
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6652:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE602:
	.size	s370_152B, .-s370_152B
	.p2align 4,,15
	.globl	s370_152C
	.type	s370_152C, @function
s370_152C:
.LFB603:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6656
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6656:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE603:
	.size	s370_152C, .-s370_152C
	.p2align 4,,15
	.globl	s370_152D
	.type	s370_152D, @function
s370_152D:
.LFB604:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6660
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6660:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE604:
	.size	s370_152D, .-s370_152D
	.p2align 4,,15
	.globl	s370_152E
	.type	s370_152E, @function
s370_152E:
.LFB605:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6664
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6664:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE605:
	.size	s370_152E, .-s370_152E
	.p2align 4,,15
	.globl	s370_152F
	.type	s370_152F, @function
s370_152F:
.LFB606:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6668
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6668:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE606:
	.size	s370_152F, .-s370_152F
	.p2align 4,,15
	.globl	s370_1530
	.type	s370_1530, @function
s370_1530:
.LFB607:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6672
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6672:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE607:
	.size	s370_1530, .-s370_1530
	.p2align 4,,15
	.globl	s370_1531
	.type	s370_1531, @function
s370_1531:
.LFB608:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6676
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6676:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE608:
	.size	s370_1531, .-s370_1531
	.p2align 4,,15
	.globl	s370_1532
	.type	s370_1532, @function
s370_1532:
.LFB609:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6680
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6680:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE609:
	.size	s370_1532, .-s370_1532
	.p2align 4,,15
	.globl	s370_1533
	.type	s370_1533, @function
s370_1533:
.LFB610:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE610:
	.size	s370_1533, .-s370_1533
	.p2align 4,,15
	.globl	s370_1534
	.type	s370_1534, @function
s370_1534:
.LFB611:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6685
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6685:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE611:
	.size	s370_1534, .-s370_1534
	.p2align 4,,15
	.globl	s370_1535
	.type	s370_1535, @function
s370_1535:
.LFB612:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6689
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6689:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE612:
	.size	s370_1535, .-s370_1535
	.p2align 4,,15
	.globl	s370_1536
	.type	s370_1536, @function
s370_1536:
.LFB613:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6693
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6693:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE613:
	.size	s370_1536, .-s370_1536
	.p2align 4,,15
	.globl	s370_1537
	.type	s370_1537, @function
s370_1537:
.LFB614:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6697
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6697:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE614:
	.size	s370_1537, .-s370_1537
	.p2align 4,,15
	.globl	s370_1538
	.type	s370_1538, @function
s370_1538:
.LFB615:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6701
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6701:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE615:
	.size	s370_1538, .-s370_1538
	.p2align 4,,15
	.globl	s370_1539
	.type	s370_1539, @function
s370_1539:
.LFB616:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6705
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6705:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE616:
	.size	s370_1539, .-s370_1539
	.p2align 4,,15
	.globl	s370_153A
	.type	s370_153A, @function
s370_153A:
.LFB617:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6709
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6709:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE617:
	.size	s370_153A, .-s370_153A
	.p2align 4,,15
	.globl	s370_153B
	.type	s370_153B, @function
s370_153B:
.LFB618:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6713
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6713:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE618:
	.size	s370_153B, .-s370_153B
	.p2align 4,,15
	.globl	s370_153C
	.type	s370_153C, @function
s370_153C:
.LFB619:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6717
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6717:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE619:
	.size	s370_153C, .-s370_153C
	.p2align 4,,15
	.globl	s370_153D
	.type	s370_153D, @function
s370_153D:
.LFB620:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6721
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6721:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE620:
	.size	s370_153D, .-s370_153D
	.p2align 4,,15
	.globl	s370_153E
	.type	s370_153E, @function
s370_153E:
.LFB621:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6725
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6725:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE621:
	.size	s370_153E, .-s370_153E
	.p2align 4,,15
	.globl	s370_153F
	.type	s370_153F, @function
s370_153F:
.LFB622:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6729
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6729:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE622:
	.size	s370_153F, .-s370_153F
	.p2align 4,,15
	.globl	s370_1540
	.type	s370_1540, @function
s370_1540:
.LFB623:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6733
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6733:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE623:
	.size	s370_1540, .-s370_1540
	.p2align 4,,15
	.globl	s370_1541
	.type	s370_1541, @function
s370_1541:
.LFB624:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6737
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6737:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE624:
	.size	s370_1541, .-s370_1541
	.p2align 4,,15
	.globl	s370_1542
	.type	s370_1542, @function
s370_1542:
.LFB625:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6741
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6741:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE625:
	.size	s370_1542, .-s370_1542
	.p2align 4,,15
	.globl	s370_1543
	.type	s370_1543, @function
s370_1543:
.LFB626:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6745
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6745:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE626:
	.size	s370_1543, .-s370_1543
	.p2align 4,,15
	.globl	s370_1544
	.type	s370_1544, @function
s370_1544:
.LFB627:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE627:
	.size	s370_1544, .-s370_1544
	.p2align 4,,15
	.globl	s370_1545
	.type	s370_1545, @function
s370_1545:
.LFB628:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6750
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6750:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE628:
	.size	s370_1545, .-s370_1545
	.p2align 4,,15
	.globl	s370_1546
	.type	s370_1546, @function
s370_1546:
.LFB629:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6754
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6754:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE629:
	.size	s370_1546, .-s370_1546
	.p2align 4,,15
	.globl	s370_1547
	.type	s370_1547, @function
s370_1547:
.LFB630:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6758
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6758:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE630:
	.size	s370_1547, .-s370_1547
	.p2align 4,,15
	.globl	s370_1548
	.type	s370_1548, @function
s370_1548:
.LFB631:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6762
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6762:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE631:
	.size	s370_1548, .-s370_1548
	.p2align 4,,15
	.globl	s370_1549
	.type	s370_1549, @function
s370_1549:
.LFB632:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6766
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6766:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE632:
	.size	s370_1549, .-s370_1549
	.p2align 4,,15
	.globl	s370_154A
	.type	s370_154A, @function
s370_154A:
.LFB633:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6770
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6770:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE633:
	.size	s370_154A, .-s370_154A
	.p2align 4,,15
	.globl	s370_154B
	.type	s370_154B, @function
s370_154B:
.LFB634:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6774
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6774:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE634:
	.size	s370_154B, .-s370_154B
	.p2align 4,,15
	.globl	s370_154C
	.type	s370_154C, @function
s370_154C:
.LFB635:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6778
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6778:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE635:
	.size	s370_154C, .-s370_154C
	.p2align 4,,15
	.globl	s370_154D
	.type	s370_154D, @function
s370_154D:
.LFB636:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6782
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6782:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE636:
	.size	s370_154D, .-s370_154D
	.p2align 4,,15
	.globl	s370_154E
	.type	s370_154E, @function
s370_154E:
.LFB637:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6786
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6786:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE637:
	.size	s370_154E, .-s370_154E
	.p2align 4,,15
	.globl	s370_154F
	.type	s370_154F, @function
s370_154F:
.LFB638:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6790
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6790:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE638:
	.size	s370_154F, .-s370_154F
	.p2align 4,,15
	.globl	s370_1550
	.type	s370_1550, @function
s370_1550:
.LFB639:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6794
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6794:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE639:
	.size	s370_1550, .-s370_1550
	.p2align 4,,15
	.globl	s370_1551
	.type	s370_1551, @function
s370_1551:
.LFB640:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6798
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6798:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE640:
	.size	s370_1551, .-s370_1551
	.p2align 4,,15
	.globl	s370_1552
	.type	s370_1552, @function
s370_1552:
.LFB641:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6802
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6802:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE641:
	.size	s370_1552, .-s370_1552
	.p2align 4,,15
	.globl	s370_1553
	.type	s370_1553, @function
s370_1553:
.LFB642:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6806
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6806:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE642:
	.size	s370_1553, .-s370_1553
	.p2align 4,,15
	.globl	s370_1554
	.type	s370_1554, @function
s370_1554:
.LFB643:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6810
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6810:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE643:
	.size	s370_1554, .-s370_1554
	.p2align 4,,15
	.globl	s370_1555
	.type	s370_1555, @function
s370_1555:
.LFB644:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE644:
	.size	s370_1555, .-s370_1555
	.p2align 4,,15
	.globl	s370_1556
	.type	s370_1556, @function
s370_1556:
.LFB645:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6815
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6815:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE645:
	.size	s370_1556, .-s370_1556
	.p2align 4,,15
	.globl	s370_1557
	.type	s370_1557, @function
s370_1557:
.LFB646:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6819
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6819:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE646:
	.size	s370_1557, .-s370_1557
	.p2align 4,,15
	.globl	s370_1558
	.type	s370_1558, @function
s370_1558:
.LFB647:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6823
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6823:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE647:
	.size	s370_1558, .-s370_1558
	.p2align 4,,15
	.globl	s370_1559
	.type	s370_1559, @function
s370_1559:
.LFB648:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6827
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6827:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE648:
	.size	s370_1559, .-s370_1559
	.p2align 4,,15
	.globl	s370_155A
	.type	s370_155A, @function
s370_155A:
.LFB649:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6831
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6831:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE649:
	.size	s370_155A, .-s370_155A
	.p2align 4,,15
	.globl	s370_155B
	.type	s370_155B, @function
s370_155B:
.LFB650:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6835
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6835:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE650:
	.size	s370_155B, .-s370_155B
	.p2align 4,,15
	.globl	s370_155C
	.type	s370_155C, @function
s370_155C:
.LFB651:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6839
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6839:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE651:
	.size	s370_155C, .-s370_155C
	.p2align 4,,15
	.globl	s370_155D
	.type	s370_155D, @function
s370_155D:
.LFB652:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6843
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6843:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE652:
	.size	s370_155D, .-s370_155D
	.p2align 4,,15
	.globl	s370_155E
	.type	s370_155E, @function
s370_155E:
.LFB653:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6847
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6847:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE653:
	.size	s370_155E, .-s370_155E
	.p2align 4,,15
	.globl	s370_155F
	.type	s370_155F, @function
s370_155F:
.LFB654:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6851
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6851:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE654:
	.size	s370_155F, .-s370_155F
	.p2align 4,,15
	.globl	s370_1560
	.type	s370_1560, @function
s370_1560:
.LFB655:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6855
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6855:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE655:
	.size	s370_1560, .-s370_1560
	.p2align 4,,15
	.globl	s370_1561
	.type	s370_1561, @function
s370_1561:
.LFB656:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6859
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6859:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE656:
	.size	s370_1561, .-s370_1561
	.p2align 4,,15
	.globl	s370_1562
	.type	s370_1562, @function
s370_1562:
.LFB657:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6863
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6863:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE657:
	.size	s370_1562, .-s370_1562
	.p2align 4,,15
	.globl	s370_1563
	.type	s370_1563, @function
s370_1563:
.LFB658:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6867
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6867:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE658:
	.size	s370_1563, .-s370_1563
	.p2align 4,,15
	.globl	s370_1564
	.type	s370_1564, @function
s370_1564:
.LFB659:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6871
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6871:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE659:
	.size	s370_1564, .-s370_1564
	.p2align 4,,15
	.globl	s370_1565
	.type	s370_1565, @function
s370_1565:
.LFB660:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6875
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6875:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE660:
	.size	s370_1565, .-s370_1565
	.p2align 4,,15
	.globl	s370_1566
	.type	s370_1566, @function
s370_1566:
.LFB661:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE661:
	.size	s370_1566, .-s370_1566
	.p2align 4,,15
	.globl	s370_1567
	.type	s370_1567, @function
s370_1567:
.LFB662:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6880
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6880:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE662:
	.size	s370_1567, .-s370_1567
	.p2align 4,,15
	.globl	s370_1568
	.type	s370_1568, @function
s370_1568:
.LFB663:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6884
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6884:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE663:
	.size	s370_1568, .-s370_1568
	.p2align 4,,15
	.globl	s370_1569
	.type	s370_1569, @function
s370_1569:
.LFB664:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6888
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6888:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE664:
	.size	s370_1569, .-s370_1569
	.p2align 4,,15
	.globl	s370_156A
	.type	s370_156A, @function
s370_156A:
.LFB665:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6892
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6892:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE665:
	.size	s370_156A, .-s370_156A
	.p2align 4,,15
	.globl	s370_156B
	.type	s370_156B, @function
s370_156B:
.LFB666:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6896
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6896:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE666:
	.size	s370_156B, .-s370_156B
	.p2align 4,,15
	.globl	s370_156C
	.type	s370_156C, @function
s370_156C:
.LFB667:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6900
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6900:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE667:
	.size	s370_156C, .-s370_156C
	.p2align 4,,15
	.globl	s370_156D
	.type	s370_156D, @function
s370_156D:
.LFB668:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6904
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6904:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE668:
	.size	s370_156D, .-s370_156D
	.p2align 4,,15
	.globl	s370_156E
	.type	s370_156E, @function
s370_156E:
.LFB669:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6908
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6908:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE669:
	.size	s370_156E, .-s370_156E
	.p2align 4,,15
	.globl	s370_156F
	.type	s370_156F, @function
s370_156F:
.LFB670:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6912
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6912:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE670:
	.size	s370_156F, .-s370_156F
	.p2align 4,,15
	.globl	s370_1570
	.type	s370_1570, @function
s370_1570:
.LFB671:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6916
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6916:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE671:
	.size	s370_1570, .-s370_1570
	.p2align 4,,15
	.globl	s370_1571
	.type	s370_1571, @function
s370_1571:
.LFB672:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6920
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6920:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE672:
	.size	s370_1571, .-s370_1571
	.p2align 4,,15
	.globl	s370_1572
	.type	s370_1572, @function
s370_1572:
.LFB673:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6924
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6924:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE673:
	.size	s370_1572, .-s370_1572
	.p2align 4,,15
	.globl	s370_1573
	.type	s370_1573, @function
s370_1573:
.LFB674:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6928
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6928:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE674:
	.size	s370_1573, .-s370_1573
	.p2align 4,,15
	.globl	s370_1574
	.type	s370_1574, @function
s370_1574:
.LFB675:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6932
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6932:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE675:
	.size	s370_1574, .-s370_1574
	.p2align 4,,15
	.globl	s370_1575
	.type	s370_1575, @function
s370_1575:
.LFB676:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6936
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6936:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE676:
	.size	s370_1575, .-s370_1575
	.p2align 4,,15
	.globl	s370_1576
	.type	s370_1576, @function
s370_1576:
.LFB677:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6940
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6940:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE677:
	.size	s370_1576, .-s370_1576
	.p2align 4,,15
	.globl	s370_1577
	.type	s370_1577, @function
s370_1577:
.LFB678:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE678:
	.size	s370_1577, .-s370_1577
	.p2align 4,,15
	.globl	s370_1578
	.type	s370_1578, @function
s370_1578:
.LFB679:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6945
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6945:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE679:
	.size	s370_1578, .-s370_1578
	.p2align 4,,15
	.globl	s370_1579
	.type	s370_1579, @function
s370_1579:
.LFB680:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6949
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6949:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE680:
	.size	s370_1579, .-s370_1579
	.p2align 4,,15
	.globl	s370_157A
	.type	s370_157A, @function
s370_157A:
.LFB681:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6953
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6953:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE681:
	.size	s370_157A, .-s370_157A
	.p2align 4,,15
	.globl	s370_157B
	.type	s370_157B, @function
s370_157B:
.LFB682:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6957
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6957:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE682:
	.size	s370_157B, .-s370_157B
	.p2align 4,,15
	.globl	s370_157C
	.type	s370_157C, @function
s370_157C:
.LFB683:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6961
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6961:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE683:
	.size	s370_157C, .-s370_157C
	.p2align 4,,15
	.globl	s370_157D
	.type	s370_157D, @function
s370_157D:
.LFB684:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6965
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6965:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE684:
	.size	s370_157D, .-s370_157D
	.p2align 4,,15
	.globl	s370_157E
	.type	s370_157E, @function
s370_157E:
.LFB685:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6969
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6969:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE685:
	.size	s370_157E, .-s370_157E
	.p2align 4,,15
	.globl	s370_157F
	.type	s370_157F, @function
s370_157F:
.LFB686:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6973
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6973:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE686:
	.size	s370_157F, .-s370_157F
	.p2align 4,,15
	.globl	s370_1580
	.type	s370_1580, @function
s370_1580:
.LFB687:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6977
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6977:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE687:
	.size	s370_1580, .-s370_1580
	.p2align 4,,15
	.globl	s370_1581
	.type	s370_1581, @function
s370_1581:
.LFB688:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6981
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6981:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE688:
	.size	s370_1581, .-s370_1581
	.p2align 4,,15
	.globl	s370_1582
	.type	s370_1582, @function
s370_1582:
.LFB689:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6985
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6985:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE689:
	.size	s370_1582, .-s370_1582
	.p2align 4,,15
	.globl	s370_1583
	.type	s370_1583, @function
s370_1583:
.LFB690:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6989
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6989:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE690:
	.size	s370_1583, .-s370_1583
	.p2align 4,,15
	.globl	s370_1584
	.type	s370_1584, @function
s370_1584:
.LFB691:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6993
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6993:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE691:
	.size	s370_1584, .-s370_1584
	.p2align 4,,15
	.globl	s370_1585
	.type	s370_1585, @function
s370_1585:
.LFB692:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L6997
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L6997:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE692:
	.size	s370_1585, .-s370_1585
	.p2align 4,,15
	.globl	s370_1586
	.type	s370_1586, @function
s370_1586:
.LFB693:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7001
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7001:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE693:
	.size	s370_1586, .-s370_1586
	.p2align 4,,15
	.globl	s370_1587
	.type	s370_1587, @function
s370_1587:
.LFB694:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7005
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7005:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE694:
	.size	s370_1587, .-s370_1587
	.p2align 4,,15
	.globl	s370_1588
	.type	s370_1588, @function
s370_1588:
.LFB695:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE695:
	.size	s370_1588, .-s370_1588
	.p2align 4,,15
	.globl	s370_1589
	.type	s370_1589, @function
s370_1589:
.LFB696:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7010
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7010:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE696:
	.size	s370_1589, .-s370_1589
	.p2align 4,,15
	.globl	s370_158A
	.type	s370_158A, @function
s370_158A:
.LFB697:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7014
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7014:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE697:
	.size	s370_158A, .-s370_158A
	.p2align 4,,15
	.globl	s370_158B
	.type	s370_158B, @function
s370_158B:
.LFB698:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7018
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7018:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE698:
	.size	s370_158B, .-s370_158B
	.p2align 4,,15
	.globl	s370_158C
	.type	s370_158C, @function
s370_158C:
.LFB699:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7022
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7022:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE699:
	.size	s370_158C, .-s370_158C
	.p2align 4,,15
	.globl	s370_158D
	.type	s370_158D, @function
s370_158D:
.LFB700:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7026
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7026:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE700:
	.size	s370_158D, .-s370_158D
	.p2align 4,,15
	.globl	s370_158E
	.type	s370_158E, @function
s370_158E:
.LFB701:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7030
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7030:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE701:
	.size	s370_158E, .-s370_158E
	.p2align 4,,15
	.globl	s370_158F
	.type	s370_158F, @function
s370_158F:
.LFB702:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7034
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7034:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE702:
	.size	s370_158F, .-s370_158F
	.p2align 4,,15
	.globl	s370_1590
	.type	s370_1590, @function
s370_1590:
.LFB703:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7038
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7038:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE703:
	.size	s370_1590, .-s370_1590
	.p2align 4,,15
	.globl	s370_1591
	.type	s370_1591, @function
s370_1591:
.LFB704:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7042
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7042:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE704:
	.size	s370_1591, .-s370_1591
	.p2align 4,,15
	.globl	s370_1592
	.type	s370_1592, @function
s370_1592:
.LFB705:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7046
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7046:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE705:
	.size	s370_1592, .-s370_1592
	.p2align 4,,15
	.globl	s370_1593
	.type	s370_1593, @function
s370_1593:
.LFB706:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7050
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7050:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE706:
	.size	s370_1593, .-s370_1593
	.p2align 4,,15
	.globl	s370_1594
	.type	s370_1594, @function
s370_1594:
.LFB707:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7054
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7054:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE707:
	.size	s370_1594, .-s370_1594
	.p2align 4,,15
	.globl	s370_1595
	.type	s370_1595, @function
s370_1595:
.LFB708:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7058
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7058:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE708:
	.size	s370_1595, .-s370_1595
	.p2align 4,,15
	.globl	s370_1596
	.type	s370_1596, @function
s370_1596:
.LFB709:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7062
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7062:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE709:
	.size	s370_1596, .-s370_1596
	.p2align 4,,15
	.globl	s370_1597
	.type	s370_1597, @function
s370_1597:
.LFB710:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7066
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7066:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE710:
	.size	s370_1597, .-s370_1597
	.p2align 4,,15
	.globl	s370_1598
	.type	s370_1598, @function
s370_1598:
.LFB711:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7070
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7070:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE711:
	.size	s370_1598, .-s370_1598
	.p2align 4,,15
	.globl	s370_1599
	.type	s370_1599, @function
s370_1599:
.LFB712:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE712:
	.size	s370_1599, .-s370_1599
	.p2align 4,,15
	.globl	s370_159A
	.type	s370_159A, @function
s370_159A:
.LFB713:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7075
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7075:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE713:
	.size	s370_159A, .-s370_159A
	.p2align 4,,15
	.globl	s370_159B
	.type	s370_159B, @function
s370_159B:
.LFB714:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7079
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7079:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE714:
	.size	s370_159B, .-s370_159B
	.p2align 4,,15
	.globl	s370_159C
	.type	s370_159C, @function
s370_159C:
.LFB715:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7083
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7083:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE715:
	.size	s370_159C, .-s370_159C
	.p2align 4,,15
	.globl	s370_159D
	.type	s370_159D, @function
s370_159D:
.LFB716:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7087
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7087:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE716:
	.size	s370_159D, .-s370_159D
	.p2align 4,,15
	.globl	s370_159E
	.type	s370_159E, @function
s370_159E:
.LFB717:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7091
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7091:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE717:
	.size	s370_159E, .-s370_159E
	.p2align 4,,15
	.globl	s370_159F
	.type	s370_159F, @function
s370_159F:
.LFB718:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7095
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7095:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE718:
	.size	s370_159F, .-s370_159F
	.p2align 4,,15
	.globl	s370_15A0
	.type	s370_15A0, @function
s370_15A0:
.LFB719:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7099
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7099:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE719:
	.size	s370_15A0, .-s370_15A0
	.p2align 4,,15
	.globl	s370_15A1
	.type	s370_15A1, @function
s370_15A1:
.LFB720:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7103
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7103:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE720:
	.size	s370_15A1, .-s370_15A1
	.p2align 4,,15
	.globl	s370_15A2
	.type	s370_15A2, @function
s370_15A2:
.LFB721:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7107
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7107:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE721:
	.size	s370_15A2, .-s370_15A2
	.p2align 4,,15
	.globl	s370_15A3
	.type	s370_15A3, @function
s370_15A3:
.LFB722:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7111
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7111:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE722:
	.size	s370_15A3, .-s370_15A3
	.p2align 4,,15
	.globl	s370_15A4
	.type	s370_15A4, @function
s370_15A4:
.LFB723:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7115
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7115:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE723:
	.size	s370_15A4, .-s370_15A4
	.p2align 4,,15
	.globl	s370_15A5
	.type	s370_15A5, @function
s370_15A5:
.LFB724:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7119
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7119:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE724:
	.size	s370_15A5, .-s370_15A5
	.p2align 4,,15
	.globl	s370_15A6
	.type	s370_15A6, @function
s370_15A6:
.LFB725:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7123
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7123:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE725:
	.size	s370_15A6, .-s370_15A6
	.p2align 4,,15
	.globl	s370_15A7
	.type	s370_15A7, @function
s370_15A7:
.LFB726:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7127
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7127:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE726:
	.size	s370_15A7, .-s370_15A7
	.p2align 4,,15
	.globl	s370_15A8
	.type	s370_15A8, @function
s370_15A8:
.LFB727:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7131
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7131:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE727:
	.size	s370_15A8, .-s370_15A8
	.p2align 4,,15
	.globl	s370_15A9
	.type	s370_15A9, @function
s370_15A9:
.LFB728:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7135
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7135:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE728:
	.size	s370_15A9, .-s370_15A9
	.p2align 4,,15
	.globl	s370_15AA
	.type	s370_15AA, @function
s370_15AA:
.LFB729:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE729:
	.size	s370_15AA, .-s370_15AA
	.p2align 4,,15
	.globl	s370_15AB
	.type	s370_15AB, @function
s370_15AB:
.LFB730:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7140
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7140:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE730:
	.size	s370_15AB, .-s370_15AB
	.p2align 4,,15
	.globl	s370_15AC
	.type	s370_15AC, @function
s370_15AC:
.LFB731:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7144
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7144:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE731:
	.size	s370_15AC, .-s370_15AC
	.p2align 4,,15
	.globl	s370_15AD
	.type	s370_15AD, @function
s370_15AD:
.LFB732:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7148
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7148:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE732:
	.size	s370_15AD, .-s370_15AD
	.p2align 4,,15
	.globl	s370_15AE
	.type	s370_15AE, @function
s370_15AE:
.LFB733:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7152
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7152:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE733:
	.size	s370_15AE, .-s370_15AE
	.p2align 4,,15
	.globl	s370_15AF
	.type	s370_15AF, @function
s370_15AF:
.LFB734:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7156
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7156:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE734:
	.size	s370_15AF, .-s370_15AF
	.p2align 4,,15
	.globl	s370_15B0
	.type	s370_15B0, @function
s370_15B0:
.LFB735:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7160
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7160:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE735:
	.size	s370_15B0, .-s370_15B0
	.p2align 4,,15
	.globl	s370_15B1
	.type	s370_15B1, @function
s370_15B1:
.LFB736:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7164
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7164:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE736:
	.size	s370_15B1, .-s370_15B1
	.p2align 4,,15
	.globl	s370_15B2
	.type	s370_15B2, @function
s370_15B2:
.LFB737:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7168
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7168:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE737:
	.size	s370_15B2, .-s370_15B2
	.p2align 4,,15
	.globl	s370_15B3
	.type	s370_15B3, @function
s370_15B3:
.LFB738:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7172
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7172:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE738:
	.size	s370_15B3, .-s370_15B3
	.p2align 4,,15
	.globl	s370_15B4
	.type	s370_15B4, @function
s370_15B4:
.LFB739:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7176
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7176:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE739:
	.size	s370_15B4, .-s370_15B4
	.p2align 4,,15
	.globl	s370_15B5
	.type	s370_15B5, @function
s370_15B5:
.LFB740:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7180
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7180:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE740:
	.size	s370_15B5, .-s370_15B5
	.p2align 4,,15
	.globl	s370_15B6
	.type	s370_15B6, @function
s370_15B6:
.LFB741:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7184
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7184:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE741:
	.size	s370_15B6, .-s370_15B6
	.p2align 4,,15
	.globl	s370_15B7
	.type	s370_15B7, @function
s370_15B7:
.LFB742:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7188
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7188:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE742:
	.size	s370_15B7, .-s370_15B7
	.p2align 4,,15
	.globl	s370_15B8
	.type	s370_15B8, @function
s370_15B8:
.LFB743:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7192
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7192:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE743:
	.size	s370_15B8, .-s370_15B8
	.p2align 4,,15
	.globl	s370_15B9
	.type	s370_15B9, @function
s370_15B9:
.LFB744:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7196
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7196:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE744:
	.size	s370_15B9, .-s370_15B9
	.p2align 4,,15
	.globl	s370_15BA
	.type	s370_15BA, @function
s370_15BA:
.LFB745:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7200
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7200:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE745:
	.size	s370_15BA, .-s370_15BA
	.p2align 4,,15
	.globl	s370_15BB
	.type	s370_15BB, @function
s370_15BB:
.LFB746:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE746:
	.size	s370_15BB, .-s370_15BB
	.p2align 4,,15
	.globl	s370_15BC
	.type	s370_15BC, @function
s370_15BC:
.LFB747:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7205
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7205:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE747:
	.size	s370_15BC, .-s370_15BC
	.p2align 4,,15
	.globl	s370_15BD
	.type	s370_15BD, @function
s370_15BD:
.LFB748:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7209
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7209:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE748:
	.size	s370_15BD, .-s370_15BD
	.p2align 4,,15
	.globl	s370_15BE
	.type	s370_15BE, @function
s370_15BE:
.LFB749:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7213
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7213:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE749:
	.size	s370_15BE, .-s370_15BE
	.p2align 4,,15
	.globl	s370_15BF
	.type	s370_15BF, @function
s370_15BF:
.LFB750:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7217
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7217:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE750:
	.size	s370_15BF, .-s370_15BF
	.p2align 4,,15
	.globl	s370_15C0
	.type	s370_15C0, @function
s370_15C0:
.LFB751:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7221
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7221:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE751:
	.size	s370_15C0, .-s370_15C0
	.p2align 4,,15
	.globl	s370_15C1
	.type	s370_15C1, @function
s370_15C1:
.LFB752:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7225
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7225:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE752:
	.size	s370_15C1, .-s370_15C1
	.p2align 4,,15
	.globl	s370_15C2
	.type	s370_15C2, @function
s370_15C2:
.LFB753:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7229
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7229:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE753:
	.size	s370_15C2, .-s370_15C2
	.p2align 4,,15
	.globl	s370_15C3
	.type	s370_15C3, @function
s370_15C3:
.LFB754:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7233
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7233:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE754:
	.size	s370_15C3, .-s370_15C3
	.p2align 4,,15
	.globl	s370_15C4
	.type	s370_15C4, @function
s370_15C4:
.LFB755:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7237
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7237:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE755:
	.size	s370_15C4, .-s370_15C4
	.p2align 4,,15
	.globl	s370_15C5
	.type	s370_15C5, @function
s370_15C5:
.LFB756:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7241
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7241:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE756:
	.size	s370_15C5, .-s370_15C5
	.p2align 4,,15
	.globl	s370_15C6
	.type	s370_15C6, @function
s370_15C6:
.LFB757:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7245
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7245:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE757:
	.size	s370_15C6, .-s370_15C6
	.p2align 4,,15
	.globl	s370_15C7
	.type	s370_15C7, @function
s370_15C7:
.LFB758:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7249
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7249:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE758:
	.size	s370_15C7, .-s370_15C7
	.p2align 4,,15
	.globl	s370_15C8
	.type	s370_15C8, @function
s370_15C8:
.LFB759:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7253
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7253:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE759:
	.size	s370_15C8, .-s370_15C8
	.p2align 4,,15
	.globl	s370_15C9
	.type	s370_15C9, @function
s370_15C9:
.LFB760:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7257
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7257:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE760:
	.size	s370_15C9, .-s370_15C9
	.p2align 4,,15
	.globl	s370_15CA
	.type	s370_15CA, @function
s370_15CA:
.LFB761:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7261
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7261:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE761:
	.size	s370_15CA, .-s370_15CA
	.p2align 4,,15
	.globl	s370_15CB
	.type	s370_15CB, @function
s370_15CB:
.LFB762:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7265
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7265:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE762:
	.size	s370_15CB, .-s370_15CB
	.p2align 4,,15
	.globl	s370_15CC
	.type	s370_15CC, @function
s370_15CC:
.LFB763:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE763:
	.size	s370_15CC, .-s370_15CC
	.p2align 4,,15
	.globl	s370_15CD
	.type	s370_15CD, @function
s370_15CD:
.LFB764:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7270
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7270:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE764:
	.size	s370_15CD, .-s370_15CD
	.p2align 4,,15
	.globl	s370_15CE
	.type	s370_15CE, @function
s370_15CE:
.LFB765:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7274
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7274:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE765:
	.size	s370_15CE, .-s370_15CE
	.p2align 4,,15
	.globl	s370_15CF
	.type	s370_15CF, @function
s370_15CF:
.LFB766:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7278
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7278:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE766:
	.size	s370_15CF, .-s370_15CF
	.p2align 4,,15
	.globl	s370_15D0
	.type	s370_15D0, @function
s370_15D0:
.LFB767:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7282
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7282:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE767:
	.size	s370_15D0, .-s370_15D0
	.p2align 4,,15
	.globl	s370_15D1
	.type	s370_15D1, @function
s370_15D1:
.LFB768:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7286
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7286:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE768:
	.size	s370_15D1, .-s370_15D1
	.p2align 4,,15
	.globl	s370_15D2
	.type	s370_15D2, @function
s370_15D2:
.LFB769:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7290
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7290:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE769:
	.size	s370_15D2, .-s370_15D2
	.p2align 4,,15
	.globl	s370_15D3
	.type	s370_15D3, @function
s370_15D3:
.LFB770:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7294
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7294:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE770:
	.size	s370_15D3, .-s370_15D3
	.p2align 4,,15
	.globl	s370_15D4
	.type	s370_15D4, @function
s370_15D4:
.LFB771:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7298
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7298:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE771:
	.size	s370_15D4, .-s370_15D4
	.p2align 4,,15
	.globl	s370_15D5
	.type	s370_15D5, @function
s370_15D5:
.LFB772:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7302
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7302:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE772:
	.size	s370_15D5, .-s370_15D5
	.p2align 4,,15
	.globl	s370_15D6
	.type	s370_15D6, @function
s370_15D6:
.LFB773:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7306
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7306:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE773:
	.size	s370_15D6, .-s370_15D6
	.p2align 4,,15
	.globl	s370_15D7
	.type	s370_15D7, @function
s370_15D7:
.LFB774:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7310
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7310:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE774:
	.size	s370_15D7, .-s370_15D7
	.p2align 4,,15
	.globl	s370_15D8
	.type	s370_15D8, @function
s370_15D8:
.LFB775:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7314
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7314:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE775:
	.size	s370_15D8, .-s370_15D8
	.p2align 4,,15
	.globl	s370_15D9
	.type	s370_15D9, @function
s370_15D9:
.LFB776:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7318
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7318:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE776:
	.size	s370_15D9, .-s370_15D9
	.p2align 4,,15
	.globl	s370_15DA
	.type	s370_15DA, @function
s370_15DA:
.LFB777:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7322
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7322:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE777:
	.size	s370_15DA, .-s370_15DA
	.p2align 4,,15
	.globl	s370_15DB
	.type	s370_15DB, @function
s370_15DB:
.LFB778:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7326
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7326:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE778:
	.size	s370_15DB, .-s370_15DB
	.p2align 4,,15
	.globl	s370_15DC
	.type	s370_15DC, @function
s370_15DC:
.LFB779:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7330
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7330:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE779:
	.size	s370_15DC, .-s370_15DC
	.p2align 4,,15
	.globl	s370_15DD
	.type	s370_15DD, @function
s370_15DD:
.LFB780:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE780:
	.size	s370_15DD, .-s370_15DD
	.p2align 4,,15
	.globl	s370_15DE
	.type	s370_15DE, @function
s370_15DE:
.LFB781:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7335
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7335:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE781:
	.size	s370_15DE, .-s370_15DE
	.p2align 4,,15
	.globl	s370_15DF
	.type	s370_15DF, @function
s370_15DF:
.LFB782:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7339
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7339:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE782:
	.size	s370_15DF, .-s370_15DF
	.p2align 4,,15
	.globl	s370_15E0
	.type	s370_15E0, @function
s370_15E0:
.LFB783:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7343
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7343:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE783:
	.size	s370_15E0, .-s370_15E0
	.p2align 4,,15
	.globl	s370_15E1
	.type	s370_15E1, @function
s370_15E1:
.LFB784:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7347
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7347:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE784:
	.size	s370_15E1, .-s370_15E1
	.p2align 4,,15
	.globl	s370_15E2
	.type	s370_15E2, @function
s370_15E2:
.LFB785:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7351
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7351:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE785:
	.size	s370_15E2, .-s370_15E2
	.p2align 4,,15
	.globl	s370_15E3
	.type	s370_15E3, @function
s370_15E3:
.LFB786:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7355
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7355:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE786:
	.size	s370_15E3, .-s370_15E3
	.p2align 4,,15
	.globl	s370_15E4
	.type	s370_15E4, @function
s370_15E4:
.LFB787:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7359
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7359:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE787:
	.size	s370_15E4, .-s370_15E4
	.p2align 4,,15
	.globl	s370_15E5
	.type	s370_15E5, @function
s370_15E5:
.LFB788:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7363
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7363:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE788:
	.size	s370_15E5, .-s370_15E5
	.p2align 4,,15
	.globl	s370_15E6
	.type	s370_15E6, @function
s370_15E6:
.LFB789:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7367
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7367:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE789:
	.size	s370_15E6, .-s370_15E6
	.p2align 4,,15
	.globl	s370_15E7
	.type	s370_15E7, @function
s370_15E7:
.LFB790:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7371
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7371:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE790:
	.size	s370_15E7, .-s370_15E7
	.p2align 4,,15
	.globl	s370_15E8
	.type	s370_15E8, @function
s370_15E8:
.LFB791:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7375
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7375:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE791:
	.size	s370_15E8, .-s370_15E8
	.p2align 4,,15
	.globl	s370_15E9
	.type	s370_15E9, @function
s370_15E9:
.LFB792:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7379
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7379:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE792:
	.size	s370_15E9, .-s370_15E9
	.p2align 4,,15
	.globl	s370_15EA
	.type	s370_15EA, @function
s370_15EA:
.LFB793:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7383
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7383:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE793:
	.size	s370_15EA, .-s370_15EA
	.p2align 4,,15
	.globl	s370_15EB
	.type	s370_15EB, @function
s370_15EB:
.LFB794:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7387
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7387:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE794:
	.size	s370_15EB, .-s370_15EB
	.p2align 4,,15
	.globl	s370_15EC
	.type	s370_15EC, @function
s370_15EC:
.LFB795:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7391
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7391:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE795:
	.size	s370_15EC, .-s370_15EC
	.p2align 4,,15
	.globl	s370_15ED
	.type	s370_15ED, @function
s370_15ED:
.LFB796:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7395
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7395:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE796:
	.size	s370_15ED, .-s370_15ED
	.p2align 4,,15
	.globl	s370_15EE
	.type	s370_15EE, @function
s370_15EE:
.LFB797:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE797:
	.size	s370_15EE, .-s370_15EE
	.p2align 4,,15
	.globl	s370_15EF
	.type	s370_15EF, @function
s370_15EF:
.LFB798:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7400
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7400:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE798:
	.size	s370_15EF, .-s370_15EF
	.p2align 4,,15
	.globl	s370_15F0
	.type	s370_15F0, @function
s370_15F0:
.LFB799:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7404
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7404:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE799:
	.size	s370_15F0, .-s370_15F0
	.p2align 4,,15
	.globl	s370_15F1
	.type	s370_15F1, @function
s370_15F1:
.LFB800:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7408
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7408:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE800:
	.size	s370_15F1, .-s370_15F1
	.p2align 4,,15
	.globl	s370_15F2
	.type	s370_15F2, @function
s370_15F2:
.LFB801:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7412
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7412:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE801:
	.size	s370_15F2, .-s370_15F2
	.p2align 4,,15
	.globl	s370_15F3
	.type	s370_15F3, @function
s370_15F3:
.LFB802:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7416
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7416:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE802:
	.size	s370_15F3, .-s370_15F3
	.p2align 4,,15
	.globl	s370_15F4
	.type	s370_15F4, @function
s370_15F4:
.LFB803:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7420
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7420:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE803:
	.size	s370_15F4, .-s370_15F4
	.p2align 4,,15
	.globl	s370_15F5
	.type	s370_15F5, @function
s370_15F5:
.LFB804:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7424
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7424:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE804:
	.size	s370_15F5, .-s370_15F5
	.p2align 4,,15
	.globl	s370_15F6
	.type	s370_15F6, @function
s370_15F6:
.LFB805:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7428
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7428:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE805:
	.size	s370_15F6, .-s370_15F6
	.p2align 4,,15
	.globl	s370_15F7
	.type	s370_15F7, @function
s370_15F7:
.LFB806:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7432
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7432:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE806:
	.size	s370_15F7, .-s370_15F7
	.p2align 4,,15
	.globl	s370_15F8
	.type	s370_15F8, @function
s370_15F8:
.LFB807:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7436
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7436:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE807:
	.size	s370_15F8, .-s370_15F8
	.p2align 4,,15
	.globl	s370_15F9
	.type	s370_15F9, @function
s370_15F9:
.LFB808:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7440
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7440:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE808:
	.size	s370_15F9, .-s370_15F9
	.p2align 4,,15
	.globl	s370_15FA
	.type	s370_15FA, @function
s370_15FA:
.LFB809:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7444
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7444:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE809:
	.size	s370_15FA, .-s370_15FA
	.p2align 4,,15
	.globl	s370_15FB
	.type	s370_15FB, @function
s370_15FB:
.LFB810:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7448
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7448:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE810:
	.size	s370_15FB, .-s370_15FB
	.p2align 4,,15
	.globl	s370_15FC
	.type	s370_15FC, @function
s370_15FC:
.LFB811:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7452
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7452:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE811:
	.size	s370_15FC, .-s370_15FC
	.p2align 4,,15
	.globl	s370_15FD
	.type	s370_15FD, @function
s370_15FD:
.LFB812:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7456
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7456:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE812:
	.size	s370_15FD, .-s370_15FD
	.p2align 4,,15
	.globl	s370_15FE
	.type	s370_15FE, @function
s370_15FE:
.LFB813:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L7460
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L7460:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE813:
	.size	s370_15FE, .-s370_15FE
	.p2align 4,,15
	.globl	s370_15FF
	.type	s370_15FF, @function
s370_15FF:
.LFB814:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE814:
	.size	s370_15FF, .-s370_15FF
	.p2align 4,,15
	.globl	s370_compare_logical_immediate
	.type	s370_compare_logical_immediate, @function
s370_compare_logical_immediate:
.LFB815:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %eax
	movl	%ebp, %r12d
	shrl	$12, %eax
	shrl	$16, %r12d
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L7465
	cltq
	addl	192(%rsi,%rax,8), %ebp
	andl	$16777215, %ebp
.L7465:
	leal	-80(%rbp), %eax
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	cmpl	$3, %eax
	jbe	.L7490
.L7466:
	leal	5(%r13), %eax
	cltq
	movl	1892(%rbx,%rax,4), %edx
	testl	%edx, %edx
	je	.L7467
	leal	1(%rdx), %eax
	movl	%ebp, %ecx
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L7491
.L7468:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L7492
.L7469:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7467
	testb	$4, 46264(%rbx,%rcx)
	je	.L7467
	xorq	26808(%rdx), %rbp
.L7470:
	cmpb	0(%rbp), %r12b
	movl	$1, %eax
	ja	.L7471
	sbbl	%eax, %eax
	andl	$2, %eax
.L7471:
	movb	%al, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L7491:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L7468
.L7467:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	call	s370_logical_to_main_l
	movq	%rax, %rbp
	jmp	.L7470
.L7492:
	cmpb	43192(%rbx,%rcx), %al
	je	.L7469
	jmp	.L7467
.L7490:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L7466
	.cfi_endproc
.LFE815:
	.size	s370_compare_logical_immediate, .-s370_compare_logical_immediate
	.p2align 4,,15
	.globl	s370_compare_logical_character
	.type	s370_compare_logical_character, @function
s370_compare_logical_character:
.LFB816:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %r15d
	shrl	$16, %ebp
	shrl	$28, %r15d
	andl	$4095, %ebp
	testl	%r15d, %r15d
	je	.L7494
	movslq	%r15d, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	andl	$16777215, %ebp
.L7494:
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, 16(%rsp)
	je	.L7495
	cltq
	addl	192(%rbx,%rax,8), %r12d
	andl	$16777215, %r12d
.L7495:
	movzbl	1(%rdi), %eax
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	cmpl	$83, %ebp
	movl	%eax, 12(%rsp)
	jbe	.L7682
.L7497:
	cmpl	$83, %r12d
	jbe	.L7683
.L7499:
	leal	5(%r15), %eax
	cltq
	leaq	(%rbx,%rax,4), %r10
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L7500
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L7684
.L7501:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L7685
.L7502:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7500
	testb	$4, 46264(%rbx,%rcx)
	je	.L7500
	movl	%ebp, %r13d
	movzbl	%sil, %r8d
	xorq	26808(%rdx), %r13
.L7503:
	movl	16(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L7504
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L7686
.L7505:
	testb	%r8b, %r8b
	jne	.L7687
.L7506:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7504
	testb	$4, 46264(%rbx,%rcx)
	je	.L7504
	movl	%r12d, %r14d
	xorq	26808(%rdx), %r14
.L7507:
	movl	$2047, %eax
	movl	%ebp, %edx
	subl	12(%rsp), %eax
	andl	$2047, %edx
	cmpl	%eax, %edx
	ja	.L7508
	movl	%r12d, %edx
	andl	$2047, %edx
	cmpl	%edx, %eax
	jb	.L7509
	movl	12(%rsp), %edx
	movq	%r14, %rsi
	movq	%r13, %rdi
	addl	$1, %edx
	call	memcmp
.L7510:
	xorl	%edx, %edx
	testl	%eax, %eax
	jne	.L7550
.L7547:
	movb	%dl, 100(%rbx)
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L7508:
	.cfi_restore_state
	movl	$2048, %ecx
	movl	%ecx, %edi
	subl	%edx, %edi
	movl	%r12d, %edx
	andl	$2047, %edx
	movl	%edi, 24(%rsp)
	cmpl	%edx, %eax
	jb	.L7516
	movl	%edi, %r12d
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%r12, %rdx
	movq	%r10, 16(%rsp)
	call	memcmp
	movq	16(%rsp), %r10
	testl	%eax, %eax
	jne	.L7550
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L7688
	addl	24(%rsp), %ebp
	leal	1(%rax), %edx
	movslq	%edx, %rdx
	movl	%ebp, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L7689
.L7518:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L7690
.L7519:
	movl	%ebp, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L7517
	testb	$4, 46264(%rbx,%rcx)
	je	.L7517
	xorq	26808(%rax), %rdi
.L7520:
	movl	12(%rsp), %edx
	leaq	(%r14,%r12), %rsi
	addl	$1, %edx
	subl	24(%rsp), %edx
	call	memcmp
	xorl	%edx, %edx
	testl	%eax, %eax
	je	.L7547
	.p2align 4,,10
	.p2align 3
.L7550:
	sarl	$31, %eax
	leal	2(%rax), %edx
	jmp	.L7547
	.p2align 4,,10
	.p2align 3
.L7516:
	subl	%edx, %ecx
	cmpl	%ecx, 24(%rsp)
	movl	%ecx, 32(%rsp)
	je	.L7691
	movq	%r10, 56(%rsp)
	movq	%r11, 48(%rsp)
	jae	.L7530
	movl	24(%rsp), %eax
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%rax, %rdx
	movq	%rax, 40(%rsp)
	call	memcmp
	movq	48(%rsp), %r11
	testl	%eax, %eax
	movq	56(%rsp), %r10
	jne	.L7550
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L7692
	addl	24(%rsp), %ebp
	addl	$1, %eax
	cltq
	movl	%ebp, %esi
	andl	$16777215, %esi
	movl	%esi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L7693
.L7532:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L7694
.L7533:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7531
	testb	$4, 46264(%rbx,%rcx)
	je	.L7531
	movl	%esi, %ebp
	xorq	26808(%rdx), %rbp
.L7534:
	movl	32(%rsp), %edx
	movq	%rbp, %rdi
	movq	%r11, 48(%rsp)
	movq	40(%rsp), %rax
	subl	24(%rsp), %edx
	leaq	(%r14,%rax), %rsi
	call	memcmp
	testl	%eax, %eax
	jne	.L7550
	movq	48(%rsp), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L7695
	addl	32(%rsp), %r12d
	addl	$1, %eax
	cltq
	movl	%r12d, %esi
	andl	$16777215, %esi
	movl	%esi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L7696
.L7536:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L7697
.L7537:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7535
	testb	$4, 46264(%rbx,%rcx)
	je	.L7535
	xorq	26808(%rdx), %rsi
.L7538:
	movl	32(%rsp), %eax
	movl	12(%rsp), %edx
	movl	%eax, %edi
	subq	40(%rsp), %rdi
	addl	$1, %edx
	subl	%eax, %edx
	addq	%rbp, %rdi
	call	memcmp
	jmp	.L7510
	.p2align 4,,10
	.p2align 3
.L7509:
	movl	$2048, %ebp
	movq	%r14, %rsi
	movq	%r13, %rdi
	subl	%edx, %ebp
	movq	%r11, 24(%rsp)
	movl	%ebp, %r15d
	movq	%r15, %rdx
	call	memcmp
	movq	24(%rsp), %r11
	testl	%eax, %eax
	jne	.L7550
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L7698
	leal	1(%rax), %edx
	addl	%ebp, %r12d
	movl	%r12d, %esi
	movslq	%edx, %rdx
	andl	$16777215, %esi
	movl	%esi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L7699
.L7513:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L7700
.L7514:
	movl	%r12d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L7512
	testb	$4, 46264(%rbx,%rcx)
	je	.L7512
	xorq	26808(%rax), %rsi
.L7515:
	movl	12(%rsp), %edx
	leaq	0(%r13,%r15), %rdi
	addl	$1, %edx
	subl	%ebp, %edx
	call	memcmp
	jmp	.L7510
	.p2align 4,,10
	.p2align 3
.L7691:
	movl	24(%rsp), %edx
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%r10, 40(%rsp)
	movq	%r11, 32(%rsp)
	call	memcmp
	movq	32(%rsp), %r11
	testl	%eax, %eax
	movq	40(%rsp), %r10
	jne	.L7550
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L7701
	addl	24(%rsp), %ebp
	leal	1(%rax), %edx
	movslq	%edx, %rdx
	movl	%ebp, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L7702
.L7523:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L7703
.L7524:
	movl	%ebp, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L7522
	testb	$4, 46264(%rbx,%rcx)
	je	.L7522
	movl	%edi, %ebp
	movzbl	%sil, %r8d
	xorq	26808(%rax), %rbp
.L7525:
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L7704
	addl	24(%rsp), %r12d
	leal	1(%rax), %edx
	movslq	%edx, %rdx
	movl	%r12d, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L7705
.L7527:
	testb	%r8b, %r8b
	jne	.L7706
.L7528:
	movl	%r12d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L7526
	testb	$4, 46264(%rbx,%rcx)
	je	.L7526
	movl	%edi, %esi
	xorq	26808(%rax), %rsi
.L7529:
	movl	12(%rsp), %edx
	movq	%rbp, %rdi
	addl	$1, %edx
	subl	24(%rsp), %edx
	call	memcmp
	jmp	.L7510
	.p2align 4,,10
	.p2align 3
.L7530:
	movl	32(%rsp), %eax
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%rax, %rdx
	movq	%rax, 40(%rsp)
	call	memcmp
	movq	48(%rsp), %r11
	testl	%eax, %eax
	movq	56(%rsp), %r10
	jne	.L7550
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L7707
	addl	32(%rsp), %r12d
	addl	$1, %eax
	cltq
	movl	%r12d, %esi
	andl	$16777215, %esi
	movl	%esi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L7708
.L7540:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L7709
.L7541:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7539
	testb	$4, 46264(%rbx,%rcx)
	je	.L7539
	movl	%esi, %r12d
	xorq	26808(%rdx), %r12
.L7542:
	movl	24(%rsp), %edx
	movq	%r12, %rsi
	movq	%r10, 16(%rsp)
	movq	40(%rsp), %rax
	subl	32(%rsp), %edx
	leaq	0(%r13,%rax), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L7550
	movq	16(%rsp), %r10
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L7710
	addl	24(%rsp), %ebp
	addl	$1, %eax
	cltq
	movl	%ebp, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L7711
.L7544:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L7712
.L7545:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7543
	testb	$4, 46264(%rbx,%rcx)
	je	.L7543
	xorq	26808(%rdx), %rdi
.L7546:
	movl	24(%rsp), %eax
	movl	12(%rsp), %edx
	movl	%eax, %esi
	subq	40(%rsp), %rsi
	addl	$1, %edx
	subl	%eax, %edx
	addq	%r12, %rsi
	call	memcmp
	jmp	.L7510
.L7686:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L7505
.L7504:
	movl	16(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movq	%r10, 32(%rsp)
	movq	%r11, 24(%rsp)
	call	s370_logical_to_main_l
	movq	32(%rsp), %r10
	movq	%rax, %r14
	movq	24(%rsp), %r11
	jmp	.L7507
.L7684:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L7501
.L7500:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	movq	%r10, 24(%rsp)
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r13
	movq	24(%rsp), %r10
	jmp	.L7503
.L7683:
	movl	12(%rsp), %eax
	addl	%r12d, %eax
	cmpl	$79, %eax
	jbe	.L7499
	movq	%rbx, %rdi
	call	s370_store_int_timer
	jmp	.L7499
.L7682:
	movl	12(%rsp), %eax
	addl	%ebp, %eax
	cmpl	$79, %eax
	jbe	.L7497
	movq	%rbx, %rdi
	call	s370_store_int_timer
	jmp	.L7497
.L7687:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L7506
	.p2align 4,,3
	jmp	.L7504
.L7685:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L7502
	.p2align 4,,3
	jmp	.L7500
.L7698:
	addl	%ebp, %r12d
.L7512:
	movl	16(%rsp), %esi
	movl	%r12d, %edi
	movl	$1, %r9d
	movzbl	97(%rbx), %r8d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	s370_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L7515
.L7688:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L7517:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	$1, %r9d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	call	s370_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L7520
.L7695:
	movl	32(%rsp), %eax
	addl	%eax, %r12d
.L7535:
	movl	16(%rsp), %esi
	movl	%r12d, %edi
	movl	$1, %r9d
	movzbl	97(%rbx), %r8d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	s370_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L7538
.L7692:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L7531:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	$1, %r9d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movq	%r11, 48(%rsp)
	call	s370_logical_to_main_l
	movq	48(%rsp), %r11
	movq	%rax, %rbp
	jmp	.L7534
.L7710:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L7543:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	$1, %r9d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	call	s370_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L7546
.L7707:
	movl	32(%rsp), %eax
	addl	%eax, %r12d
.L7539:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %edi
	movl	$1, %r9d
	movl	16(%rsp), %esi
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r10, 48(%rsp)
	call	s370_logical_to_main_l
	movq	48(%rsp), %r10
	movq	%rax, %r12
	jmp	.L7542
.L7697:
	cmpb	43192(%rbx,%rcx), %al
	je	.L7537
	jmp	.L7535
.L7694:
	cmpb	43192(%rbx,%rcx), %al
	je	.L7533
	.p2align 4,,4
	jmp	.L7531
.L7693:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L7532
	jmp	.L7531
.L7700:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L7514
	.p2align 4,,4
	jmp	.L7512
.L7699:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L7513
	jmp	.L7512
.L7690:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L7519
	.p2align 4,,4
	jmp	.L7517
.L7689:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L7518
	jmp	.L7517
.L7712:
	cmpb	43192(%rbx,%rcx), %al
	je	.L7545
	.p2align 4,,4
	jmp	.L7543
.L7709:
	cmpb	43192(%rbx,%rcx), %al
	je	.L7541
	.p2align 4,,4
	jmp	.L7539
.L7708:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L7540
	jmp	.L7539
.L7696:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L7536
	jmp	.L7535
.L7711:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L7544
	jmp	.L7543
.L7704:
	movl	24(%rsp), %eax
	addl	%eax, %r12d
.L7526:
	movl	16(%rsp), %esi
	movl	%r12d, %edi
	movl	$1, %r9d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	s370_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L7529
.L7706:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L7528
	jmp	.L7526
.L7705:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L7527
	jmp	.L7526
.L7701:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L7522:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	$1, %r9d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movq	%r11, 32(%rsp)
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %rbp
	movq	32(%rsp), %r11
	jmp	.L7525
.L7703:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L7524
	jmp	.L7522
.L7702:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L7523
	jmp	.L7522
	.cfi_endproc
.LFE816:
	.size	s370_compare_logical_character, .-s370_compare_logical_character
	.p2align 4,,15
	.globl	s370_D500
	.type	s370_D500, @function
s370_D500:
.LFB817:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L7714
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r12d
	andl	$16777215, %r12d
.L7714:
	movzbl	4(%rdi), %r13d
	movzbl	5(%rdi), %edx
	movl	%r13d, %ebp
	shrb	$4, %r13b
	andl	$15, %ebp
	movzbl	%r13b, %r13d
	sall	$8, %ebp
	orl	%edx, %ebp
	testl	%r13d, %r13d
	je	.L7715
	movslq	%r13d, %rdx
	addl	192(%rbx,%rdx,8), %ebp
	andl	$16777215, %ebp
.L7715:
	leal	-80(%r12), %edx
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	cmpl	$3, %edx
	jbe	.L7761
.L7716:
	leal	-80(%rbp), %edx
	cmpl	$3, %edx
	jbe	.L7762
.L7717:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L7718
	movl	%r12d, %edi
	addl	$1, %edx
	shrl	$11, %edi
	movslq	%edx, %rdx
	andl	$1023, %edi
	leaq	(%rbx,%rdi,8), %rcx
	movl	2232(%rcx), %eax
	cmpl	%eax, 320(%rbx,%rdx,8)
	jne	.L7763
.L7719:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L7764
.L7720:
	movl	%r12d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L7718
	testb	$4, 46264(%rbx,%rdi)
	je	.L7718
	xorq	26808(%rcx), %r12
	movzbl	%sil, %r8d
.L7721:
	leal	5(%r13), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L7722
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$11, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L7765
.L7723:
	testb	%r8b, %r8b
	jne	.L7766
.L7724:
	movl	%ebp, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L7722
	testb	$4, 46264(%rbx,%rcx)
	je	.L7722
	xorq	26808(%rax), %rbp
.L7725:
	movzbl	(%r12), %edx
	xorl	%ecx, %ecx
	movzbl	0(%rbp), %eax
	subl	%eax, %edx
	je	.L7726
	sarl	$31, %edx
	leal	2(%rdx), %ecx
.L7726:
	movb	%cl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L7763:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdi), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L7719
.L7718:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r12
	jmp	.L7721
.L7765:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L7723
.L7722:
	movl	%ebp, %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	call	s370_logical_to_main_l
	movq	%rax, %rbp
	jmp	.L7725
.L7764:
	cmpb	43192(%rbx,%rdi), %sil
	je	.L7720
	jmp	.L7718
.L7766:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L7724
	.p2align 4,,3
	jmp	.L7722
.L7761:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L7716
.L7762:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L7717
	.cfi_endproc
.LFE817:
	.size	s370_D500, .-s370_D500
	.p2align 4,,15
	.globl	s370_D501
	.type	s370_D501, @function
s370_D501:
.LFB818:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, 12(%rsp)
	je	.L7768
	cltq
	addl	192(%rsi,%rax,8), %r12d
	andl	$16777215, %r12d
.L7768:
	movzbl	4(%rdi), %r15d
	movzbl	5(%rdi), %eax
	movl	%r15d, %ebp
	shrb	$4, %r15b
	andl	$15, %ebp
	movzbl	%r15b, %r15d
	sall	$8, %ebp
	orl	%eax, %ebp
	testl	%r15d, %r15d
	je	.L7769
	movslq	%r15d, %rax
	addl	192(%rbx,%rax,8), %ebp
	andl	$16777215, %ebp
.L7769:
	leal	-79(%r12), %eax
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	cmpl	$4, %eax
	jbe	.L7889
.L7770:
	leal	-79(%rbp), %eax
	cmpl	$4, %eax
	jbe	.L7890
.L7771:
	movl	12(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L7772
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L7891
.L7773:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L7892
.L7774:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7772
	testb	$4, 46264(%rbx,%rcx)
	je	.L7772
	movl	%r12d, %r14d
	movzbl	%sil, %r8d
	xorq	26808(%rdx), %r14
.L7775:
	leal	5(%r15), %eax
	cltq
	leaq	(%rbx,%rax,4), %r10
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L7776
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L7893
.L7777:
	testb	%r8b, %r8b
	jne	.L7894
.L7778:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7776
	testb	$4, 46264(%rbx,%rcx)
	je	.L7776
	movl	%ebp, %r13d
	xorq	26808(%rdx), %r13
.L7779:
	movl	%r12d, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	movl	%ebp, %eax
	je	.L7780
	andl	$2047, %eax
	cmpl	$2047, %eax
	je	.L7781
	movzwl	(%r14), %edx
	movzwl	0(%r13), %eax
#APP
# 2762 "general1.c" 1
	rorw $8, %dx
# 0 "" 2
# 2763 "general1.c" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
	cmpw	%ax, %dx
	je	.L7805
	sbbl	%eax, %eax
	addl	$2, %eax
.L7803:
	movb	%al, 100(%rbx)
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L7780:
	.cfi_restore_state
	andl	$2047, %eax
	movzbl	(%r14), %edx
	cmpl	$2047, %eax
	movzbl	0(%r13), %eax
	je	.L7790
	subl	%eax, %edx
	jne	.L7804
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L7895
	addl	$1, %r12d
	addl	$1, %eax
	movl	%r12d, %edi
	cltq
	andl	$16777215, %edi
	movl	%edi, %esi
	shrl	$11, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %ecx
	cmpl	%ecx, 320(%rbx,%rax,8)
	jne	.L7896
.L7792:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L7897
.L7793:
	movl	%r12d, %ecx
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L7791
	testb	$4, 46264(%rbx,%rsi)
	je	.L7791
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L7794:
	movzbl	(%rax), %edx
	movzbl	1(%r13), %eax
	subl	%eax, %edx
	jmp	.L7789
	.p2align 4,,10
	.p2align 3
.L7790:
	subl	%eax, %edx
	jne	.L7804
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L7898
	leal	1(%rax), %edx
	addl	$1, %r12d
	movl	%r12d, %edi
	movslq	%edx, %rdx
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L7899
.L7796:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L7900
.L7797:
	movl	%r12d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L7795
	testb	$4, 46264(%rbx,%rcx)
	je	.L7795
	movl	%edi, %r12d
	movzbl	%sil, %r8d
	xorq	26808(%rax), %r12
.L7798:
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L7901
	leal	1(%rax), %ecx
	addl	$1, %ebp
	movl	%ebp, %eax
	movslq	%ecx, %rcx
	andl	$16777215, %eax
	movl	%eax, %esi
	shrl	$11, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L7902
.L7800:
	testb	%r8b, %r8b
	jne	.L7903
.L7801:
	movl	%ebp, %ecx
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L7799
	testb	$4, 46264(%rbx,%rsi)
	je	.L7799
	xorq	26808(%rdx), %rax
.L7802:
	movzbl	(%r12), %edx
	movzbl	(%rax), %eax
	subl	%eax, %edx
	jmp	.L7789
	.p2align 4,,10
	.p2align 3
.L7781:
	movzbl	(%r14), %edx
	movzbl	0(%r13), %eax
	subl	%eax, %edx
	jne	.L7804
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L7904
	addl	$1, %ebp
	addl	$1, %eax
	movl	%ebp, %edi
	cltq
	andl	$16777215, %edi
	movl	%edi, %esi
	shrl	$11, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %ecx
	cmpl	%ecx, 320(%rbx,%rax,8)
	jne	.L7905
.L7786:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L7906
.L7787:
	movl	%ebp, %ecx
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L7785
	testb	$4, 46264(%rbx,%rsi)
	je	.L7785
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L7788:
	movzbl	1(%r14), %edx
	movzbl	(%rax), %eax
	subl	%eax, %edx
.L7789:
	xorl	%eax, %eax
	testl	%edx, %edx
	je	.L7803
	.p2align 4,,10
	.p2align 3
.L7804:
	sarl	$31, %edx
	leal	2(%rdx), %eax
	jmp	.L7803
	.p2align 4,,10
	.p2align 3
.L7805:
	xorl	%eax, %eax
	jmp	.L7803
.L7893:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L7777
.L7776:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	movq	%r10, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	s370_logical_to_main_l
	movq	24(%rsp), %r10
	movq	%rax, %r13
	movq	16(%rsp), %r11
	jmp	.L7779
.L7891:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L7773
.L7772:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movl	12(%rsp), %esi
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movq	%r11, 16(%rsp)
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r14
	movq	16(%rsp), %r11
	jmp	.L7775
.L7894:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L7778
	jmp	.L7776
.L7892:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L7774
	.p2align 4,,3
	jmp	.L7772
.L7889:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L7770
.L7890:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L7771
.L7895:
	addl	$1, %r12d
.L7791:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %edi
	movl	$1, %r9d
	movl	12(%rsp), %esi
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	s370_logical_to_main_l
	jmp	.L7794
.L7904:
	addl	$1, %ebp
.L7785:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	$1, %r9d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	call	s370_logical_to_main_l
	jmp	.L7788
.L7906:
	cmpb	43192(%rbx,%rsi), %al
	je	.L7787
	.p2align 4,,4
	jmp	.L7785
.L7905:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rax)
	jne	.L7786
	jmp	.L7785
.L7897:
	cmpb	43192(%rbx,%rsi), %al
	je	.L7793
	.p2align 4,,4
	jmp	.L7791
.L7896:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rax)
	jne	.L7792
	jmp	.L7791
.L7901:
	addl	$1, %ebp
.L7799:
	movl	%ebp, %edi
	movl	$1, %r9d
	movl	$4, %ecx
	andl	$16777215, %edi
	movq	%rbx, %rdx
	movl	%r15d, %esi
	call	s370_logical_to_main_l
	jmp	.L7802
.L7903:
	cmpb	%r8b, 43192(%rbx,%rsi)
	je	.L7801
	.p2align 4,,3
	jmp	.L7799
.L7902:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L7800
	jmp	.L7799
.L7898:
	addl	$1, %r12d
.L7795:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %edi
	movl	$1, %r9d
	movl	12(%rsp), %esi
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r10, 16(%rsp)
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r12
	movq	16(%rsp), %r10
	jmp	.L7798
.L7900:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L7797
	jmp	.L7795
.L7899:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L7796
	jmp	.L7795
	.cfi_endproc
.LFE818:
	.size	s370_D501, .-s370_D501
	.p2align 4,,15
	.globl	s370_D503
	.type	s370_D503, @function
s370_D503:
.LFB819:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, (%rsp)
	je	.L7908
	cltq
	addl	192(%rsi,%rax,8), %r12d
	andl	$16777215, %r12d
.L7908:
	movzbl	4(%rdi), %eax
	movzbl	5(%rdi), %edx
	movl	%eax, %ebp
	shrb	$4, %al
	andl	$15, %ebp
	movzbl	%al, %r10d
	sall	$8, %ebp
	orl	%edx, %ebp
	testl	%r10d, %r10d
	je	.L7909
	movslq	%r10d, %rax
	addl	192(%rbx,%rax,8), %ebp
	andl	$16777215, %ebp
.L7909:
	leal	-77(%r12), %eax
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	cmpl	$6, %eax
	jbe	.L8094
.L7910:
	leal	-77(%rbp), %eax
	cmpl	$6, %eax
	jbe	.L8095
.L7911:
	movl	(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 8(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L7912
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8096
.L7913:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8097
.L7914:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7912
	testb	$4, 46264(%rbx,%rcx)
	je	.L7912
	movl	%r12d, %r13d
	movzbl	%sil, %r8d
	xorq	26808(%rdx), %r13
.L7915:
	leal	5(%r10), %eax
	cltq
	leaq	(%rbx,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L7916
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8098
.L7917:
	testb	%r8b, %r8b
	jne	.L8099
.L7918:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7916
	testb	$4, 46264(%rbx,%rcx)
	je	.L7916
	movl	%ebp, %r14d
	xorq	26808(%rdx), %r14
.L7919:
	movl	%r12d, %r15d
	andl	$2047, %r15d
	cmpl	$2044, %r15d
	ja	.L7920
	movl	%ebp, %r12d
	andl	$2047, %r12d
	cmpl	$2044, %r12d
	ja	.L7921
	movl	0(%r13), %edx
	movl	(%r14), %eax
	bswap	%edx
	bswap	%eax
	cmpl	%eax, %edx
	je	.L7965
	sbbl	%eax, %eax
	addl	$2, %eax
.L7961:
	movb	%al, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L7920:
	.cfi_restore_state
	movl	$2048, %eax
	movl	%eax, %esi
	subl	%r15d, %esi
	movl	%esi, 4(%rsp)
	movl	%ebp, %esi
	andl	$2047, %esi
	cmpl	$2044, %esi
	movl	%esi, 16(%rsp)
	ja	.L7930
	movl	4(%rsp), %ebp
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%rbp, %rdx
	call	memcmp
	testl	%eax, %eax
	jne	.L7962
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L8100
	addl	4(%rsp), %r12d
	leal	1(%rax), %edx
	movslq	%edx, %rdx
	movl	%r12d, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L8101
.L7932:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L8102
.L7933:
	movl	%r12d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L7931
	testb	$4, 46264(%rbx,%rcx)
	je	.L7931
	xorq	26808(%rax), %rdi
.L7934:
	leal	-2044(%r15), %edx
	leaq	(%r14,%rbp), %rsi
	call	memcmp
	testl	%eax, %eax
	jne	.L7962
.L7965:
	xorl	%eax, %eax
	jmp	.L7961
	.p2align 4,,10
	.p2align 3
.L7930:
	subl	16(%rsp), %eax
	cmpl	%eax, 4(%rsp)
	movl	%eax, 24(%rsp)
	je	.L8103
	movq	%r11, 40(%rsp)
	movl	%r10d, 32(%rsp)
	jae	.L7944
	movl	4(%rsp), %r15d
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%r15, %rdx
	call	memcmp
	movl	32(%rsp), %r10d
	testl	%eax, %eax
	movq	40(%rsp), %r11
	jne	.L7962
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L8104
	addl	4(%rsp), %r12d
	addl	$1, %eax
	cltq
	movl	%r12d, %esi
	andl	$16777215, %esi
	movl	%esi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8105
.L7946:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L8106
.L7947:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7945
	testb	$4, 46264(%rbx,%rcx)
	je	.L7945
	movl	%esi, %r12d
	xorq	26808(%rdx), %r12
.L7948:
	movl	24(%rsp), %edx
	movq	%r12, %rdi
	movq	%r11, 8(%rsp)
	leaq	(%r14,%r15), %rsi
	movl	%r10d, (%rsp)
	subl	4(%rsp), %edx
	call	memcmp
	testl	%eax, %eax
	jne	.L7962
	movq	8(%rsp), %r11
	movl	(%rsp), %r10d
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L8107
	addl	24(%rsp), %ebp
	addl	$1, %eax
	cltq
	movl	%ebp, %esi
	andl	$16777215, %esi
	movl	%esi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8108
.L7950:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L8109
.L7951:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7949
	testb	$4, 46264(%rbx,%rcx)
	je	.L7949
	xorq	26808(%rdx), %rsi
.L7952:
	movl	24(%rsp), %edi
	movl	16(%rsp), %edx
	subq	%r15, %rdi
	subl	$2044, %edx
	addq	%r12, %rdi
	call	memcmp
	jmp	.L7929
	.p2align 4,,10
	.p2align 3
.L7921:
	movl	$2048, %ecx
	movq	%r14, %rsi
	movq	%r13, %rdi
	subl	%r12d, %ecx
	movq	%r11, 8(%rsp)
	movl	%ecx, %r15d
	movl	%r10d, 4(%rsp)
	movq	%r15, %rdx
	movl	%ecx, (%rsp)
	call	memcmp
	movl	(%rsp), %ecx
	testl	%eax, %eax
	movl	4(%rsp), %r10d
	movq	8(%rsp), %r11
	jne	.L7962
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L8110
	leal	1(%rax), %edx
	addl	%ecx, %ebp
	movl	%ebp, %esi
	movslq	%edx, %rdx
	andl	$16777215, %esi
	movl	%esi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L8111
.L7926:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L8112
.L7927:
	movl	%ebp, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L7925
	testb	$4, 46264(%rbx,%rcx)
	je	.L7925
	xorq	26808(%rax), %rsi
.L7928:
	leal	-2044(%r12), %edx
	leaq	0(%r13,%r15), %rdi
	call	memcmp
.L7929:
	testl	%eax, %eax
	je	.L7965
	.p2align 4,,10
	.p2align 3
.L7962:
	sarl	$31, %eax
	addl	$2, %eax
	jmp	.L7961
	.p2align 4,,10
	.p2align 3
.L8103:
	movl	4(%rsp), %edx
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%r11, 24(%rsp)
	movl	%r10d, 16(%rsp)
	call	memcmp
	movl	16(%rsp), %r10d
	testl	%eax, %eax
	movq	24(%rsp), %r11
	jne	.L7962
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L8113
	addl	4(%rsp), %r12d
	leal	1(%rax), %edx
	movslq	%edx, %rdx
	movl	%r12d, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L8114
.L7937:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8115
.L7938:
	movl	%r12d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L7936
	testb	$4, 46264(%rbx,%rcx)
	je	.L7936
	movl	%edi, %r12d
	movzbl	%sil, %r8d
	xorq	26808(%rax), %r12
.L7939:
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L8116
	addl	4(%rsp), %ebp
	leal	1(%rax), %edx
	movslq	%edx, %rdx
	movl	%ebp, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L8117
.L7941:
	testb	%r8b, %r8b
	jne	.L8118
.L7942:
	movl	%ebp, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L7940
	testb	$4, 46264(%rbx,%rcx)
	je	.L7940
	movl	%edi, %esi
	xorq	26808(%rax), %rsi
.L7943:
	movq	%r12, %rdi
	leal	-2044(%r15), %edx
	call	memcmp
	jmp	.L7929
	.p2align 4,,10
	.p2align 3
.L7944:
	movl	24(%rsp), %eax
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%rax, %rdx
	movq	%rax, 16(%rsp)
	call	memcmp
	movl	32(%rsp), %r10d
	testl	%eax, %eax
	movq	40(%rsp), %r11
	jne	.L7962
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L8119
	addl	24(%rsp), %ebp
	addl	$1, %eax
	cltq
	movl	%ebp, %esi
	andl	$16777215, %esi
	movl	%esi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8120
.L7954:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L8121
.L7955:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7953
	testb	$4, 46264(%rbx,%rcx)
	je	.L7953
	movl	%esi, %ebp
	xorq	26808(%rdx), %rbp
.L7956:
	movl	4(%rsp), %edx
	movq	%rbp, %rsi
	movq	16(%rsp), %rax
	subl	24(%rsp), %edx
	leaq	0(%r13,%rax), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L7962
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L8122
	addl	4(%rsp), %r12d
	addl	$1, %eax
	cltq
	movl	%r12d, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L8123
.L7958:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L8124
.L7959:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L7957
	testb	$4, 46264(%rbx,%rcx)
	je	.L7957
	xorq	26808(%rdx), %rdi
.L7960:
	movl	4(%rsp), %esi
	leal	-2044(%r15), %edx
	subq	16(%rsp), %rsi
	addq	%rbp, %rsi
	call	memcmp
	jmp	.L7929
.L8098:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L7917
.L7916:
	movl	%r10d, %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r11, 16(%rsp)
	movl	%r10d, 4(%rsp)
	call	s370_logical_to_main_l
	movq	16(%rsp), %r11
	movq	%rax, %r14
	movl	4(%rsp), %r10d
	jmp	.L7919
.L8096:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L7913
.L7912:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movl	(%rsp), %esi
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r10d, 4(%rsp)
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r13
	movl	4(%rsp), %r10d
	jmp	.L7915
.L8097:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L7914
	jmp	.L7912
.L8099:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L7918
	.p2align 4,,3
	jmp	.L7916
.L8095:
	movq	%rbx, %rdi
	movl	%r10d, 4(%rsp)
	call	s370_store_int_timer
	movl	4(%rsp), %r10d
	jmp	.L7911
.L8094:
	movq	%rbx, %rdi
	movl	%r10d, 4(%rsp)
	call	s370_store_int_timer
	movl	4(%rsp), %r10d
	jmp	.L7910
.L8110:
	addl	%ecx, %ebp
.L7925:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	%r10d, %esi
	andl	$16777215, %edi
	movl	$1, %r9d
	movq	%rbx, %rdx
	movl	$4, %ecx
	call	s370_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L7928
.L8100:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L7931:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %edi
	movl	$1, %r9d
	movl	(%rsp), %esi
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	s370_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L7934
.L8107:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L7949:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	%r10d, %esi
	andl	$16777215, %edi
	movl	$1, %r9d
	movq	%rbx, %rdx
	movl	$4, %ecx
	call	s370_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L7952
.L8104:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L7945:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %edi
	movl	$1, %r9d
	movl	(%rsp), %esi
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r11, 32(%rsp)
	movl	%r10d, 8(%rsp)
	call	s370_logical_to_main_l
	movq	32(%rsp), %r11
	movq	%rax, %r12
	movl	8(%rsp), %r10d
	jmp	.L7948
.L8122:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L7957:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %edi
	movl	$1, %r9d
	movl	(%rsp), %esi
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	s370_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L7960
.L8119:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L7953:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	$1, %r9d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, %esi
	call	s370_logical_to_main_l
	movq	%rax, %rbp
	jmp	.L7956
.L8109:
	cmpb	43192(%rbx,%rcx), %al
	je	.L7951
	jmp	.L7949
.L8106:
	cmpb	43192(%rbx,%rcx), %al
	je	.L7947
	.p2align 4,,4
	jmp	.L7945
.L8105:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L7946
	jmp	.L7945
.L8112:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L7927
	.p2align 4,,4
	jmp	.L7925
.L8111:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L7926
	jmp	.L7925
.L8102:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L7933
	.p2align 4,,4
	jmp	.L7931
.L8101:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L7932
	jmp	.L7931
.L8124:
	cmpb	43192(%rbx,%rcx), %al
	je	.L7959
	.p2align 4,,4
	jmp	.L7957
.L8121:
	cmpb	43192(%rbx,%rcx), %al
	je	.L7955
	.p2align 4,,4
	jmp	.L7953
.L8120:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L7954
	jmp	.L7953
.L8108:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L7950
	jmp	.L7949
.L8123:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L7958
	jmp	.L7957
.L8116:
	movl	4(%rsp), %eax
	addl	%eax, %ebp
.L7940:
	movl	%ebp, %edi
	movl	%r10d, %esi
	movl	$1, %r9d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	s370_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L7943
.L8118:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L7942
	jmp	.L7940
.L8117:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L7941
	jmp	.L7940
.L8113:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L7936:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %edi
	movl	$1, %r9d
	movl	(%rsp), %esi
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r11, 16(%rsp)
	movl	%r10d, 8(%rsp)
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r12
	movq	16(%rsp), %r11
	movl	8(%rsp), %r10d
	jmp	.L7939
.L8115:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L7938
	jmp	.L7936
.L8114:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L7937
	jmp	.L7936
	.cfi_endproc
.LFE819:
	.size	s370_D503, .-s370_D503
	.p2align 4,,15
	.globl	s370_D507
	.type	s370_D507, @function
s370_D507:
.LFB820:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, (%rsp)
	je	.L8126
	cltq
	addl	192(%rsi,%rax,8), %r12d
	andl	$16777215, %r12d
.L8126:
	movzbl	4(%rdi), %eax
	movzbl	5(%rdi), %edx
	movl	%eax, %ebp
	shrb	$4, %al
	andl	$15, %ebp
	movzbl	%al, %r10d
	sall	$8, %ebp
	orl	%edx, %ebp
	testl	%r10d, %r10d
	je	.L8127
	movslq	%r10d, %rax
	addl	192(%rbx,%rax,8), %ebp
	andl	$16777215, %ebp
.L8127:
	leal	-73(%r12), %eax
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	cmpl	$10, %eax
	jbe	.L8312
.L8128:
	leal	-73(%rbp), %eax
	cmpl	$10, %eax
	jbe	.L8313
.L8129:
	movl	(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 8(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L8130
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8314
.L8131:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8315
.L8132:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8130
	testb	$4, 46264(%rbx,%rcx)
	je	.L8130
	movl	%r12d, %r13d
	movzbl	%sil, %r8d
	xorq	26808(%rdx), %r13
.L8133:
	leal	5(%r10), %eax
	cltq
	leaq	(%rbx,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L8134
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8316
.L8135:
	testb	%r8b, %r8b
	jne	.L8317
.L8136:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8134
	testb	$4, 46264(%rbx,%rcx)
	je	.L8134
	movl	%ebp, %r14d
	xorq	26808(%rdx), %r14
.L8137:
	movl	%r12d, %r15d
	andl	$2047, %r15d
	cmpl	$2040, %r15d
	ja	.L8138
	movl	%ebp, %r12d
	andl	$2047, %r12d
	cmpl	$2040, %r12d
	ja	.L8139
	movq	0(%r13), %rdx
	movq	(%r14), %rax
	bswap	%rdx
	bswap	%rax
	cmpq	%rax, %rdx
	je	.L8183
	sbbl	%eax, %eax
	addl	$2, %eax
.L8179:
	movb	%al, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L8138:
	.cfi_restore_state
	movl	$2048, %eax
	movl	%eax, %esi
	subl	%r15d, %esi
	movl	%esi, 4(%rsp)
	movl	%ebp, %esi
	andl	$2047, %esi
	cmpl	$2040, %esi
	movl	%esi, 16(%rsp)
	ja	.L8148
	movl	4(%rsp), %ebp
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%rbp, %rdx
	call	memcmp
	testl	%eax, %eax
	jne	.L8180
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L8318
	addl	4(%rsp), %r12d
	leal	1(%rax), %edx
	movslq	%edx, %rdx
	movl	%r12d, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L8319
.L8150:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L8320
.L8151:
	movl	%r12d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L8149
	testb	$4, 46264(%rbx,%rcx)
	je	.L8149
	xorq	26808(%rax), %rdi
.L8152:
	leal	-2040(%r15), %edx
	leaq	(%r14,%rbp), %rsi
	call	memcmp
	testl	%eax, %eax
	jne	.L8180
.L8183:
	xorl	%eax, %eax
	jmp	.L8179
	.p2align 4,,10
	.p2align 3
.L8148:
	subl	16(%rsp), %eax
	cmpl	%eax, 4(%rsp)
	movl	%eax, 24(%rsp)
	je	.L8321
	movq	%r11, 40(%rsp)
	movl	%r10d, 32(%rsp)
	jae	.L8162
	movl	4(%rsp), %r15d
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%r15, %rdx
	call	memcmp
	movl	32(%rsp), %r10d
	testl	%eax, %eax
	movq	40(%rsp), %r11
	jne	.L8180
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L8322
	addl	4(%rsp), %r12d
	addl	$1, %eax
	cltq
	movl	%r12d, %esi
	andl	$16777215, %esi
	movl	%esi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8323
.L8164:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L8324
.L8165:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8163
	testb	$4, 46264(%rbx,%rcx)
	je	.L8163
	movl	%esi, %r12d
	xorq	26808(%rdx), %r12
.L8166:
	movl	24(%rsp), %edx
	movq	%r12, %rdi
	movq	%r11, 8(%rsp)
	leaq	(%r14,%r15), %rsi
	movl	%r10d, (%rsp)
	subl	4(%rsp), %edx
	call	memcmp
	testl	%eax, %eax
	jne	.L8180
	movq	8(%rsp), %r11
	movl	(%rsp), %r10d
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L8325
	addl	24(%rsp), %ebp
	addl	$1, %eax
	cltq
	movl	%ebp, %esi
	andl	$16777215, %esi
	movl	%esi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8326
.L8168:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L8327
.L8169:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8167
	testb	$4, 46264(%rbx,%rcx)
	je	.L8167
	xorq	26808(%rdx), %rsi
.L8170:
	movl	24(%rsp), %edi
	movl	16(%rsp), %edx
	subq	%r15, %rdi
	subl	$2040, %edx
	addq	%r12, %rdi
	call	memcmp
	jmp	.L8147
	.p2align 4,,10
	.p2align 3
.L8139:
	movl	$2048, %ecx
	movq	%r14, %rsi
	movq	%r13, %rdi
	subl	%r12d, %ecx
	movq	%r11, 8(%rsp)
	movl	%ecx, %r15d
	movl	%r10d, 4(%rsp)
	movq	%r15, %rdx
	movl	%ecx, (%rsp)
	call	memcmp
	movl	(%rsp), %ecx
	testl	%eax, %eax
	movl	4(%rsp), %r10d
	movq	8(%rsp), %r11
	jne	.L8180
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L8328
	leal	1(%rax), %edx
	addl	%ecx, %ebp
	movl	%ebp, %esi
	movslq	%edx, %rdx
	andl	$16777215, %esi
	movl	%esi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L8329
.L8144:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L8330
.L8145:
	movl	%ebp, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L8143
	testb	$4, 46264(%rbx,%rcx)
	je	.L8143
	xorq	26808(%rax), %rsi
.L8146:
	leal	-2040(%r12), %edx
	leaq	0(%r13,%r15), %rdi
	call	memcmp
.L8147:
	testl	%eax, %eax
	je	.L8183
	.p2align 4,,10
	.p2align 3
.L8180:
	sarl	$31, %eax
	addl	$2, %eax
	jmp	.L8179
	.p2align 4,,10
	.p2align 3
.L8321:
	movl	4(%rsp), %edx
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%r11, 24(%rsp)
	movl	%r10d, 16(%rsp)
	call	memcmp
	movl	16(%rsp), %r10d
	testl	%eax, %eax
	movq	24(%rsp), %r11
	jne	.L8180
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L8331
	addl	4(%rsp), %r12d
	leal	1(%rax), %edx
	movslq	%edx, %rdx
	movl	%r12d, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L8332
.L8155:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8333
.L8156:
	movl	%r12d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L8154
	testb	$4, 46264(%rbx,%rcx)
	je	.L8154
	movl	%edi, %r12d
	movzbl	%sil, %r8d
	xorq	26808(%rax), %r12
.L8157:
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L8334
	addl	4(%rsp), %ebp
	leal	1(%rax), %edx
	movslq	%edx, %rdx
	movl	%ebp, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L8335
.L8159:
	testb	%r8b, %r8b
	jne	.L8336
.L8160:
	movl	%ebp, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L8158
	testb	$4, 46264(%rbx,%rcx)
	je	.L8158
	movl	%edi, %esi
	xorq	26808(%rax), %rsi
.L8161:
	movq	%r12, %rdi
	leal	-2040(%r15), %edx
	call	memcmp
	jmp	.L8147
	.p2align 4,,10
	.p2align 3
.L8162:
	movl	24(%rsp), %eax
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%rax, %rdx
	movq	%rax, 16(%rsp)
	call	memcmp
	movl	32(%rsp), %r10d
	testl	%eax, %eax
	movq	40(%rsp), %r11
	jne	.L8180
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L8337
	addl	24(%rsp), %ebp
	addl	$1, %eax
	cltq
	movl	%ebp, %esi
	andl	$16777215, %esi
	movl	%esi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8338
.L8172:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L8339
.L8173:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8171
	testb	$4, 46264(%rbx,%rcx)
	je	.L8171
	movl	%esi, %ebp
	xorq	26808(%rdx), %rbp
.L8174:
	movl	4(%rsp), %edx
	movq	%rbp, %rsi
	movq	16(%rsp), %rax
	subl	24(%rsp), %edx
	leaq	0(%r13,%rax), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L8180
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L8340
	addl	4(%rsp), %r12d
	addl	$1, %eax
	cltq
	movl	%r12d, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L8341
.L8176:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L8342
.L8177:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8175
	testb	$4, 46264(%rbx,%rcx)
	je	.L8175
	xorq	26808(%rdx), %rdi
.L8178:
	movl	4(%rsp), %esi
	leal	-2040(%r15), %edx
	subq	16(%rsp), %rsi
	addq	%rbp, %rsi
	call	memcmp
	jmp	.L8147
.L8316:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L8135
.L8134:
	movl	%r10d, %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r11, 16(%rsp)
	movl	%r10d, 4(%rsp)
	call	s370_logical_to_main_l
	movq	16(%rsp), %r11
	movq	%rax, %r14
	movl	4(%rsp), %r10d
	jmp	.L8137
.L8314:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8131
.L8130:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movl	(%rsp), %esi
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r10d, 4(%rsp)
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r13
	movl	4(%rsp), %r10d
	jmp	.L8133
.L8315:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8132
	jmp	.L8130
.L8317:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L8136
	.p2align 4,,3
	jmp	.L8134
.L8313:
	movq	%rbx, %rdi
	movl	%r10d, 4(%rsp)
	call	s370_store_int_timer
	movl	4(%rsp), %r10d
	jmp	.L8129
.L8312:
	movq	%rbx, %rdi
	movl	%r10d, 4(%rsp)
	call	s370_store_int_timer
	movl	4(%rsp), %r10d
	jmp	.L8128
.L8328:
	addl	%ecx, %ebp
.L8143:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	%r10d, %esi
	andl	$16777215, %edi
	movl	$1, %r9d
	movq	%rbx, %rdx
	movl	$4, %ecx
	call	s370_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L8146
.L8318:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L8149:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %edi
	movl	$1, %r9d
	movl	(%rsp), %esi
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	s370_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L8152
.L8325:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L8167:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	%r10d, %esi
	andl	$16777215, %edi
	movl	$1, %r9d
	movq	%rbx, %rdx
	movl	$4, %ecx
	call	s370_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L8170
.L8322:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L8163:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %edi
	movl	$1, %r9d
	movl	(%rsp), %esi
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r11, 32(%rsp)
	movl	%r10d, 8(%rsp)
	call	s370_logical_to_main_l
	movq	32(%rsp), %r11
	movq	%rax, %r12
	movl	8(%rsp), %r10d
	jmp	.L8166
.L8340:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L8175:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %edi
	movl	$1, %r9d
	movl	(%rsp), %esi
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	s370_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L8178
.L8337:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L8171:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	$1, %r9d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, %esi
	call	s370_logical_to_main_l
	movq	%rax, %rbp
	jmp	.L8174
.L8327:
	cmpb	43192(%rbx,%rcx), %al
	je	.L8169
	jmp	.L8167
.L8324:
	cmpb	43192(%rbx,%rcx), %al
	je	.L8165
	.p2align 4,,4
	jmp	.L8163
.L8323:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L8164
	jmp	.L8163
.L8330:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L8145
	.p2align 4,,4
	jmp	.L8143
.L8329:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L8144
	jmp	.L8143
.L8320:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L8151
	.p2align 4,,4
	jmp	.L8149
.L8319:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L8150
	jmp	.L8149
.L8342:
	cmpb	43192(%rbx,%rcx), %al
	je	.L8177
	.p2align 4,,4
	jmp	.L8175
.L8339:
	cmpb	43192(%rbx,%rcx), %al
	je	.L8173
	.p2align 4,,4
	jmp	.L8171
.L8338:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L8172
	jmp	.L8171
.L8326:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L8168
	jmp	.L8167
.L8341:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8176
	jmp	.L8175
.L8334:
	movl	4(%rsp), %eax
	addl	%eax, %ebp
.L8158:
	movl	%ebp, %edi
	movl	%r10d, %esi
	movl	$1, %r9d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	s370_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L8161
.L8336:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L8160
	jmp	.L8158
.L8335:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L8159
	jmp	.L8158
.L8331:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L8154:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %edi
	movl	$1, %r9d
	movl	(%rsp), %esi
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r11, 16(%rsp)
	movl	%r10d, 8(%rsp)
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r12
	movq	16(%rsp), %r11
	movl	8(%rsp), %r10d
	jmp	.L8157
.L8333:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8156
	jmp	.L8154
.L8332:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L8155
	jmp	.L8154
	.cfi_endproc
.LFE820:
	.size	s370_D507, .-s370_D507
	.p2align 4,,15
	.globl	s370_compare_logical_characters_under_mask
	.type	s370_compare_logical_characters_under_mask, @function
s370_compare_logical_characters_under_mask:
.LFB821:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	(%rdi), %r11d
	bswap	%r11d
	movl	%r11d, %eax
	movl	%r11d, %edx
	shrl	$16, %eax
	movl	%r11d, %r10d
	shrl	$20, %edx
	movl	%eax, %ecx
	shrl	$12, %r10d
	andl	$15, %edx
	andl	$15, %ecx
	andl	$4095, %r11d
	andl	$15, %r10d
	je	.L8344
	movslq	%r10d, %rsi
	addl	192(%rbx,%rsi,8), %r11d
	andl	$16777215, %r11d
.L8344:
	addq	$4, 136(%rbx)
	testb	$8, %al
	movb	$4, 130(%rbx)
	je	.L8370
	movslq	%edx, %rsi
	movl	$1, %r13d
	movzbl	195(%rbx,%rsi,8), %esi
	movb	%sil, 16(%rsp)
	movl	$2, %esi
.L8345:
	testb	$4, %al
	je	.L8346
	movslq	%edx, %rdi
	movzwl	194(%rbx,%rdi,8), %edi
	movb	%dil, 16(%rsp,%r13)
	movl	%esi, %r13d
.L8346:
	testb	$2, %al
	je	.L8347
	movslq	%edx, %rsi
	movslq	%r13d, %rdi
	addl	$1, %r13d
	movl	192(%rbx,%rsi,8), %esi
	shrl	$8, %esi
	movb	%sil, 16(%rsp,%rdi)
.L8347:
	testb	$1, %al
	je	.L8348
	movslq	%edx, %rdx
	movslq	%r13d, %rax
	addl	$1, %r13d
	movl	192(%rbx,%rdx,8), %edx
	movb	%dl, 16(%rsp,%rax)
.L8348:
	testl	%ecx, %ecx
	je	.L8406
.L8350:
	testl	%r13d, %r13d
	je	.L8366
	leal	5(%r10), %r15d
	xorl	%r12d, %r12d
	movslq	%r15d, %r15
.L8367:
	movl	%r11d, %ebp
	andl	$16777215, %ebp
	leal	-80(%rbp), %eax
	leal	1(%rbp), %r14d
	cmpl	$3, %eax
	jbe	.L8407
.L8357:
	movl	1892(%rbx,%r15,4), %eax
	testl	%eax, %eax
	je	.L8358
	leal	1(%rax), %ecx
	movl	%ebp, %edx
	shrl	$11, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L8408
.L8359:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L8409
.L8360:
	andl	$14680064, %r11d
	orl	2224(%rbx), %r11d
	cmpl	10424(%rax), %r11d
	jne	.L8373
	testb	$4, 46264(%rbx,%rdx)
	je	.L8373
	xorq	26808(%rax), %rbp
.L8362:
	movzbl	0(%rbp), %eax
	cmpb	%al, 16(%rsp,%r12)
	je	.L8363
	sbbl	%eax, %eax
	addl	$2, %eax
.L8356:
	movb	%al, 100(%rbx)
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L8363:
	.cfi_restore_state
	addq	$1, %r12
	cmpl	%r12d, %r13d
	jle	.L8366
	movl	%r14d, %r11d
	jmp	.L8367
	.p2align 4,,10
	.p2align 3
.L8370:
	movl	$1, %esi
	xorl	%r13d, %r13d
	jmp	.L8345
	.p2align 4,,10
	.p2align 3
.L8366:
	xorl	%eax, %eax
	jmp	.L8356
.L8409:
	cmpb	43192(%rbx,%rdx), %cl
	je	.L8360
.L8373:
	movzbl	%cl, %r8d
.L8361:
	movl	%r10d, %esi
	movl	%ebp, %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 8(%rsp)
	call	s370_logical_to_main_l
	movl	8(%rsp), %r10d
	movq	%rax, %rbp
	jmp	.L8362
.L8408:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L8359
.L8358:
	movzbl	97(%rbx), %r8d
	jmp	.L8361
.L8407:
	movq	%rbx, %rdi
	movl	%r10d, 12(%rsp)
	movl	%r11d, 8(%rsp)
	call	s370_store_int_timer
	movl	12(%rsp), %r10d
	movl	8(%rsp), %r11d
	jmp	.L8357
.L8406:
	leal	-80(%r11), %eax
	cmpl	$3, %eax
	ja	.L8369
	movq	%rbx, %rdi
	movl	%r10d, 12(%rsp)
	movl	%r11d, 8(%rsp)
	call	s370_store_int_timer
	movl	12(%rsp), %r10d
	movl	8(%rsp), %r11d
.L8369:
	leal	5(%r10), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L8351
	movl	%r11d, %edx
	addl	$1, %eax
	shrl	$11, %edx
	cltq
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L8410
.L8352:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L8411
.L8353:
	movl	%r11d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L8351
	testb	$4, 46264(%rbx,%rdx)
	jne	.L8350
.L8351:
	movzbl	97(%rbx), %r8d
	movl	%r10d, %esi
	movl	%r11d, %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 12(%rsp)
	movl	%r11d, 8(%rsp)
	call	s370_logical_to_main_l
	movl	8(%rsp), %r11d
	movl	12(%rsp), %r10d
	jmp	.L8350
.L8411:
	cmpb	43192(%rbx,%rdx), %al
	je	.L8353
	jmp	.L8351
.L8410:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8352
	jmp	.L8351
	.cfi_endproc
.LFE821:
	.size	s370_compare_logical_characters_under_mask, .-s370_compare_logical_characters_under_mask
	.p2align 4,,15
	.globl	s370_compare_logical_character_long
	.type	s370_compare_logical_character_long, @function
s370_compare_logical_character_long:
.LFB822:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movzbl	1(%rdi), %eax
	movb	$2, 130(%rsi)
	addq	$2, 136(%rsi)
	movzbl	%al, %edi
	movl	%eax, %ebp
	movl	%edi, 44(%rsp)
	andl	$15, %ebp
	sarl	$4, 44(%rsp)
	movzbl	%bpl, %edi
	movl	%edi, 48(%rsp)
	testb	$1, 44(%rsp)
	jne	.L8413
	testb	$1, %al
	jne	.L8413
.L8414:
	movl	44(%rsp), %esi
	movzbl	%bpl, %ebp
	movl	48(%rsp), %edi
	leal	1(%rsi), %edx
	movslq	%esi, %rax
	leaq	(%rbx,%rax,8), %r11
	movslq	%edx, %rdx
	leaq	(%rbx,%rbp,8), %rax
	movq	%rdx, 8(%rsp)
	movl	192(%r11), %r13d
	movq	%rax, (%rsp)
	movl	192(%rax), %r14d
	movl	%edi, %eax
	addl	$1, %eax
	cltq
	movq	%rax, 16(%rsp)
	addq	$24, %rax
	andl	$16777215, %r13d
	movl	(%rbx,%rax,8), %ebp
	andl	$16777215, %r14d
	movzbl	3(%rbx,%rax,8), %r10d
	leal	5(%rsi), %eax
	movl	192(%rbx,%rdx,8), %r12d
	cltq
	movq	%rax, 24(%rsp)
	movl	%edi, %eax
	addl	$5, %eax
	andl	$16777215, %ebp
	cltq
	andl	$16777215, %r12d
	movq	%rax, 32(%rsp)
	.p2align 4,,10
	.p2align 3
.L8415:
	movl	%ebp, %eax
	orl	%r12d, %eax
	je	.L8487
	testl	%r12d, %r12d
	movl	%r10d, %r15d
	jne	.L8488
.L8417:
	testl	%ebp, %ebp
	movl	%r10d, %eax
	jne	.L8489
.L8424:
	cmpb	%al, %r15b
	jne	.L8490
	testl	%r12d, %r12d
	je	.L8433
	addl	$1, %r13d
	subl	$1, %r12d
	andl	$16777215, %r13d
.L8433:
	testl	%ebp, %ebp
	je	.L8434
	addl	$1, %r14d
	subl	$1, %ebp
	andl	$16777215, %r14d
.L8434:
	testl	$2047, %r13d
	je	.L8435
	testl	$2047, %r14d
	jne	.L8436
.L8435:
	movq	(%rsp), %rax
	movl	%r13d, 192(%r11)
	movl	%r12d, %ecx
	andl	$16777215, %ecx
	movl	%r14d, 192(%rax)
	movq	8(%rsp), %rax
	leaq	24(%rax), %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%ecx, %eax
	movl	%ebp, %ecx
	movl	%eax, (%rbx,%rdx,8)
	movq	16(%rsp), %rax
	andl	$16777215, %ecx
	leaq	24(%rax), %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%ecx, %eax
	movl	%eax, (%rbx,%rdx,8)
.L8436:
	leal	0(%rbp,%r12), %eax
	cmpl	$255, %eax
	jbe	.L8415
	movl	%r13d, %eax
	subl	%ebp, %eax
	testl	$4095, %eax
	jne	.L8415
	movl	168(%rbx), %ecx
	movl	136(%rbx), %eax
	movq	144(%rbx), %rdx
	movzbl	808(%rbx), %esi
	addl	%ecx, %eax
	subl	%edx, %eax
	testb	$1, %sil
	jne	.L8438
	movzbl	130(%rbx), %esi
.L8439:
	subl	%esi, %eax
	movl	%eax, %esi
	andl	$16777215, %esi
	cmpq	$0, 160(%rbx)
	movl	%esi, 112(%rbx)
	je	.L8486
	movl	%eax, %esi
	andl	$16775169, %esi
	cmpl	%esi, %ecx
	jne	.L8441
	andl	$2047, %eax
	orq	%rdx, %rax
	movq	%rax, 136(%rbx)
.L8486:
	andl	$16777215, %r12d
	andl	$16777215, %ebp
	xorl	%ecx, %ecx
	jmp	.L8432
	.p2align 4,,10
	.p2align 3
.L8413:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L8414
	.p2align 4,,10
	.p2align 3
.L8487:
	xorl	%ecx, %ecx
	xorl	%ebp, %ebp
	xorl	%r12d, %r12d
.L8432:
	movq	(%rsp), %rax
	movl	%r13d, 192(%r11)
	movq	8(%rsp), %rdx
	movl	%r14d, 192(%rax)
	addq	$24, %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%r12d, %eax
	movl	%eax, (%rbx,%rdx,8)
	movq	16(%rsp), %rdx
	addq	$24, %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%ebp, %eax
	movl	%eax, (%rbx,%rdx,8)
	movb	%cl, 100(%rbx)
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L8490:
	.cfi_restore_state
	andl	$16777215, %r12d
	andl	$16777215, %ebp
	cmpb	%r15b, %al
	movl	$1, %ecx
	ja	.L8432
	movl	$2, %ecx
	jmp	.L8432
	.p2align 4,,10
	.p2align 3
.L8489:
	leal	-80(%r14), %eax
	cmpl	$3, %eax
	ja	.L8446
	movq	%rbx, %rdi
	movq	%r11, 56(%rsp)
	movl	%r10d, 52(%rsp)
	call	s370_store_int_timer
	movq	56(%rsp), %r11
	movl	52(%rsp), %r10d
.L8446:
	movq	32(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L8425
	movl	%r14d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8491
.L8426:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8492
.L8427:
	movl	%r14d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8452
	testb	$4, 46264(%rbx,%rcx)
	je	.L8452
	movl	%r14d, %eax
	xorq	26808(%rdx), %rax
.L8429:
	movzbl	(%rax), %eax
	jmp	.L8424
.L8492:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8427
.L8452:
	movzbl	%sil, %r8d
.L8428:
	movl	48(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %edi
	movq	%r11, 56(%rsp)
	movl	%r10d, 52(%rsp)
	call	s370_logical_to_main_l
	movq	56(%rsp), %r11
	movl	52(%rsp), %r10d
	jmp	.L8429
.L8491:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8426
.L8425:
	movzbl	97(%rbx), %r8d
	jmp	.L8428
	.p2align 4,,10
	.p2align 3
.L8488:
	leal	-80(%r13), %eax
	cmpl	$3, %eax
	ja	.L8444
	movq	%rbx, %rdi
	movq	%r11, 56(%rsp)
	movl	%r10d, 52(%rsp)
	call	s370_store_int_timer
	movq	56(%rsp), %r11
	movl	52(%rsp), %r10d
.L8444:
	movq	24(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L8418
	movl	%r13d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8493
.L8419:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8494
.L8420:
	movl	%r13d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8449
	testb	$4, 46264(%rbx,%rcx)
	je	.L8449
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L8422:
	movzbl	(%rax), %r15d
	jmp	.L8417
.L8494:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8420
.L8449:
	movzbl	%sil, %r8d
.L8421:
	movl	44(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %edi
	movq	%r11, 56(%rsp)
	movl	%r10d, 52(%rsp)
	call	s370_logical_to_main_l
	movq	56(%rsp), %r11
	movl	52(%rsp), %r10d
	jmp	.L8422
.L8493:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8419
.L8418:
	movzbl	97(%rbx), %r8d
	jmp	.L8421
.L8441:
	andl	$16777215, %r12d
	andl	$16777215, %ebp
	xorl	%ecx, %ecx
	movq	$0, 160(%rbx)
	jmp	.L8432
.L8438:
	andl	$2, %esi
	cmpb	$1, %sil
	sbbl	%esi, %esi
	andl	$-2, %esi
	addl	$6, %esi
	jmp	.L8439
	.cfi_endproc
.LFE822:
	.size	s370_compare_logical_character_long, .-s370_compare_logical_character_long
	.p2align 4,,15
	.globl	s370_compare_logical_long_extended
	.type	s370_compare_logical_long_extended, @function
s370_compare_logical_long_extended:
.LFB823:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movl	(%rdi), %r11d
	bswap	%r11d
	movl	%r11d, %eax
	movl	%r11d, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%r11d, %ecx
	movl	%eax, %esi
	movl	%edx, %edi
	shrl	$12, %ecx
	andl	$15, %esi
	andl	$15, %edi
	andl	$4095, %r11d
	andl	$15, %ecx
	movl	%esi, 16(%rsp)
	movl	%r11d, %ebp
	movl	%edi, 20(%rsp)
	je	.L8496
	movslq	%ecx, %rcx
	addl	192(%rbx,%rcx,8), %ebp
	andl	$16777215, %ebp
.L8496:
	orl	%edx, %eax
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %al
	je	.L8497
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L8497:
	movl	16(%rsp), %esi
	movl	%ebp, %r11d
	movl	20(%rsp), %edi
	movslq	%esi, %rax
	leaq	(%rbx,%rax,8), %rax
	movl	192(%rax), %r14d
	movq	%rax, 24(%rsp)
	movslq	%edi, %rax
	leaq	(%rbx,%rax,8), %rax
	movl	192(%rax), %r13d
	movq	%rax, 40(%rsp)
	movl	%esi, %eax
	addl	$1, %eax
	cltq
	andl	$16777215, %r14d
	leaq	(%rbx,%rax,8), %rax
	movl	192(%rax), %r12d
	movq	%rax, 48(%rsp)
	movl	%edi, %eax
	addl	$1, %eax
	andl	$16777215, %r13d
	cltq
	leaq	(%rbx,%rax,8), %rax
	movl	192(%rax), %ebp
	movq	%rax, 32(%rsp)
	movl	%ebp, %eax
	orl	%r12d, %eax
	je	.L8522
	movl	%esi, %eax
	movl	$4096, %r15d
	addl	$5, %eax
	cltq
	movq	%rax, (%rsp)
	movl	%edi, %eax
	addl	$5, %eax
	cltq
	movq	%rax, 8(%rsp)
	jmp	.L8499
	.p2align 4,,10
	.p2align 3
.L8501:
	testl	%ebp, %ebp
	movl	%r11d, %eax
	jne	.L8563
.L8508:
	cmpb	%al, %r10b
	jne	.L8564
.L8514:
	testl	%r12d, %r12d
	je	.L8515
	addl	$1, %r14d
	subl	$1, %r12d
	andl	$16777215, %r14d
.L8515:
	testl	%ebp, %ebp
	je	.L8516
	addl	$1, %r13d
	subl	$1, %ebp
	andl	$16777215, %r13d
.L8516:
	movl	%ebp, %eax
	orl	%r12d, %eax
	je	.L8522
	subl	$1, %r15d
	je	.L8523
.L8499:
	testl	%r12d, %r12d
	movl	%r11d, %r10d
	je	.L8501
	leal	-80(%r14), %eax
	cmpl	$3, %eax
	ja	.L8519
	movq	%rbx, %rdi
	movl	%r11d, 56(%rsp)
	call	s370_store_int_timer
	movl	56(%rsp), %r11d
.L8519:
	movq	(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L8502
	movl	%r14d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8565
.L8503:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8566
.L8504:
	movl	%r14d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8526
	testb	$4, 46264(%rbx,%rcx)
	je	.L8526
	movl	%r14d, %eax
	xorq	26808(%rdx), %rax
.L8506:
	testl	%ebp, %ebp
	movzbl	(%rax), %r10d
	movl	%r11d, %eax
	je	.L8508
.L8563:
	leal	-80(%r13), %eax
	cmpl	$3, %eax
	ja	.L8521
	movq	%rbx, %rdi
	movl	%r11d, 60(%rsp)
	movl	%r10d, 56(%rsp)
	call	s370_store_int_timer
	movl	60(%rsp), %r11d
	movl	56(%rsp), %r10d
.L8521:
	movq	8(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L8509
	movl	%r13d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8567
.L8510:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8568
.L8511:
	movl	%r13d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8529
	testb	$4, 46264(%rbx,%rcx)
	je	.L8529
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L8513:
	movzbl	(%rax), %eax
	cmpb	%al, %r10b
	je	.L8514
.L8564:
	sbbl	%eax, %eax
	addl	$2, %eax
	jmp	.L8498
	.p2align 4,,10
	.p2align 3
.L8522:
	xorl	%eax, %eax
	xorl	%ebp, %ebp
	xorl	%r12d, %r12d
.L8498:
	movq	24(%rsp), %rsi
	movq	48(%rsp), %rdi
	movl	%r14d, 192(%rsi)
	movq	40(%rsp), %rsi
	movl	%r12d, 192(%rdi)
	movq	32(%rsp), %rdi
	movl	%r13d, 192(%rsi)
	movl	%ebp, 192(%rdi)
	movb	%al, 100(%rbx)
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L8523:
	.cfi_restore_state
	movl	$3, %eax
	jmp	.L8498
.L8566:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8504
.L8526:
	movzbl	%sil, %r8d
.L8505:
	movl	16(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %edi
	movl	%r11d, 56(%rsp)
	call	s370_logical_to_main_l
	movl	56(%rsp), %r11d
	jmp	.L8506
.L8565:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8503
.L8502:
	movzbl	97(%rbx), %r8d
	jmp	.L8505
.L8568:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8511
.L8529:
	movzbl	%sil, %r8d
.L8512:
	movl	20(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %edi
	movl	%r11d, 60(%rsp)
	movl	%r10d, 56(%rsp)
	call	s370_logical_to_main_l
	movl	60(%rsp), %r11d
	movl	56(%rsp), %r10d
	jmp	.L8513
.L8567:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8510
.L8509:
	movzbl	97(%rbx), %r8d
	jmp	.L8512
	.cfi_endproc
.LFE823:
	.size	s370_compare_logical_long_extended, .-s370_compare_logical_long_extended
	.p2align 4,,15
	.globl	s370_compare_logical_string
	.type	s370_compare_logical_string, @function
s370_compare_logical_string:
.LFB824:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movzbl	3(%rdi), %ebp
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movzbl	%bpl, %eax
	andl	$15, %ebp
	movl	%eax, 8(%rsp)
	movzbl	%bpl, %eax
	sarl	$4, 8(%rsp)
	movl	%eax, 12(%rsp)
	testl	$-256, 192(%rsi)
	jne	.L8629
.L8570:
	movl	8(%rsp), %esi
	movzbl	%bpl, %ebp
	movl	$4096, %r15d
	movzbl	192(%rbx), %r13d
	leal	5(%rsi), %r11d
	movslq	%esi, %rax
	leaq	(%rbx,%rax,8), %rax
	movslq	%r11d, %r11
	movl	192(%rax), %r12d
	movq	%rax, 24(%rsp)
	leaq	(%rbx,%rbp,8), %rax
	movl	192(%rax), %ebp
	movq	%rax, 16(%rsp)
	movl	12(%rsp), %eax
	andl	$16777215, %r12d
	andl	$16777215, %ebp
	leal	5(%rax), %r10d
	movslq	%r10d, %r10
	jmp	.L8587
	.p2align 4,,10
	.p2align 3
.L8583:
	testb	%dl, %dl
	jne	.L8595
.L8599:
	cmpb	%al, %r13b
	jne	.L8630
.L8598:
	cmpb	%al, %r14b
	.p2align 4,,3
	ja	.L8596
	testb	%cl, %cl
	.p2align 4,,3
	jne	.L8596
	addl	$1, %r12d
	addl	$1, %ebp
	andl	$16777215, %r12d
	andl	$16777215, %ebp
	subl	$1, %r15d
	je	.L8631
.L8587:
	leal	-80(%r12), %eax
	cmpl	$3, %eax
	jbe	.L8632
.L8571:
	movl	1892(%rbx,%r11,4), %eax
	testl	%eax, %eax
	je	.L8572
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8633
.L8573:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8634
.L8574:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8590
	testb	$4, 46264(%rbx,%rcx)
	je	.L8590
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L8576:
	movzbl	(%rax), %r14d
	leal	-80(%rbp), %eax
	cmpl	$3, %eax
	jbe	.L8635
.L8577:
	movl	1892(%rbx,%r10,4), %eax
	testl	%eax, %eax
	je	.L8578
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8636
.L8579:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8637
.L8580:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8593
	testb	$4, 46264(%rbx,%rcx)
	je	.L8593
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L8582:
	movzbl	(%rax), %eax
	cmpb	%r14b, %r13b
	sete	%dl
	cmpb	%al, %r13b
	sete	%cl
	jne	.L8583
	testb	%dl, %dl
	je	.L8599
	movb	$0, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L8630:
	.cfi_restore_state
	cmpb	%al, %r14b
	jae	.L8598
	.p2align 4,,10
	.p2align 3
.L8595:
	movl	$1, %eax
.L8585:
	movq	24(%rsp), %rdi
	movq	16(%rsp), %rsi
	movl	%r12d, 192(%rdi)
	movl	%ebp, 192(%rsi)
	movb	%al, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L8629:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L8570
	.p2align 4,,10
	.p2align 3
.L8596:
	movl	$2, %eax
	jmp	.L8585
	.p2align 4,,10
	.p2align 3
.L8631:
	movl	$3, %eax
	jmp	.L8585
.L8634:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8574
.L8590:
	movzbl	%sil, %r8d
.L8575:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movq	%r11, 40(%rsp)
	movq	%r10, 32(%rsp)
	call	s370_logical_to_main_l
	movq	40(%rsp), %r11
	movq	32(%rsp), %r10
	jmp	.L8576
.L8637:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8580
.L8593:
	movzbl	%sil, %r8d
.L8581:
	movl	12(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r11, 40(%rsp)
	movq	%r10, 32(%rsp)
	call	s370_logical_to_main_l
	movq	40(%rsp), %r11
	movq	32(%rsp), %r10
	jmp	.L8582
.L8636:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8579
.L8578:
	movzbl	97(%rbx), %r8d
	jmp	.L8581
.L8633:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8573
.L8572:
	movzbl	97(%rbx), %r8d
	jmp	.L8575
.L8632:
	movq	%rbx, %rdi
	movq	%r11, 40(%rsp)
	movq	%r10, 32(%rsp)
	call	s370_store_int_timer
	movq	40(%rsp), %r11
	movq	32(%rsp), %r10
	jmp	.L8571
.L8635:
	movq	%rbx, %rdi
	movq	%r11, 40(%rsp)
	movq	%r10, 32(%rsp)
	call	s370_store_int_timer
	movq	40(%rsp), %r11
	movq	32(%rsp), %r10
	jmp	.L8577
	.cfi_endproc
.LFE824:
	.size	s370_compare_logical_string, .-s370_compare_logical_string
	.p2align 4,,15
	.globl	s370_compare_until_substring_equal
	.type	s370_compare_until_substring_equal, @function
s370_compare_until_substring_equal:
.LFB825:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$104, %rsp
	.cfi_def_cfa_offset 160
	movzbl	3(%rdi), %eax
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	movzbl	%al, %esi
	movl	%eax, %ebp
	movl	%esi, 24(%rsp)
	andl	$15, %ebp
	sarl	$4, 24(%rsp)
	movzbl	%bpl, %edx
	movl	%edx, 52(%rsp)
	testb	$1, 24(%rsp)
	jne	.L8639
	testb	$1, %al
	jne	.L8639
.L8640:
	movzbl	192(%rbx), %eax
	movzbl	%bpl, %ebp
	movl	24(%rsp), %edi
	leaq	(%rbx,%rbp,8), %r10
	movl	%eax, %esi
	movb	%al, 30(%rsp)
	movzbl	200(%rbx), %eax
	movb	%al, 31(%rsp)
	movslq	%edi, %rax
	leaq	(%rbx,%rax,8), %r11
	movl	192(%r11), %eax
	movl	%eax, 16(%rsp)
	movl	192(%r10), %eax
	andl	$16777215, 16(%rsp)
	movl	%eax, 20(%rsp)
	andl	$16777215, 20(%rsp)
	movl	16(%rsp), %eax
	movl	%eax, 192(%r11)
	movl	20(%rsp), %eax
	movl	%eax, 192(%r10)
	movl	%edi, %eax
	addl	$1, %eax
	cltq
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, 40(%rsp)
	movl	192(%rax), %r14d
	movl	52(%rsp), %eax
	addl	$1, %eax
	testb	%sil, %sil
	cltq
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, 32(%rsp)
	movl	192(%rax), %eax
	je	.L8723
	testl	%eax, %eax
	movl	%r14d, 56(%rsp)
	movl	%eax, %r13d
	jle	.L8724
.L8643:
	movl	52(%rsp), %edi
	cmpl	%edi, 24(%rsp)
	je	.L8644
	testl	%eax, %eax
	movl	%eax, 60(%rsp)
	jle	.L8725
.L8687:
	movl	24(%rsp), %eax
	xorl	%r15d, %r15d
	movl	$0, 48(%rsp)
	movl	20(%rsp), %r12d
	movl	16(%rsp), %ebp
	addl	$5, %eax
	cltq
	movq	%rax, 64(%rsp)
	movl	52(%rsp), %eax
	addl	$5, %eax
	cltq
	movq	%rax, 72(%rsp)
	.p2align 4,,10
	.p2align 3
.L8647:
	testl	%r14d, %r14d
	jle	.L8726
	leal	-80(%rbp), %eax
	cmpl	$3, %eax
	jbe	.L8727
.L8673:
	movq	64(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L8652
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8728
.L8653:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8729
.L8654:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8680
	testb	$4, 46264(%rbx,%rcx)
	je	.L8680
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L8656:
	movzbl	(%rax), %eax
	movb	%al, 8(%rsp)
.L8651:
	testl	%r13d, %r13d
	jle	.L8730
	leal	-80(%r12), %eax
	cmpl	$3, %eax
	jbe	.L8731
.L8675:
	movq	72(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L8659
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8732
.L8660:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8733
.L8661:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8683
	testb	$4, 46264(%rbx,%rcx)
	je	.L8683
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L8663:
	movzbl	(%rax), %eax
	cmpb	%al, 8(%rsp)
	je	.L8734
.L8684:
	movl	$2, %eax
	xorl	%r15d, %r15d
	movl	$2, %edx
.L8664:
	testl	%r14d, %r14d
	jle	.L8666
	addl	$1, %ebp
	subl	$1, %r14d
	andl	$16777215, %ebp
.L8666:
	testl	%r13d, %r13d
	jle	.L8667
	addl	$1, %r12d
	subl	$1, %r13d
	andl	$16777215, %r12d
.L8667:
	testl	$2047, %ebp
	je	.L8668
	testl	$2047, %r12d
	jne	.L8669
.L8668:
	movq	40(%rsp), %rdi
	movl	%ebp, 192(%r11)
	movq	32(%rsp), %rsi
	movl	%r12d, 192(%r10)
	movl	%r14d, 192(%rdi)
	movl	%r13d, 192(%rsi)
.L8669:
	cmpb	30(%rsp), %r15b
	je	.L8686
	addl	$1, 48(%rsp)
	testl	%r13d, %r13d
	jle	.L8735
.L8670:
	testb	%r15b, %r15b
	jne	.L8647
	cmpl	$4095, 48(%rsp)
	jle	.L8647
	movl	$3, %eax
.L8648:
	movq	40(%rsp), %rsi
	movl	%ebp, 192(%r11)
	movl	%r12d, 192(%r10)
	movl	%r14d, 192(%rsi)
	movq	32(%rsp), %rsi
	movl	%r13d, 192(%rsi)
.L8671:
	movb	%al, 100(%rbx)
	addq	$104, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L8639:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L8640
	.p2align 4,,10
	.p2align 3
.L8724:
	testl	%r14d, %r14d
	jg	.L8643
	movb	$2, 100(%rbx)
.L8638:
	addq	$104, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L8730:
	.cfi_restore_state
	movzbl	31(%rsp), %eax
	cmpb	%al, 8(%rsp)
	jne	.L8684
.L8734:
	movl	60(%rsp), %eax
	testb	%r15b, %r15b
	movl	$1, %edx
	cmove	%r13d, %eax
	movl	%eax, 60(%rsp)
	movl	56(%rsp), %eax
	cmove	%r14d, %eax
	movl	%eax, 56(%rsp)
	movl	20(%rsp), %eax
	cmove	%r12d, %eax
	movl	%eax, 20(%rsp)
	movl	16(%rsp), %eax
	cmove	%ebp, %eax
	addl	$1, %r15d
	movl	%eax, 16(%rsp)
	movl	$1, %eax
	jmp	.L8664
	.p2align 4,,10
	.p2align 3
.L8726:
	movzbl	31(%rsp), %eax
	movb	%al, 8(%rsp)
	jmp	.L8651
	.p2align 4,,10
	.p2align 3
.L8723:
	movb	$0, 100(%rbx)
	addq	$104, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L8725:
	.cfi_restore_state
	testl	%r14d, %r14d
	jg	.L8687
	.p2align 4,,10
	.p2align 3
.L8686:
	xorl	%eax, %eax
.L8645:
	movl	16(%rsp), %edi
	movl	20(%rsp), %edx
	movq	40(%rsp), %rsi
	movl	%edi, 192(%r11)
	movl	56(%rsp), %edi
	movl	%edx, 192(%r10)
	movq	32(%rsp), %rdx
	movl	%edi, 192(%rsi)
	movl	60(%rsp), %esi
	movl	%esi, 192(%rdx)
	jmp	.L8671
	.p2align 4,,10
	.p2align 3
.L8735:
	testl	%r14d, %r14d
	jg	.L8670
	cmpl	$1, %edx
	jne	.L8648
	.p2align 4,,5
	jmp	.L8645
	.p2align 4,,10
	.p2align 3
.L8644:
	movzbl	30(%rsp), %eax
	cmpl	%r14d, %eax
	setg	100(%rbx)
	jmp	.L8638
.L8729:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8654
.L8680:
	movzbl	%sil, %r8d
.L8655:
	movl	24(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r11, 80(%rsp)
	movq	%r10, 8(%rsp)
	call	s370_logical_to_main_l
	movq	80(%rsp), %r11
	movq	8(%rsp), %r10
	jmp	.L8656
.L8733:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8661
.L8683:
	movzbl	%sil, %r8d
.L8662:
	movl	52(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movq	%r11, 88(%rsp)
	movq	%r10, 80(%rsp)
	call	s370_logical_to_main_l
	movq	88(%rsp), %r11
	movq	80(%rsp), %r10
	jmp	.L8663
.L8732:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8660
.L8659:
	movzbl	97(%rbx), %r8d
	jmp	.L8662
.L8728:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8653
.L8652:
	movzbl	97(%rbx), %r8d
	jmp	.L8655
.L8727:
	movq	%rbx, %rdi
	movq	%r11, 80(%rsp)
	movq	%r10, 8(%rsp)
	call	s370_store_int_timer
	movq	80(%rsp), %r11
	movq	8(%rsp), %r10
	jmp	.L8673
.L8731:
	movq	%rbx, %rdi
	movq	%r11, 88(%rsp)
	movq	%r10, 80(%rsp)
	call	s370_store_int_timer
	movq	88(%rsp), %r11
	movq	80(%rsp), %r10
	jmp	.L8675
	.cfi_endproc
.LFE825:
	.size	s370_compare_until_substring_equal, .-s370_compare_until_substring_equal
	.p2align 4,,15
	.globl	s370_convert_utf16_to_utf8
	.type	s370_convert_utf16_to_utf8, @function
s370_convert_utf16_to_utf8:
.LFB826:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rdi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$136, %rsp
	.cfi_def_cfa_offset 192
	movzbl	3(%rdi), %eax
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movzbl	%al, %edi
	movl	%eax, %r12d
	movl	%edi, 60(%rsp)
	andl	$15, %r12d
	sarl	$4, 60(%rsp)
	movzbl	%r12b, %edi
	movl	%edi, 4(%rsp)
	testb	$1, 60(%rsp)
	jne	.L8737
	testb	$1, %al
	jne	.L8737
.L8738:
	movl	60(%rsp), %edi
	movzbl	%r12b, %r12d
	movzbl	2(%rbp), %edx
	movslq	%edi, %rax
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, 8(%rsp)
	movl	192(%rax), %ebp
	leaq	(%rbx,%r12,8), %rax
	movq	%rax, 24(%rsp)
	movl	192(%rax), %r12d
	movl	%edi, %eax
	addl	$1, %eax
	cltq
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, 16(%rsp)
	movl	192(%rax), %r11d
	movl	4(%rsp), %eax
	addl	$1, %eax
	cltq
	leaq	(%rbx,%rax,8), %rax
	movl	192(%rax), %r10d
	movq	%rax, 32(%rsp)
	cmpl	$1, %r10d
	seta	%al
	jbe	.L8739
	testl	%r11d, %r11d
	je	.L8768
.L8739:
	testl	%r11d, %r11d
	je	.L8809
	testb	%al, %al
	.p2align 4,,3
	je	.L8809
	movl	60(%rsp), %eax
	andl	$16, %edx
	movl	$4096, %edi
	movl	%r11d, %r13d
	andl	$16777215, %ebp
	andl	$16777215, %r12d
	movb	%dl, 107(%rsp)
	movl	%r10d, %r14d
	movl	%edi, %r11d
	movl	$0, 56(%rsp)
	addl	$5, %eax
	cltq
	movq	%rax, 40(%rsp)
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 64(%rsp)
	jmp	.L8741
	.p2align 4,,10
	.p2align 3
.L8937:
	movb	%r15b, 112(%rsp)
	movl	%edx, %r14d
	movl	$1, %r10d
	movl	$1, 48(%rsp)
	movl	$2047, %eax
	xorl	%r15d, %r15d
.L8753:
	cmpl	%r13d, %r15d
	jae	.L8768
.L8938:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	%eax, %edx
	jg	.L8769
	movq	40(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L8770
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8930
.L8771:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8931
.L8772:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8819
	testb	$2, 46264(%rbx,%rcx)
	je	.L8819
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L8774:
	movq	%rax, %rdx
	xorl	%eax, %eax
	leaq	112(%rsp), %rcx
	testb	$4, %r10b
	je	.L8778
	movl	(%rcx), %eax
	movl	%eax, (%rdx)
	movl	$4, %eax
.L8778:
	testb	$2, %r10b
	je	.L8779
	movzwl	(%rcx,%rax), %esi
	movw	%si, (%rdx,%rax)
	addq	$2, %rax
.L8779:
	andl	$1, %r10d
	je	.L8777
	movzbl	(%rcx,%rax), %ecx
	movb	%cl, (%rdx,%rax)
.L8777:
	cmpl	$83, %ebp
	jbe	.L8932
.L8782:
	movq	8(%rsp), %rax
	leal	1(%r15,%rbp), %ebp
	subl	%r15d, %r13d
	andl	$16777215, %ebp
	subl	$1, %r13d
	testl	%r14d, %r14d
	movl	%ebp, 192(%rax)
	movq	16(%rsp), %rax
	movl	%r13d, 192(%rax)
	movq	24(%rsp), %rax
	movl	%r12d, 192(%rax)
	movq	32(%rsp), %rax
	movl	%r14d, 192(%rax)
	setne	%al
	testl	%r13d, %r13d
	jne	.L8805
	testb	%al, %al
	movl	$1, %edx
	cmove	56(%rsp), %edx
	movl	%edx, 56(%rsp)
.L8805:
	testl	%r13d, %r13d
	je	.L8823
	testb	%al, %al
	je	.L8823
	subl	$1, %r11d
	je	.L8810
	cmpl	$1, %r14d
	jbe	.L8823
.L8741:
	testb	$1, %r12b
	jne	.L8933
.L8743:
	leal	-79(%r12), %eax
	cmpl	$4, %eax
	jbe	.L8934
.L8745:
	movl	4(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L8746
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8935
.L8747:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8936
.L8748:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8813
	testb	$4, 46264(%rbx,%rcx)
	je	.L8813
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L8750:
	movzwl	(%rax), %r15d
#APP
# 477 "vstore.h" 1
	rorw $8, %r15w
# 0 "" 2
#NO_APP
.L8751:
	leal	2(%r12), %eax
	leal	-2(%r14), %edx
	movl	%eax, %r12d
	andl	$16777215, %r12d
	cmpw	$127, %r15w
	jbe	.L8937
	cmpw	$2047, %r15w
	ja	.L8754
	movl	%r15d, %eax
	andl	$63, %r15d
	movl	%edx, %r14d
	orl	$-128, %r15d
	shrw	$6, %ax
	movl	$2, %r10d
	movb	%r15b, 113(%rsp)
	movl	$1, %r15d
	orl	$-64, %eax
	cmpl	%r13d, %r15d
	movb	%al, 112(%rsp)
	movl	$2046, %eax
	movl	$2, 48(%rsp)
	jb	.L8938
	.p2align 4,,10
	.p2align 3
.L8768:
	movl	$1, %eax
.L8740:
	movb	%al, 100(%rbx)
.L8736:
	addq	$136, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L8737:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L8738
	.p2align 4,,10
	.p2align 3
.L8754:
	leal	10240(%r15), %ecx
	cmpw	$1023, %cx
	jbe	.L8755
	movl	%r15d, %eax
	movl	%edx, %r14d
	movl	$3, %r10d
	shrw	$12, %ax
	movl	$3, 48(%rsp)
	orl	$-32, %eax
	movb	%al, 112(%rsp)
	movl	%r15d, %eax
	andl	$63, %r15d
	andl	$4032, %eax
	orl	$-128, %r15d
	sarl	$6, %eax
	movb	%r15b, 114(%rsp)
	movl	$2, %r15d
	orl	$-128, %eax
	movb	%al, 113(%rsp)
	movl	$2045, %eax
	jmp	.L8753
	.p2align 4,,10
	.p2align 3
.L8755:
	cmpl	$1, %edx
	jbe	.L8823
	testb	$1, %al
	jne	.L8939
.L8757:
	leal	-79(%r12), %edx
	cmpl	$4, %edx
	jbe	.L8940
.L8759:
	movl	4(%rsp), %edi
	leal	5(%rdi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L8760
	leal	1(%rdx), %esi
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rsi,8)
	jne	.L8941
.L8761:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L8942
.L8762:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L8816
	testb	$4, 46264(%rbx,%rcx)
	je	.L8816
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L8764:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L8765:
	addl	$2, %r12d
	subl	$4, %r14d
	andl	$16777215, %r12d
	cmpb	$0, 107(%rsp)
	je	.L8766
	leal	9216(%rax), %edx
	cmpw	$768, %dx
	ja	.L8943
.L8766:
	movl	%r15d, %ecx
	movl	$4, %r10d
	movl	$4, 48(%rsp)
	andl	$960, %ecx
	sarl	$6, %ecx
	addl	$1, %ecx
	movl	%ecx, %edx
	andl	$3, %ecx
	shrw	$2, %dx
	sall	$4, %ecx
	orl	$-16, %edx
	movb	%dl, 112(%rsp)
	movl	%r15d, %edx
	andl	$3, %r15d
	andl	$60, %edx
	sall	$4, %r15d
	sarl	$2, %edx
	orl	$-128, %r15d
	orl	$-128, %edx
	orl	%ecx, %edx
	movb	%dl, 113(%rsp)
	movl	%eax, %edx
	andl	$63, %eax
	andl	$960, %edx
	orl	$-128, %eax
	sarl	$6, %edx
	movb	%al, 115(%rsp)
	movl	$2044, %eax
	orl	%edx, %r15d
	movb	%r15b, 114(%rsp)
	movl	$3, %r15d
	jmp	.L8753
	.p2align 4,,10
	.p2align 3
.L8823:
	movzbl	56(%rsp), %eax
	jmp	.L8740
.L8810:
	movl	$3, %eax
	jmp	.L8740
.L8943:
	movb	$2, 100(%rbx)
	jmp	.L8736
.L8936:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8748
.L8813:
	movzbl	%sil, %r8d
.L8749:
	movl	4(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r11d, 48(%rsp)
	call	s370_logical_to_main_l
	movl	48(%rsp), %r11d
	jmp	.L8750
.L8931:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8772
.L8819:
	movzbl	%sil, %r8d
.L8773:
	movl	60(%rsp), %esi
	movq	%r10, %r9
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r11d, 72(%rsp)
	movq	%r10, 48(%rsp)
	call	s370_logical_to_main_l
	movl	72(%rsp), %r11d
	movq	48(%rsp), %r10
	jmp	.L8774
.L8935:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8747
.L8746:
	movzbl	97(%rbx), %r8d
	jmp	.L8749
.L8930:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8771
.L8770:
	movzbl	97(%rbx), %r8d
	jmp	.L8773
.L8769:
	movq	64(%rsp), %rax
	movl	$2048, %r10d
	subl	%edx, %r10d
	movl	1892(%rax), %edx
	testl	%edx, %edx
	je	.L8783
	movl	%ebp, %esi
	addl	$1, %edx
	shrl	$11, %esi
	movslq	%edx, %rax
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L8944
.L8784:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L8945
.L8785:
	movl	%ebp, %edi
	andl	$14680064, %edi
	orl	2224(%rbx), %edi
	cmpl	10424(%rcx), %edi
	jne	.L8822
	testb	$1, 46264(%rbx,%rsi)
	je	.L8822
	movq	35000(%rcx), %rdi
	movq	%rdi, 984(%rbx)
	movq	%rdi, 88(%rsp)
	movl	%ebp, %edi
	movq	%rdi, 80(%rsp)
	movq	26808(%rcx), %rdi
	xorq	%rdi, 80(%rsp)
	movl	%r10d, %edi
	movq	%rdi, 72(%rsp)
.L8787:
	leal	(%r10,%rbp), %r8d
	movslq	%edx, %rdx
	movl	%r8d, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rsi
	movl	2232(%rsi), %r9d
	cmpl	%r9d, 320(%rbx,%rdx,8)
	jne	.L8946
.L8789:
	testb	%al, %al
	jne	.L8947
.L8791:
	movl	%r8d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rsi), %edx
	jne	.L8790
	testb	$2, 46264(%rbx,%rcx)
	je	.L8790
	movl	48(%rsp), %eax
	movl	%edi, %r8d
	xorq	26808(%rsi), %r8
	subl	%r10d, %eax
	movslq	%eax, %r10
.L8792:
	movq	88(%rsp), %rax
	leaq	112(%rsp), %r9
	movq	80(%rsp), %rdi
	movq	%r9, %rsi
	orb	$6, (%rax)
	cmpq	$8, 72(%rsp)
	jae	.L8948
.L8793:
	xorl	%eax, %eax
	testb	$4, 72(%rsp)
	je	.L8796
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L8796:
	testb	$2, 72(%rsp)
	je	.L8797
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L8797:
	testb	$1, 72(%rsp)
	je	.L8795
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L8795:
	movq	72(%rsp), %rsi
	movq	%r8, %rdi
	addq	%r9, %rsi
	cmpq	$8, %r10
	movq	%rsi, %rdx
	jae	.L8949
.L8799:
	xorl	%eax, %eax
	testb	$4, %r10b
	je	.L8802
	movl	(%rdx), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L8802:
	testb	$2, %r10b
	je	.L8803
	movzwl	(%rdx,%rax), %ecx
	movw	%cx, (%rdi,%rax)
	addq	$2, %rax
.L8803:
	andl	$1, %r10d
	je	.L8782
	movzbl	(%rdx,%rax), %edx
	movb	%dl, (%rdi,%rax)
	jmp	.L8782
.L8933:
	movl	%r12d, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	jne	.L8743
	movl	4(%rsp), %esi
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r11d, 48(%rsp)
	call	s370_vfetch2_full
	movl	48(%rsp), %r11d
	movl	%eax, %r15d
	jmp	.L8751
.L8932:
	leal	(%r15,%rbp), %eax
	cmpl	$79, %eax
	jbe	.L8782
	movq	%rbx, %rdi
	movl	%r11d, 48(%rsp)
	call	s370_fetch_int_timer
	movl	48(%rsp), %r11d
	jmp	.L8782
.L8934:
	movq	%rbx, %rdi
	movl	%r11d, 48(%rsp)
	call	s370_store_int_timer
	movl	48(%rsp), %r11d
	jmp	.L8745
.L8948:
	cmpq	$127, 72(%rsp)
	ja	.L8950
	movq	72(%rsp), %rcx
	movq	%r9, %rsi
	shrq	$3, %rcx
	rep movsq
	jmp	.L8793
.L8949:
	cmpq	$127, %r10
	ja	.L8951
	movq	%r10, %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rsi, %rdx
	jmp	.L8799
.L8945:
	cmpb	43192(%rbx,%rsi), %al
	je	.L8785
.L8822:
	movzbl	%al, %r8d
.L8786:
	movl	60(%rsp), %esi
	movl	%r10d, %eax
	movq	%rbx, %rdx
	movq	%rax, %r9
	movl	$1, %ecx
	movl	%ebp, %edi
	movl	%r11d, 108(%rsp)
	movl	%r10d, 96(%rsp)
	movq	%rax, 72(%rsp)
	call	s370_logical_to_main_l
	movl	96(%rsp), %r10d
	movq	%rax, 80(%rsp)
	movq	984(%rbx), %rax
	movl	108(%rsp), %r11d
	movq	%rax, 88(%rsp)
	movq	64(%rsp), %rax
	movl	1892(%rax), %edx
	movzbl	97(%rbx), %eax
	testl	%edx, %edx
	jne	.L8952
	leal	(%r10,%rbp), %edi
	andl	$16777215, %edi
.L8790:
	movl	48(%rsp), %edx
	movzbl	%al, %r8d
	movl	$2, %ecx
	movl	60(%rsp), %esi
	movl	%r11d, 96(%rsp)
	subl	%r10d, %edx
	movslq	%edx, %r10
	movq	%rbx, %rdx
	movq	%r10, %r9
	movq	%r10, 48(%rsp)
	call	s370_logical_to_main_l
	movl	96(%rsp), %r11d
	movq	%rax, %r8
	movq	48(%rsp), %r10
	jmp	.L8792
.L8951:
	movq	%r10, %rdx
	movl	%r11d, 48(%rsp)
	call	memcpy
	movl	48(%rsp), %r11d
	jmp	.L8782
.L8947:
	cmpb	43192(%rbx,%rcx), %al
	je	.L8791
	jmp	.L8790
.L8946:
	movzbl	1976(%rbx,%rdx), %edx
	testb	%dl, 44216(%rbx,%rcx)
	jne	.L8789
	jmp	.L8790
.L8939:
	movl	%eax, %edx
	andl	$2047, %edx
	cmpl	$2047, %edx
	jne	.L8757
	movl	4(%rsp), %esi
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r11d, 48(%rsp)
	call	s370_vfetch2_full
	movl	48(%rsp), %r11d
	jmp	.L8765
.L8942:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8762
.L8816:
	movzbl	%sil, %r8d
.L8763:
	movl	4(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r11d, 48(%rsp)
	call	s370_logical_to_main_l
	movl	48(%rsp), %r11d
	jmp	.L8764
.L8809:
	xorl	%eax, %eax
	jmp	.L8740
.L8952:
	addl	$1, %edx
	jmp	.L8787
.L8944:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L8784
.L8783:
	movzbl	97(%rbx), %r8d
	jmp	.L8786
.L8941:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L8761
.L8760:
	movzbl	97(%rbx), %r8d
	jmp	.L8763
.L8940:
	movq	%rbx, %rdi
	movl	%r11d, 72(%rsp)
	movl	%eax, 48(%rsp)
	call	s370_store_int_timer
	movl	72(%rsp), %r11d
	movl	48(%rsp), %eax
	jmp	.L8759
.L8950:
	movq	72(%rsp), %rdx
	movl	%r11d, 108(%rsp)
	movq	%r8, 96(%rsp)
	movq	%r10, 88(%rsp)
	movq	%r9, 48(%rsp)
	call	memcpy
	movq	48(%rsp), %r9
	movq	88(%rsp), %r10
	movq	96(%rsp), %r8
	movl	108(%rsp), %r11d
	jmp	.L8795
	.cfi_endproc
.LFE826:
	.size	s370_convert_utf16_to_utf8, .-s370_convert_utf16_to_utf8
	.p2align 4,,15
	.globl	s370_convert_utf8_to_utf16
	.type	s370_convert_utf8_to_utf16, @function
s370_convert_utf8_to_utf16:
.LFB827:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rdi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	movzbl	3(%rdi), %eax
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movzbl	%al, %edi
	movl	%edi, 56(%rsp)
	movl	%eax, %edi
	sarl	$4, 56(%rsp)
	andl	$15, %edi
	movl	%edi, 60(%rsp)
	testb	$1, 56(%rsp)
	jne	.L8954
	testb	$1, %al
	jne	.L8954
.L8955:
	movl	56(%rsp), %edi
	movl	60(%rsp), %esi
	movzbl	2(%rbp), %edx
	movslq	%edi, %rax
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, 8(%rsp)
	movl	192(%rax), %r12d
	movslq	%esi, %rax
	movq	%rax, 16(%rsp)
	movl	192(%rbx,%rax,8), %ebp
	movl	%edi, %eax
	addl	$1, %eax
	cltq
	movq	%rax, 24(%rsp)
	movl	192(%rbx,%rax,8), %r13d
	movl	%esi, %eax
	addl	$1, %eax
	cltq
	movl	192(%rbx,%rax,8), %r11d
	movq	%rax, 32(%rsp)
	testl	%r11d, %r11d
	setne	%al
	je	.L8956
	testl	%r13d, %r13d
	je	.L9063
.L8956:
	testl	%r13d, %r13d
	je	.L9094
	testb	%al, %al
	.p2align 4,,3
	je	.L9094
	shrb	$4, %dl
	andl	$16777215, %r12d
	andl	$16777215, %ebp
	movl	%edx, %eax
	movl	$4096, %r10d
	movl	$0, 48(%rsp)
	andl	$1, %eax
	movl	%r11d, %r14d
	movl	%eax, 52(%rsp)
	movl	60(%rsp), %eax
	addl	$5, %eax
	cltq
	movq	%rax, (%rsp)
	movl	56(%rsp), %eax
	addl	$5, %eax
	cltq
	movq	%rax, 40(%rsp)
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 64(%rsp)
	.p2align 4,,10
	.p2align 3
.L8958:
	leal	-80(%rbp), %eax
	cmpl	$3, %eax
	jbe	.L9311
.L8959:
	movq	(%rsp), %rax
	leaq	(%rbx,%rax,4), %r15
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L8960
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L9312
.L8961:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L9313
.L8962:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L9098
	testb	$4, 46264(%rbx,%rcx)
	je	.L9098
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L8964:
	movzbl	(%rax), %r11d
	testb	%r11b, %r11b
	movb	%r11b, 96(%rsp)
	js	.L8965
	xorl	%r15d, %r15d
.L8966:
	cmpl	$1, %r13d
	jbe	.L9063
	movl	%r12d, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	je	.L9073
	movq	40(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L9074
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L9314
.L9075:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L9315
.L9076:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L9123
	testb	$2, 46264(%rbx,%rcx)
	je	.L9123
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L9078:
#APP
# 248 "vstore.h" 1
	rorw $8, %r11w
# 0 "" 2
#NO_APP
	movw	%r11w, (%rax)
	leal	-79(%r12), %eax
	cmpl	$4, %eax
	jbe	.L9316
.L9079:
	addl	$2, %r12d
	subl	$2, %r13d
	andl	$16777215, %r12d
.L9072:
	movq	8(%rsp), %rax
	leal	1(%rbp,%r15), %ebp
	subl	%r15d, %r14d
	andl	$16777215, %ebp
	subl	$1, %r14d
	testl	%r14d, %r14d
	movl	%r12d, 192(%rax)
	movq	24(%rsp), %rax
	movl	%r13d, 192(%rbx,%rax,8)
	movq	16(%rsp), %rax
	movl	%ebp, 192(%rbx,%rax,8)
	movq	32(%rsp), %rax
	movl	%r14d, 192(%rbx,%rax,8)
	jne	.L9317
.L9127:
	movzbl	48(%rsp), %eax
	jmp	.L8957
	.p2align 4,,10
	.p2align 3
.L8954:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L8955
	.p2align 4,,10
	.p2align 3
.L9063:
	movl	$1, %eax
.L8957:
	movb	%al, 100(%rbx)
	addq	$120, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L9317:
	.cfi_restore_state
	testl	%r13d, %r13d
	movl	$1, %eax
	cmovne	48(%rsp), %eax
	movl	%eax, 48(%rsp)
	je	.L9127
	subl	$1, %r10d
	jne	.L8958
	movl	$3, %eax
	jmp	.L8957
	.p2align 4,,10
	.p2align 3
.L8965:
	movl	%r11d, %eax
	andl	$-32, %eax
	cmpb	$-64, %al
	je	.L9318
	movl	%r11d, %eax
	andl	$-16, %eax
	cmpb	$-32, %al
	je	.L9319
	andl	$-8, %r11d
	cmpb	$-16, %r11b
	jne	.L9111
	cmpl	$3, %r14d
	jbe	.L9127
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L9034
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$11, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L9320
.L9035:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L9321
.L9036:
	movl	%ebp, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L9114
	testb	$4, 46264(%rbx,%rcx)
	je	.L9114
	movl	%ebp, %r11d
	xorq	26808(%rax), %r11
.L9038:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jg	.L9039
	leal	-77(%rbp), %eax
	cmpl	$6, %eax
	jbe	.L9322
.L9040:
	movl	(%r11), %eax
	movl	%eax, 96(%rsp)
.L9041:
	movl	52(%rsp), %eax
	movzbl	96(%rsp), %r11d
	testl	%eax, %eax
	je	.L9059
	cmpb	$-16, %r11b
	je	.L9323
	leal	15(%r11), %eax
	cmpb	$2, %al
	jbe	.L9324
	cmpb	$-12, %r11b
	jne	.L9059
	movzbl	97(%rsp), %ecx
	leal	-128(%rcx), %eax
	cmpb	$15, %al
	ja	.L8997
.L9309:
	movzbl	98(%rsp), %edx
	leal	-128(%rdx), %eax
	cmpb	$63, %al
	ja	.L8997
	movzbl	99(%rsp), %eax
	leal	-128(%rax), %esi
	cmpb	$63, %sil
	jbe	.L9061
.L8997:
	movb	$2, 100(%rbx)
	addq	$120, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L9059:
	.cfi_restore_state
	movzbl	97(%rsp), %ecx
	movzbl	98(%rsp), %edx
	movzbl	99(%rsp), %eax
.L9061:
	movl	%ecx, %r15d
	andl	$7, %r11d
	andl	$48, %ecx
	movl	%edx, %esi
	sarl	$4, %ecx
	andl	$15, %r15d
	sall	$2, %r11d
	andl	$48, %esi
	sall	$2, %r15d
	orl	%r11d, %ecx
	sarl	$4, %esi
	andl	$63, %eax
	subl	$1, %ecx
	orl	%esi, %r15d
	andl	$15, %edx
	andl	$15, %ecx
	orw	$-10240, %r15w
	orw	$-9216, %ax
	sall	$6, %ecx
	sall	$6, %edx
	orl	%ecx, %r15d
	orl	%edx, %eax
	cmpl	$3, %r13d
	jbe	.L9063
	sall	$16, %r15d
	movzwl	%ax, %eax
	orl	%eax, %r15d
	testb	$3, %r12b
	jne	.L9325
.L9064:
	movq	40(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L9066
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L9326
.L9067:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L9327
.L9068:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L9120
	testb	$2, 46264(%rbx,%rcx)
	je	.L9120
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L9070:
	bswap	%r15d
	movl	%r15d, (%rax)
	leal	-77(%r12), %eax
	cmpl	$6, %eax
	jbe	.L9328
.L9071:
	addl	$4, %r12d
	subl	$4, %r13d
	movl	$3, %r15d
	andl	$16777215, %r12d
	jmp	.L9072
	.p2align 4,,10
	.p2align 3
.L9318:
	movl	52(%rsp), %esi
	testl	%esi, %esi
	je	.L8968
	cmpb	$-63, %r11b
	jbe	.L8997
.L8968:
	cmpl	$1, %r14d
	jbe	.L9127
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L8971
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$11, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L9329
.L8972:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L9330
.L8973:
	movl	%ebp, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L9101
	testb	$4, 46264(%rbx,%rcx)
	je	.L9101
	movl	%ebp, %r11d
	xorq	26808(%rax), %r11
.L8975:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	je	.L8976
	leal	-79(%rbp), %eax
	cmpl	$4, %eax
	jbe	.L9331
.L8977:
	movzwl	(%r11), %eax
	movw	%ax, 96(%rsp)
.L8978:
	movl	52(%rsp), %ecx
	movzbl	97(%rsp), %r11d
	testl	%ecx, %ecx
	je	.L8998
	leal	-128(%r11), %eax
	cmpb	$63, %al
	ja	.L8997
.L8998:
	movzbl	96(%rsp), %eax
	andl	$63, %r11d
	movl	$1, %r15d
	andl	$31, %eax
	sall	$6, %eax
	orl	%eax, %r11d
	jmp	.L8966
	.p2align 4,,10
	.p2align 3
.L9319:
	cmpl	$2, %r14d
	jbe	.L9127
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L9001
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$11, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L9332
.L9002:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L9333
.L9003:
	movl	%ebp, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L9107
	testb	$4, 46264(%rbx,%rcx)
	je	.L9107
	movl	%ebp, %r11d
	xorq	26808(%rax), %r11
.L9005:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2045, %eax
	jg	.L9006
	leal	-78(%rbp), %eax
	cmpl	$5, %eax
	jbe	.L9334
.L9007:
	movzwl	(%r11), %eax
	movw	%ax, 96(%rsp)
	movzbl	2(%r11), %eax
	movb	%al, 98(%rsp)
.L9008:
	movl	52(%rsp), %edx
	testl	%edx, %edx
	je	.L9335
	movzbl	96(%rsp), %r11d
	cmpb	$-32, %r11b
	je	.L9336
	leal	31(%r11), %eax
	cmpb	$11, %al
	movzbl	97(%rsp), %eax
	ja	.L9337
.L9030:
	leal	-128(%rax), %edx
	cmpb	$63, %dl
	ja	.L8997
	movzbl	98(%rsp), %edx
	addl	$-128, %edx
	cmpb	$63, %dl
	ja	.L8997
.L9031:
	cmpb	$-19, %r11b
	je	.L9286
	movzbl	98(%rsp), %edx
	jmp	.L9032
	.p2align 4,,10
	.p2align 3
.L9324:
	movzbl	97(%rsp), %ecx
	leal	-128(%rcx), %eax
	cmpb	$63, %al
	jbe	.L9309
	jmp	.L8997
	.p2align 4,,10
	.p2align 3
.L9335:
	movzbl	97(%rsp), %eax
	movzbl	96(%rsp), %r11d
	movzbl	98(%rsp), %edx
.L9032:
	sall	$12, %r11d
	andl	$63, %edx
	andl	$63, %eax
	orl	%edx, %r11d
	sall	$6, %eax
	movl	$2, %r15d
	orl	%eax, %r11d
	jmp	.L8966
	.p2align 4,,10
	.p2align 3
.L9323:
	movzbl	97(%rsp), %ecx
	leal	112(%rcx), %eax
	cmpb	$47, %al
	jbe	.L9309
	jmp	.L8997
	.p2align 4,,10
	.p2align 3
.L9337:
	cmpb	$-18, %r11b
	je	.L9030
	.p2align 4,,7
	jmp	.L9031
.L9336:
	movzbl	97(%rsp), %eax
	leal	96(%rax), %edx
	cmpb	$31, %dl
	ja	.L8997
.L9307:
	movzbl	98(%rsp), %edx
	leal	-128(%rdx), %ecx
	cmpb	$63, %cl
	jbe	.L9032
	jmp	.L8997
	.p2align 4,,10
	.p2align 3
.L9286:
	leal	-128(%rax), %edx
	cmpb	$31, %dl
	jbe	.L9307
	.p2align 4,,5
	jmp	.L8997
	.p2align 4,,10
	.p2align 3
.L9111:
	movl	$2, %eax
	jmp	.L8957
.L9313:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8962
.L9098:
	movzbl	%sil, %r8d
.L8963:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 72(%rsp)
	call	s370_logical_to_main_l
	movl	72(%rsp), %r10d
	jmp	.L8964
.L9312:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L8961
.L8960:
	movzbl	97(%rbx), %r8d
	jmp	.L8963
.L9315:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L9076
.L9123:
	movzbl	%sil, %r8d
.L9077:
	movl	56(%rsp), %esi
	movl	$2, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r10d, 80(%rsp)
	movl	%r11d, 72(%rsp)
	call	s370_logical_to_main_l
	movl	80(%rsp), %r10d
	movl	72(%rsp), %r11d
	jmp	.L9078
.L9327:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L9068
.L9120:
	movzbl	%sil, %r8d
.L9069:
	movl	56(%rsp), %esi
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r10d, 72(%rsp)
	call	s370_logical_to_main_l
	movl	72(%rsp), %r10d
	jmp	.L9070
.L9073:
	movq	64(%rsp), %rax
	movl	1892(%rax), %edx
	testl	%edx, %edx
	je	.L9080
	movl	%r12d, %esi
	addl	$1, %edx
	shrl	$11, %esi
	movslq	%edx, %rax
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L9338
.L9081:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L9339
.L9082:
	movl	%r12d, %edi
	andl	$14680064, %edi
	orl	2224(%rbx), %edi
	cmpl	10424(%rcx), %edi
	jne	.L9126
	testb	$1, 46264(%rbx,%rsi)
	je	.L9126
	movq	35000(%rcx), %rdi
	movq	%rdi, 984(%rbx)
	movq	%rdi, 80(%rsp)
	movl	%r12d, %edi
	movq	%rdi, 72(%rsp)
	movq	26808(%rcx), %rdi
	xorq	%rdi, 72(%rsp)
.L9084:
	movslq	%edx, %rdx
	leal	1(%r12), %r8d
	movl	%r8d, %edi
	andl	$16777215, %edi
	movl	%edi, %ecx
	shrl	$11, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rsi
	movl	2232(%rsi), %r9d
	cmpl	%r9d, 320(%rbx,%rdx,8)
	jne	.L9340
.L9086:
	testb	%al, %al
	jne	.L9341
.L9088:
	movl	%r8d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rsi), %edx
	jne	.L9087
	testb	$2, 46264(%rbx,%rcx)
	je	.L9087
	movl	%edi, %eax
	xorq	26808(%rsi), %rax
.L9089:
	movq	80(%rsp), %rdi
	movl	%r11d, %edx
	shrw	$8, %dx
	orb	$6, (%rdi)
	movq	72(%rsp), %rdi
	movb	%dl, (%rdi)
	movb	%r11b, (%rax)
	jmp	.L9079
.L9326:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L9067
.L9066:
	movzbl	97(%rbx), %r8d
	jmp	.L9069
.L9325:
	movl	%r12d, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L9064
	movl	56(%rsp), %edx
	movq	%rbx, %rcx
	movl	%r12d, %esi
	movl	%r15d, %edi
	movl	%r10d, 72(%rsp)
	call	s370_vstore4_full
	movl	72(%rsp), %r10d
	jmp	.L9071
.L9314:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L9075
.L9074:
	movzbl	97(%rbx), %r8d
	jmp	.L9077
.L9321:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L9036
.L9114:
	movzbl	%sil, %r8d
.L9037:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 72(%rsp)
	call	s370_logical_to_main_l
	movl	72(%rsp), %r10d
	movq	%rax, %r11
	jmp	.L9038
.L9311:
	movq	%rbx, %rdi
	movl	%r10d, 72(%rsp)
	call	s370_store_int_timer
	movl	72(%rsp), %r10d
	jmp	.L8959
.L9320:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L9035
.L9034:
	movzbl	97(%rbx), %r8d
	jmp	.L9037
.L9039:
	movl	$2048, 72(%rsp)
	subl	%eax, 72(%rsp)
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L9042
	leal	1(%rax), %esi
	movl	72(%rsp), %eax
	movslq	%esi, %rsi
	leal	(%rax,%rbp), %ecx
	movl	%ecx, %edi
	andl	$16777215, %edi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbx,%rsi,8)
	jne	.L9342
.L9043:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L9343
.L9045:
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L9044
	testb	$4, 46264(%rbx,%rax)
	je	.L9044
	movl	%edi, %r9d
	xorq	26808(%rdx), %r9
.L9046:
	movl	72(%rsp), %r15d
	movq	%r11, %rsi
	leaq	96(%rsp), %r8
	movq	%r8, %rdi
	cmpq	$8, %r15
	jae	.L9344
.L9047:
	xorl	%eax, %eax
	testb	$4, %r15b
	je	.L9050
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L9050:
	testb	$2, %r15b
	je	.L9051
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L9051:
	testb	$1, %r15b
	je	.L9049
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L9049:
	leaq	(%r8,%r15), %rdi
	movl	$4, %edx
	movq	%r9, %rsi
	subl	72(%rsp), %edx
	movq	%rdi, %r11
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L9345
.L9053:
	xorl	%eax, %eax
	testb	$4, %dl
	je	.L9056
	movl	(%rsi), %eax
	movl	%eax, (%r11)
	movl	$4, %eax
.L9056:
	testb	$2, %dl
	je	.L9057
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%r11,%rax)
	addq	$2, %rax
.L9057:
	andl	$1, %edx
	je	.L9041
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%r11,%rax)
	jmp	.L9041
.L9345:
	cmpq	$127, %rdx
	ja	.L9346
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rdi, %r11
	jmp	.L9053
.L9316:
	movq	%rbx, %rdi
	movl	%r10d, 72(%rsp)
	call	s370_fetch_int_timer
	movl	72(%rsp), %r10d
	jmp	.L9079
.L9328:
	movq	%rbx, %rdi
	movl	%r10d, 72(%rsp)
	call	s370_fetch_int_timer
	movl	72(%rsp), %r10d
	jmp	.L9071
.L9346:
	movl	%r10d, 72(%rsp)
	call	memcpy
	movl	72(%rsp), %r10d
	jmp	.L9041
.L9042:
	movl	72(%rsp), %eax
	leal	(%rax,%rbp), %edi
	andl	$16777215, %edi
.L9310:
	movzbl	97(%rbx), %r8d
.L9044:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 88(%rsp)
	movq	%r11, 80(%rsp)
	call	s370_logical_to_main_l
	movl	88(%rsp), %r10d
	movq	%rax, %r9
	movq	80(%rsp), %r11
	jmp	.L9046
.L9339:
	cmpb	43192(%rbx,%rsi), %al
	je	.L9082
.L9126:
	movzbl	%al, %r8d
.L9083:
	movl	56(%rsp), %esi
	movq	%rbx, %rdx
	movl	$1, %r9d
	movl	$1, %ecx
	movl	%r12d, %edi
	movl	%r10d, 92(%rsp)
	movl	%r11d, 88(%rsp)
	call	s370_logical_to_main_l
	movl	88(%rsp), %r11d
	movq	%rax, 72(%rsp)
	movq	984(%rbx), %rax
	movl	92(%rsp), %r10d
	movq	%rax, 80(%rsp)
	movq	64(%rsp), %rax
	movl	1892(%rax), %edx
	movzbl	97(%rbx), %eax
	testl	%edx, %edx
	jne	.L9347
	leal	1(%r12), %edi
	andl	$16777215, %edi
.L9087:
	movl	56(%rsp), %esi
	movl	$1, %r9d
	movzbl	%al, %r8d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 92(%rsp)
	movl	%r11d, 88(%rsp)
	call	s370_logical_to_main_l
	movl	92(%rsp), %r10d
	movl	88(%rsp), %r11d
	jmp	.L9089
.L9344:
	cmpq	$127, %r15
	ja	.L9348
	movq	%r15, %rcx
	movq	%r8, %rdi
	shrq	$3, %rcx
	rep movsq
	jmp	.L9047
.L9343:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L9045
	jmp	.L9044
.L9342:
	movzbl	44216(%rbx,%rax), %r8d
	testb	%r8b, 1976(%rbx,%rsi)
	jne	.L9043
	jmp	.L9310
.L9348:
	movq	%r15, %rdx
	movl	%r10d, 88(%rsp)
	movq	%r9, 80(%rsp)
	call	memcpy
	movq	80(%rsp), %r9
	movq	%rax, %r8
	movl	88(%rsp), %r10d
	jmp	.L9049
.L9341:
	cmpb	43192(%rbx,%rcx), %al
	je	.L9088
	jmp	.L9087
.L9340:
	movzbl	1976(%rbx,%rdx), %edx
	testb	%dl, 44216(%rbx,%rcx)
	jne	.L9086
	jmp	.L9087
.L9329:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L8972
.L8971:
	movzbl	97(%rbx), %r8d
.L8974:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 72(%rsp)
	call	s370_logical_to_main_l
	movl	72(%rsp), %r10d
	movq	%rax, %r11
	jmp	.L8975
.L9322:
	movq	%rbx, %rdi
	movl	%r10d, 80(%rsp)
	movq	%r11, 72(%rsp)
	call	s370_store_int_timer
	movl	80(%rsp), %r10d
	movq	72(%rsp), %r11
	jmp	.L9040
.L9347:
	addl	$1, %edx
	jmp	.L9084
.L9338:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L9081
.L9080:
	movzbl	97(%rbx), %r8d
	jmp	.L9083
.L9333:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L9003
.L9107:
	movzbl	%sil, %r8d
.L9004:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 72(%rsp)
	call	s370_logical_to_main_l
	movl	72(%rsp), %r10d
	movq	%rax, %r11
	jmp	.L9005
.L9332:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L9002
.L9001:
	movzbl	97(%rbx), %r8d
	jmp	.L9004
.L9331:
	movq	%rbx, %rdi
	movl	%r10d, 80(%rsp)
	movq	%r11, 72(%rsp)
	call	s370_store_int_timer
	movl	80(%rsp), %r10d
	movq	72(%rsp), %r11
	jmp	.L8977
.L8976:
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L8979
	leal	1(%rbp), %ecx
	leal	1(%rax), %esi
	movl	%ecx, %edi
	andl	$16777215, %edi
	movslq	%esi, %rsi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbx,%rsi,8)
	jne	.L9349
.L8980:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L9350
.L8982:
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L8981
	testb	$4, 46264(%rbx,%rax)
	je	.L8981
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L8983:
	movzbl	(%r11), %edx
	movb	%dl, 96(%rsp)
	movzbl	(%rax), %eax
	movb	%al, 97(%rsp)
	jmp	.L8978
.L9330:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L8973
.L9101:
	movzbl	%sil, %r8d
	jmp	.L8974
.L9349:
	movzbl	44216(%rbx,%rax), %r8d
	testb	%r8b, 1976(%rbx,%rsi)
	jne	.L8980
	movzbl	97(%rbx), %r8d
.L8981:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 80(%rsp)
	movq	%r11, 72(%rsp)
	call	s370_logical_to_main_l
	movl	80(%rsp), %r10d
	movq	72(%rsp), %r11
	jmp	.L8983
.L9350:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L8982
	jmp	.L8981
.L8979:
	leal	1(%rbp), %edi
	movzbl	97(%rbx), %r8d
	andl	$16777215, %edi
	jmp	.L8981
.L9094:
	xorl	%eax, %eax
	jmp	.L8957
.L9006:
	movl	$2048, 72(%rsp)
	subl	%eax, 72(%rsp)
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L9009
	leal	1(%rax), %esi
	movl	72(%rsp), %eax
	movslq	%esi, %rsi
	leal	(%rax,%rbp), %ecx
	movl	%ecx, %edi
	andl	$16777215, %edi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbx,%rsi,8)
	jne	.L9351
.L9010:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L9352
.L9012:
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L9011
	testb	$4, 46264(%rbx,%rax)
	je	.L9011
	movl	%edi, %r9d
	xorq	26808(%rdx), %r9
.L9013:
	movl	72(%rsp), %r15d
	movq	%r11, %rsi
	leaq	96(%rsp), %r8
	movq	%r8, %rdi
	cmpq	$8, %r15
	jae	.L9353
.L9014:
	xorl	%eax, %eax
	testb	$4, %r15b
	je	.L9017
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L9017:
	testb	$2, %r15b
	je	.L9018
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L9018:
	testb	$1, %r15b
	je	.L9016
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L9016:
	leaq	(%r8,%r15), %rdi
	movl	$3, %edx
	movq	%r9, %rsi
	subl	72(%rsp), %edx
	movq	%rdi, %r11
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L9354
.L9020:
	xorl	%eax, %eax
	testb	$4, %dl
	je	.L9023
	movl	(%rsi), %eax
	movl	%eax, (%r11)
	movl	$4, %eax
.L9023:
	testb	$2, %dl
	je	.L9024
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%r11,%rax)
	addq	$2, %rax
.L9024:
	andl	$1, %edx
	je	.L9008
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%r11,%rax)
	jmp	.L9008
.L9354:
	cmpq	$127, %rdx
	ja	.L9355
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rdi, %r11
	jmp	.L9020
.L9353:
	cmpq	$127, %r15
	ja	.L9356
	movq	%r15, %rcx
	movq	%r8, %rdi
	shrq	$3, %rcx
	rep movsq
	jmp	.L9014
.L9351:
	movzbl	44216(%rbx,%rax), %r8d
	testb	%r8b, 1976(%rbx,%rsi)
	jne	.L9010
	movzbl	97(%rbx), %r8d
.L9011:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 88(%rsp)
	movq	%r11, 80(%rsp)
	call	s370_logical_to_main_l
	movl	88(%rsp), %r10d
	movq	%rax, %r9
	movq	80(%rsp), %r11
	jmp	.L9013
.L9355:
	movl	%r10d, 72(%rsp)
	call	memcpy
	movl	72(%rsp), %r10d
	jmp	.L9008
.L9356:
	movq	%r15, %rdx
	movl	%r10d, 88(%rsp)
	movq	%r9, 80(%rsp)
	call	memcpy
	movq	80(%rsp), %r9
	movq	%rax, %r8
	movl	88(%rsp), %r10d
	jmp	.L9016
.L9352:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L9012
	jmp	.L9011
.L9009:
	movl	72(%rsp), %eax
	movzbl	97(%rbx), %r8d
	leal	(%rax,%rbp), %edi
	andl	$16777215, %edi
	jmp	.L9011
.L9334:
	movq	%rbx, %rdi
	movl	%r10d, 80(%rsp)
	movq	%r11, 72(%rsp)
	call	s370_store_int_timer
	movl	80(%rsp), %r10d
	movq	72(%rsp), %r11
	jmp	.L9007
	.cfi_endproc
.LFE827:
	.size	s370_convert_utf8_to_utf16, .-s370_convert_utf8_to_utf16
	.p2align 4,,15
	.globl	s370_convert_to_binary
	.type	s370_convert_to_binary, @function
s370_convert_to_binary:
.LFB828:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r13d
	movl	%eax, %edx
	shrl	$20, %r13d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r13d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L9411
.L9358:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r15d
	je	.L9359
	cltq
	addl	192(%rbx,%rax,8), %ebp
.L9359:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	movl	%ebp, %r12d
	andl	$16777215, %r12d
	leal	5(%r15), %eax
	cltq
	leaq	(%rbx,%rax,4), %r10
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L9360
	leal	1(%rax), %edx
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L9412
.L9361:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L9413
.L9362:
	movl	%ebp, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L9360
	testb	$4, 46264(%rbx,%rcx)
	je	.L9360
	movl	%r12d, %r14d
	xorq	26808(%rax), %r14
.L9363:
	movl	%r12d, %eax
	andl	$2047, %eax
	cmpl	$2040, %eax
	jg	.L9364
	subl	$73, %r12d
	cmpl	$10, %r12d
	jbe	.L9414
.L9365:
	movq	(%r14), %rax
	leaq	64(%rsp), %rbp
	movq	%rax, 64(%rsp)
.L9366:
	leaq	48(%rsp), %rdx
	movl	$7, %esi
	movq	%rbp, %rdi
	leaq	32(%rsp), %r8
	leaq	16(%rsp), %rcx
	call	packed_to_binary
	movl	32(%rsp), %edx
	testl	%edx, %edx
	jne	.L9415
.L9375:
	movq	48(%rsp), %rax
	cmpq	$-2147483648, %rax
	jl	.L9376
	cmpq	$2147483647, %rax
	jle	.L9416
.L9376:
	movslq	%r13d, %r13
	movl	$1, 16(%rsp)
	movl	%eax, 192(%rbx,%r13,8)
.L9377:
	movq	%rbx, %rdi
	movl	$9, %esi
	call	*2032(%rbx)
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L9416:
	.cfi_restore_state
	movslq	%r13d, %r13
	movl	%eax, 192(%rbx,%r13,8)
	movl	16(%rsp), %eax
	testl	%eax, %eax
	jne	.L9377
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L9415:
	.cfi_restore_state
	movl	$0, 780(%rbx)
	movl	$7, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L9375
.L9412:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L9361
.L9360:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%r12d, %edi
	movq	%r10, 8(%rsp)
	call	s370_logical_to_main_l
	movq	8(%rsp), %r10
	movq	%rax, %r14
	jmp	.L9363
.L9411:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	jmp	.L9358
.L9364:
	movl	1892(%r10), %eax
	andl	$2047, %ebp
	movl	$2048, %r11d
	subl	%ebp, %r11d
	testl	%eax, %eax
	je	.L9417
	leal	1(%rax), %esi
	leal	(%r11,%r12), %eax
	movslq	%esi, %rsi
	movl	%eax, %r12d
	andl	$16777215, %r12d
	movl	%r12d, %edx
	shrl	$11, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbx,%rsi,8)
	jne	.L9418
.L9368:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L9419
.L9369:
	movl	%eax, %esi
	andl	$14680064, %esi
	orl	2224(%rbx), %esi
	cmpl	10424(%rcx), %esi
	jne	.L9367
	testb	$4, 46264(%rbx,%rdx)
	je	.L9367
	xorq	26808(%rcx), %r12
.L9370:
	movl	%r11d, %r15d
	leaq	64(%rsp), %rbp
	cmpq	$127, %r15
	ja	.L9420
	movq	%rbp, %rdi
	movq	%r14, %rsi
	movq	%r15, %rcx
	rep movsb
.L9372:
	movl	$8, %edx
	addq	%rbp, %r15
	subl	%r11d, %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L9421
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L9366
.L9413:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L9362
	jmp	.L9360
.L9414:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L9365
.L9421:
	movq	%r12, %rsi
	movq	%r15, %rdi
	call	memcpy
	.p2align 4,,2
	jmp	.L9366
.L9420:
	movq	%r15, %rdx
	movq	%r14, %rsi
	movq	%rbp, %rdi
	movl	%r11d, 8(%rsp)
	call	memcpy
	movl	8(%rsp), %r11d
	jmp	.L9372
.L9417:
	leal	(%r11,%r12), %eax
.L9367:
	movzbl	97(%rbx), %r8d
	andl	$16777215, %eax
	movl	$1, %r9d
	movl	%eax, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%r11d, 8(%rsp)
	call	s370_logical_to_main_l
	movl	8(%rsp), %r11d
	movq	%rax, %r12
	jmp	.L9370
.L9419:
	cmpb	43192(%rbx,%rdx), %sil
	je	.L9369
	jmp	.L9367
.L9418:
	movzbl	44216(%rbx,%rdx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L9368
	jmp	.L9367
	.cfi_endproc
.LFE828:
	.size	s370_convert_to_binary, .-s370_convert_to_binary
	.p2align 4,,15
	.globl	s370_convert_to_decimal
	.type	s370_convert_to_decimal, @function
s370_convert_to_decimal:
.LFB829:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	(%rdi), %esi
	bswap	%esi
	movl	%esi, %eax
	movl	%esi, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%esi, %ebp
	andl	$15, %eax
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L9486
.L9423:
	shrl	$12, %esi
	andl	$15, %esi
	movl	%esi, %r13d
	je	.L9424
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L9424:
	addq	$4, 136(%rbx)
	cltq
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	andl	$16777215, %r12d
	leaq	16(%rsp), %rsi
	movslq	192(%rbx,%rax,8), %rdi
	call	binary_to_packed
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2040, %eax
	jg	.L9425
	leal	5(%r13), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L9426
	leal	1(%rax), %ecx
	movl	%r12d, %eax
	shrl	$11, %eax
	movslq	%ecx, %rcx
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L9487
.L9427:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L9488
.L9428:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L9426
	testb	$2, 46264(%rbx,%rax)
	je	.L9426
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L9429:
	movq	24(%rsp), %rdx
	subl	$73, %r12d
	cmpl	$10, %r12d
	movq	%rdx, (%rax)
	jbe	.L9489
.L9422:
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L9487:
	.cfi_restore_state
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L9427
.L9426:
	movzbl	97(%rbx), %r8d
	movl	$8, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L9429
.L9425:
	movl	$2048, %r14d
	subl	%eax, %r14d
	leal	5(%r13), %eax
	cltq
	leaq	(%rbx,%rax,4), %r10
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L9431
	leal	1(%rax), %ecx
	movl	%r12d, %edx
	shrl	$11, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L9490
.L9432:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L9491
.L9433:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rax), %ebp
	jne	.L9431
	testb	$1, 46264(%rbx,%rdx)
	je	.L9431
	movq	35000(%rax), %rdx
	movl	%r12d, %r15d
	movl	%r14d, %ebp
	movq	%rdx, 984(%rbx)
	xorq	26808(%rax), %r15
.L9434:
	movl	1892(%r10), %eax
	movq	984(%rbx), %r11
	testl	%eax, %eax
	je	.L9492
	leal	1(%rax), %ecx
	addl	%r14d, %r12d
	movl	%r12d, %esi
	movslq	%ecx, %rcx
	andl	$16777215, %esi
	movl	%esi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L9493
.L9436:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L9494
.L9437:
	movl	%r12d, %ecx
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L9435
	testb	$2, 46264(%rbx,%rax)
	je	.L9435
	movl	%esi, %ebx
	xorq	26808(%rdx), %rbx
.L9438:
	orb	$6, (%r11)
	cmpq	$127, %rbp
	leaq	24(%rsp), %rsi
	ja	.L9495
	movq	%r15, %rdi
	movq	%rbp, %rcx
	rep movsb
.L9440:
	leaq	24(%rsp,%rbp), %rsi
	movl	$8, %edx
	movq	%rbx, %rdi
	subl	%r14d, %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L9496
	movq	%rdx, %rcx
	rep movsb
	jmp	.L9422
.L9486:
	movslq	%edx, %rdx
	addl	192(%rbx,%rdx,8), %ebp
	jmp	.L9423
.L9488:
	cmpb	43192(%rbx,%rax), %cl
	je	.L9428
	jmp	.L9426
.L9489:
	movq	%rbx, %rdi
	call	s370_fetch_int_timer
	.p2align 4,,5
	jmp	.L9422
.L9496:
	.p2align 4,,5
	call	memcpy
	.p2align 4,,8
	jmp	.L9422
.L9495:
	movq	%rbp, %rdx
	movq	%r15, %rdi
	call	memcpy
	.p2align 4,,2
	jmp	.L9440
.L9492:
	addl	%r14d, %r12d
.L9435:
	movzbl	97(%rbx), %r8d
	movl	$8, %r9d
	movl	%r12d, %edi
	subl	%r14d, %r9d
	movq	%rbx, %rdx
	andl	$16777215, %edi
	movslq	%r9d, %r9
	movl	$2, %ecx
	movl	%r13d, %esi
	movq	%r11, 8(%rsp)
	call	s370_logical_to_main_l
	movq	8(%rsp), %r11
	movq	%rax, %rbx
	jmp	.L9438
.L9494:
	cmpb	43192(%rbx,%rax), %cl
	je	.L9437
	jmp	.L9435
.L9493:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L9436
	jmp	.L9435
.L9491:
	cmpb	43192(%rbx,%rdx), %cl
	je	.L9433
.L9431:
	movzbl	97(%rbx), %r8d
	movl	%r14d, %ebp
	movl	$1, %ecx
	movq	%rbp, %r9
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%r12d, %edi
	movq	%r10, 8(%rsp)
	call	s370_logical_to_main_l
	movq	8(%rsp), %r10
	movq	%rax, %r15
	jmp	.L9434
.L9490:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L9432
	jmp	.L9431
	.cfi_endproc
.LFE829:
	.size	s370_convert_to_decimal, .-s370_convert_to_decimal
	.p2align 4,,15
	.globl	s370_divide_register
	.type	s370_divide_register, @function
s370_divide_register:
.LFB830:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movzbl	1(%rdi), %eax
	movb	$2, 130(%rsi)
	addq	$2, 136(%rsi)
	movzbl	%al, %ebp
	movl	%eax, %r12d
	sarl	$4, %ebp
	andl	$15, %r12d
	testb	$1, %bpl
	jne	.L9509
.L9498:
	leal	1(%rbp), %eax
	movslq	%r12d, %r12
	movslq	%ebp, %rbp
	movslq	192(%rbx,%r12,8), %rcx
	leaq	(%rbx,%rbp,8), %rsi
	cltq
	leaq	(%rbx,%rax,8), %rdi
	movl	192(%rsi), %eax
	movl	192(%rdi), %edx
	testl	%ecx, %ecx
	jne	.L9510
.L9499:
	movq	2032(%rbx), %rax
	movq	%rbx, %rdi
	movl	$9, %esi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L9509:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L9498
	.p2align 4,,10
	.p2align 3
.L9510:
	salq	$32, %rax
	movl	$2147483648, %r8d
	orq	%rdx, %rax
	cqto
	idivq	%rcx
	movl	$4294967295, %ecx
	addq	%rax, %r8
	cmpq	%rcx, %r8
	ja	.L9499
	movl	%eax, 192(%rdi)
	movl	%edx, 192(%rsi)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE830:
	.size	s370_divide_register, .-s370_divide_register
	.p2align 4,,15
	.globl	s370_divide
	.type	s370_divide, @function
s370_divide:
.LFB831:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %esi
	bswap	%esi
	movl	%esi, %eax
	movl	%esi, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%esi, %ebp
	movl	%eax, %r13d
	andl	$4095, %ebp
	andl	$15, %r13d
	andl	$15, %edx
	jne	.L9554
.L9512:
	shrl	$12, %esi
	andl	$15, %esi
	movl	%esi, %r14d
	je	.L9513
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L9513:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$1, %al
	jne	.L9555
.L9514:
	testb	$3, %bpl
	jne	.L9556
.L9515:
	leal	-77(%r12), %eax
	cmpl	$6, %eax
	jbe	.L9557
.L9517:
	leal	5(%r14), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L9518
	leal	1(%rax), %ecx
	movl	%r12d, %eax
	shrl	$11, %eax
	movslq	%ecx, %rcx
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L9558
.L9519:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L9559
.L9520:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L9518
	testb	$4, 46264(%rbx,%rax)
	je	.L9518
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L9521:
	movl	(%rax), %ecx
	bswap	%ecx
.L9522:
	leal	1(%r13), %eax
	movslq	%r13d, %r13
	testl	%ecx, %ecx
	leaq	(%rbx,%r13,8), %rsi
	cltq
	leaq	(%rbx,%rax,8), %rdi
	movl	192(%rsi), %eax
	movl	192(%rdi), %edx
	jne	.L9560
.L9523:
	movq	2032(%rbx), %rax
	movq	%rbx, %rdi
	movl	$9, %esi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L9555:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L9514
	.p2align 4,,10
	.p2align 3
.L9560:
	salq	$32, %rax
	movslq	%ecx, %rcx
	movl	$2147483648, %r8d
	orq	%rdx, %rax
	cqto
	idivq	%rcx
	movl	$4294967295, %ecx
	addq	%rax, %r8
	cmpq	%rcx, %r8
	ja	.L9523
	movl	%eax, 192(%rdi)
	movl	%edx, 192(%rsi)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L9558:
	.cfi_restore_state
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L9519
.L9518:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L9521
.L9554:
	movslq	%edx, %rdx
	addl	192(%rbx,%rdx,8), %ebp
	jmp	.L9512
.L9559:
	cmpb	43192(%rbx,%rax), %cl
	je	.L9520
	jmp	.L9518
.L9556:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L9515
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	movl	%eax, %ecx
	jmp	.L9522
.L9557:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,3
	jmp	.L9517
	.cfi_endproc
.LFE831:
	.size	s370_divide, .-s370_divide
	.p2align 4,,15
	.globl	s370_exclusive_or_register
	.type	s370_exclusive_or_register, @function
s370_exclusive_or_register:
.LFB832:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	addq	$2, 136(%rsi)
	movq	%rcx, %rax
	andl	$15, %ecx
	shrq	%rax
	andl	$120, %eax
	leaq	(%rsi,%rax), %rdx
	movl	192(%rsi,%rcx,8), %eax
	xorl	%eax, 192(%rdx)
	setne	100(%rsi)
	ret
	.cfi_endproc
.LFE832:
	.size	s370_exclusive_or_register, .-s370_exclusive_or_register
	.p2align 4,,15
	.globl	s370_exclusive_or
	.type	s370_exclusive_or, @function
s370_exclusive_or:
.LFB833:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %edx
	shrl	$20, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L9595
.L9563:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L9564
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L9564:
	movl	%ebp, %r13d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r13d
	testb	$3, %bpl
	jne	.L9596
.L9565:
	leal	-77(%r13), %edx
	cmpl	$6, %edx
	jbe	.L9597
.L9567:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L9568
	leal	1(%rdx), %esi
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L9598
.L9569:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L9599
.L9570:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L9568
	testb	$4, 46264(%rbx,%rcx)
	je	.L9568
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L9571:
	movl	(%rax), %eax
	bswap	%eax
.L9572:
	movslq	%r12d, %r12
	leaq	(%rbx,%r12,8), %rdx
	xorl	%eax, 192(%rdx)
	setne	100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L9598:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L9569
.L9568:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	jmp	.L9571
.L9596:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L9565
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_vfetch4_full
	jmp	.L9572
.L9595:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	jmp	.L9563
.L9599:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L9570
	jmp	.L9568
.L9597:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L9567
	.cfi_endproc
.LFE833:
	.size	s370_exclusive_or, .-s370_exclusive_or
	.p2align 4,,15
	.globl	s370_exclusive_or_immediate
	.type	s370_exclusive_or_immediate, @function
s370_exclusive_or_immediate:
.LFB834:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %eax
	movl	%ebp, %r12d
	shrl	$12, %eax
	shrl	$16, %r12d
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L9601
	cltq
	addl	192(%rsi,%rax,8), %ebp
	andl	$16777215, %ebp
.L9601:
	leal	-79(%rbp), %eax
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	cmpl	$4, %eax
	jbe	.L9624
.L9602:
	leal	5(%r13), %eax
	cltq
	movl	1892(%rbx,%rax,4), %edx
	testl	%edx, %edx
	je	.L9603
	leal	1(%rdx), %eax
	movl	%ebp, %ecx
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L9625
.L9604:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L9626
.L9605:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L9603
	testb	$2, 46264(%rbx,%rcx)
	je	.L9603
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L9606:
	xorb	%r12b, (%rax)
	setne	100(%rbx)
	subl	$80, %ebp
	cmpl	$3, %ebp
	jbe	.L9627
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L9625:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L9604
.L9603:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L9606
.L9626:
	cmpb	43192(%rbx,%rcx), %al
	je	.L9605
	.p2align 4,,4
	jmp	.L9603
.L9624:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L9602
.L9627:
	popq	%rax
	.cfi_def_cfa_offset 40
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE834:
	.size	s370_exclusive_or_immediate, .-s370_exclusive_or_immediate
	.p2align 4,,15
	.globl	s370_exclusive_or_character
	.type	s370_exclusive_or_character, @function
s370_exclusive_or_character:
.LFB835:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rsi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r14d
	movl	%eax, %ecx
	shrl	$16, %r14d
	shrl	$28, %ecx
	andl	$4095, %r14d
	testl	%ecx, %ecx
	movl	%ecx, 8(%rsp)
	je	.L9629
	movslq	%ecx, %rdx
	addl	192(%rsi,%rdx,8), %r14d
	andl	$16777215, %r14d
.L9629:
	movl	%eax, %r15d
	shrl	$12, %eax
	andl	$4095, %r15d
	andl	$15, %eax
	movl	%eax, 56(%rsp)
	je	.L9630
	cltq
	addl	192(%rbp,%rax,8), %r15d
	andl	$16777215, %r15d
.L9630:
	movzbl	1(%rdi), %ebx
	xorl	%eax, %eax
	movb	$6, 130(%rbp)
	addq	$6, 136(%rbp)
	cmpl	$83, %r14d
	setbe	%al
	movzbl	%bl, %r13d
	movq	%rax, 16(%rsp)
	jbe	.L9802
.L9632:
	cmpl	$83, %r15d
	jbe	.L9803
.L9634:
	testl	%r13d, %r13d
	je	.L9804
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	0(%rbp,%rax,4), %rax
	movq	%rax, 32(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L9646
	leal	1(%rax), %edx
	movl	%r14d, %esi
	shrl	$11, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	0(%rbp,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbp,%rdx,8)
	jne	.L9805
.L9647:
	movzbl	97(%rbp), %ecx
	testb	%cl, %cl
	jne	.L9806
.L9648:
	movl	%r14d, %edx
	andl	$14680064, %edx
	orl	2224(%rbp), %edx
	cmpl	10424(%rax), %edx
	jne	.L9719
	testb	$1, 46264(%rbp,%rsi)
	je	.L9719
	movq	35000(%rax), %r11
	movl	%r14d, %ebx
	movzbl	%cl, %r8d
	movq	%r11, 984(%rbp)
	xorq	26808(%rax), %rbx
.L9650:
	movl	56(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	0(%rbp,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L9651
	leal	1(%rax), %edx
	movl	%r15d, %esi
	shrl	$11, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	0(%rbp,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbp,%rdx,8)
	jne	.L9807
.L9652:
	testb	%r8b, %r8b
	jne	.L9808
.L9653:
	movl	%r15d, %edx
	andl	$14680064, %edx
	orl	2224(%rbp), %edx
	cmpl	10424(%rax), %edx
	jne	.L9651
	testb	$4, 46264(%rbp,%rsi)
	je	.L9651
	movl	%r15d, %r12d
	xorq	26808(%rax), %r12
.L9654:
	movl	$2047, %r10d
	movl	%r14d, %eax
	subl	%r13d, %r10d
	andl	$2047, %eax
	cmpl	%r10d, %eax
	jg	.L9655
	movl	%r15d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L9656
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	cmpq	%r12, %rbx
	movl	$1, %esi
	je	.L9809
	.p2align 4,,10
	.p2align 3
.L9773:
	movzbl	(%r12,%rax), %edx
	xorb	%dl, (%rbx,%rax)
	cmovne	%esi, %ecx
	addq	$1, %rax
	cmpl	%eax, %r13d
	jge	.L9773
.L9664:
	orb	$6, (%r11)
.L9677:
	cmpq	$0, 16(%rsp)
	movb	%cl, 100(%rbp)
	jne	.L9810
.L9628:
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L9809:
	.cfi_restore_state
	leal	1(%r13), %edx
	movq	%rbx, %rdi
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L9811
.L9658:
	testb	$4, %dl
	jne	.L9812
.L9661:
	testb	$2, %dl
	jne	.L9813
.L9662:
	andl	$1, %edx
	.p2align 4,,2
	jne	.L9814
	xorl	%ecx, %ecx
	.p2align 4,,3
	jmp	.L9664
.L9814:
	movb	$0, (%rdi)
	xorl	%ecx, %ecx
	jmp	.L9664
.L9813:
	xorl	%eax, %eax
	addq	$2, %rdi
	movw	%ax, -2(%rdi)
	jmp	.L9662
.L9812:
	movl	$0, (%rdi)
	addq	$4, %rdi
	jmp	.L9661
.L9811:
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep stosq
	jmp	.L9658
.L9807:
	movzbl	44216(%rbp,%rsi), %edi
	testb	%dil, 1976(%rbp,%rdx)
	jne	.L9652
.L9651:
	movl	56(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r15d, %edi
	movq	%r11, 40(%rsp)
	call	s370_logical_to_main_l
	movq	40(%rsp), %r11
	movq	%rax, %r12
	jmp	.L9654
.L9806:
	cmpb	43192(%rbp,%rsi), %cl
	je	.L9648
.L9719:
	movzbl	%cl, %r8d
.L9649:
	movl	8(%rsp), %esi
	movzbl	%bl, %r9d
	movl	$1, %ecx
	movq	%rbp, %rdx
	movl	%r14d, %edi
	call	s370_logical_to_main_l
	movq	984(%rbp), %r11
	movq	%rax, %rbx
	movzbl	97(%rbp), %r8d
	jmp	.L9650
.L9805:
	movzbl	44216(%rbp,%rsi), %ecx
	testb	%cl, 1976(%rbp,%rdx)
	jne	.L9647
.L9646:
	movzbl	97(%rbp), %r8d
	jmp	.L9649
.L9808:
	cmpb	43192(%rbp,%rsi), %r8b
	je	.L9653
	jmp	.L9651
.L9802:
	leal	(%r14,%r13), %eax
	cmpl	$79, %eax
	jbe	.L9632
	movq	%rbp, %rdi
	call	s370_store_int_timer
	jmp	.L9632
.L9804:
	movl	56(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbp,%rax,4), %eax
	testl	%eax, %eax
	je	.L9636
	leal	1(%rax), %edx
	movl	%r15d, %eax
	shrl	$11, %eax
	movslq	%edx, %rdx
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbp,%rdx,8)
	jne	.L9815
.L9637:
	movzbl	97(%rbp), %edx
	testb	%dl, %dl
	jne	.L9816
.L9638:
	movl	%r15d, %esi
	andl	$14680064, %esi
	orl	2224(%rbp), %esi
	cmpl	10424(%rcx), %esi
	jne	.L9716
	testb	$4, 46264(%rbp,%rax)
	je	.L9716
	xorq	26808(%rcx), %r15
	movzbl	%dl, %r8d
.L9640:
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbp,%rax,4), %eax
	testl	%eax, %eax
	je	.L9641
	leal	1(%rax), %esi
	movl	%r14d, %eax
	shrl	$11, %eax
	movslq	%esi, %rsi
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbp,%rsi,8)
	jne	.L9817
.L9642:
	testb	%r8b, %r8b
	jne	.L9818
.L9643:
	movl	%r14d, %esi
	andl	$14680064, %esi
	orl	2224(%rbp), %esi
	cmpl	10424(%rcx), %esi
	jne	.L9641
	testb	$2, 46264(%rbp,%rax)
	je	.L9641
	xorq	26808(%rcx), %r14
.L9644:
	movzbl	(%r14), %eax
	xorb	(%r15), %al
	testb	%al, %al
	movb	%al, (%r14)
	setne	100(%rbp)
	jmp	.L9628
.L9803:
	leal	(%r15,%r13), %eax
	cmpl	$79, %eax
	jbe	.L9634
	movq	%rbp, %rdi
	call	s370_store_int_timer
	jmp	.L9634
.L9818:
	cmpb	%r8b, 43192(%rbp,%rax)
	je	.L9643
.L9641:
	movl	8(%rsp), %esi
	movl	%r14d, %edi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbp, %rdx
	call	s370_logical_to_main_l
	movq	%rax, %r14
	jmp	.L9644
.L9817:
	movzbl	44216(%rbp,%rax), %edi
	testb	%dil, 1976(%rbp,%rsi)
	jne	.L9642
	jmp	.L9641
.L9816:
	cmpb	43192(%rbp,%rax), %dl
	je	.L9638
.L9716:
	movzbl	%dl, %r8d
.L9639:
	movl	56(%rsp), %esi
	movl	%r15d, %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	call	s370_logical_to_main_l
	movzbl	97(%rbp), %r8d
	movq	%rax, %r15
	jmp	.L9640
.L9815:
	movzbl	44216(%rbp,%rax), %esi
	testb	%sil, 1976(%rbp,%rdx)
	jne	.L9637
.L9636:
	movzbl	97(%rbp), %r8d
	jmp	.L9639
.L9655:
	movl	$2048, 40(%rsp)
	subl	%eax, 40(%rsp)
	movq	32(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L9678
	leal	1(%rax), %esi
	movl	40(%rsp), %eax
	movslq	%esi, %rsi
	leal	(%rax,%r14), %ecx
	movl	%ecx, %edi
	andl	$16777215, %edi
	movl	%edi, %edx
	shrl	$11, %edx
	andl	$1023, %edx
	leaq	0(%rbp,%rdx,8), %rax
	movl	2232(%rax), %r9d
	cmpl	%r9d, 320(%rbp,%rsi,8)
	jne	.L9819
.L9679:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L9820
.L9681:
	andl	$14680064, %ecx
	orl	2224(%rbp), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L9680
	testb	$1, 46264(%rbp,%rdx)
	je	.L9680
	movq	35000(%rax), %rcx
	movq	%rdi, 8(%rsp)
	movq	%rcx, 984(%rbp)
	movq	26808(%rax), %rax
	movq	%rcx, 32(%rsp)
	xorq	%rax, 8(%rsp)
.L9682:
	movl	%r15d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L9683
	movq	%rbx, %rax
	xorl	%ecx, %ecx
	movl	$1, %esi
.L9685:
	addq	$1, %r12
	movzbl	-1(%r12), %edx
	addq	$1, %rax
	xorb	%dl, -1(%rax)
	movl	%eax, %edx
	cmovne	%esi, %ecx
	subl	%ebx, %edx
	cmpl	%edx, 40(%rsp)
	jg	.L9685
	movl	%r13d, %edi
	subl	40(%rsp), %edi
	js	.L9686
	movq	8(%rsp), %r8
	xorl	%eax, %eax
	movl	$1, %esi
.L9687:
	movzbl	(%r12,%rax), %edx
	xorb	%dl, (%r8,%rax)
	cmovne	%esi, %ecx
	addq	$1, %rax
	cmpl	%eax, %edi
	jge	.L9687
.L9686:
	orb	$6, (%r11)
	movq	32(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L9677
.L9810:
	addl	%r14d, %r13d
	cmpl	$79, %r13d
	jbe	.L9628
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	movq	%rbp, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
.L9656:
	.cfi_restore_state
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L9667
	leal	(%r10,%r15), %ecx
	leal	1(%rax), %esi
	movl	%ecx, %edi
	andl	$16777215, %edi
	movslq	%esi, %rsi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbp,%rsi,8)
	jne	.L9821
.L9668:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L9822
.L9670:
	andl	$14680064, %ecx
	orl	2224(%rbp), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L9669
	testb	$4, 46264(%rbp,%rax)
	je	.L9669
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L9671:
	movq	%r12, %rdx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L9673:
	addq	$1, %rdx
	movzbl	-1(%rdx), %esi
	addq	$1, %rbx
	xorb	%sil, -1(%rbx)
	movl	%edx, %esi
	cmovne	%edi, %ecx
	subl	%r12d, %esi
	cmpl	%esi, %r10d
	jg	.L9673
	movl	%r13d, %edi
	xorl	%edx, %edx
	movl	$1, %r8d
	subl	%r10d, %edi
	js	.L9664
.L9796:
	movzbl	(%rax,%rdx), %esi
	xorb	%sil, (%rbx,%rdx)
	cmovne	%r8d, %ecx
	addq	$1, %rdx
	cmpl	%edx, %edi
	jge	.L9796
	jmp	.L9664
.L9683:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L9688
	leal	(%r10,%r15), %ecx
	leal	1(%rax), %esi
	movl	%ecx, %edi
	andl	$16777215, %edi
	movslq	%esi, %rsi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbp,%rsi,8)
	jne	.L9823
.L9689:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L9824
.L9691:
	andl	$14680064, %ecx
	orl	2224(%rbp), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L9690
	testb	$4, 46264(%rbp,%rax)
	je	.L9690
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L9692:
	cmpl	%r10d, 40(%rsp)
	je	.L9825
	movq	%rbx, %rdx
	movl	$0, %ecx
	movl	$1, %edi
	jge	.L9705
.L9699:
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	addq	$1, %rdx
	xorb	%sil, -1(%rdx)
	movl	%edx, %esi
	cmovne	%edi, %ecx
	subl	%ebx, %esi
	cmpl	40(%rsp), %esi
	jl	.L9699
	movl	%r10d, %edi
	subl	40(%rsp), %edi
	testl	%edi, %edi
	jle	.L9700
	movq	8(%rsp), %r9
	xorl	%edx, %edx
	movl	$1, %r8d
.L9702:
	movzbl	(%r12,%rdx), %esi
	xorb	%sil, (%r9,%rdx)
	cmovne	%r8d, %ecx
	addq	$1, %rdx
	cmpl	%edx, %edi
	jg	.L9702
	movq	8(%rsp), %rbx
	subl	$1, %edi
	leaq	1(%rbx,%rdi), %rdi
	movq	%rdi, 8(%rsp)
.L9700:
	movl	%r13d, %r8d
	subl	%r10d, %r8d
	js	.L9686
	movq	8(%rsp), %r9
	xorl	%edx, %edx
	movl	$1, %edi
.L9703:
	movzbl	(%rax,%rdx), %esi
	xorb	%sil, (%r9,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r8d
	jge	.L9703
	jmp	.L9686
.L9705:
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	addq	$1, %rdx
	xorb	%sil, -1(%rdx)
	movl	%edx, %esi
	cmovne	%edi, %ecx
	subl	%ebx, %esi
	cmpl	%esi, %r10d
	jg	.L9705
	movl	40(%rsp), %r8d
	subl	%r10d, %r8d
	testl	%r8d, %r8d
	jle	.L9706
	xorl	%esi, %esi
	movl	$1, %r9d
.L9708:
	movzbl	(%rax,%rsi), %edi
	xorb	%dil, (%rdx,%rsi)
	cmovne	%r9d, %ecx
	addq	$1, %rsi
	cmpl	%esi, %r8d
	jg	.L9708
	subl	$1, %r8d
	leaq	1(%rax,%r8), %rax
.L9706:
	movl	%r13d, %r8d
	subl	40(%rsp), %r8d
	js	.L9686
	movq	8(%rsp), %r9
	xorl	%edx, %edx
	movl	$1, %edi
.L9709:
	movzbl	(%rax,%rdx), %esi
	xorb	%sil, (%r9,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r8d
	jge	.L9709
	jmp	.L9686
.L9825:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L9695:
	movzbl	(%r12,%rdx), %esi
	xorb	%sil, (%rbx,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, 40(%rsp)
	jg	.L9695
	movl	%r13d, %r8d
	subl	40(%rsp), %r8d
	js	.L9686
	movq	8(%rsp), %r9
	xorl	%edx, %edx
	movl	$1, %edi
.L9696:
	movzbl	(%rax,%rdx), %esi
	xorb	%sil, (%r9,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r8d
	jge	.L9696
	jmp	.L9686
.L9823:
	movzbl	44216(%rbp,%rax), %r8d
	testb	%r8b, 1976(%rbp,%rsi)
	jne	.L9689
.L9801:
	movzbl	97(%rbp), %r8d
.L9690:
	movl	56(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 48(%rsp)
	movq	%r11, 24(%rsp)
	call	s370_logical_to_main_l
	movl	48(%rsp), %r10d
	movq	24(%rsp), %r11
	jmp	.L9692
.L9824:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L9691
	jmp	.L9690
.L9688:
	leal	(%r10,%r15), %edi
	andl	$16777215, %edi
	jmp	.L9801
.L9821:
	movzbl	44216(%rbp,%rax), %r8d
	testb	%r8b, 1976(%rbp,%rsi)
	jne	.L9668
.L9800:
	movzbl	97(%rbp), %r8d
.L9669:
	movl	56(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 24(%rsp)
	movq	%r11, 8(%rsp)
	call	s370_logical_to_main_l
	movl	24(%rsp), %r10d
	movq	8(%rsp), %r11
	jmp	.L9671
.L9822:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L9670
	jmp	.L9669
.L9667:
	leal	(%r10,%r15), %edi
	andl	$16777215, %edi
	jmp	.L9800
.L9819:
	movzbl	44216(%rbp,%rdx), %r8d
	testb	%r8b, 1976(%rbp,%rsi)
	jne	.L9679
	movzbl	97(%rbp), %r8d
.L9680:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 60(%rsp)
	movq	%r11, 48(%rsp)
	call	s370_logical_to_main_l
	movl	60(%rsp), %r10d
	movq	%rax, 8(%rsp)
	movq	984(%rbp), %rax
	movq	48(%rsp), %r11
	movq	%rax, 32(%rsp)
	jmp	.L9682
.L9820:
	cmpb	43192(%rbp,%rdx), %r8b
	je	.L9681
	jmp	.L9680
.L9678:
	movl	40(%rsp), %eax
	movzbl	97(%rbp), %r8d
	leal	(%rax,%r14), %edi
	andl	$16777215, %edi
	jmp	.L9680
	.cfi_endproc
.LFE835:
	.size	s370_exclusive_or_character, .-s370_exclusive_or_character
	.p2align 4,,15
	.globl	s370_execute
	.type	s370_execute, @function
s370_execute:
.LFB836:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %ecx
	shrl	$20, %ebp
	shrl	$16, %ecx
	movl	%eax, %edx
	andl	$4095, %edx
	andl	$15, %ebp
	andl	$15, %ecx
	movl	%edx, 800(%rsi)
	jne	.L9856
.L9827:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L9828
	cltq
	addl	192(%rbx,%rax,8), %edx
.L9828:
	movl	%edx, %eax
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %eax
	andl	$1, %edx
	movl	%eax, 800(%rbx)
	jne	.L9857
.L9829:
	leaq	1014(%rbx), %r12
	movl	%eax, %edx
	andl	$2147481601, %edx
	movq	$0, 1014(%rbx)
	cmpl	168(%rbx), %edx
	jne	.L9830
	andl	$2047, %eax
	orq	144(%rbx), %rax
	cmpq	160(%rbx), %rax
	jae	.L9830
.L9831:
	cmpq	%r12, %rax
	je	.L9832
	movq	(%rax), %rax
	movq	%rax, 1014(%rbx)
.L9832:
	movzbl	1014(%rbx), %eax
	cmpb	$68, %al
	je	.L9833
	cmpb	$-58, %al
	movzbl	1015(%rbx), %ecx
	movl	%eax, %edx
	je	.L9834
.L9835:
	xorl	%eax, %eax
	testl	%ebp, %ebp
	je	.L9836
	movslq	%ebp, %rbp
	movzbl	192(%rbx,%rbp,8), %eax
.L9836:
	orl	%ecx, %eax
	movb	%al, 1015(%rbx)
	movzbl	808(%rbx), %eax
	orl	$1, %eax
	andl	$-3, %eax
	cmpb	$63, %dl
	movb	%al, 808(%rbx)
	movq	136(%rbx), %rax
	jbe	.L9837
	cmpb	$-64, %dl
	sbbq	%rdx, %rdx
	andl	$2, %edx
	leaq	-6(%rax,%rdx), %rax
	movq	2080(%rbx), %rdx
	movq	%rax, 136(%rbx)
	movzwl	1014(%rbx), %eax
.L9840:
#APP
# 4413 "general1.c" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
	movq	%rbx, %rsi
	movzwl	%ax, %eax
	movq	%r12, %rdi
	call	*(%rdx,%rax,8)
	movl	52(%rbx), %eax
	addl	$1, 880(%rbx)
	andl	56(%rbx), %eax
	testl	$16318464, %eax
	jne	.L9826
	andb	$-2, 808(%rbx)
.L9826:
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L9837:
	.cfi_restore_state
	subq	$2, %rax
	movq	2080(%rbx), %rdx
	movq	%rax, 136(%rbx)
	movzwl	1014(%rbx), %eax
	jmp	.L9840
	.p2align 4,,10
	.p2align 3
.L9857:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movl	800(%rbx), %eax
	jmp	.L9829
	.p2align 4,,10
	.p2align 3
.L9834:
	testb	$15, %cl
	jne	.L9835
.L9833:
	movl	$3, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movzbl	1015(%rbx), %ecx
	movzbl	1014(%rbx), %edx
	jmp	.L9835
.L9830:
	movq	%rbx, %rdi
	call	s370_instfetch.constprop.20
	jmp	.L9831
.L9856:
	movslq	%ecx, %rcx
	addl	192(%rsi,%rcx,8), %edx
	movl	%edx, 800(%rsi)
	jmp	.L9827
	.cfi_endproc
.LFE836:
	.size	s370_execute, .-s370_execute
	.p2align 4,,15
	.globl	s370_execute_relative_long
	.type	s370_execute_relative_long, @function
s370_execute_relative_long:
.LFB837:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	2(%rdi), %eax
	movzbl	1(%rdi), %edx
	bswap	%eax
	cltq
	shrb	$4, %dl
	addq	%rax, %rax
	testb	$1, 808(%rsi)
	movzbl	%dl, %r12d
	jne	.L9859
	movq	136(%rsi), %rcx
	movq	%rcx, %rdx
	subq	144(%rsi), %rdx
	addl	168(%rsi), %edx
	addl	%edx, %eax
	andl	$16777215, %eax
.L9860:
	movl	%eax, %edx
	addq	$6, %rcx
	movl	%eax, 800(%rbx)
	andl	$2147481601, %edx
	movq	%rcx, 136(%rbx)
	cmpl	168(%rbx), %edx
	movb	$6, 130(%rbx)
	leaq	1014(%rbx), %rbp
	movq	$0, 1014(%rbx)
	jne	.L9861
	andl	$2047, %eax
	orq	144(%rbx), %rax
	cmpq	160(%rbx), %rax
	jae	.L9861
.L9862:
	cmpq	%rbp, %rax
	je	.L9863
	movq	(%rax), %rax
	movq	%rax, 1014(%rbx)
.L9863:
	movzbl	1014(%rbx), %eax
	cmpb	$68, %al
	je	.L9864
	cmpb	$-58, %al
	movzbl	1015(%rbx), %ecx
	je	.L9865
.L9866:
	xorl	%edx, %edx
	testl	%r12d, %r12d
	je	.L9867
	movzbl	192(%rbx,%r12,8), %edx
.L9867:
	orb	$3, 808(%rbx)
	orl	%ecx, %edx
	cmpb	$63, %al
	movb	%dl, 1015(%rbx)
	movq	136(%rbx), %rdx
	jbe	.L9868
	cmpb	$-64, %al
	sbbq	%rax, %rax
	andl	$2, %eax
	leaq	-6(%rdx,%rax), %rax
	movq	2080(%rbx), %rdx
	movq	%rax, 136(%rbx)
	movzwl	1014(%rbx), %eax
.L9871:
#APP
# 4484 "general1.c" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
	movq	%rbx, %rsi
	movzwl	%ax, %eax
	movq	%rbp, %rdi
	call	*(%rdx,%rax,8)
	movl	52(%rbx), %eax
	addl	$1, 880(%rbx)
	andl	56(%rbx), %eax
	testl	$16318464, %eax
	jne	.L9858
	andb	$-2, 808(%rbx)
.L9858:
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L9868:
	.cfi_restore_state
	subq	$2, %rdx
	movzwl	1014(%rbx), %eax
	movq	%rdx, 136(%rbx)
	movq	2080(%rbx), %rdx
	jmp	.L9871
	.p2align 4,,10
	.p2align 3
.L9865:
	testb	$15, %cl
	jne	.L9866
.L9864:
	movl	$3, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movzbl	1015(%rbx), %ecx
	movzbl	1014(%rbx), %eax
	jmp	.L9866
.L9861:
	movq	%rbx, %rdi
	call	s370_instfetch.constprop.20
	jmp	.L9862
.L9859:
	addl	800(%rsi), %eax
	movq	136(%rsi), %rcx
	andl	$16777215, %eax
	jmp	.L9860
	.cfi_endproc
.LFE837:
	.size	s370_execute_relative_long, .-s370_execute_relative_long
	.p2align 4,,15
	.globl	s370_insert_characters_under_mask
	.type	s370_insert_characters_under_mask, @function
s370_insert_characters_under_mask:
.LFB838:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %r13d
	movl	%ebp, %r12d
	shrl	$16, %r13d
	movl	%ebp, %r15d
	shrl	$20, %r12d
	movl	%r13d, %r14d
	shrl	$12, %r15d
	andl	$15, %r12d
	andl	$15, %r14d
	andl	$4095, %ebp
	andl	$15, %r15d
	je	.L9881
	movslq	%r15d, %rax
	addl	192(%rsi,%rax,8), %ebp
	andl	$16777215, %ebp
.L9881:
	addq	$4, 136(%rbx)
	cmpl	$7, %r14d
	movb	$4, 130(%rbx)
	je	.L9883
	cmpl	$15, %r14d
	jne	.L10035
	testb	$3, %bpl
	jne	.L10036
.L9902:
	leal	-77(%rbp), %eax
	cmpl	$6, %eax
	jbe	.L10037
.L9904:
	leal	5(%r15), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L9905
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L10038
.L9906:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L10039
.L9907:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L9905
	testb	$4, 46264(%rbx,%rcx)
	je	.L9905
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L9908:
	movl	(%rax), %eax
	bswap	%eax
.L9909:
	movslq	%r12d, %r12
	xorl	%edx, %edx
	testl	%eax, %eax
	movl	%eax, 192(%rbx,%r12,8)
	je	.L9910
	sarl	$31, %eax
	leal	2(%rax), %edx
.L9910:
	movb	%dl, 100(%rbx)
.L9880:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L10035:
	.cfi_restore_state
	movslq	%r14d, %r11
	movl	$0, 32(%rsp)
	movzbl	icmlen.36614(,%r11,4), %eax
	movl	%eax, (%rsp)
	leal	5(%r15), %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 8(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L9911
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L10040
.L9912:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L10041
.L9913:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L9911
	testb	$4, 46264(%rbx,%rcx)
	je	.L9911
	movl	%ebp, %r10d
	xorq	26808(%rdx), %r10
.L9914:
	movl	$2047, %eax
	movl	%ebp, %edx
	subl	(%rsp), %eax
	andl	$2047, %edx
	cmpl	%eax, %edx
	jg	.L9915
	cmpl	$83, %ebp
	jbe	.L10042
.L9917:
	movl	(%rsp), %edx
	leaq	32(%rsp), %rdi
	movq	%r10, %rsi
	addl	$1, %edx
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L10043
	xorl	%eax, %eax
	testb	$4, %dl
	jne	.L10044
.L9921:
	testb	$2, %dl
	jne	.L10045
.L9922:
	andl	$1, %edx
	jne	.L10046
.L9924:
	testl	%r14d, %r14d
	.p2align 4,,2
	jne	.L9933
.L10051:
	movb	$0, 32(%rsp)
.L9933:
	movl	32(%rsp), %eax
	xorl	%edx, %edx
	bswap	%eax
	testl	%eax, %eax
	je	.L9934
	sarl	$31, %eax
	leal	2(%rax), %edx
.L9934:
	movb	%dl, 100(%rbx)
	movl	icmmask.36615(,%r11,4), %edx
	movslq	%r12d, %r12
	leaq	(%rbx,%r12,8), %rax
	andl	192(%rax), %edx
	testb	$8, %r13b
	movl	%edx, 192(%rax)
	jne	.L10047
	movl	$2, %edi
	movl	$1, %esi
	xorl	%ecx, %ecx
.L9935:
	testb	$4, %r13b
	je	.L9936
	movzbl	32(%rsp,%rcx), %ecx
	sall	$16, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movslq	%esi, %rcx
	movl	%edi, %esi
.L9936:
	testb	$2, %r13b
	je	.L9937
	movzbl	32(%rsp,%rcx), %ecx
	sall	$8, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movslq	%esi, %rcx
.L9937:
	andl	$1, %r13d
	je	.L9880
	movzbl	32(%rsp,%rcx), %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L9883:
	.cfi_restore_state
	leal	5(%r15), %eax
	movb	$0, 32(%rsp)
	cltq
	leaq	(%rbx,%rax,4), %r14
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L9885
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L10048
.L9886:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L10049
.L9887:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L9885
	testb	$4, 46264(%rbx,%rcx)
	je	.L9885
	movl	%ebp, %r13d
	xorq	26808(%rdx), %r13
.L9888:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2045, %eax
	jg	.L9889
	subl	$78, %ebp
	cmpl	$5, %ebp
	jbe	.L10050
.L9890:
	movzwl	0(%r13), %eax
	movw	%ax, 33(%rsp)
	movzbl	2(%r13), %eax
	movb	%al, 35(%rsp)
.L9891:
	movslq	%r12d, %r12
	movl	32(%rsp), %edx
	leaq	(%rbx,%r12,8), %rcx
	movl	192(%rcx), %eax
	bswap	%edx
	andl	$-16777216, %eax
	orl	%edx, %eax
	movl	%eax, 192(%rcx)
	xorl	%eax, %eax
	testl	%edx, %edx
	je	.L9900
	andl	$8388608, %edx
	cmpl	$1, %edx
	sbbl	%eax, %eax
	notl	%eax
	addl	$2, %eax
.L9900:
	movb	%al, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L10047:
	.cfi_restore_state
	movzbl	32(%rsp), %ecx
	movl	$3, %edi
	movl	$2, %esi
	sall	$24, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movl	$1, %ecx
	jmp	.L9935
	.p2align 4,,10
	.p2align 3
.L10046:
	movzbl	(%rsi,%rax), %edx
	testl	%r14d, %r14d
	movb	%dl, (%rdi,%rax)
	jne	.L9933
	jmp	.L10051
	.p2align 4,,10
	.p2align 3
.L10045:
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%rdi,%rax)
	addq	$2, %rax
	andl	$1, %edx
	je	.L9924
	jmp	.L10046
	.p2align 4,,10
	.p2align 3
.L10044:
	movl	(%rsi), %eax
	testb	$2, %dl
	movl	%eax, (%rdi)
	movl	$4, %eax
	je	.L9922
	jmp	.L10045
	.p2align 4,,10
	.p2align 3
.L10043:
	cmpq	$127, %rdx
	ja	.L10052
	movq	%rdx, %rcx
	xorl	%eax, %eax
	shrq	$3, %rcx
	testb	$4, %dl
	rep movsq
	je	.L9921
	jmp	.L10044
	.p2align 4,,10
	.p2align 3
.L10052:
	movq	%r11, (%rsp)
	call	memcpy
	movq	(%rsp), %r11
	jmp	.L9924
.L10048:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L9886
.L9885:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	movq	%rax, %r13
	jmp	.L9888
.L10040:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L9912
.L9911:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	movq	%r11, 16(%rsp)
	call	s370_logical_to_main_l
	movq	16(%rsp), %r11
	movq	%rax, %r10
	jmp	.L9914
.L10038:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L9906
.L9905:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L9908
.L10042:
	addl	(%rsp), %ebp
	cmpl	$79, %ebp
	jbe	.L9917
	movq	%rbx, %rdi
	movq	%r11, 16(%rsp)
	movq	%r10, 8(%rsp)
	call	s370_store_int_timer
	movq	16(%rsp), %r11
	movq	8(%rsp), %r10
	jmp	.L9917
.L10049:
	cmpb	43192(%rbx,%rcx), %al
	je	.L9887
	jmp	.L9885
.L9889:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L10053
	leal	1(%rax), %ecx
	addl	%r10d, %ebp
	movl	%ebp, %r14d
	movslq	%ecx, %rcx
	andl	$16777215, %r14d
	movl	%r14d, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L10054
.L9893:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L10055
.L9894:
	movl	%ebp, %ecx
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L9892
	testb	$4, 46264(%rbx,%rax)
	je	.L9892
	xorq	26808(%rdx), %r14
.L9895:
	movl	%r10d, %r15d
	leaq	32(%rsp), %rbp
	cmpq	$127, %r15
	leaq	1(%rbp), %rax
	ja	.L10056
	movq	%rax, %rdi
	movq	%r13, %rsi
	movq	%r15, %rcx
	rep movsb
.L9897:
	leaq	1(%rbp,%r15), %rax
	movl	$3, %edx
	subl	%r10d, %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L10057
	movq	%rax, %rdi
	movq	%r14, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L9891
.L10041:
	cmpb	43192(%rbx,%rcx), %al
	je	.L9913
	jmp	.L9911
.L9915:
	movq	8(%rsp), %rax
	movl	$2048, 16(%rsp)
	subl	%edx, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L10058
	addl	16(%rsp), %ebp
	leal	1(%rax), %ecx
	movslq	%ecx, %rcx
	movl	%ebp, %esi
	andl	$16777215, %esi
	movl	%esi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L10059
.L9926:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L10060
.L9927:
	movl	%ebp, %ecx
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L9925
	testb	$4, 46264(%rbx,%rax)
	je	.L9925
	movl	%esi, %r15d
	xorq	26808(%rdx), %r15
.L9928:
	movl	16(%rsp), %r8d
	leaq	32(%rsp), %rbp
	cmpq	$127, %r8
	ja	.L10061
	movq	%rbp, %rdi
	movq	%r10, %rsi
	movq	%r8, %rcx
	rep movsb
.L9930:
	movl	(%rsp), %edx
	addq	%rbp, %r8
	addl	$1, %edx
	subl	16(%rsp), %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L10062
	movq	%r8, %rdi
	movq	%r15, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L9924
.L10036:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L9902
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	call	s370_vfetch4_full
	jmp	.L9909
.L10050:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L9890
.L10039:
	cmpb	43192(%rbx,%rcx), %al
	je	.L9907
	.p2align 4,,4
	jmp	.L9905
.L10037:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L9904
.L10053:
	addl	%r10d, %ebp
.L9892:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	$1, %r9d
	andl	$16777215, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%r10d, (%rsp)
	call	s370_logical_to_main_l
	movl	(%rsp), %r10d
	movq	%rax, %r14
	jmp	.L9895
.L10055:
	cmpb	43192(%rbx,%rax), %cl
	je	.L9894
	jmp	.L9892
.L10054:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L9893
	jmp	.L9892
.L10057:
	movq	%r14, %rsi
	movq	%rax, %rdi
	call	memcpy
	.p2align 4,,2
	jmp	.L9891
.L10056:
	movq	%r15, %rdx
	movq	%r13, %rsi
	movq	%rax, %rdi
	movl	%r10d, (%rsp)
	call	memcpy
	movl	(%rsp), %r10d
	jmp	.L9897
.L10062:
	movq	%r15, %rsi
	movq	%r8, %rdi
	movq	%r11, (%rsp)
	call	memcpy
	movq	(%rsp), %r11
	jmp	.L9924
.L10061:
	movq	%r8, %rdx
	movq	%r10, %rsi
	movq	%rbp, %rdi
	movq	%r11, 24(%rsp)
	movq	%r8, 8(%rsp)
	call	memcpy
	movq	8(%rsp), %r8
	movq	24(%rsp), %r11
	jmp	.L9930
.L10058:
	movl	16(%rsp), %eax
	addl	%eax, %ebp
.L9925:
	movzbl	97(%rbx), %r8d
	movl	%ebp, %edi
	movl	%r15d, %esi
	andl	$16777215, %edi
	movl	$1, %r9d
	movq	%rbx, %rdx
	movl	$4, %ecx
	movq	%r11, 24(%rsp)
	movq	%r10, 8(%rsp)
	call	s370_logical_to_main_l
	movq	24(%rsp), %r11
	movq	%rax, %r15
	movq	8(%rsp), %r10
	jmp	.L9928
.L10060:
	cmpb	43192(%rbx,%rax), %cl
	je	.L9927
	jmp	.L9925
.L10059:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L9926
	jmp	.L9925
	.cfi_endproc
.LFE838:
	.size	s370_insert_characters_under_mask, .-s370_insert_characters_under_mask
	.p2align 4,,15
	.globl	s370_BF_7
	.type	s370_BF_7, @function
s370_BF_7:
.LFB839:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %r13d
	movl	%ebp, %esi
	shrl	$20, %r13d
	shrl	$12, %esi
	andl	$4095, %ebp
	andl	$15, %r13d
	andl	$15, %esi
	movl	%esi, %r14d
	je	.L10064
	movslq	%esi, %rax
	addl	192(%rbx,%rax,8), %ebp
	andl	$16777215, %ebp
.L10064:
	addq	$4, 136(%rbx)
	leal	5(%r14), %eax
	movb	$0, 16(%rsp)
	cltq
	movb	$4, 130(%rbx)
	leaq	(%rbx,%rax,4), %r15
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L10065
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L10112
.L10066:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L10113
.L10067:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L10065
	testb	$4, 46264(%rbx,%rcx)
	je	.L10065
	movl	%ebp, %r12d
	xorq	26808(%rdx), %r12
.L10068:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2045, %eax
	jg	.L10069
	subl	$78, %ebp
	cmpl	$5, %ebp
	jbe	.L10114
.L10070:
	movzwl	(%r12), %eax
	movw	%ax, 17(%rsp)
	movzbl	2(%r12), %eax
	movb	%al, 19(%rsp)
.L10071:
	movslq	%r13d, %r13
	movl	16(%rsp), %edx
	leaq	(%rbx,%r13,8), %rcx
	movl	192(%rcx), %eax
	bswap	%edx
	andl	$-16777216, %eax
	orl	%edx, %eax
	movl	%eax, 192(%rcx)
	xorl	%eax, %eax
	testl	%edx, %edx
	je	.L10080
	andl	$8388608, %edx
	cmpl	$1, %edx
	sbbl	%eax, %eax
	notl	%eax
	addl	$2, %eax
.L10080:
	movb	%al, 100(%rbx)
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L10112:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L10066
.L10065:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	movq	%rax, %r12
	jmp	.L10068
.L10069:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L10115
	leal	1(%rax), %esi
	leal	(%r10,%rbp), %eax
	movslq	%esi, %rsi
	movl	%eax, %ebp
	andl	$16777215, %ebp
	movl	%ebp, %edx
	shrl	$11, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbx,%rsi,8)
	jne	.L10116
.L10073:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L10117
.L10074:
	movl	%eax, %esi
	andl	$14680064, %esi
	orl	2224(%rbx), %esi
	cmpl	10424(%rcx), %esi
	jne	.L10072
	testb	$4, 46264(%rbx,%rdx)
	je	.L10072
	xorq	26808(%rcx), %rbp
.L10075:
	movl	%r10d, %r14d
	leaq	17(%rsp), %rax
	cmpq	$127, %r14
	ja	.L10118
	movq	%rax, %rdi
	movq	%r12, %rsi
	movq	%r14, %rcx
	rep movsb
.L10077:
	leaq	17(%rsp,%r14), %rax
	movl	$3, %edx
	subl	%r10d, %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L10119
	movq	%rax, %rdi
	movq	%rbp, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L10071
.L10113:
	cmpb	43192(%rbx,%rcx), %al
	je	.L10067
	jmp	.L10065
.L10114:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L10070
.L10119:
	movq	%rbp, %rsi
	movq	%rax, %rdi
	call	memcpy
	.p2align 4,,2
	jmp	.L10071
.L10118:
	movq	%r14, %rdx
	movq	%r12, %rsi
	movq	%rax, %rdi
	movl	%r10d, 12(%rsp)
	call	memcpy
	movl	12(%rsp), %r10d
	jmp	.L10077
.L10115:
	leal	(%r10,%rbp), %eax
.L10072:
	movzbl	97(%rbx), %r8d
	andl	$16777215, %eax
	movl	$1, %r9d
	movl	%eax, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r10d, 12(%rsp)
	call	s370_logical_to_main_l
	movl	12(%rsp), %r10d
	movq	%rax, %rbp
	jmp	.L10075
.L10117:
	cmpb	43192(%rbx,%rdx), %sil
	je	.L10074
	jmp	.L10072
.L10116:
	movzbl	44216(%rbx,%rdx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L10073
	jmp	.L10072
	.cfi_endproc
.LFE839:
	.size	s370_BF_7, .-s370_BF_7
	.p2align 4,,15
	.globl	s370_BF_F
	.type	s370_BF_F, @function
s370_BF_F:
.LFB840:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %r12d
	movl	%ebp, %eax
	shrl	$20, %r12d
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %r12d
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L10121
	cltq
	addl	192(%rsi,%rax,8), %ebp
	andl	$16777215, %ebp
.L10121:
	addq	$4, 136(%rbx)
	testb	$3, %bpl
	movb	$4, 130(%rbx)
	jne	.L10153
.L10122:
	leal	-77(%rbp), %eax
	cmpl	$6, %eax
	jbe	.L10154
.L10124:
	leal	5(%r13), %eax
	cltq
	movl	1892(%rbx,%rax,4), %edx
	testl	%edx, %edx
	je	.L10125
	leal	1(%rdx), %eax
	movl	%ebp, %ecx
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L10155
.L10126:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L10156
.L10127:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L10125
	testb	$4, 46264(%rbx,%rcx)
	je	.L10125
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L10128:
	movl	(%rax), %eax
	bswap	%eax
.L10129:
	movslq	%r12d, %r12
	xorl	%edx, %edx
	testl	%eax, %eax
	movl	%eax, 192(%rbx,%r12,8)
	je	.L10130
	sarl	$31, %eax
	leal	2(%rax), %edx
.L10130:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L10155:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L10126
.L10125:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L10128
.L10153:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L10122
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%ebp, %edi
	call	s370_vfetch4_full
	jmp	.L10129
.L10156:
	cmpb	43192(%rbx,%rcx), %al
	je	.L10127
	.p2align 4,,4
	jmp	.L10125
.L10154:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L10124
	.cfi_endproc
.LFE840:
	.size	s370_BF_F, .-s370_BF_F
	.p2align 4,,15
	.globl	s370_BF_x
	.type	s370_BF_x, @function
s370_BF_x:
.LFB841:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %r12d
	movl	%ebp, %r14d
	shrl	$16, %r12d
	movl	%ebp, %eax
	shrl	$20, %r14d
	movl	%r12d, %r10d
	shrl	$12, %eax
	andl	$15, %r14d
	andl	$15, %r10d
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, (%rsp)
	je	.L10158
	cltq
	addl	192(%rsi,%rax,8), %ebp
	movl	(%rsp), %eax
	andl	$16777215, %ebp
.L10158:
	addq	$4, 136(%rbx)
	addl	$5, %eax
	movslq	%r10d, %r11
	cltq
	movb	$4, 130(%rbx)
	movzbl	icmlen.36650(,%r11,4), %r15d
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 8(%rsp)
	movl	1892(%rax), %eax
	movl	$0, 32(%rsp)
	testl	%eax, %eax
	je	.L10159
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L10238
.L10160:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L10239
.L10161:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L10159
	testb	$4, 46264(%rbx,%rcx)
	je	.L10159
	movl	%ebp, %r13d
	xorq	26808(%rdx), %r13
.L10162:
	movl	%ebp, %edx
	movl	$2047, %eax
	andl	$2047, %edx
	subl	%r15d, %eax
	cmpl	%eax, %edx
	jg	.L10163
	cmpl	$83, %ebp
	jbe	.L10240
.L10165:
	leaq	32(%rsp), %rdi
	addl	$1, %r15d
	movq	%r13, %rsi
	movslq	%r15d, %rdx
	cmpq	$8, %rdx
	jae	.L10241
.L10166:
	xorl	%eax, %eax
	testb	$4, %dl
	jne	.L10242
	testb	$2, %dl
	jne	.L10243
.L10170:
	andl	$1, %edx
	jne	.L10244
.L10172:
	testl	%r10d, %r10d
	.p2align 4,,2
	jne	.L10181
	movb	$0, 32(%rsp)
.L10181:
	movl	32(%rsp), %eax
	xorl	%edx, %edx
	bswap	%eax
	testl	%eax, %eax
	je	.L10182
	sarl	$31, %eax
	leal	2(%rax), %edx
.L10182:
	movb	%dl, 100(%rbx)
	movl	icmmask.36651(,%r11,4), %edx
	movslq	%r14d, %r14
	leaq	(%rbx,%r14,8), %rax
	andl	192(%rax), %edx
	testb	$8, %r12b
	movl	%edx, 192(%rax)
	je	.L10190
	movzbl	32(%rsp), %ecx
	movl	$3, %edi
	movl	$2, %esi
	sall	$24, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movl	$1, %ecx
.L10183:
	testb	$4, %r12b
	je	.L10184
	movzbl	32(%rsp,%rcx), %ecx
	sall	$16, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movslq	%esi, %rcx
	movl	%edi, %esi
.L10184:
	testb	$2, %r12b
	je	.L10185
	movzbl	32(%rsp,%rcx), %ecx
	sall	$8, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movslq	%esi, %rcx
.L10185:
	andl	$1, %r12d
	je	.L10157
	movzbl	32(%rsp,%rcx), %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
.L10157:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L10190:
	.cfi_restore_state
	movl	$2, %edi
	movl	$1, %esi
	xorl	%ecx, %ecx
	jmp	.L10183
	.p2align 4,,10
	.p2align 3
.L10244:
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
	jmp	.L10172
	.p2align 4,,10
	.p2align 3
.L10243:
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%rdi,%rax)
	addq	$2, %rax
	andl	$1, %edx
	je	.L10172
	jmp	.L10244
	.p2align 4,,10
	.p2align 3
.L10242:
	movl	(%rsi), %eax
	testb	$2, %dl
	movl	%eax, (%rdi)
	movl	$4, %eax
	je	.L10170
	jmp	.L10243
	.p2align 4,,10
	.p2align 3
.L10241:
	cmpq	$127, %rdx
	ja	.L10245
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	jmp	.L10166
	.p2align 4,,10
	.p2align 3
.L10245:
	movq	%r11, 8(%rsp)
	movl	%r10d, (%rsp)
	call	memcpy
	movl	(%rsp), %r10d
	movq	8(%rsp), %r11
	jmp	.L10172
.L10238:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L10160
.L10159:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movl	(%rsp), %esi
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r11, 24(%rsp)
	movl	%r10d, 20(%rsp)
	call	s370_logical_to_main_l
	movq	24(%rsp), %r11
	movq	%rax, %r13
	movl	20(%rsp), %r10d
	jmp	.L10162
.L10239:
	cmpb	43192(%rbx,%rcx), %al
	je	.L10161
	jmp	.L10159
.L10163:
	movq	8(%rsp), %rax
	movl	$2048, 20(%rsp)
	subl	%edx, 20(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L10246
	leal	1(%rax), %esi
	movl	20(%rsp), %eax
	movslq	%esi, %rsi
	addl	%ebp, %eax
	movl	%eax, %ebp
	andl	$16777215, %ebp
	movl	%ebp, %edx
	shrl	$11, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbx,%rsi,8)
	jne	.L10247
.L10174:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L10248
.L10175:
	movl	%eax, %esi
	andl	$14680064, %esi
	orl	2224(%rbx), %esi
	cmpl	10424(%rcx), %esi
	jne	.L10173
	testb	$4, 46264(%rbx,%rdx)
	je	.L10173
	xorq	26808(%rcx), %rbp
.L10176:
	movl	20(%rsp), %r9d
	leaq	32(%rsp), %r8
	cmpq	$127, %r9
	ja	.L10249
	movq	%r8, %rdi
	movq	%r13, %rsi
	movq	%r9, %rcx
	rep movsb
.L10178:
	leal	1(%r15), %edx
	addq	%r9, %r8
	subl	20(%rsp), %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L10250
	movq	%r8, %rdi
	movq	%rbp, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L10172
.L10240:
	addl	%r15d, %ebp
	cmpl	$79, %ebp
	jbe	.L10165
	movq	%rbx, %rdi
	movq	%r11, 8(%rsp)
	movl	%r10d, (%rsp)
	call	s370_store_int_timer
	movq	8(%rsp), %r11
	movl	(%rsp), %r10d
	jmp	.L10165
.L10250:
	movq	%rbp, %rsi
	movq	%r8, %rdi
	movq	%r11, 8(%rsp)
	movl	%r10d, (%rsp)
	call	memcpy
	movl	(%rsp), %r10d
	movq	8(%rsp), %r11
	jmp	.L10172
.L10249:
	movq	%r9, %rdx
	movq	%r8, %rdi
	movq	%r13, %rsi
	movq	%r11, 24(%rsp)
	movl	%r10d, 8(%rsp)
	movq	%r9, (%rsp)
	call	memcpy
	movq	(%rsp), %r9
	movq	%rax, %r8
	movl	8(%rsp), %r10d
	movq	24(%rsp), %r11
	jmp	.L10178
.L10246:
	movl	20(%rsp), %eax
	addl	%ebp, %eax
.L10173:
	movzbl	97(%rbx), %r8d
	andl	$16777215, %eax
	movl	$1, %r9d
	movl	(%rsp), %esi
	movl	%eax, %edi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r11, 24(%rsp)
	movl	%r10d, 8(%rsp)
	call	s370_logical_to_main_l
	movq	24(%rsp), %r11
	movq	%rax, %rbp
	movl	8(%rsp), %r10d
	jmp	.L10176
.L10248:
	cmpb	43192(%rbx,%rdx), %sil
	je	.L10175
	jmp	.L10173
.L10247:
	movzbl	44216(%rbx,%rdx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L10174
	jmp	.L10173
	.cfi_endproc
.LFE841:
	.size	s370_BF_x, .-s370_BF_x
	.p2align 4,,15
	.globl	s370_insert_program_mask
	.type	s370_insert_program_mask, @function
s370_insert_program_mask:
.LFB842:
	.cfi_startproc
	movzbl	3(%rdi), %eax
	addq	$4, 136(%rsi)
	sarl	$4, %eax
	movslq	%eax, %rdx
	movzbl	100(%rsi), %eax
	sall	$4, %eax
	orb	101(%rsi), %al
	movb	%al, 195(%rsi,%rdx,8)
	ret
	.cfi_endproc
.LFE842:
	.size	s370_insert_program_mask, .-s370_insert_program_mask
	.p2align 4,,15
	.globl	s370_load_register
	.type	s370_load_register, @function
s370_load_register:
.LFB843:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	addq	$2, 136(%rsi)
	movq	%rax, %rdx
	shrq	$4, %rax
	andl	$15, %edx
	andl	$15, %eax
	movl	192(%rsi,%rdx,8), %edx
	movl	%edx, 192(%rsi,%rax,8)
	ret
	.cfi_endproc
.LFE843:
	.size	s370_load_register, .-s370_load_register
	.p2align 4,,15
	.globl	s370_1800
	.type	s370_1800, @function
s370_1800:
.LFB844:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE844:
	.size	s370_1800, .-s370_1800
	.p2align 4,,15
	.globl	s370_1801
	.type	s370_1801, @function
s370_1801:
.LFB845:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE845:
	.size	s370_1801, .-s370_1801
	.p2align 4,,15
	.globl	s370_1802
	.type	s370_1802, @function
s370_1802:
.LFB846:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE846:
	.size	s370_1802, .-s370_1802
	.p2align 4,,15
	.globl	s370_1803
	.type	s370_1803, @function
s370_1803:
.LFB847:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE847:
	.size	s370_1803, .-s370_1803
	.p2align 4,,15
	.globl	s370_1804
	.type	s370_1804, @function
s370_1804:
.LFB848:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE848:
	.size	s370_1804, .-s370_1804
	.p2align 4,,15
	.globl	s370_1805
	.type	s370_1805, @function
s370_1805:
.LFB849:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE849:
	.size	s370_1805, .-s370_1805
	.p2align 4,,15
	.globl	s370_1806
	.type	s370_1806, @function
s370_1806:
.LFB850:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE850:
	.size	s370_1806, .-s370_1806
	.p2align 4,,15
	.globl	s370_1807
	.type	s370_1807, @function
s370_1807:
.LFB851:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE851:
	.size	s370_1807, .-s370_1807
	.p2align 4,,15
	.globl	s370_1808
	.type	s370_1808, @function
s370_1808:
.LFB852:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE852:
	.size	s370_1808, .-s370_1808
	.p2align 4,,15
	.globl	s370_1809
	.type	s370_1809, @function
s370_1809:
.LFB853:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE853:
	.size	s370_1809, .-s370_1809
	.p2align 4,,15
	.globl	s370_180A
	.type	s370_180A, @function
s370_180A:
.LFB854:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE854:
	.size	s370_180A, .-s370_180A
	.p2align 4,,15
	.globl	s370_180B
	.type	s370_180B, @function
s370_180B:
.LFB855:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE855:
	.size	s370_180B, .-s370_180B
	.p2align 4,,15
	.globl	s370_180C
	.type	s370_180C, @function
s370_180C:
.LFB856:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE856:
	.size	s370_180C, .-s370_180C
	.p2align 4,,15
	.globl	s370_180D
	.type	s370_180D, @function
s370_180D:
.LFB857:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE857:
	.size	s370_180D, .-s370_180D
	.p2align 4,,15
	.globl	s370_180E
	.type	s370_180E, @function
s370_180E:
.LFB858:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE858:
	.size	s370_180E, .-s370_180E
	.p2align 4,,15
	.globl	s370_180F
	.type	s370_180F, @function
s370_180F:
.LFB859:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE859:
	.size	s370_180F, .-s370_180F
	.p2align 4,,15
	.globl	s370_1810
	.type	s370_1810, @function
s370_1810:
.LFB860:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE860:
	.size	s370_1810, .-s370_1810
	.p2align 4,,15
	.globl	s370_1811
	.type	s370_1811, @function
s370_1811:
.LFB861:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE861:
	.size	s370_1811, .-s370_1811
	.p2align 4,,15
	.globl	s370_1812
	.type	s370_1812, @function
s370_1812:
.LFB862:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE862:
	.size	s370_1812, .-s370_1812
	.p2align 4,,15
	.globl	s370_1813
	.type	s370_1813, @function
s370_1813:
.LFB863:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE863:
	.size	s370_1813, .-s370_1813
	.p2align 4,,15
	.globl	s370_1814
	.type	s370_1814, @function
s370_1814:
.LFB864:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE864:
	.size	s370_1814, .-s370_1814
	.p2align 4,,15
	.globl	s370_1815
	.type	s370_1815, @function
s370_1815:
.LFB865:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE865:
	.size	s370_1815, .-s370_1815
	.p2align 4,,15
	.globl	s370_1816
	.type	s370_1816, @function
s370_1816:
.LFB866:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE866:
	.size	s370_1816, .-s370_1816
	.p2align 4,,15
	.globl	s370_1817
	.type	s370_1817, @function
s370_1817:
.LFB867:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE867:
	.size	s370_1817, .-s370_1817
	.p2align 4,,15
	.globl	s370_1818
	.type	s370_1818, @function
s370_1818:
.LFB868:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE868:
	.size	s370_1818, .-s370_1818
	.p2align 4,,15
	.globl	s370_1819
	.type	s370_1819, @function
s370_1819:
.LFB869:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE869:
	.size	s370_1819, .-s370_1819
	.p2align 4,,15
	.globl	s370_181A
	.type	s370_181A, @function
s370_181A:
.LFB870:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE870:
	.size	s370_181A, .-s370_181A
	.p2align 4,,15
	.globl	s370_181B
	.type	s370_181B, @function
s370_181B:
.LFB871:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE871:
	.size	s370_181B, .-s370_181B
	.p2align 4,,15
	.globl	s370_181C
	.type	s370_181C, @function
s370_181C:
.LFB872:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE872:
	.size	s370_181C, .-s370_181C
	.p2align 4,,15
	.globl	s370_181D
	.type	s370_181D, @function
s370_181D:
.LFB873:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE873:
	.size	s370_181D, .-s370_181D
	.p2align 4,,15
	.globl	s370_181E
	.type	s370_181E, @function
s370_181E:
.LFB874:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE874:
	.size	s370_181E, .-s370_181E
	.p2align 4,,15
	.globl	s370_181F
	.type	s370_181F, @function
s370_181F:
.LFB875:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE875:
	.size	s370_181F, .-s370_181F
	.p2align 4,,15
	.globl	s370_1820
	.type	s370_1820, @function
s370_1820:
.LFB876:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE876:
	.size	s370_1820, .-s370_1820
	.p2align 4,,15
	.globl	s370_1821
	.type	s370_1821, @function
s370_1821:
.LFB877:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE877:
	.size	s370_1821, .-s370_1821
	.p2align 4,,15
	.globl	s370_1822
	.type	s370_1822, @function
s370_1822:
.LFB878:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE878:
	.size	s370_1822, .-s370_1822
	.p2align 4,,15
	.globl	s370_1823
	.type	s370_1823, @function
s370_1823:
.LFB879:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE879:
	.size	s370_1823, .-s370_1823
	.p2align 4,,15
	.globl	s370_1824
	.type	s370_1824, @function
s370_1824:
.LFB880:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE880:
	.size	s370_1824, .-s370_1824
	.p2align 4,,15
	.globl	s370_1825
	.type	s370_1825, @function
s370_1825:
.LFB881:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE881:
	.size	s370_1825, .-s370_1825
	.p2align 4,,15
	.globl	s370_1826
	.type	s370_1826, @function
s370_1826:
.LFB882:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE882:
	.size	s370_1826, .-s370_1826
	.p2align 4,,15
	.globl	s370_1827
	.type	s370_1827, @function
s370_1827:
.LFB883:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE883:
	.size	s370_1827, .-s370_1827
	.p2align 4,,15
	.globl	s370_1828
	.type	s370_1828, @function
s370_1828:
.LFB884:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE884:
	.size	s370_1828, .-s370_1828
	.p2align 4,,15
	.globl	s370_1829
	.type	s370_1829, @function
s370_1829:
.LFB885:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE885:
	.size	s370_1829, .-s370_1829
	.p2align 4,,15
	.globl	s370_182A
	.type	s370_182A, @function
s370_182A:
.LFB886:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE886:
	.size	s370_182A, .-s370_182A
	.p2align 4,,15
	.globl	s370_182B
	.type	s370_182B, @function
s370_182B:
.LFB887:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE887:
	.size	s370_182B, .-s370_182B
	.p2align 4,,15
	.globl	s370_182C
	.type	s370_182C, @function
s370_182C:
.LFB888:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE888:
	.size	s370_182C, .-s370_182C
	.p2align 4,,15
	.globl	s370_182D
	.type	s370_182D, @function
s370_182D:
.LFB889:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE889:
	.size	s370_182D, .-s370_182D
	.p2align 4,,15
	.globl	s370_182E
	.type	s370_182E, @function
s370_182E:
.LFB890:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE890:
	.size	s370_182E, .-s370_182E
	.p2align 4,,15
	.globl	s370_182F
	.type	s370_182F, @function
s370_182F:
.LFB891:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE891:
	.size	s370_182F, .-s370_182F
	.p2align 4,,15
	.globl	s370_1830
	.type	s370_1830, @function
s370_1830:
.LFB892:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE892:
	.size	s370_1830, .-s370_1830
	.p2align 4,,15
	.globl	s370_1831
	.type	s370_1831, @function
s370_1831:
.LFB893:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE893:
	.size	s370_1831, .-s370_1831
	.p2align 4,,15
	.globl	s370_1832
	.type	s370_1832, @function
s370_1832:
.LFB894:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE894:
	.size	s370_1832, .-s370_1832
	.p2align 4,,15
	.globl	s370_1833
	.type	s370_1833, @function
s370_1833:
.LFB895:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE895:
	.size	s370_1833, .-s370_1833
	.p2align 4,,15
	.globl	s370_1834
	.type	s370_1834, @function
s370_1834:
.LFB896:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE896:
	.size	s370_1834, .-s370_1834
	.p2align 4,,15
	.globl	s370_1835
	.type	s370_1835, @function
s370_1835:
.LFB897:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE897:
	.size	s370_1835, .-s370_1835
	.p2align 4,,15
	.globl	s370_1836
	.type	s370_1836, @function
s370_1836:
.LFB898:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE898:
	.size	s370_1836, .-s370_1836
	.p2align 4,,15
	.globl	s370_1837
	.type	s370_1837, @function
s370_1837:
.LFB899:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE899:
	.size	s370_1837, .-s370_1837
	.p2align 4,,15
	.globl	s370_1838
	.type	s370_1838, @function
s370_1838:
.LFB900:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE900:
	.size	s370_1838, .-s370_1838
	.p2align 4,,15
	.globl	s370_1839
	.type	s370_1839, @function
s370_1839:
.LFB901:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE901:
	.size	s370_1839, .-s370_1839
	.p2align 4,,15
	.globl	s370_183A
	.type	s370_183A, @function
s370_183A:
.LFB902:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE902:
	.size	s370_183A, .-s370_183A
	.p2align 4,,15
	.globl	s370_183B
	.type	s370_183B, @function
s370_183B:
.LFB903:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE903:
	.size	s370_183B, .-s370_183B
	.p2align 4,,15
	.globl	s370_183C
	.type	s370_183C, @function
s370_183C:
.LFB904:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE904:
	.size	s370_183C, .-s370_183C
	.p2align 4,,15
	.globl	s370_183D
	.type	s370_183D, @function
s370_183D:
.LFB905:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE905:
	.size	s370_183D, .-s370_183D
	.p2align 4,,15
	.globl	s370_183E
	.type	s370_183E, @function
s370_183E:
.LFB906:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE906:
	.size	s370_183E, .-s370_183E
	.p2align 4,,15
	.globl	s370_183F
	.type	s370_183F, @function
s370_183F:
.LFB907:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE907:
	.size	s370_183F, .-s370_183F
	.p2align 4,,15
	.globl	s370_1840
	.type	s370_1840, @function
s370_1840:
.LFB908:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE908:
	.size	s370_1840, .-s370_1840
	.p2align 4,,15
	.globl	s370_1841
	.type	s370_1841, @function
s370_1841:
.LFB909:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE909:
	.size	s370_1841, .-s370_1841
	.p2align 4,,15
	.globl	s370_1842
	.type	s370_1842, @function
s370_1842:
.LFB910:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE910:
	.size	s370_1842, .-s370_1842
	.p2align 4,,15
	.globl	s370_1843
	.type	s370_1843, @function
s370_1843:
.LFB911:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE911:
	.size	s370_1843, .-s370_1843
	.p2align 4,,15
	.globl	s370_1844
	.type	s370_1844, @function
s370_1844:
.LFB912:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE912:
	.size	s370_1844, .-s370_1844
	.p2align 4,,15
	.globl	s370_1845
	.type	s370_1845, @function
s370_1845:
.LFB913:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE913:
	.size	s370_1845, .-s370_1845
	.p2align 4,,15
	.globl	s370_1846
	.type	s370_1846, @function
s370_1846:
.LFB914:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE914:
	.size	s370_1846, .-s370_1846
	.p2align 4,,15
	.globl	s370_1847
	.type	s370_1847, @function
s370_1847:
.LFB915:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE915:
	.size	s370_1847, .-s370_1847
	.p2align 4,,15
	.globl	s370_1848
	.type	s370_1848, @function
s370_1848:
.LFB916:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE916:
	.size	s370_1848, .-s370_1848
	.p2align 4,,15
	.globl	s370_1849
	.type	s370_1849, @function
s370_1849:
.LFB917:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE917:
	.size	s370_1849, .-s370_1849
	.p2align 4,,15
	.globl	s370_184A
	.type	s370_184A, @function
s370_184A:
.LFB918:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE918:
	.size	s370_184A, .-s370_184A
	.p2align 4,,15
	.globl	s370_184B
	.type	s370_184B, @function
s370_184B:
.LFB919:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE919:
	.size	s370_184B, .-s370_184B
	.p2align 4,,15
	.globl	s370_184C
	.type	s370_184C, @function
s370_184C:
.LFB920:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE920:
	.size	s370_184C, .-s370_184C
	.p2align 4,,15
	.globl	s370_184D
	.type	s370_184D, @function
s370_184D:
.LFB921:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE921:
	.size	s370_184D, .-s370_184D
	.p2align 4,,15
	.globl	s370_184E
	.type	s370_184E, @function
s370_184E:
.LFB922:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE922:
	.size	s370_184E, .-s370_184E
	.p2align 4,,15
	.globl	s370_184F
	.type	s370_184F, @function
s370_184F:
.LFB923:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE923:
	.size	s370_184F, .-s370_184F
	.p2align 4,,15
	.globl	s370_1850
	.type	s370_1850, @function
s370_1850:
.LFB924:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE924:
	.size	s370_1850, .-s370_1850
	.p2align 4,,15
	.globl	s370_1851
	.type	s370_1851, @function
s370_1851:
.LFB925:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE925:
	.size	s370_1851, .-s370_1851
	.p2align 4,,15
	.globl	s370_1852
	.type	s370_1852, @function
s370_1852:
.LFB926:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE926:
	.size	s370_1852, .-s370_1852
	.p2align 4,,15
	.globl	s370_1853
	.type	s370_1853, @function
s370_1853:
.LFB927:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE927:
	.size	s370_1853, .-s370_1853
	.p2align 4,,15
	.globl	s370_1854
	.type	s370_1854, @function
s370_1854:
.LFB928:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE928:
	.size	s370_1854, .-s370_1854
	.p2align 4,,15
	.globl	s370_1855
	.type	s370_1855, @function
s370_1855:
.LFB929:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE929:
	.size	s370_1855, .-s370_1855
	.p2align 4,,15
	.globl	s370_1856
	.type	s370_1856, @function
s370_1856:
.LFB930:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE930:
	.size	s370_1856, .-s370_1856
	.p2align 4,,15
	.globl	s370_1857
	.type	s370_1857, @function
s370_1857:
.LFB931:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE931:
	.size	s370_1857, .-s370_1857
	.p2align 4,,15
	.globl	s370_1858
	.type	s370_1858, @function
s370_1858:
.LFB932:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE932:
	.size	s370_1858, .-s370_1858
	.p2align 4,,15
	.globl	s370_1859
	.type	s370_1859, @function
s370_1859:
.LFB933:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE933:
	.size	s370_1859, .-s370_1859
	.p2align 4,,15
	.globl	s370_185A
	.type	s370_185A, @function
s370_185A:
.LFB934:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE934:
	.size	s370_185A, .-s370_185A
	.p2align 4,,15
	.globl	s370_185B
	.type	s370_185B, @function
s370_185B:
.LFB935:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE935:
	.size	s370_185B, .-s370_185B
	.p2align 4,,15
	.globl	s370_185C
	.type	s370_185C, @function
s370_185C:
.LFB936:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE936:
	.size	s370_185C, .-s370_185C
	.p2align 4,,15
	.globl	s370_185D
	.type	s370_185D, @function
s370_185D:
.LFB937:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE937:
	.size	s370_185D, .-s370_185D
	.p2align 4,,15
	.globl	s370_185E
	.type	s370_185E, @function
s370_185E:
.LFB938:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE938:
	.size	s370_185E, .-s370_185E
	.p2align 4,,15
	.globl	s370_185F
	.type	s370_185F, @function
s370_185F:
.LFB939:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE939:
	.size	s370_185F, .-s370_185F
	.p2align 4,,15
	.globl	s370_1860
	.type	s370_1860, @function
s370_1860:
.LFB940:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE940:
	.size	s370_1860, .-s370_1860
	.p2align 4,,15
	.globl	s370_1861
	.type	s370_1861, @function
s370_1861:
.LFB941:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE941:
	.size	s370_1861, .-s370_1861
	.p2align 4,,15
	.globl	s370_1862
	.type	s370_1862, @function
s370_1862:
.LFB942:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE942:
	.size	s370_1862, .-s370_1862
	.p2align 4,,15
	.globl	s370_1863
	.type	s370_1863, @function
s370_1863:
.LFB943:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE943:
	.size	s370_1863, .-s370_1863
	.p2align 4,,15
	.globl	s370_1864
	.type	s370_1864, @function
s370_1864:
.LFB944:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE944:
	.size	s370_1864, .-s370_1864
	.p2align 4,,15
	.globl	s370_1865
	.type	s370_1865, @function
s370_1865:
.LFB945:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE945:
	.size	s370_1865, .-s370_1865
	.p2align 4,,15
	.globl	s370_1866
	.type	s370_1866, @function
s370_1866:
.LFB946:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE946:
	.size	s370_1866, .-s370_1866
	.p2align 4,,15
	.globl	s370_1867
	.type	s370_1867, @function
s370_1867:
.LFB947:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE947:
	.size	s370_1867, .-s370_1867
	.p2align 4,,15
	.globl	s370_1868
	.type	s370_1868, @function
s370_1868:
.LFB948:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE948:
	.size	s370_1868, .-s370_1868
	.p2align 4,,15
	.globl	s370_1869
	.type	s370_1869, @function
s370_1869:
.LFB949:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE949:
	.size	s370_1869, .-s370_1869
	.p2align 4,,15
	.globl	s370_186A
	.type	s370_186A, @function
s370_186A:
.LFB950:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE950:
	.size	s370_186A, .-s370_186A
	.p2align 4,,15
	.globl	s370_186B
	.type	s370_186B, @function
s370_186B:
.LFB951:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE951:
	.size	s370_186B, .-s370_186B
	.p2align 4,,15
	.globl	s370_186C
	.type	s370_186C, @function
s370_186C:
.LFB952:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE952:
	.size	s370_186C, .-s370_186C
	.p2align 4,,15
	.globl	s370_186D
	.type	s370_186D, @function
s370_186D:
.LFB953:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE953:
	.size	s370_186D, .-s370_186D
	.p2align 4,,15
	.globl	s370_186E
	.type	s370_186E, @function
s370_186E:
.LFB954:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE954:
	.size	s370_186E, .-s370_186E
	.p2align 4,,15
	.globl	s370_186F
	.type	s370_186F, @function
s370_186F:
.LFB955:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE955:
	.size	s370_186F, .-s370_186F
	.p2align 4,,15
	.globl	s370_1870
	.type	s370_1870, @function
s370_1870:
.LFB956:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE956:
	.size	s370_1870, .-s370_1870
	.p2align 4,,15
	.globl	s370_1871
	.type	s370_1871, @function
s370_1871:
.LFB957:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE957:
	.size	s370_1871, .-s370_1871
	.p2align 4,,15
	.globl	s370_1872
	.type	s370_1872, @function
s370_1872:
.LFB958:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE958:
	.size	s370_1872, .-s370_1872
	.p2align 4,,15
	.globl	s370_1873
	.type	s370_1873, @function
s370_1873:
.LFB959:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE959:
	.size	s370_1873, .-s370_1873
	.p2align 4,,15
	.globl	s370_1874
	.type	s370_1874, @function
s370_1874:
.LFB960:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE960:
	.size	s370_1874, .-s370_1874
	.p2align 4,,15
	.globl	s370_1875
	.type	s370_1875, @function
s370_1875:
.LFB961:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE961:
	.size	s370_1875, .-s370_1875
	.p2align 4,,15
	.globl	s370_1876
	.type	s370_1876, @function
s370_1876:
.LFB962:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE962:
	.size	s370_1876, .-s370_1876
	.p2align 4,,15
	.globl	s370_1877
	.type	s370_1877, @function
s370_1877:
.LFB963:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE963:
	.size	s370_1877, .-s370_1877
	.p2align 4,,15
	.globl	s370_1878
	.type	s370_1878, @function
s370_1878:
.LFB964:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE964:
	.size	s370_1878, .-s370_1878
	.p2align 4,,15
	.globl	s370_1879
	.type	s370_1879, @function
s370_1879:
.LFB965:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE965:
	.size	s370_1879, .-s370_1879
	.p2align 4,,15
	.globl	s370_187A
	.type	s370_187A, @function
s370_187A:
.LFB966:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE966:
	.size	s370_187A, .-s370_187A
	.p2align 4,,15
	.globl	s370_187B
	.type	s370_187B, @function
s370_187B:
.LFB967:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE967:
	.size	s370_187B, .-s370_187B
	.p2align 4,,15
	.globl	s370_187C
	.type	s370_187C, @function
s370_187C:
.LFB968:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE968:
	.size	s370_187C, .-s370_187C
	.p2align 4,,15
	.globl	s370_187D
	.type	s370_187D, @function
s370_187D:
.LFB969:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE969:
	.size	s370_187D, .-s370_187D
	.p2align 4,,15
	.globl	s370_187E
	.type	s370_187E, @function
s370_187E:
.LFB970:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE970:
	.size	s370_187E, .-s370_187E
	.p2align 4,,15
	.globl	s370_187F
	.type	s370_187F, @function
s370_187F:
.LFB971:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE971:
	.size	s370_187F, .-s370_187F
	.p2align 4,,15
	.globl	s370_1880
	.type	s370_1880, @function
s370_1880:
.LFB972:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE972:
	.size	s370_1880, .-s370_1880
	.p2align 4,,15
	.globl	s370_1881
	.type	s370_1881, @function
s370_1881:
.LFB973:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE973:
	.size	s370_1881, .-s370_1881
	.p2align 4,,15
	.globl	s370_1882
	.type	s370_1882, @function
s370_1882:
.LFB974:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE974:
	.size	s370_1882, .-s370_1882
	.p2align 4,,15
	.globl	s370_1883
	.type	s370_1883, @function
s370_1883:
.LFB975:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE975:
	.size	s370_1883, .-s370_1883
	.p2align 4,,15
	.globl	s370_1884
	.type	s370_1884, @function
s370_1884:
.LFB976:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE976:
	.size	s370_1884, .-s370_1884
	.p2align 4,,15
	.globl	s370_1885
	.type	s370_1885, @function
s370_1885:
.LFB977:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE977:
	.size	s370_1885, .-s370_1885
	.p2align 4,,15
	.globl	s370_1886
	.type	s370_1886, @function
s370_1886:
.LFB978:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE978:
	.size	s370_1886, .-s370_1886
	.p2align 4,,15
	.globl	s370_1887
	.type	s370_1887, @function
s370_1887:
.LFB979:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE979:
	.size	s370_1887, .-s370_1887
	.p2align 4,,15
	.globl	s370_1888
	.type	s370_1888, @function
s370_1888:
.LFB980:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE980:
	.size	s370_1888, .-s370_1888
	.p2align 4,,15
	.globl	s370_1889
	.type	s370_1889, @function
s370_1889:
.LFB981:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE981:
	.size	s370_1889, .-s370_1889
	.p2align 4,,15
	.globl	s370_188A
	.type	s370_188A, @function
s370_188A:
.LFB982:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE982:
	.size	s370_188A, .-s370_188A
	.p2align 4,,15
	.globl	s370_188B
	.type	s370_188B, @function
s370_188B:
.LFB983:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE983:
	.size	s370_188B, .-s370_188B
	.p2align 4,,15
	.globl	s370_188C
	.type	s370_188C, @function
s370_188C:
.LFB984:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE984:
	.size	s370_188C, .-s370_188C
	.p2align 4,,15
	.globl	s370_188D
	.type	s370_188D, @function
s370_188D:
.LFB985:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE985:
	.size	s370_188D, .-s370_188D
	.p2align 4,,15
	.globl	s370_188E
	.type	s370_188E, @function
s370_188E:
.LFB986:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE986:
	.size	s370_188E, .-s370_188E
	.p2align 4,,15
	.globl	s370_188F
	.type	s370_188F, @function
s370_188F:
.LFB987:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE987:
	.size	s370_188F, .-s370_188F
	.p2align 4,,15
	.globl	s370_1890
	.type	s370_1890, @function
s370_1890:
.LFB988:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE988:
	.size	s370_1890, .-s370_1890
	.p2align 4,,15
	.globl	s370_1891
	.type	s370_1891, @function
s370_1891:
.LFB989:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE989:
	.size	s370_1891, .-s370_1891
	.p2align 4,,15
	.globl	s370_1892
	.type	s370_1892, @function
s370_1892:
.LFB990:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE990:
	.size	s370_1892, .-s370_1892
	.p2align 4,,15
	.globl	s370_1893
	.type	s370_1893, @function
s370_1893:
.LFB991:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE991:
	.size	s370_1893, .-s370_1893
	.p2align 4,,15
	.globl	s370_1894
	.type	s370_1894, @function
s370_1894:
.LFB992:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE992:
	.size	s370_1894, .-s370_1894
	.p2align 4,,15
	.globl	s370_1895
	.type	s370_1895, @function
s370_1895:
.LFB993:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE993:
	.size	s370_1895, .-s370_1895
	.p2align 4,,15
	.globl	s370_1896
	.type	s370_1896, @function
s370_1896:
.LFB994:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE994:
	.size	s370_1896, .-s370_1896
	.p2align 4,,15
	.globl	s370_1897
	.type	s370_1897, @function
s370_1897:
.LFB995:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE995:
	.size	s370_1897, .-s370_1897
	.p2align 4,,15
	.globl	s370_1898
	.type	s370_1898, @function
s370_1898:
.LFB996:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE996:
	.size	s370_1898, .-s370_1898
	.p2align 4,,15
	.globl	s370_1899
	.type	s370_1899, @function
s370_1899:
.LFB997:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE997:
	.size	s370_1899, .-s370_1899
	.p2align 4,,15
	.globl	s370_189A
	.type	s370_189A, @function
s370_189A:
.LFB998:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE998:
	.size	s370_189A, .-s370_189A
	.p2align 4,,15
	.globl	s370_189B
	.type	s370_189B, @function
s370_189B:
.LFB999:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE999:
	.size	s370_189B, .-s370_189B
	.p2align 4,,15
	.globl	s370_189C
	.type	s370_189C, @function
s370_189C:
.LFB1000:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE1000:
	.size	s370_189C, .-s370_189C
	.p2align 4,,15
	.globl	s370_189D
	.type	s370_189D, @function
s370_189D:
.LFB1001:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE1001:
	.size	s370_189D, .-s370_189D
	.p2align 4,,15
	.globl	s370_189E
	.type	s370_189E, @function
s370_189E:
.LFB1002:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE1002:
	.size	s370_189E, .-s370_189E
	.p2align 4,,15
	.globl	s370_189F
	.type	s370_189F, @function
s370_189F:
.LFB1003:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE1003:
	.size	s370_189F, .-s370_189F
	.p2align 4,,15
	.globl	s370_18A0
	.type	s370_18A0, @function
s370_18A0:
.LFB1004:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1004:
	.size	s370_18A0, .-s370_18A0
	.p2align 4,,15
	.globl	s370_18A1
	.type	s370_18A1, @function
s370_18A1:
.LFB1005:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1005:
	.size	s370_18A1, .-s370_18A1
	.p2align 4,,15
	.globl	s370_18A2
	.type	s370_18A2, @function
s370_18A2:
.LFB1006:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1006:
	.size	s370_18A2, .-s370_18A2
	.p2align 4,,15
	.globl	s370_18A3
	.type	s370_18A3, @function
s370_18A3:
.LFB1007:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1007:
	.size	s370_18A3, .-s370_18A3
	.p2align 4,,15
	.globl	s370_18A4
	.type	s370_18A4, @function
s370_18A4:
.LFB1008:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1008:
	.size	s370_18A4, .-s370_18A4
	.p2align 4,,15
	.globl	s370_18A5
	.type	s370_18A5, @function
s370_18A5:
.LFB1009:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1009:
	.size	s370_18A5, .-s370_18A5
	.p2align 4,,15
	.globl	s370_18A6
	.type	s370_18A6, @function
s370_18A6:
.LFB1010:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1010:
	.size	s370_18A6, .-s370_18A6
	.p2align 4,,15
	.globl	s370_18A7
	.type	s370_18A7, @function
s370_18A7:
.LFB1011:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1011:
	.size	s370_18A7, .-s370_18A7
	.p2align 4,,15
	.globl	s370_18A8
	.type	s370_18A8, @function
s370_18A8:
.LFB1012:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1012:
	.size	s370_18A8, .-s370_18A8
	.p2align 4,,15
	.globl	s370_18A9
	.type	s370_18A9, @function
s370_18A9:
.LFB1013:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1013:
	.size	s370_18A9, .-s370_18A9
	.p2align 4,,15
	.globl	s370_18AA
	.type	s370_18AA, @function
s370_18AA:
.LFB1014:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1014:
	.size	s370_18AA, .-s370_18AA
	.p2align 4,,15
	.globl	s370_18AB
	.type	s370_18AB, @function
s370_18AB:
.LFB1015:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1015:
	.size	s370_18AB, .-s370_18AB
	.p2align 4,,15
	.globl	s370_18AC
	.type	s370_18AC, @function
s370_18AC:
.LFB1016:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1016:
	.size	s370_18AC, .-s370_18AC
	.p2align 4,,15
	.globl	s370_18AD
	.type	s370_18AD, @function
s370_18AD:
.LFB1017:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1017:
	.size	s370_18AD, .-s370_18AD
	.p2align 4,,15
	.globl	s370_18AE
	.type	s370_18AE, @function
s370_18AE:
.LFB1018:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1018:
	.size	s370_18AE, .-s370_18AE
	.p2align 4,,15
	.globl	s370_18AF
	.type	s370_18AF, @function
s370_18AF:
.LFB1019:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE1019:
	.size	s370_18AF, .-s370_18AF
	.p2align 4,,15
	.globl	s370_18B0
	.type	s370_18B0, @function
s370_18B0:
.LFB1020:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1020:
	.size	s370_18B0, .-s370_18B0
	.p2align 4,,15
	.globl	s370_18B1
	.type	s370_18B1, @function
s370_18B1:
.LFB1021:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1021:
	.size	s370_18B1, .-s370_18B1
	.p2align 4,,15
	.globl	s370_18B2
	.type	s370_18B2, @function
s370_18B2:
.LFB1022:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1022:
	.size	s370_18B2, .-s370_18B2
	.p2align 4,,15
	.globl	s370_18B3
	.type	s370_18B3, @function
s370_18B3:
.LFB1023:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1023:
	.size	s370_18B3, .-s370_18B3
	.p2align 4,,15
	.globl	s370_18B4
	.type	s370_18B4, @function
s370_18B4:
.LFB1024:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1024:
	.size	s370_18B4, .-s370_18B4
	.p2align 4,,15
	.globl	s370_18B5
	.type	s370_18B5, @function
s370_18B5:
.LFB1025:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1025:
	.size	s370_18B5, .-s370_18B5
	.p2align 4,,15
	.globl	s370_18B6
	.type	s370_18B6, @function
s370_18B6:
.LFB1026:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1026:
	.size	s370_18B6, .-s370_18B6
	.p2align 4,,15
	.globl	s370_18B7
	.type	s370_18B7, @function
s370_18B7:
.LFB1027:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1027:
	.size	s370_18B7, .-s370_18B7
	.p2align 4,,15
	.globl	s370_18B8
	.type	s370_18B8, @function
s370_18B8:
.LFB1028:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1028:
	.size	s370_18B8, .-s370_18B8
	.p2align 4,,15
	.globl	s370_18B9
	.type	s370_18B9, @function
s370_18B9:
.LFB1029:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1029:
	.size	s370_18B9, .-s370_18B9
	.p2align 4,,15
	.globl	s370_18BA
	.type	s370_18BA, @function
s370_18BA:
.LFB1030:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1030:
	.size	s370_18BA, .-s370_18BA
	.p2align 4,,15
	.globl	s370_18BB
	.type	s370_18BB, @function
s370_18BB:
.LFB1031:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1031:
	.size	s370_18BB, .-s370_18BB
	.p2align 4,,15
	.globl	s370_18BC
	.type	s370_18BC, @function
s370_18BC:
.LFB1032:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1032:
	.size	s370_18BC, .-s370_18BC
	.p2align 4,,15
	.globl	s370_18BD
	.type	s370_18BD, @function
s370_18BD:
.LFB1033:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1033:
	.size	s370_18BD, .-s370_18BD
	.p2align 4,,15
	.globl	s370_18BE
	.type	s370_18BE, @function
s370_18BE:
.LFB1034:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1034:
	.size	s370_18BE, .-s370_18BE
	.p2align 4,,15
	.globl	s370_18BF
	.type	s370_18BF, @function
s370_18BF:
.LFB1035:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE1035:
	.size	s370_18BF, .-s370_18BF
	.p2align 4,,15
	.globl	s370_18C0
	.type	s370_18C0, @function
s370_18C0:
.LFB1036:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1036:
	.size	s370_18C0, .-s370_18C0
	.p2align 4,,15
	.globl	s370_18C1
	.type	s370_18C1, @function
s370_18C1:
.LFB1037:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1037:
	.size	s370_18C1, .-s370_18C1
	.p2align 4,,15
	.globl	s370_18C2
	.type	s370_18C2, @function
s370_18C2:
.LFB1038:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1038:
	.size	s370_18C2, .-s370_18C2
	.p2align 4,,15
	.globl	s370_18C3
	.type	s370_18C3, @function
s370_18C3:
.LFB1039:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1039:
	.size	s370_18C3, .-s370_18C3
	.p2align 4,,15
	.globl	s370_18C4
	.type	s370_18C4, @function
s370_18C4:
.LFB1040:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1040:
	.size	s370_18C4, .-s370_18C4
	.p2align 4,,15
	.globl	s370_18C5
	.type	s370_18C5, @function
s370_18C5:
.LFB1041:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1041:
	.size	s370_18C5, .-s370_18C5
	.p2align 4,,15
	.globl	s370_18C6
	.type	s370_18C6, @function
s370_18C6:
.LFB1042:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1042:
	.size	s370_18C6, .-s370_18C6
	.p2align 4,,15
	.globl	s370_18C7
	.type	s370_18C7, @function
s370_18C7:
.LFB1043:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1043:
	.size	s370_18C7, .-s370_18C7
	.p2align 4,,15
	.globl	s370_18C8
	.type	s370_18C8, @function
s370_18C8:
.LFB1044:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1044:
	.size	s370_18C8, .-s370_18C8
	.p2align 4,,15
	.globl	s370_18C9
	.type	s370_18C9, @function
s370_18C9:
.LFB1045:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1045:
	.size	s370_18C9, .-s370_18C9
	.p2align 4,,15
	.globl	s370_18CA
	.type	s370_18CA, @function
s370_18CA:
.LFB1046:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1046:
	.size	s370_18CA, .-s370_18CA
	.p2align 4,,15
	.globl	s370_18CB
	.type	s370_18CB, @function
s370_18CB:
.LFB1047:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1047:
	.size	s370_18CB, .-s370_18CB
	.p2align 4,,15
	.globl	s370_18CC
	.type	s370_18CC, @function
s370_18CC:
.LFB1048:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1048:
	.size	s370_18CC, .-s370_18CC
	.p2align 4,,15
	.globl	s370_18CD
	.type	s370_18CD, @function
s370_18CD:
.LFB1049:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1049:
	.size	s370_18CD, .-s370_18CD
	.p2align 4,,15
	.globl	s370_18CE
	.type	s370_18CE, @function
s370_18CE:
.LFB1050:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1050:
	.size	s370_18CE, .-s370_18CE
	.p2align 4,,15
	.globl	s370_18CF
	.type	s370_18CF, @function
s370_18CF:
.LFB1051:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE1051:
	.size	s370_18CF, .-s370_18CF
	.p2align 4,,15
	.globl	s370_18D0
	.type	s370_18D0, @function
s370_18D0:
.LFB1052:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1052:
	.size	s370_18D0, .-s370_18D0
	.p2align 4,,15
	.globl	s370_18D1
	.type	s370_18D1, @function
s370_18D1:
.LFB1053:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1053:
	.size	s370_18D1, .-s370_18D1
	.p2align 4,,15
	.globl	s370_18D2
	.type	s370_18D2, @function
s370_18D2:
.LFB1054:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1054:
	.size	s370_18D2, .-s370_18D2
	.p2align 4,,15
	.globl	s370_18D3
	.type	s370_18D3, @function
s370_18D3:
.LFB1055:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1055:
	.size	s370_18D3, .-s370_18D3
	.p2align 4,,15
	.globl	s370_18D4
	.type	s370_18D4, @function
s370_18D4:
.LFB1056:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1056:
	.size	s370_18D4, .-s370_18D4
	.p2align 4,,15
	.globl	s370_18D5
	.type	s370_18D5, @function
s370_18D5:
.LFB1057:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1057:
	.size	s370_18D5, .-s370_18D5
	.p2align 4,,15
	.globl	s370_18D6
	.type	s370_18D6, @function
s370_18D6:
.LFB1058:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1058:
	.size	s370_18D6, .-s370_18D6
	.p2align 4,,15
	.globl	s370_18D7
	.type	s370_18D7, @function
s370_18D7:
.LFB1059:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1059:
	.size	s370_18D7, .-s370_18D7
	.p2align 4,,15
	.globl	s370_18D8
	.type	s370_18D8, @function
s370_18D8:
.LFB1060:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1060:
	.size	s370_18D8, .-s370_18D8
	.p2align 4,,15
	.globl	s370_18D9
	.type	s370_18D9, @function
s370_18D9:
.LFB1061:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1061:
	.size	s370_18D9, .-s370_18D9
	.p2align 4,,15
	.globl	s370_18DA
	.type	s370_18DA, @function
s370_18DA:
.LFB1062:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1062:
	.size	s370_18DA, .-s370_18DA
	.p2align 4,,15
	.globl	s370_18DB
	.type	s370_18DB, @function
s370_18DB:
.LFB1063:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1063:
	.size	s370_18DB, .-s370_18DB
	.p2align 4,,15
	.globl	s370_18DC
	.type	s370_18DC, @function
s370_18DC:
.LFB1064:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1064:
	.size	s370_18DC, .-s370_18DC
	.p2align 4,,15
	.globl	s370_18DD
	.type	s370_18DD, @function
s370_18DD:
.LFB1065:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1065:
	.size	s370_18DD, .-s370_18DD
	.p2align 4,,15
	.globl	s370_18DE
	.type	s370_18DE, @function
s370_18DE:
.LFB1066:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1066:
	.size	s370_18DE, .-s370_18DE
	.p2align 4,,15
	.globl	s370_18DF
	.type	s370_18DF, @function
s370_18DF:
.LFB1067:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE1067:
	.size	s370_18DF, .-s370_18DF
	.p2align 4,,15
	.globl	s370_18E0
	.type	s370_18E0, @function
s370_18E0:
.LFB1068:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1068:
	.size	s370_18E0, .-s370_18E0
	.p2align 4,,15
	.globl	s370_18E1
	.type	s370_18E1, @function
s370_18E1:
.LFB1069:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1069:
	.size	s370_18E1, .-s370_18E1
	.p2align 4,,15
	.globl	s370_18E2
	.type	s370_18E2, @function
s370_18E2:
.LFB1070:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1070:
	.size	s370_18E2, .-s370_18E2
	.p2align 4,,15
	.globl	s370_18E3
	.type	s370_18E3, @function
s370_18E3:
.LFB1071:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1071:
	.size	s370_18E3, .-s370_18E3
	.p2align 4,,15
	.globl	s370_18E4
	.type	s370_18E4, @function
s370_18E4:
.LFB1072:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1072:
	.size	s370_18E4, .-s370_18E4
	.p2align 4,,15
	.globl	s370_18E5
	.type	s370_18E5, @function
s370_18E5:
.LFB1073:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1073:
	.size	s370_18E5, .-s370_18E5
	.p2align 4,,15
	.globl	s370_18E6
	.type	s370_18E6, @function
s370_18E6:
.LFB1074:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1074:
	.size	s370_18E6, .-s370_18E6
	.p2align 4,,15
	.globl	s370_18E7
	.type	s370_18E7, @function
s370_18E7:
.LFB1075:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1075:
	.size	s370_18E7, .-s370_18E7
	.p2align 4,,15
	.globl	s370_18E8
	.type	s370_18E8, @function
s370_18E8:
.LFB1076:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1076:
	.size	s370_18E8, .-s370_18E8
	.p2align 4,,15
	.globl	s370_18E9
	.type	s370_18E9, @function
s370_18E9:
.LFB1077:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1077:
	.size	s370_18E9, .-s370_18E9
	.p2align 4,,15
	.globl	s370_18EA
	.type	s370_18EA, @function
s370_18EA:
.LFB1078:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1078:
	.size	s370_18EA, .-s370_18EA
	.p2align 4,,15
	.globl	s370_18EB
	.type	s370_18EB, @function
s370_18EB:
.LFB1079:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1079:
	.size	s370_18EB, .-s370_18EB
	.p2align 4,,15
	.globl	s370_18EC
	.type	s370_18EC, @function
s370_18EC:
.LFB1080:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1080:
	.size	s370_18EC, .-s370_18EC
	.p2align 4,,15
	.globl	s370_18ED
	.type	s370_18ED, @function
s370_18ED:
.LFB1081:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1081:
	.size	s370_18ED, .-s370_18ED
	.p2align 4,,15
	.globl	s370_18EE
	.type	s370_18EE, @function
s370_18EE:
.LFB1082:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1082:
	.size	s370_18EE, .-s370_18EE
	.p2align 4,,15
	.globl	s370_18EF
	.type	s370_18EF, @function
s370_18EF:
.LFB1083:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE1083:
	.size	s370_18EF, .-s370_18EF
	.p2align 4,,15
	.globl	s370_18F0
	.type	s370_18F0, @function
s370_18F0:
.LFB1084:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1084:
	.size	s370_18F0, .-s370_18F0
	.p2align 4,,15
	.globl	s370_18F1
	.type	s370_18F1, @function
s370_18F1:
.LFB1085:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1085:
	.size	s370_18F1, .-s370_18F1
	.p2align 4,,15
	.globl	s370_18F2
	.type	s370_18F2, @function
s370_18F2:
.LFB1086:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1086:
	.size	s370_18F2, .-s370_18F2
	.p2align 4,,15
	.globl	s370_18F3
	.type	s370_18F3, @function
s370_18F3:
.LFB1087:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1087:
	.size	s370_18F3, .-s370_18F3
	.p2align 4,,15
	.globl	s370_18F4
	.type	s370_18F4, @function
s370_18F4:
.LFB1088:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1088:
	.size	s370_18F4, .-s370_18F4
	.p2align 4,,15
	.globl	s370_18F5
	.type	s370_18F5, @function
s370_18F5:
.LFB1089:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1089:
	.size	s370_18F5, .-s370_18F5
	.p2align 4,,15
	.globl	s370_18F6
	.type	s370_18F6, @function
s370_18F6:
.LFB1090:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1090:
	.size	s370_18F6, .-s370_18F6
	.p2align 4,,15
	.globl	s370_18F7
	.type	s370_18F7, @function
s370_18F7:
.LFB1091:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1091:
	.size	s370_18F7, .-s370_18F7
	.p2align 4,,15
	.globl	s370_18F8
	.type	s370_18F8, @function
s370_18F8:
.LFB1092:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1092:
	.size	s370_18F8, .-s370_18F8
	.p2align 4,,15
	.globl	s370_18F9
	.type	s370_18F9, @function
s370_18F9:
.LFB1093:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1093:
	.size	s370_18F9, .-s370_18F9
	.p2align 4,,15
	.globl	s370_18FA
	.type	s370_18FA, @function
s370_18FA:
.LFB1094:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1094:
	.size	s370_18FA, .-s370_18FA
	.p2align 4,,15
	.globl	s370_18FB
	.type	s370_18FB, @function
s370_18FB:
.LFB1095:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1095:
	.size	s370_18FB, .-s370_18FB
	.p2align 4,,15
	.globl	s370_18FC
	.type	s370_18FC, @function
s370_18FC:
.LFB1096:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1096:
	.size	s370_18FC, .-s370_18FC
	.p2align 4,,15
	.globl	s370_18FD
	.type	s370_18FD, @function
s370_18FD:
.LFB1097:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1097:
	.size	s370_18FD, .-s370_18FD
	.p2align 4,,15
	.globl	s370_18FE
	.type	s370_18FE, @function
s370_18FE:
.LFB1098:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE1098:
	.size	s370_18FE, .-s370_18FE
	.p2align 4,,15
	.globl	s370_18FF
	.type	s370_18FF, @function
s370_18FF:
.LFB1099:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1099:
	.size	s370_18FF, .-s370_18FF
	.p2align 4,,15
	.globl	s370_load_and_test_register
	.type	s370_load_and_test_register, @function
s370_load_and_test_register:
.LFB1100:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	addq	$2, 136(%rsi)
	movq	%rax, %rdx
	shrq	$4, %rax
	andl	$15, %edx
	andl	$15, %eax
	movl	192(%rsi,%rdx,8), %edx
	testl	%edx, %edx
	movl	%edx, 192(%rsi,%rax,8)
	js	.L10511
	cmpl	$1, %edx
	sbbl	%eax, %eax
	notl	%eax
	andl	$2, %eax
	movb	%al, 100(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L10511:
	movl	$1, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1100:
	.size	s370_load_and_test_register, .-s370_load_and_test_register
	.p2align 4,,15
	.globl	s370_load_complement_register
	.type	s370_load_complement_register, @function
s370_load_complement_register:
.LFB1101:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	movb	$2, 130(%rsi)
	movq	%rsi, %rax
	addq	$2, 136(%rsi)
	movzbl	%cl, %edx
	andl	$15, %ecx
	movl	192(%rsi,%rcx,8), %ecx
	sarl	$4, %edx
	cmpl	$-2147483648, %ecx
	je	.L10522
	negl	%ecx
	movslq	%edx, %rdx
	testl	%ecx, %ecx
	movl	%ecx, 192(%rsi,%rdx,8)
	movl	$1, %edx
	js	.L10516
	cmpl	$1, %ecx
	sbbl	%edx, %edx
	notl	%edx
	andl	$2, %edx
.L10516:
	movb	%dl, 100(%rax)
.L10513:
	rep ret
	.p2align 4,,10
	.p2align 3
.L10522:
	movslq	%edx, %rdx
	movl	%ecx, 192(%rsi,%rdx,8)
	testb	$8, 101(%rsi)
	movb	$3, 100(%rsi)
	je	.L10513
	movq	2032(%rsi), %rdx
	movq	%rax, %rdi
	movl	$8, %esi
	jmp	*%rdx
	.cfi_endproc
.LFE1101:
	.size	s370_load_complement_register, .-s370_load_complement_register
	.p2align 4,,15
	.globl	s370_load_halfword_immediate
	.type	s370_load_halfword_immediate, @function
s370_load_halfword_immediate:
.LFB1102:
	.cfi_startproc
	movl	(%rdi), %eax
	addq	$4, 136(%rsi)
	bswap	%eax
	movl	%eax, %edx
	cwtl
	shrl	$20, %edx
	andl	$15, %edx
	movl	%eax, 192(%rsi,%rdx,8)
	ret
	.cfi_endproc
.LFE1102:
	.size	s370_load_halfword_immediate, .-s370_load_halfword_immediate
	.p2align 4,,15
	.globl	s370_load_multiple
	.type	s370_load_multiple, @function
s370_load_multiple:
.LFB1103:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	movl	(%rdi), %r13d
	bswap	%r13d
	movl	%r13d, %ebp
	movl	%r13d, %eax
	shrl	$20, %ebp
	movl	%r13d, %r10d
	shrl	$16, %eax
	shrl	$12, %r10d
	andl	$15, %ebp
	andl	$15, %eax
	andl	$4095, %r13d
	andl	$15, %r10d
	je	.L10525
	movslq	%r10d, %rdx
	addl	192(%rsi,%rdx,8), %r13d
	andl	$16777215, %r13d
.L10525:
	subl	%ebp, %eax
	movl	$2048, %r14d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$15, %eax
	leal	4(,%rax,4), %r15d
	movl	%r13d, %eax
	andl	$2047, %eax
	subl	%eax, %r14d
	leal	5(%r10), %eax
	cltq
	leaq	(%rbx,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L10526
	movl	%r13d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L10600
.L10527:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L10601
.L10528:
	movl	%r13d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L10564
	testb	$4, 46264(%rbx,%rcx)
	je	.L10564
	movl	%r13d, %r12d
	xorq	26808(%rdx), %r12
.L10530:
	cmpl	%r14d, %r15d
	jg	.L10531
	movl	%r15d, %eax
	xorl	%ecx, %ecx
	sarl	$2, %eax
	.p2align 4,,10
	.p2align 3
.L10534:
	movl	(%r12,%rcx,4), %edi
	leal	0(%rbp,%rcx), %edx
	addq	$1, %rcx
	andl	$15, %edx
	cmpl	%ecx, %eax
	bswap	%edi
	movl	%edi, 192(%rbx,%rdx,8)
	jg	.L10534
.L10524:
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L10600:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L10527
.L10526:
	movzbl	97(%rbx), %r8d
.L10529:
	movl	%r10d, %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %edi
	movq	%r11, 8(%rsp)
	movl	%r10d, 4(%rsp)
	call	s370_logical_to_main_l
	movq	8(%rsp), %r11
	movq	%rax, %r12
	movl	4(%rsp), %r10d
	jmp	.L10530
.L10531:
	movl	1892(%r11), %eax
	leal	(%r14,%r13), %esi
	movl	%esi, %edi
	andl	$16777215, %edi
	testl	%eax, %eax
	je	.L10535
	leal	1(%rax), %edx
	movl	%edi, %eax
	shrl	$11, %eax
	movslq	%edx, %rdx
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movl	2232(%rcx), %r9d
	cmpl	%r9d, 320(%rbx,%rdx,8)
	jne	.L10602
.L10536:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L10603
.L10537:
	andl	$14680064, %esi
	orl	2224(%rbx), %esi
	cmpl	10424(%rcx), %esi
	jne	.L10567
	testb	$4, 46264(%rbx,%rax)
	je	.L10567
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L10539:
	testb	$3, %r14b
	jne	.L10540
	sarl	$2, %r14d
	testl	%r14d, %r14d
	je	.L10541
	xorl	%edx, %edx
.L10543:
	movl	(%r12,%rdx,4), %ecx
	leal	0(%rbp,%rdx), %esi
	addq	$1, %rdx
	andl	$15, %esi
	cmpl	%edx, %r14d
	bswap	%ecx
	movl	%ecx, 192(%rbx,%rsi,8)
	jg	.L10543
	sarl	$2, %r15d
	cmpl	%r15d, %r14d
	jge	.L10524
.L10561:
	addl	%ebp, %r14d
	addl	%r15d, %ebp
.L10545:
	movl	(%rax), %edx
	movl	%r14d, %ecx
	addl	$1, %r14d
	andl	$15, %ecx
	addq	$4, %rax
	cmpl	%ebp, %r14d
	bswap	%edx
	movl	%edx, 192(%rbx,%rcx,8)
	jne	.L10545
	jmp	.L10524
.L10601:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L10528
.L10564:
	movzbl	%sil, %r8d
	jmp	.L10529
.L10541:
	sarl	$2, %r15d
	jmp	.L10561
.L10540:
	leaq	16(%rsp), %rdx
	xorl	%ecx, %ecx
.L10547:
	movzbl	(%r12,%rcx), %esi
	addq	$1, %rcx
	addq	$1, %rdx
	cmpl	%ecx, %r14d
	movb	%sil, -1(%rdx)
	jg	.L10547
	testl	%r14d, %r14d
	movl	$1, %ecx
	cmovg	%r14d, %ecx
	cmpl	%ecx, %r15d
	jle	.L10557
	leaq	16(%rdx), %rsi
	movl	%r15d, %r8d
	subl	%ecx, %r8d
	cmpq	%rsi, %rax
	leaq	16(%rax), %rsi
	setae	%dil
	cmpq	%rsi, %rdx
	setae	%sil
	orb	%sil, %dil
	je	.L10551
	cmpl	$15, %r8d
	jbe	.L10551
	movl	%r8d, %r10d
	shrl	$4, %r10d
	movl	%r10d, %esi
	sall	$4, %esi
	testl	%esi, %esi
	je	.L10552
	xorl	%edi, %edi
	xorl	%r9d, %r9d
.L10558:
	movdqu	(%rax,%rdi), %xmm0
	addl	$1, %r9d
	movdqu	%xmm0, (%rdx,%rdi)
	addq	$16, %rdi
	cmpl	%r9d, %r10d
	ja	.L10558
	movl	%esi, %edi
	addl	%esi, %ecx
	addq	%rdi, %rdx
	addq	%rdi, %rax
	cmpl	%r8d, %esi
	je	.L10557
.L10552:
	movzbl	(%rax), %esi
	movb	%sil, (%rdx)
	leal	1(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L10557
	movzbl	1(%rax), %esi
	movb	%sil, 1(%rdx)
	leal	2(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L10557
	movzbl	2(%rax), %esi
	movb	%sil, 2(%rdx)
	leal	3(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L10557
	movzbl	3(%rax), %esi
	movb	%sil, 3(%rdx)
	leal	4(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L10557
	movzbl	4(%rax), %esi
	movb	%sil, 4(%rdx)
	leal	5(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L10557
	movzbl	5(%rax), %esi
	movb	%sil, 5(%rdx)
	leal	6(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L10557
	movzbl	6(%rax), %esi
	movb	%sil, 6(%rdx)
	leal	7(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L10557
	movzbl	7(%rax), %esi
	movb	%sil, 7(%rdx)
	leal	8(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L10557
	movzbl	8(%rax), %esi
	movb	%sil, 8(%rdx)
	leal	9(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L10557
	movzbl	9(%rax), %esi
	movb	%sil, 9(%rdx)
	leal	10(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L10557
	movzbl	10(%rax), %esi
	movb	%sil, 10(%rdx)
	leal	11(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L10557
	movzbl	11(%rax), %esi
	movb	%sil, 11(%rdx)
	leal	12(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L10557
	movzbl	12(%rax), %esi
	movb	%sil, 12(%rdx)
	leal	13(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L10557
	movzbl	13(%rax), %esi
	addl	$14, %ecx
	cmpl	%ecx, %r15d
	movb	%sil, 13(%rdx)
	jle	.L10557
	movzbl	14(%rax), %eax
	movb	%al, 14(%rdx)
.L10557:
	movl	16(%rsp), %eax
	sarl	$2, %r15d
	movslq	%ebp, %rdx
	cmpl	$1, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	20(%rsp), %eax
	leal	1(%rbp), %edx
	andl	$15, %edx
	cmpl	$2, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	24(%rsp), %eax
	leal	2(%rbp), %edx
	andl	$15, %edx
	cmpl	$3, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	28(%rsp), %eax
	leal	3(%rbp), %edx
	andl	$15, %edx
	cmpl	$4, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	32(%rsp), %eax
	leal	4(%rbp), %edx
	andl	$15, %edx
	cmpl	$5, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	36(%rsp), %eax
	leal	5(%rbp), %edx
	andl	$15, %edx
	cmpl	$6, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	40(%rsp), %eax
	leal	6(%rbp), %edx
	andl	$15, %edx
	cmpl	$7, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	44(%rsp), %eax
	leal	7(%rbp), %edx
	andl	$15, %edx
	cmpl	$8, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	48(%rsp), %eax
	leal	8(%rbp), %edx
	andl	$15, %edx
	cmpl	$9, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	52(%rsp), %eax
	leal	9(%rbp), %edx
	andl	$15, %edx
	cmpl	$10, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	56(%rsp), %eax
	leal	10(%rbp), %edx
	andl	$15, %edx
	cmpl	$11, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	60(%rsp), %eax
	leal	11(%rbp), %edx
	andl	$15, %edx
	cmpl	$12, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	64(%rsp), %eax
	leal	12(%rbp), %edx
	andl	$15, %edx
	cmpl	$13, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	68(%rsp), %eax
	leal	13(%rbp), %edx
	andl	$15, %edx
	cmpl	$14, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	72(%rsp), %eax
	leal	14(%rbp), %edx
	andl	$15, %edx
	cmpl	$15, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L10524
	movl	76(%rsp), %eax
	leal	15(%rbp), %edx
	andl	$15, %edx
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jmp	.L10524
.L10603:
	cmpb	43192(%rbx,%rax), %dl
	je	.L10537
.L10567:
	movzbl	%dl, %r8d
.L10538:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, %esi
	call	s370_logical_to_main_l
	jmp	.L10539
.L10602:
	movzbl	44216(%rbx,%rax), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L10536
.L10535:
	movzbl	97(%rbx), %r8d
	jmp	.L10538
.L10551:
	leal	-1(%r15), %esi
	movl	%esi, %edi
	subl	%ecx, %edi
	leaq	1(%rax,%rdi), %rcx
.L10560:
	addq	$1, %rax
	movzbl	-1(%rax), %esi
	addq	$1, %rdx
	cmpq	%rcx, %rax
	movb	%sil, -1(%rdx)
	jne	.L10560
	jmp	.L10557
	.cfi_endproc
.LFE1103:
	.size	s370_load_multiple, .-s370_load_multiple
	.p2align 4,,15
	.globl	s370_load_negative_register
	.type	s370_load_negative_register, @function
s370_load_negative_register:
.LFB1104:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	addq	$2, 136(%rsi)
	movzbl	%al, %edx
	andl	$15, %eax
	movl	192(%rsi,%rax,8), %eax
	sarl	$4, %edx
	movslq	%edx, %rdx
	movl	%eax, %ecx
	sarl	$31, %ecx
	xorl	%ecx, %eax
	subl	%eax, %ecx
	testl	%ecx, %ecx
	movl	%ecx, 192(%rsi,%rdx,8)
	setne	100(%rsi)
	ret
	.cfi_endproc
.LFE1104:
	.size	s370_load_negative_register, .-s370_load_negative_register
	.p2align 4,,15
	.globl	s370_load_positive_register
	.type	s370_load_positive_register, @function
s370_load_positive_register:
.LFB1105:
	.cfi_startproc
	movzbl	1(%rdi), %edx
	movb	$2, 130(%rsi)
	movq	%rsi, %rax
	addq	$2, 136(%rsi)
	movzbl	%dl, %ecx
	andl	$15, %edx
	movl	192(%rsi,%rdx,8), %edx
	sarl	$4, %ecx
	movslq	%ecx, %rcx
	cmpl	$-2147483648, %edx
	je	.L10618
	testl	%edx, %edx
	js	.L10619
	movl	%edx, 192(%rsi,%rcx,8)
	xorl	%ecx, %ecx
	testl	%edx, %edx
	jne	.L10611
	movb	%cl, 100(%rax)
.L10607:
	rep ret
	.p2align 4,,10
	.p2align 3
.L10619:
	negl	%edx
	movl	%edx, 192(%rsi,%rcx,8)
.L10611:
	movl	$2, %ecx
	movb	%cl, 100(%rax)
	jmp	.L10607
	.p2align 4,,10
	.p2align 3
.L10618:
	movl	%edx, 192(%rsi,%rcx,8)
	testb	$8, 101(%rsi)
	movb	$3, 100(%rsi)
	je	.L10607
	movq	2032(%rsi), %rdx
	movq	%rax, %rdi
	movl	$8, %esi
	jmp	*%rdx
	.cfi_endproc
.LFE1105:
	.size	s370_load_positive_register, .-s370_load_positive_register
	.p2align 4,,15
	.globl	s370_monitor_call
	.type	s370_monitor_call, @function
s370_monitor_call:
.LFB1106:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %r12d
	shrl	$12, %edx
	andl	$4095, %eax
	shrl	$16, %r12d
	andl	$15, %edx
	movl	%eax, %ebp
	je	.L10621
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	andl	$16777215, %ebp
.L10621:
	addq	$4, 136(%rbx)
	cmpb	$15, %r12b
	movb	$4, 130(%rbx)
	ja	.L10628
.L10622:
	movzwl	392(%rbx), %edx
	movl	%r12d, %ecx
	sall	%cl, %edx
	andb	$128, %dh
	jne	.L10629
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L10629:
	.cfi_restore_state
	movzbl	%r12b, %r12d
	movl	%ebp, 784(%rbx)
	movq	%rbx, %rdi
	movw	%r12w, 1008(%rbx)
	movq	2032(%rbx), %rax
	movl	$64, %esi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L10628:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L10622
	.cfi_endproc
.LFE1106:
	.size	s370_monitor_call, .-s370_monitor_call
	.p2align 4,,15
	.globl	s370_move_immediate
	.type	s370_move_immediate, @function
s370_move_immediate:
.LFB1107:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %eax
	movl	%ebp, %r12d
	shrl	$12, %eax
	shrl	$16, %r12d
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %esi
	je	.L10631
	cltq
	addl	192(%rbx,%rax,8), %ebp
	andl	$16777215, %ebp
.L10631:
	leal	5(%rsi), %eax
	movb	$4, 130(%rbx)
	movzbl	%r12b, %r12d
	addq	$4, 136(%rbx)
	cltq
	movl	1892(%rbx,%rax,4), %edx
	testl	%edx, %edx
	je	.L10632
	leal	1(%rdx), %eax
	movl	%ebp, %ecx
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L10653
.L10633:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L10654
.L10634:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L10632
	testb	$2, 46264(%rbx,%rcx)
	je	.L10632
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L10635:
	subl	$80, %ebp
	movb	%r12b, (%rax)
	cmpl	$3, %ebp
	jbe	.L10655
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
.L10653:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L10633
.L10632:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L10635
.L10654:
	cmpb	43192(%rbx,%rcx), %al
	je	.L10634
	.p2align 4,,4
	jmp	.L10632
.L10655:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE1107:
	.size	s370_move_immediate, .-s370_move_immediate
	.p2align 4,,15
	.globl	s370_move_character
	.type	s370_move_character, @function
s370_move_character:
.LFB1108:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movq	%rsi, %r12
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r13d
	movl	%eax, %r10d
	shrl	$16, %r13d
	shrl	$28, %r10d
	andl	$4095, %r13d
	testl	%r10d, %r10d
	je	.L10657
	movslq	%r10d, %rdx
	addl	192(%rsi,%rdx,8), %r13d
	andl	$16777215, %r13d
.L10657:
	movl	%eax, %r14d
	shrl	$12, %eax
	andl	$4095, %r14d
	andl	$15, %eax
	movl	%eax, 40(%rsp)
	je	.L10658
	cltq
	addl	192(%r12,%rax,8), %r14d
	andl	$16777215, %r14d
.L10658:
	movzbl	1(%rdi), %eax
	movb	$6, 130(%r12)
	addq	$6, 136(%r12)
	cmpl	$83, %r14d
	movl	%eax, 20(%rsp)
	movzbl	97(%r12), %eax
	movb	%al, 8(%rsp)
	jbe	.L10827
.L10660:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%r12,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L10661
	movl	%r14d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%r12,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%r12,%rax,8)
	jne	.L10828
.L10662:
	cmpb	$0, 8(%rsp)
	jne	.L10829
.L10663:
	movl	%r14d, %eax
	andl	$14680064, %eax
	orl	2224(%r12), %eax
	cmpl	10424(%rdx), %eax
	jne	.L10661
	testb	$4, 46264(%r12,%rcx)
	je	.L10661
	movl	%r14d, %ebp
	xorq	26808(%rdx), %rbp
.L10664:
	leal	5(%r10), %eax
	cltq
	leaq	(%r12,%rax,4), %rax
	movq	%rax, 32(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L10665
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%r12,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%r12,%rdx,8)
	jne	.L10830
.L10666:
	cmpb	$0, 8(%rsp)
	jne	.L10831
.L10667:
	movl	%r13d, %edx
	andl	$14680064, %edx
	orl	2224(%r12), %edx
	cmpl	10424(%rax), %edx
	jne	.L10665
	testb	$1, 46264(%r12,%rcx)
	je	.L10665
	movq	35000(%rax), %r11
	movl	%r13d, %ebx
	movq	%r11, 984(%r12)
	xorq	26808(%rax), %rbx
.L10668:
	movl	20(%rsp), %esi
	movl	$2047, %r15d
	movl	%r13d, %eax
	andl	$2047, %eax
	subl	%esi, %r15d
	cmpl	%r15d, %eax
	jg	.L10669
	movl	%r14d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r15d
	jl	.L10670
	movl	%esi, %eax
	addl	$1, %eax
	.p2align 4,,10
	.p2align 3
.L10671:
	testb	$7, %bl
	je	.L10832
	addq	$1, %rbp
	movzbl	-1(%rbp), %edx
	addq	$1, %rbx
	subl	$1, %eax
	movb	%dl, -1(%rbx)
	jne	.L10671
.L10673:
	orb	$6, (%r11)
.L10694:
	cmpl	$83, %r13d
	jbe	.L10833
.L10656:
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L10832:
	.cfi_restore_state
	movq	%rbx, %rdx
	subq	%rbp, %rdx
	movl	%edx, %ecx
	sarl	$31, %ecx
	xorl	%ecx, %edx
	subl	%ecx, %edx
	cmpl	$7, %edx
	jle	.L10712
	cmpl	$7, %eax
	jle	.L10712
	subl	$8, %eax
	movl	%eax, %edi
	shrl	$3, %edi
	movl	%edi, %edx
	leaq	8(,%rdx,8), %rsi
	xorl	%edx, %edx
	.p2align 4,,10
	.p2align 3
.L10713:
	movq	0(%rbp,%rdx), %rcx
	movq	%rcx, (%rbx,%rdx)
	addq	$8, %rdx
	cmpq	%rsi, %rdx
	jne	.L10713
	negl	%edi
	addq	%rdx, %rbx
	addq	%rdx, %rbp
	leal	(%rax,%rdi,8), %eax
.L10712:
	testl	%eax, %eax
	je	.L10673
	leaq	16(%rbp), %rdx
	movl	%eax, %r8d
	cmpq	%rdx, %rbx
	leaq	16(%rbx), %rdx
	setae	%cl
	cmpq	%rdx, %rbp
	setae	%dl
	orb	%dl, %cl
	je	.L10680
	cmpl	$15, %eax
	jbe	.L10680
	movl	%eax, %edi
	shrl	$4, %edi
	movl	%edi, %edx
	sall	$4, %edx
	testl	%edx, %edx
	je	.L10681
	xorl	%ecx, %ecx
	xorl	%esi, %esi
.L10686:
	movdqu	0(%rbp,%rcx), %xmm0
	addl	$1, %esi
	movdqu	%xmm0, (%rbx,%rcx)
	addq	$16, %rcx
	cmpl	%esi, %edi
	ja	.L10686
	movl	%edx, %ecx
	subl	%edx, %eax
	addq	%rcx, %rbx
	addq	%rcx, %rbp
	cmpl	%r8d, %edx
	je	.L10673
	.p2align 4,,10
	.p2align 3
.L10681:
	movzbl	0(%rbp), %edx
	cmpl	$1, %eax
	movb	%dl, (%rbx)
	je	.L10673
	movzbl	1(%rbp), %edx
	cmpl	$2, %eax
	movb	%dl, 1(%rbx)
	je	.L10673
	movzbl	2(%rbp), %edx
	cmpl	$3, %eax
	movb	%dl, 2(%rbx)
	je	.L10673
	movzbl	3(%rbp), %edx
	cmpl	$4, %eax
	movb	%dl, 3(%rbx)
	je	.L10673
	movzbl	4(%rbp), %edx
	cmpl	$5, %eax
	movb	%dl, 4(%rbx)
	je	.L10673
	movzbl	5(%rbp), %edx
	cmpl	$6, %eax
	movb	%dl, 5(%rbx)
	je	.L10673
	movzbl	6(%rbp), %edx
	cmpl	$7, %eax
	movb	%dl, 6(%rbx)
	je	.L10673
	movzbl	7(%rbp), %edx
	cmpl	$8, %eax
	movb	%dl, 7(%rbx)
	je	.L10673
	movzbl	8(%rbp), %edx
	cmpl	$9, %eax
	movb	%dl, 8(%rbx)
	je	.L10673
	movzbl	9(%rbp), %edx
	cmpl	$10, %eax
	movb	%dl, 9(%rbx)
	je	.L10673
	movzbl	10(%rbp), %edx
	cmpl	$11, %eax
	movb	%dl, 10(%rbx)
	je	.L10673
	movzbl	11(%rbp), %edx
	cmpl	$12, %eax
	movb	%dl, 11(%rbx)
	je	.L10673
	movzbl	12(%rbp), %edx
	cmpl	$13, %eax
	movb	%dl, 12(%rbx)
	je	.L10673
	movzbl	13(%rbp), %edx
	cmpl	$14, %eax
	movb	%dl, 13(%rbx)
	je	.L10673
	movzbl	14(%rbp), %eax
	movb	%al, 14(%rbx)
	jmp	.L10673
	.p2align 4,,10
	.p2align 3
.L10680:
	subl	$1, %eax
	leaq	1(%rbp,%rax), %rdx
	.p2align 4,,10
	.p2align 3
.L10688:
	addq	$1, %rbp
	movzbl	-1(%rbp), %eax
	addq	$1, %rbx
	cmpq	%rdx, %rbp
	movb	%al, -1(%rbx)
	jne	.L10688
	jmp	.L10673
.L10830:
	movzbl	44216(%r12,%rcx), %esi
	testb	%sil, 1976(%r12,%rdx)
	jne	.L10666
.L10665:
	movl	20(%rsp), %eax
	movl	%r10d, %esi
	movl	$1, %ecx
	movzbl	8(%rsp), %r8d
	movq	%r12, %rdx
	movl	%r13d, %edi
	movl	%r10d, 44(%rsp)
	leal	1(%rax), %r9d
	andl	$511, %r9d
	call	s370_logical_to_main_l
	movq	984(%r12), %r11
	movq	%rax, %rbx
	movl	44(%rsp), %r10d
	jmp	.L10668
.L10828:
	movzbl	44216(%r12,%rcx), %esi
	testb	%sil, 1976(%r12,%rax)
	jne	.L10662
.L10661:
	movzbl	8(%rsp), %r8d
	movl	$1, %r9d
	movq	%r12, %rdx
	movl	40(%rsp), %esi
	movl	$4, %ecx
	movl	%r14d, %edi
	movl	%r10d, 32(%rsp)
	call	s370_logical_to_main_l
	movl	32(%rsp), %r10d
	movq	%rax, %rbp
	jmp	.L10664
.L10827:
	movl	20(%rsp), %eax
	addl	%r14d, %eax
	cmpl	$79, %eax
	jbe	.L10660
	movq	%r12, %rdi
	movl	%r10d, 24(%rsp)
	call	s370_store_int_timer
	movl	24(%rsp), %r10d
	jmp	.L10660
.L10833:
	addl	20(%rsp), %r13d
	cmpl	$79, %r13d
	jbe	.L10656
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	movq	%r12, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
.L10831:
	.cfi_restore_state
	movzbl	8(%rsp), %esi
	cmpb	43192(%r12,%rcx), %sil
	je	.L10667
	jmp	.L10665
.L10670:
	movl	$2048, %r15d
	subl	%eax, %r15d
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L10689
	leal	(%r15,%r14), %ecx
	leal	1(%rax), %esi
	movl	%ecx, %edi
	andl	$16777215, %edi
	movslq	%esi, %rsi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%r12,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%r12,%rsi,8)
	jne	.L10834
.L10690:
	cmpb	$0, 8(%rsp)
	jne	.L10835
.L10692:
	andl	$14680064, %ecx
	orl	2224(%r12), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L10691
	testb	$4, 46264(%r12,%rax)
	je	.L10691
	movl	%edi, %r14d
	xorq	26808(%rdx), %r14
.L10693:
	movl	%r15d, %edx
	movq	%rbp, %rsi
	movq	%r11, 8(%rsp)
	movq	%rbx, %rdi
	call	concpy.isra.2
	movl	20(%rsp), %edx
	movl	%r15d, %edi
	addq	%rbx, %rdi
	movq	%r14, %rsi
	subl	%r15d, %edx
	addl	$1, %edx
	call	concpy.isra.2
	movq	8(%rsp), %r11
	jmp	.L10673
.L10669:
	movl	$2048, 44(%rsp)
	subl	%eax, 44(%rsp)
	movq	32(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L10695
	leal	1(%rax), %esi
	movl	44(%rsp), %eax
	movslq	%esi, %rsi
	leal	(%rax,%r13), %ecx
	movl	%ecx, %edi
	andl	$16777215, %edi
	movl	%edi, %edx
	shrl	$11, %edx
	andl	$1023, %edx
	leaq	(%r12,%rdx,8), %rax
	movl	2232(%rax), %r9d
	cmpl	%r9d, 320(%r12,%rsi,8)
	jne	.L10836
.L10696:
	cmpb	$0, 8(%rsp)
	jne	.L10837
.L10698:
	andl	$14680064, %ecx
	orl	2224(%r12), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L10697
	testb	$1, 46264(%r12,%rdx)
	je	.L10697
	movq	35000(%rax), %rsi
	movq	%rsi, 984(%r12)
	movq	26808(%rax), %rax
	movq	%rsi, 48(%rsp)
	movl	%edi, %esi
	movq	%rsi, 32(%rsp)
	xorq	%rax, 32(%rsp)
.L10699:
	movl	%r14d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r15d
	jl	.L10700
	movl	44(%rsp), %r15d
	movq	%rbp, %rsi
	movq	%rbx, %rdi
	movq	%r11, 8(%rsp)
	movl	%r15d, %edx
	call	concpy.isra.2
	movl	20(%rsp), %edx
	movl	%r15d, %esi
	movq	32(%rsp), %rdi
	addq	%rbp, %rsi
	subl	%r15d, %edx
	addl	$1, %edx
	call	concpy.isra.2
	movq	8(%rsp), %r11
.L10701:
	orb	$6, (%r11)
	movq	48(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L10694
.L10689:
	leal	(%r15,%r14), %edi
	andl	$16777215, %edi
.L10691:
	movzbl	8(%rsp), %r8d
	movl	$1, %r9d
	movq	%r12, %rdx
	movl	40(%rsp), %esi
	movl	$4, %ecx
	movq	%r11, 24(%rsp)
	call	s370_logical_to_main_l
	movq	24(%rsp), %r11
	movq	%rax, %r14
	jmp	.L10693
.L10835:
	movzbl	8(%rsp), %esi
	cmpb	43192(%r12,%rax), %sil
	je	.L10692
	jmp	.L10691
.L10700:
	movl	$2048, %r15d
	subl	%eax, %r15d
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L10702
	leal	(%r15,%r14), %ecx
	leal	1(%rax), %esi
	movl	%ecx, %edi
	andl	$16777215, %edi
	movslq	%esi, %rsi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%r12,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%r12,%rsi,8)
	jne	.L10838
.L10703:
	cmpb	$0, 8(%rsp)
	jne	.L10839
.L10705:
	andl	$14680064, %ecx
	orl	2224(%r12), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L10704
	testb	$4, 46264(%r12,%rax)
	je	.L10704
	movl	%edi, %r14d
	xorq	26808(%rdx), %r14
.L10706:
	cmpl	%r15d, 44(%rsp)
	movq	%r11, 8(%rsp)
	je	.L10840
	jge	.L10708
	movl	44(%rsp), %edx
	movq	%rbp, %rsi
	movq	%rbx, %rdi
	call	concpy.isra.2
	movl	44(%rsp), %eax
	movl	%r15d, %edx
	movslq	%eax, %rbx
	subl	%eax, %edx
	leaq	0(%rbp,%rbx), %rsi
	movq	32(%rsp), %rbp
	movq	%rbp, %rdi
	call	concpy.isra.2
	movl	20(%rsp), %edx
	movq	%rbp, %rdi
	movq	%r14, %rsi
	subl	%r15d, %edx
	movslq	%r15d, %r15
	subq	%rbx, %r15
	addl	$1, %edx
	addq	%r15, %rdi
	call	concpy.isra.2
	movq	8(%rsp), %r11
	jmp	.L10701
.L10695:
	movl	44(%rsp), %eax
	leal	(%rax,%r13), %edi
	andl	$16777215, %edi
.L10697:
	movzbl	8(%rsp), %r8d
	movl	$1, %r9d
	movq	%r12, %rdx
	movl	$1, %ecx
	movl	%r10d, %esi
	movq	%r11, 56(%rsp)
	call	s370_logical_to_main_l
	movq	56(%rsp), %r11
	movq	%rax, 32(%rsp)
	movq	984(%r12), %rax
	movq	%rax, 48(%rsp)
	jmp	.L10699
.L10837:
	movzbl	8(%rsp), %esi
	cmpb	43192(%r12,%rdx), %sil
	je	.L10698
	jmp	.L10697
.L10834:
	movzbl	44216(%r12,%rax), %r8d
	testb	%r8b, 1976(%r12,%rsi)
	jne	.L10690
	jmp	.L10691
.L10829:
	movzbl	8(%rsp), %eax
	cmpb	43192(%r12,%rcx), %al
	je	.L10663
	jmp	.L10661
.L10836:
	movzbl	44216(%r12,%rdx), %r8d
	testb	%r8b, 1976(%r12,%rsi)
	jne	.L10696
	jmp	.L10697
.L10708:
	movq	%rbp, %rsi
	movl	%r15d, %edx
	movq	%rbx, %rdi
	call	concpy.isra.2
	movl	44(%rsp), %edx
	movslq	%r15d, %rbp
	leaq	(%rbx,%rbp), %rdi
	movq	%r14, %rsi
	subl	%r15d, %edx
	call	concpy.isra.2
	movslq	44(%rsp), %rax
	movl	20(%rsp), %esi
	movq	32(%rsp), %rdi
	subl	%eax, %esi
	subq	%rbp, %rax
	movl	%esi, %edx
	leaq	(%r14,%rax), %rsi
	addl	$1, %edx
	call	concpy.isra.2
	movq	8(%rsp), %r11
	jmp	.L10701
.L10840:
	movl	44(%rsp), %r15d
	movq	%rbp, %rsi
	movq	%rbx, %rdi
	movl	%r15d, %edx
	call	concpy.isra.2
	movl	20(%rsp), %edx
	movq	%r14, %rsi
	movq	32(%rsp), %rdi
	subl	%r15d, %edx
	addl	$1, %edx
	call	concpy.isra.2
	movq	8(%rsp), %r11
	jmp	.L10701
.L10702:
	leal	(%r15,%r14), %edi
	andl	$16777215, %edi
.L10704:
	movzbl	8(%rsp), %r8d
	movl	$1, %r9d
	movq	%r12, %rdx
	movl	40(%rsp), %esi
	movl	$4, %ecx
	movq	%r11, 24(%rsp)
	call	s370_logical_to_main_l
	movq	24(%rsp), %r11
	movq	%rax, %r14
	jmp	.L10706
.L10839:
	movzbl	8(%rsp), %esi
	cmpb	43192(%r12,%rax), %sil
	je	.L10705
	jmp	.L10704
.L10838:
	movzbl	44216(%r12,%rax), %r8d
	testb	%r8b, 1976(%r12,%rsi)
	jne	.L10703
	jmp	.L10704
	.cfi_endproc
.LFE1108:
	.size	s370_move_character, .-s370_move_character
	.p2align 4,,15
	.globl	s370_D200
	.type	s370_D200, @function
s370_D200:
.LFB1109:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L10842
	cltq
	addl	192(%rsi,%rax,8), %ebp
	andl	$16777215, %ebp
.L10842:
	movzbl	4(%rdi), %esi
	movzbl	5(%rdi), %edx
	movl	%esi, %eax
	shrb	$4, %sil
	andl	$15, %eax
	movzbl	%sil, %esi
	sall	$8, %eax
	orl	%edx, %eax
	testl	%esi, %esi
	je	.L10843
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
	andl	$16777215, %eax
.L10843:
	leal	5(%rsi), %edx
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L10844
	movl	%eax, %edi
	addl	$1, %edx
	shrl	$11, %edi
	movslq	%edx, %rdx
	andl	$1023, %edi
	leaq	(%rbx,%rdi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L10884
.L10845:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L10885
.L10846:
	movl	%eax, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L10844
	testb	$4, 46264(%rbx,%rdi)
	je	.L10844
	movl	%eax, %r12d
	xorq	26808(%rcx), %r12
.L10847:
	leal	5(%r13), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L10848
	leal	1(%rax), %edx
	movl	%ebp, %eax
	shrl	$11, %eax
	movslq	%edx, %rdx
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movl	2232(%rcx), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L10886
.L10849:
	testb	%r8b, %r8b
	jne	.L10887
.L10850:
	movl	%ebp, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L10848
	testb	$2, 46264(%rbx,%rax)
	je	.L10848
	movl	%ebp, %eax
	xorq	26808(%rcx), %rax
.L10851:
	movzbl	(%r12), %edx
	subl	$80, %ebp
	cmpl	$3, %ebp
	movb	%dl, (%rax)
	jbe	.L10888
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L10884:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L10845
.L10844:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %edi
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r12
	jmp	.L10847
.L10886:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L10849
.L10848:
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L10851
.L10887:
	cmpb	%r8b, 43192(%rbx,%rax)
	je	.L10850
	.p2align 4,,3
	jmp	.L10848
.L10885:
	cmpb	43192(%rbx,%rdi), %r8b
	je	.L10846
	.p2align 4,,3
	jmp	.L10844
.L10888:
	popq	%rax
	.cfi_def_cfa_offset 40
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
	.cfi_endproc
.LFE1109:
	.size	s370_D200, .-s370_D200
	.p2align 4,,15
	.globl	s370_move_inverse
	.type	s370_move_inverse, @function
s370_move_inverse:
.LFB1110:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %ecx
	shrl	$16, %ebp
	shrl	$28, %ecx
	andl	$4095, %ebp
	testl	%ecx, %ecx
	movl	%ecx, (%rsp)
	je	.L10890
	movslq	%ecx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	andl	$16777215, %ebp
.L10890:
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, 4(%rsp)
	je	.L10891
	cltq
	addl	192(%rbx,%rax,8), %r12d
	andl	$16777215, %r12d
.L10891:
	movzbl	1(%rdi), %r15d
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	cmpb	$0, 2064(%rbx)
	js	.L10892
	movl	$1, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L10892:
	leal	0(%rbp,%r15), %r13d
	movl	%r13d, %eax
	xorl	%ebp, %eax
	testl	$2147481600, %eax
	movl	(%rsp), %eax
	leal	5(%rax), %r11d
	movslq	%r11d, %r11
	jne	.L10893
.L10894:
	movl	%r12d, %eax
	subl	%r15d, %eax
	movl	%eax, %r13d
	andl	$16777215, %r13d
	leal	0(%r13,%r15), %r14d
	movl	%r14d, %edx
	xorl	%r13d, %edx
	andl	$33552384, %edx
	jne	.L10905
	movl	4(%rsp), %eax
	leal	5(%rax), %r10d
	movslq	%r10d, %r10
.L10906:
	xorl	%r13d, %r13d
	.p2align 4,,10
	.p2align 3
.L10930:
	leal	-80(%r12), %eax
	cmpl	$3, %eax
	jbe	.L11005
.L10918:
	movl	1892(%rbx,%r10,4), %eax
	testl	%eax, %eax
	je	.L10919
	movl	%r12d, %esi
	addl	$1, %eax
	shrl	$11, %esi
	cltq
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L11006
.L10920:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L11007
.L10921:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L10940
	testb	$4, 46264(%rbx,%rsi)
	je	.L10940
	movl	%r12d, %eax
	movzbl	%cl, %r8d
	xorq	26808(%rdx), %rax
.L10923:
	movzbl	(%rax), %r14d
	movl	1892(%rbx,%r11,4), %eax
	testl	%eax, %eax
	je	.L10924
	movl	%ebp, %esi
	addl	$1, %eax
	shrl	$11, %esi
	cltq
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L11008
.L10925:
	testb	%r8b, %r8b
	jne	.L11009
.L10926:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L10924
	testb	$2, 46264(%rbx,%rsi)
	je	.L10924
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L10927:
	movb	%r14b, (%rax)
	leal	-80(%rbp), %eax
	cmpl	$3, %eax
	jbe	.L11010
.L10928:
	addl	$1, %ebp
	subl	$1, %r12d
	addl	$1, %r13d
	andl	$16777215, %ebp
	andl	$16777215, %r12d
	cmpl	%r15d, %r13d
	jle	.L10930
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L10893:
	.cfi_restore_state
	leaq	(%rbx,%r11,4), %r14
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L10895
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L11011
.L10896:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L11012
.L10897:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L10935
	testb	$1, 46264(%rbx,%rcx)
	je	.L10935
	movq	35000(%rdx), %rax
	movq	%rax, 984(%rbx)
.L10899:
	movl	%ebp, %edx
	movl	$2047, %eax
	andl	$2047, %edx
	subl	%r15d, %eax
	cmpl	%eax, %edx
	jg	.L11013
	cmpl	$83, %ebp
	ja	.L10894
	cmpl	$79, %r13d
	jbe	.L10894
	movq	%rbx, %rdi
	movq	%r11, 8(%rsp)
	call	s370_store_int_timer
	movq	8(%rsp), %r11
	jmp	.L10894
	.p2align 4,,10
	.p2align 3
.L10905:
	movl	4(%rsp), %ecx
	leal	5(%rcx), %r10d
	movslq	%r10d, %r10
	leaq	(%rbx,%r10,4), %rcx
	movl	1892(%rcx), %edx
	movq	%rcx, 8(%rsp)
	testl	%edx, %edx
	je	.L10910
	leal	1(%rdx), %esi
	movl	%r13d, %edx
	shrl	$11, %edx
	movslq	%esi, %rsi
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbx,%rsi,8)
	jne	.L11014
.L10909:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L11015
.L10911:
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L10937
	testb	$4, 46264(%rbx,%rdx)
	je	.L10937
.L10912:
	movl	%r13d, %edx
	movl	$2047, %eax
	andl	$2047, %edx
	subl	%r15d, %eax
	cmpl	%eax, %edx
	jg	.L11016
	cmpl	$83, %r13d
	ja	.L10906
	cmpl	$79, %r14d
	jbe	.L10906
	movq	%rbx, %rdi
	movq	%r11, 16(%rsp)
	movq	%r10, 8(%rsp)
	call	s370_store_int_timer
	movq	16(%rsp), %r11
	movq	8(%rsp), %r10
	jmp	.L10906
	.p2align 4,,10
	.p2align 3
.L11008:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L10925
.L10924:
	movl	(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r11, 16(%rsp)
	movq	%r10, 8(%rsp)
	call	s370_logical_to_main_l
	movq	16(%rsp), %r11
	movq	8(%rsp), %r10
	jmp	.L10927
.L11007:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L10921
.L10940:
	movzbl	%cl, %r8d
.L10922:
	movl	4(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movq	%r11, 16(%rsp)
	movq	%r10, 8(%rsp)
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	16(%rsp), %r11
	movq	8(%rsp), %r10
	jmp	.L10923
.L11009:
	cmpb	43192(%rbx,%rsi), %r8b
	je	.L10926
	jmp	.L10924
	.p2align 4,,10
	.p2align 3
.L11006:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rax)
	jne	.L10920
.L10919:
	movzbl	97(%rbx), %r8d
	jmp	.L10922
.L11005:
	movq	%rbx, %rdi
	movq	%r11, 16(%rsp)
	movq	%r10, 8(%rsp)
	call	s370_store_int_timer
	movq	16(%rsp), %r11
	movq	8(%rsp), %r10
	jmp	.L10918
.L11010:
	movq	%rbx, %rdi
	movq	%r11, 16(%rsp)
	movq	%r10, 8(%rsp)
	call	s370_fetch_int_timer
	movq	16(%rsp), %r11
	movq	8(%rsp), %r10
	jmp	.L10928
.L11011:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L10896
.L10895:
	movzbl	97(%rbx), %r8d
.L10898:
	movl	(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r11, 8(%rsp)
	call	s370_logical_to_main_l
	movq	8(%rsp), %r11
	jmp	.L10899
.L11012:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L10897
.L10935:
	movzbl	%sil, %r8d
	jmp	.L10898
.L11013:
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L10901
	leal	1(%rax), %ecx
	movl	%r13d, %eax
	sall	$11, %eax
	movslq	%ecx, %rcx
	shrl	$22, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L11017
.L10902:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L11018
.L10903:
	andl	$14680064, %r13d
	orl	2224(%rbx), %r13d
	cmpl	10424(%rdx), %r13d
	jne	.L10901
	testb	$1, 46264(%rbx,%rax)
	je	.L10901
	movq	35000(%rdx), %rax
	movq	%rax, 984(%rbx)
	jmp	.L10894
.L11018:
	cmpb	43192(%rbx,%rax), %cl
	je	.L10903
.L10901:
	movl	(%rsp), %esi
	movq	%rbx, %r8
	movl	$1, %ecx
	movl	%r15d, %edx
	movl	%ebp, %edi
	movq	%r11, 8(%rsp)
	call	s370_validate_operand.part.11
	movq	8(%rsp), %r11
	jmp	.L10894
.L11017:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L10902
	jmp	.L10901
.L11014:
	movzbl	44216(%rbx,%rdx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L10909
.L10910:
	movzbl	97(%rbx), %r8d
.L10908:
	movl	4(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %edi
	movq	%r11, 24(%rsp)
	movq	%r10, 16(%rsp)
	call	s370_logical_to_main_l
	movq	24(%rsp), %r11
	movq	16(%rsp), %r10
	jmp	.L10912
.L11015:
	cmpb	43192(%rbx,%rdx), %sil
	je	.L10911
.L10937:
	movzbl	%sil, %r8d
	jmp	.L10908
.L11016:
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L10914
	leal	1(%rax), %ecx
	movl	%r14d, %eax
	sall	$11, %eax
	movslq	%ecx, %rcx
	shrl	$22, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L11019
.L10915:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L11020
.L10916:
	andl	$14680064, %r14d
	orl	2224(%rbx), %r14d
	cmpl	10424(%rdx), %r14d
	jne	.L10914
	testb	$4, 46264(%rbx,%rax)
	jne	.L10906
.L10914:
	movl	4(%rsp), %esi
	movq	%rbx, %r8
	movl	$4, %ecx
	movl	%r15d, %edx
	movl	%r13d, %edi
	movq	%r11, 16(%rsp)
	movq	%r10, 8(%rsp)
	call	s370_validate_operand.part.11
	movq	8(%rsp), %r10
	movq	16(%rsp), %r11
	jmp	.L10906
.L11020:
	cmpb	43192(%rbx,%rax), %cl
	je	.L10916
	jmp	.L10914
.L11019:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L10915
	jmp	.L10914
	.cfi_endproc
.LFE1110:
	.size	s370_move_inverse, .-s370_move_inverse
	.p2align 4,,15
	.globl	s370_move_long
	.type	s370_move_long, @function
s370_move_long:
.LFB1111:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	movzbl	1(%rdi), %eax
	movb	$2, 130(%rbx)
	addq	$2, 136(%rbx)
	movzbl	%al, %esi
	movl	%eax, %ebp
	movl	%esi, 40(%rsp)
	andl	$15, %ebp
	sarl	$4, 40(%rsp)
	movzbl	%bpl, %esi
	movl	%esi, 52(%rsp)
	testb	$1, 40(%rsp)
	jne	.L11022
	testb	$1, %al
	jne	.L11022
.L11023:
	movl	40(%rsp), %esi
	movzbl	%bpl, %ebp
	movslq	%esi, %rcx
	addl	$1, %esi
	leaq	(%rbx,%rcx,8), %rax
	movslq	%esi, %rsi
	movq	%rax, (%rsp)
	movl	192(%rax), %r11d
	leaq	(%rbx,%rbp,8), %rax
	movq	%rax, 8(%rsp)
	movl	192(%rax), %edx
	movl	52(%rsp), %eax
	movq	%rsi, 24(%rsp)
	movl	%r11d, %r12d
	movl	%edx, %ebp
	andl	$16777215, %r12d
	addl	$1, %eax
	andl	$16777215, %ebp
	cltq
	movq	%rax, 16(%rsp)
	addq	$24, %rax
	movzbl	3(%rbx,%rax,8), %edi
	movl	(%rbx,%rax,8), %r15d
	movb	%dil, 48(%rsp)
	movl	192(%rbx,%rsi,8), %esi
	andl	$16777215, %r15d
	movl	%r15d, %r14d
	movl	%esi, 44(%rsp)
	andl	$16777215, 44(%rsp)
	cmpl	$83, %ebp
	movslq	44(%rsp), %r13
	jbe	.L11257
.L11025:
	cmpl	$1, 44(%rsp)
	jle	.L11026
	cmpl	$1, %r15d
	jle	.L11026
	cmpb	$64, 99(%rbx)
	je	.L11258
.L11027:
	movl	44(%rsp), %eax
	cmpl	%eax, %r15d
	cmovle	%r15d, %eax
	leal	-1(%rbp,%rax), %eax
	andl	$16777215, %eax
	cmpl	%eax, %ebp
	jb	.L11259
	cmpl	%eax, %r12d
	jbe	.L11032
.L11256:
	cmpl	%ebp, %r12d
	jbe	.L11030
.L11032:
	movq	(%rsp), %rax
	movl	%r12d, 192(%rax)
	movq	8(%rsp), %rax
	movl	%ebp, 192(%rax)
	movb	$3, 100(%rbx)
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L11022:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L11023
	.p2align 4,,10
	.p2align 3
.L11026:
	movq	$0, 32(%rsp)
	movl	44(%rsp), %ecx
	xorl	%r10d, %r10d
	testl	%ecx, %ecx
	jne	.L11260
.L11036:
	cmpl	%r15d, 44(%rsp)
	movl	$1, %eax
	jge	.L11261
.L11045:
	movb	%al, 100(%rbx)
	movq	(%rsp), %rax
	movl	%r12d, 192(%rax)
	movq	8(%rsp), %rax
	movl	%ebp, 192(%rax)
	movl	44(%rsp), %eax
	testl	%eax, %eax
	je	.L11105
	movzbl	48(%rsp), %eax
	movzbl	%al, %esi
	movl	%esi, 48(%rsp)
	movq	%rax, %rsi
	movabsq	$72340172838076673, %rax
	imulq	%rsi, %rax
	testl	%r14d, %r14d
	movq	%rax, 56(%rsp)
	jne	.L11047
	.p2align 4,,10
	.p2align 3
.L11267:
	movl	$2048, %edx
	movl	%r12d, %eax
	movl	%edx, %ecx
	andl	$2047, %eax
	subl	%r13d, %ecx
	cmpl	%ecx, %eax
	jg	.L11262
	xorl	%r8d, %r8d
	xorl	%r15d, %r15d
.L11048:
	movslq	%r13d, %rdx
	movq	%r10, %rdi
	cmpq	$8, %rdx
	jae	.L11263
.L11049:
	andl	$7, %edx
	je	.L11051
	xorl	%eax, %eax
.L11052:
	movzbl	48(%rsp), %esi
	movb	%sil, (%rdi,%rax)
	addq	$1, %rax
	cmpq	%rdx, %rax
	jb	.L11052
.L11051:
	leal	0(%r13,%r12), %r11d
	xorl	%ecx, %ecx
	movl	%r11d, %r12d
	andl	$16777215, %r12d
.L11054:
	movq	(%rsp), %rax
	movl	%r12d, 192(%rax)
	movq	8(%rsp), %rax
	movl	%ebp, 192(%rax)
	movq	24(%rsp), %rax
	leaq	24(%rax), %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%r8d, %eax
	movl	%eax, (%rbx,%rdx,8)
	movq	16(%rsp), %rax
	leaq	24(%rax), %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%ecx, %eax
	cmpl	$256, %r15d
	movl	%eax, (%rbx,%rdx,8)
	jle	.L11072
	movl	52(%rbx), %eax
	andl	56(%rbx), %eax
	testl	$1073807344, %eax
	jne	.L11264
.L11073:
	testl	%r14d, %r14d
	je	.L11077
	testl	$2047, %ebp
	je	.L11078
	movslq	%r13d, %rax
	addq	%rax, 32(%rsp)
.L11077:
	addq	%r13, %r10
	testl	$2047, %r11d
	jne	.L11084
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L11085
	leal	1(%rax), %ecx
	movl	%r12d, %edx
	shrl	$11, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L11265
.L11086:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L11266
.L11087:
	andl	$14680064, %r11d
	orl	2224(%rbx), %r11d
	cmpl	10424(%rax), %r11d
	jne	.L11116
	testb	$2, 46264(%rbx,%rdx)
	je	.L11116
	movl	%r12d, %r10d
	xorq	26808(%rax), %r10
.L11084:
	testl	%r15d, %r15d
	je	.L11046
	testl	%r14d, %r14d
	movslq	%r15d, %r13
	je	.L11267
.L11047:
	movl	$2048, %eax
	movl	%r12d, %edx
	movl	%eax, %ecx
	andl	$2047, %edx
	subl	%r13d, %ecx
	cmpl	%ecx, %edx
	jg	.L11268
	movl	%r13d, %eax
.L11055:
	movl	$2048, %esi
	movl	%ebp, %edx
	movl	%esi, %ecx
	andl	$2047, %edx
	subl	%r14d, %ecx
	cmpl	%ecx, %edx
	jg	.L11269
	movl	%r14d, %esi
.L11056:
	cmpl	%eax, %esi
	cmovg	%eax, %esi
	testl	%esi, %esi
	je	.L11093
	testb	$7, %r10b
	movl	%esi, %ecx
	movq	32(%rsp), %rdx
	movq	%r10, %rax
	jne	.L11059
	jmp	.L11058
	.p2align 4,,10
	.p2align 3
.L11270:
	testb	$7, %al
	je	.L11058
.L11059:
	addq	$1, %rdx
	movzbl	-1(%rdx), %edi
	addq	$1, %rax
	subl	$1, %ecx
	movb	%dil, -1(%rax)
	jne	.L11270
.L11093:
	movl	%r13d, %r15d
	subl	%esi, %r14d
	addl	%esi, %ebp
	subl	%esi, %r15d
	movl	%r14d, %ecx
	andl	$16777215, %ebp
	leal	(%rsi,%r12), %r11d
	movl	%r15d, %r8d
	andl	$16777215, %ecx
	movl	%r11d, %r12d
	andl	$16777215, %r8d
	movslq	%esi, %r13
	andl	$16777215, %r12d
	jmp	.L11054
	.p2align 4,,10
	.p2align 3
.L11072:
	testl	%r15d, %r15d
	jne	.L11073
.L11046:
	cmpl	$83, %r12d
	jbe	.L11271
.L11091:
	testl	%r15d, %r15d
	jne	.L11272
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L11058:
	.cfi_restore_state
	movq	%rax, %rdi
	subq	%rdx, %rdi
	movl	%edi, %r8d
	sarl	$31, %r8d
	xorl	%r8d, %edi
	subl	%r8d, %edi
	cmpl	$7, %edi
	jle	.L11094
	cmpl	$7, %ecx
	jle	.L11094
	subl	$8, %ecx
	movl	%ecx, %r9d
	shrl	$3, %r9d
	movl	%r9d, %edi
	leaq	8(,%rdi,8), %r8
	xorl	%edi, %edi
	.p2align 4,,10
	.p2align 3
.L11095:
	movq	(%rdx,%rdi), %r11
	movq	%r11, (%rax,%rdi)
	addq	$8, %rdi
	cmpq	%r8, %rdi
	jne	.L11095
	negl	%r9d
	addq	%rdi, %rax
	addq	%rdi, %rdx
	leal	(%rcx,%r9,8), %ecx
.L11094:
	testl	%ecx, %ecx
	je	.L11093
	leaq	16(%rdx), %rdi
	cmpq	%rdi, %rax
	leaq	16(%rax), %rdi
	setae	%r8b
	cmpq	%rdi, %rdx
	setae	%dil
	orb	%dil, %r8b
	je	.L11064
	cmpl	$15, %ecx
	jbe	.L11064
	movl	%ecx, %r11d
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	shrl	$4, %r11d
	movl	%r11d, %edi
	sall	$4, %edi
.L11069:
	movdqu	(%rdx,%r8), %xmm0
	addl	$1, %r9d
	movdqu	%xmm0, (%rax,%r8)
	addq	$16, %r8
	cmpl	%r9d, %r11d
	ja	.L11069
	movl	%edi, %r8d
	addq	%r8, %rax
	addq	%r8, %rdx
	movl	%ecx, %r8d
	subl	%edi, %r8d
	cmpl	%ecx, %edi
	je	.L11093
	movzbl	(%rdx), %ecx
	cmpl	$1, %r8d
	movb	%cl, (%rax)
	je	.L11093
	movzbl	1(%rdx), %ecx
	cmpl	$2, %r8d
	movb	%cl, 1(%rax)
	je	.L11093
	movzbl	2(%rdx), %ecx
	cmpl	$3, %r8d
	movb	%cl, 2(%rax)
	je	.L11093
	movzbl	3(%rdx), %ecx
	cmpl	$4, %r8d
	movb	%cl, 3(%rax)
	je	.L11093
	movzbl	4(%rdx), %ecx
	cmpl	$5, %r8d
	movb	%cl, 4(%rax)
	je	.L11093
	movzbl	5(%rdx), %ecx
	cmpl	$6, %r8d
	movb	%cl, 5(%rax)
	je	.L11093
	movzbl	6(%rdx), %ecx
	cmpl	$7, %r8d
	movb	%cl, 6(%rax)
	je	.L11093
	movzbl	7(%rdx), %ecx
	cmpl	$8, %r8d
	movb	%cl, 7(%rax)
	je	.L11093
	movzbl	8(%rdx), %ecx
	cmpl	$9, %r8d
	movb	%cl, 8(%rax)
	je	.L11093
	movzbl	9(%rdx), %ecx
	cmpl	$10, %r8d
	movb	%cl, 9(%rax)
	je	.L11093
	movzbl	10(%rdx), %ecx
	cmpl	$11, %r8d
	movb	%cl, 10(%rax)
	je	.L11093
	movzbl	11(%rdx), %ecx
	cmpl	$12, %r8d
	movb	%cl, 11(%rax)
	je	.L11093
	movzbl	12(%rdx), %ecx
	cmpl	$13, %r8d
	movb	%cl, 12(%rax)
	je	.L11093
	movzbl	13(%rdx), %ecx
	cmpl	$14, %r8d
	movb	%cl, 13(%rax)
	je	.L11093
	movzbl	14(%rdx), %edx
	movb	%dl, 14(%rax)
	jmp	.L11093
	.p2align 4,,10
	.p2align 3
.L11263:
	cmpq	$511, %rdx
	ja	.L11273
	movq	56(%rsp), %rax
	movq	%rdx, %rcx
	movq	%r10, %rdi
	shrq	$3, %rcx
	rep stosq
	jmp	.L11049
	.p2align 4,,10
	.p2align 3
.L11078:
	movl	52(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L11079
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$11, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L11274
.L11080:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L11275
.L11081:
	movl	%ebp, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L11113
	testb	$4, 46264(%rbx,%rcx)
	je	.L11113
	movq	26808(%rax), %rax
	movl	%ebp, %esi
	movq	%rsi, 32(%rsp)
	xorq	%rax, 32(%rsp)
	jmp	.L11077
	.p2align 4,,10
	.p2align 3
.L11064:
	subl	$1, %ecx
	leaq	1(%rdx,%rcx), %rdi
	.p2align 4,,10
	.p2align 3
.L11071:
	addq	$1, %rdx
	movzbl	-1(%rdx), %ecx
	addq	$1, %rax
	cmpq	%rdi, %rdx
	movb	%cl, -1(%rax)
	jne	.L11071
	jmp	.L11093
.L11261:
	setg	%al
	addl	%eax, %eax
	jmp	.L11045
.L11264:
	movl	168(%rbx), %esi
	movl	136(%rbx), %eax
	movq	144(%rbx), %rcx
	movzbl	808(%rbx), %edx
	addl	%esi, %eax
	subl	%ecx, %eax
	testb	$1, %dl
	jne	.L11074
	movzbl	130(%rbx), %edx
.L11075:
	subl	%edx, %eax
	movl	%eax, %edx
	andl	$16777215, %edx
	cmpq	$0, 160(%rbx)
	movl	%edx, 112(%rbx)
	je	.L11046
	movl	%eax, %edx
	andl	$16775169, %edx
	cmpl	%edx, %esi
	jne	.L11076
	andl	$2047, %eax
	orq	%rcx, %rax
	movq	%rax, 136(%rbx)
	jmp	.L11046
.L11273:
	movl	48(%rsp), %esi
	movl	%r8d, 72(%rsp)
	movq	%r10, 64(%rsp)
	call	memset
	movq	64(%rsp), %r10
	movl	72(%rsp), %r8d
	jmp	.L11051
.L11259:
	cmpl	%eax, %r12d
	jbe	.L11256
.L11030:
	movl	52(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L11038
	leal	1(%rax), %esi
	movl	%ebp, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rsi,8)
	jne	.L11276
.L11039:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L11277
.L11040:
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L11041
	testb	$4, 46264(%rbx,%rcx)
	je	.L11041
	movq	26808(%rax), %rax
	movl	%ebp, %esi
	movq	%rsi, 32(%rsp)
	xorq	%rax, 32(%rsp)
.L11037:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L11042
	leal	1(%rax), %edx
	movl	%r12d, %ecx
	shrl	$11, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L11278
.L11043:
	testb	%r8b, %r8b
	jne	.L11279
.L11044:
	movl	%r11d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L11042
	testb	$2, 46264(%rbx,%rcx)
	je	.L11042
	movl	%r12d, %r10d
	xorq	26808(%rax), %r10
	movl	$1, %eax
	cmpl	%r15d, 44(%rsp)
	jl	.L11045
	jmp	.L11261
.L11258:
	movl	40(%rsp), %r8d
	xorl	%esi, %esi
	testl	%r8d, %r8d
	je	.L11028
	movl	584(%rbx,%rcx,4), %esi
.L11028:
	movl	52(%rsp), %edi
	xorl	%eax, %eax
	testl	%edi, %edi
	je	.L11029
	movslq	52(%rsp), %rax
	movl	584(%rbx,%rax,4), %eax
.L11029:
	cmpl	%eax, %esi
	jne	.L11030
	jmp	.L11027
.L11260:
	testl	%r15d, %r15d
	jne	.L11030
	movzbl	97(%rbx), %r8d
	.p2align 4,,3
	jmp	.L11037
.L11105:
	xorl	%r15d, %r15d
	jmp	.L11046
.L11275:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L11081
.L11113:
	movzbl	%sil, %r8d
.L11082:
	movl	52(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r10, 72(%rsp)
	movl	%r11d, 64(%rsp)
	call	s370_logical_to_main_l
	movq	72(%rsp), %r10
	movq	%rax, 32(%rsp)
	movl	64(%rsp), %r11d
	jmp	.L11077
.L11271:
	addl	44(%rsp), %r12d
	cmpl	$79, %r12d
	jbe	.L11091
	movq	%rbx, %rdi
	call	s370_fetch_int_timer
	jmp	.L11091
.L11262:
	subl	%eax, %edx
	subl	%edx, %r13d
	movl	%r13d, %r8d
	movl	%r13d, %r15d
	movslq	%edx, %r13
	andl	$16777215, %r8d
	jmp	.L11048
.L11257:
	leal	(%r15,%rbp), %eax
	cmpl	$79, %eax
	jbe	.L11025
	movq	%rbx, %rdi
	movq	%rcx, 64(%rsp)
	movl	%edx, 56(%rsp)
	movl	%r11d, 32(%rsp)
	call	s370_store_int_timer
	movq	64(%rsp), %rcx
	movl	56(%rsp), %edx
	movl	32(%rsp), %r11d
	jmp	.L11025
.L11274:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L11080
.L11079:
	movzbl	97(%rbx), %r8d
	jmp	.L11082
.L11269:
	subl	%edx, %esi
	jmp	.L11056
.L11278:
	movzbl	1976(%rbx,%rdx), %edx
	testb	%dl, 44216(%rbx,%rcx)
	jne	.L11043
.L11042:
	movl	44(%rsp), %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	40(%rsp), %esi
	movl	%r12d, %edi
	andl	$16777215, %r9d
	call	s370_logical_to_main_l
	movq	%rax, %r10
	jmp	.L11036
.L11279:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L11044
	jmp	.L11042
.L11266:
	cmpb	43192(%rbx,%rdx), %cl
	je	.L11087
.L11116:
	movzbl	%cl, %r8d
.L11088:
	movl	40(%rsp), %esi
	movslq	%r15d, %r9
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	movq	%rax, %r10
	jmp	.L11084
.L11276:
	movzbl	1976(%rbx,%rsi), %esi
	testb	%sil, 44216(%rbx,%rcx)
	jne	.L11039
.L11038:
	movzbl	97(%rbx), %r8d
.L11041:
	movl	52(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r11d, 56(%rsp)
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, 32(%rsp)
	movl	56(%rsp), %r11d
	jmp	.L11037
.L11076:
	movq	$0, 160(%rbx)
	jmp	.L11046
.L11268:
	subl	%edx, %eax
	jmp	.L11055
.L11272:
	leaq	1232(%rbx), %rdi
	movl	$-1, %esi
	call	longjmp
.L11265:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L11086
.L11085:
	movzbl	97(%rbx), %r8d
	jmp	.L11088
.L11277:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L11040
	jmp	.L11041
.L11074:
	andl	$2, %edx
	cmpb	$1, %dl
	sbbl	%edx, %edx
	andl	$-2, %edx
	addl	$6, %edx
	jmp	.L11075
	.cfi_endproc
.LFE1111:
	.size	s370_move_long, .-s370_move_long
	.p2align 4,,15
	.globl	s370_move_long_extended
	.type	s370_move_long_extended, @function
s370_move_long_extended:
.LFB1112:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %esi
	movl	%edx, %ecx
	shrl	$16, %esi
	shrl	$20, %ecx
	movl	%esi, %edi
	movl	%ecx, %eax
	andl	$15, %edi
	andl	$15, %eax
	movl	%edi, 4(%rsp)
	movl	%edx, %edi
	andl	$4095, %edx
	shrl	$12, %edi
	movl	%edx, 12(%rsp)
	andl	$15, %edi
	je	.L11281
	movslq	%edi, %rdi
	movl	192(%rbx,%rdi,8), %edx
	addl	%edx, 12(%rsp)
	andl	$16777215, 12(%rsp)
.L11281:
	orl	%esi, %ecx
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$1, %ecx
	je	.L11282
	movl	$6, %esi
	movq	%rbx, %rdi
	movl	%eax, (%rsp)
	call	*2032(%rbx)
	movl	(%rsp), %eax
.L11282:
	movl	4(%rsp), %r9d
	movslq	%eax, %rdx
	movl	$4096, %r14d
	leaq	(%rbx,%rdx,8), %rdi
	movl	192(%rdi), %edx
	movq	%rdi, 16(%rsp)
	movslq	%r9d, %rcx
	leaq	(%rbx,%rcx,8), %rdi
	leal	1(%rax), %ecx
	movl	192(%rdi), %r11d
	movq	%rdi, 40(%rsp)
	movslq	%ecx, %rcx
	leaq	(%rbx,%rcx,8), %rsi
	leal	1(%r9), %ecx
	movq	%rsi, 32(%rsp)
	movl	192(%rsi), %ebp
	movslq	%ecx, %rcx
	movl	%edx, %esi
	leaq	(%rbx,%rcx,8), %rcx
	andl	$4095, %esi
	movq	%rcx, 24(%rsp)
	movl	192(%rcx), %r13d
	movl	%r11d, %ecx
	andl	$4095, %ecx
	cmpl	%ecx, %esi
	jbe	.L11283
	subl	%esi, %r14d
.L11284:
	cmpl	%r13d, %ebp
	movl	$1, %r12d
	jb	.L11285
	cmpl	%ebp, %r13d
	sbbl	%r12d, %r12d
	andl	$2, %r12d
.L11285:
	testl	%ebp, %ebp
	je	.L11423
	leal	5(%rax), %ecx
	movl	%edx, %edi
	movl	%ebp, %r15d
	movslq	%ecx, %rcx
	andl	$16777215, %edi
	movl	1892(%rbx,%rcx,4), %ecx
	movl	%edi, %esi
	movl	%edi, (%rsp)
	testl	%ecx, %ecx
	je	.L11288
	leal	1(%rcx), %edi
	shrl	$11, %esi
	andl	$1023, %esi
	movslq	%edi, %rdi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r8d
	cmpl	%r8d, 320(%rbx,%rdi,8)
	jne	.L11424
.L11289:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L11425
.L11290:
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L11288
	testb	$2, 46264(%rbx,%rsi)
	je	.L11288
	movl	(%rsp), %r10d
	xorq	26808(%rcx), %r10
.L11291:
	movl	%r11d, %eax
	andl	$16777215, %eax
	cmpq	%r15, %r14
	cmovbe	%r14, %r15
	movl	%eax, 8(%rsp)
	movl	%r13d, %eax
	cmpq	%rax, %r14
	cmovbe	%r14, %rax
	cmpq	%r15, %rax
	movq	%rax, %r14
	movq	%rax, 48(%rsp)
	cmova	%r15, %r14
	testq	%r14, %r14
	je	.L11292
	movl	4(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L11293
	leal	1(%rax), %ecx
	movl	8(%rsp), %eax
	movslq	%ecx, %rcx
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L11426
.L11294:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L11427
.L11295:
	andl	$14680064, %r11d
	orl	2224(%rbx), %r11d
	cmpl	10424(%rdx), %r11d
	jne	.L11293
	testb	$4, 46264(%rbx,%rax)
	je	.L11293
	movl	8(%rsp), %eax
	xorq	26808(%rdx), %rax
.L11296:
	movl	%r14d, %ecx
	movq	%r10, %rdx
	.p2align 4,,10
	.p2align 3
.L11297:
	testb	$7, %dl
	je	.L11428
	addq	$1, %rax
	movzbl	-1(%rax), %esi
	addq	$1, %rdx
	subl	$1, %ecx
	movb	%sil, -1(%rdx)
	jne	.L11297
.L11302:
	addl	%r14d, 8(%rsp)
	subl	%r14d, %r13d
	subl	%r14d, %ebp
	addl	%r14d, (%rsp)
	addq	%r14, %r10
	subq	%r14, %r15
	subq	%r14, 48(%rsp)
.L11292:
	testq	%r15, %r15
	jne	.L11429
.L11314:
	movq	16(%rsp), %rax
	testl	%ebp, %ebp
	movl	(%rsp), %edx
	movl	%edx, 192(%rax)
	movq	32(%rsp), %rax
	movl	8(%rsp), %edx
	movl	%ebp, 192(%rax)
	movq	40(%rsp), %rax
	movl	%edx, 192(%rax)
	movq	24(%rsp), %rax
	movl	%r13d, 192(%rax)
	movl	$3, %eax
	cmovne	%eax, %r12d
.L11423:
	movb	%r12b, 100(%rbx)
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L11283:
	.cfi_restore_state
	subl	%ecx, %r14d
	jmp	.L11284
	.p2align 4,,10
	.p2align 3
.L11429:
	cmpq	$0, 48(%rsp)
	jne	.L11314
	cmpq	$8, %r15
	movzbl	12(%rsp), %edx
	movq	%r10, %rdi
	jae	.L11430
.L11315:
	movq	%r15, %rcx
	andl	$7, %ecx
	je	.L11317
	xorl	%eax, %eax
.L11318:
	movb	%dl, (%rdi,%rax)
	addq	$1, %rax
	cmpq	%rcx, %rax
	jb	.L11318
.L11317:
	addl	%r15d, (%rsp)
	subl	%r15d, %ebp
	jmp	.L11314
	.p2align 4,,10
	.p2align 3
.L11428:
	movq	%rdx, %rsi
	subq	%rax, %rsi
	movl	%esi, %edi
	sarl	$31, %edi
	xorl	%edi, %esi
	subl	%edi, %esi
	cmpl	$7, %esi
	jle	.L11321
	cmpl	$7, %ecx
	jle	.L11321
	subl	$8, %ecx
	movl	%ecx, %r9d
	shrl	$3, %r9d
	movl	%r9d, %esi
	leaq	8(,%rsi,8), %r8
	xorl	%esi, %esi
	.p2align 4,,10
	.p2align 3
.L11322:
	movq	(%rax,%rsi), %rdi
	movq	%rdi, (%rdx,%rsi)
	addq	$8, %rsi
	cmpq	%r8, %rsi
	jne	.L11322
	negl	%r9d
	addq	%rsi, %rdx
	addq	%rsi, %rax
	leal	(%rcx,%r9,8), %ecx
.L11321:
	testl	%ecx, %ecx
	je	.L11302
	leaq	16(%rax), %rsi
	movl	%ecx, %r11d
	cmpq	%rsi, %rdx
	leaq	16(%rdx), %rsi
	setae	%dil
	cmpq	%rsi, %rax
	setae	%sil
	orb	%sil, %dil
	je	.L11305
	cmpl	$15, %ecx
	jbe	.L11305
	movl	%ecx, %r9d
	shrl	$4, %r9d
	movl	%r9d, %esi
	sall	$4, %esi
	testl	%esi, %esi
	je	.L11306
	xorl	%edi, %edi
	xorl	%r8d, %r8d
.L11311:
	movdqu	(%rax,%rdi), %xmm0
	addl	$1, %r8d
	movdqu	%xmm0, (%rdx,%rdi)
	addq	$16, %rdi
	cmpl	%r8d, %r9d
	ja	.L11311
	movl	%esi, %edi
	subl	%esi, %ecx
	addq	%rdi, %rdx
	addq	%rdi, %rax
	cmpl	%r11d, %esi
	je	.L11302
	.p2align 4,,10
	.p2align 3
.L11306:
	movzbl	(%rax), %esi
	cmpl	$1, %ecx
	movb	%sil, (%rdx)
	je	.L11302
	movzbl	1(%rax), %esi
	cmpl	$2, %ecx
	movb	%sil, 1(%rdx)
	je	.L11302
	movzbl	2(%rax), %esi
	cmpl	$3, %ecx
	movb	%sil, 2(%rdx)
	je	.L11302
	movzbl	3(%rax), %esi
	cmpl	$4, %ecx
	movb	%sil, 3(%rdx)
	je	.L11302
	movzbl	4(%rax), %esi
	cmpl	$5, %ecx
	movb	%sil, 4(%rdx)
	je	.L11302
	movzbl	5(%rax), %esi
	cmpl	$6, %ecx
	movb	%sil, 5(%rdx)
	je	.L11302
	movzbl	6(%rax), %esi
	cmpl	$7, %ecx
	movb	%sil, 6(%rdx)
	je	.L11302
	movzbl	7(%rax), %esi
	cmpl	$8, %ecx
	movb	%sil, 7(%rdx)
	je	.L11302
	movzbl	8(%rax), %esi
	cmpl	$9, %ecx
	movb	%sil, 8(%rdx)
	je	.L11302
	movzbl	9(%rax), %esi
	cmpl	$10, %ecx
	movb	%sil, 9(%rdx)
	je	.L11302
	movzbl	10(%rax), %esi
	cmpl	$11, %ecx
	movb	%sil, 10(%rdx)
	je	.L11302
	movzbl	11(%rax), %esi
	cmpl	$12, %ecx
	movb	%sil, 11(%rdx)
	je	.L11302
	movzbl	12(%rax), %esi
	cmpl	$13, %ecx
	movb	%sil, 12(%rdx)
	je	.L11302
	movzbl	13(%rax), %esi
	cmpl	$14, %ecx
	movb	%sil, 13(%rdx)
	je	.L11302
	movzbl	14(%rax), %eax
	movb	%al, 14(%rdx)
	jmp	.L11302
	.p2align 4,,10
	.p2align 3
.L11430:
	cmpq	$511, %r15
	ja	.L11431
	movabsq	$72340172838076673, %rcx
	movzbl	%dl, %eax
	imulq	%rcx, %rax
	movq	%r15, %rcx
	shrq	$3, %rcx
	rep stosq
	jmp	.L11315
	.p2align 4,,10
	.p2align 3
.L11305:
	subl	$1, %ecx
	leaq	1(%rax,%rcx), %rsi
	.p2align 4,,10
	.p2align 3
.L11313:
	addq	$1, %rax
	movzbl	-1(%rax), %ecx
	addq	$1, %rdx
	cmpq	%rsi, %rax
	movb	%cl, -1(%rdx)
	jne	.L11313
	jmp	.L11302
.L11431:
	movzbl	%dl, %esi
	movq	%r15, %rdx
	call	memset
	.p2align 4,,2
	jmp	.L11317
.L11424:
	movzbl	1976(%rbx,%rdi), %edi
	testb	%dil, 44216(%rbx,%rsi)
	jne	.L11289
.L11288:
	movzbl	97(%rbx), %r8d
	movq	%r15, %r9
	movl	$2, %ecx
	movl	(%rsp), %edi
	movq	%rbx, %rdx
	movl	%eax, %esi
	movl	%r11d, 8(%rsp)
	call	s370_logical_to_main_l
	movl	8(%rsp), %r11d
	movq	%rax, %r10
	jmp	.L11291
.L11426:
	movzbl	1976(%rbx,%rcx), %ecx
	testb	%cl, 44216(%rbx,%rax)
	jne	.L11294
.L11293:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movl	4(%rsp), %esi
	movq	%rbx, %rdx
	movq	%r10, 56(%rsp)
	movl	8(%rsp), %edi
	call	s370_logical_to_main_l
	movq	56(%rsp), %r10
	jmp	.L11296
.L11425:
	cmpb	43192(%rbx,%rsi), %dil
	je	.L11290
	jmp	.L11288
.L11427:
	cmpb	43192(%rbx,%rax), %cl
	je	.L11295
	.p2align 4,,4
	jmp	.L11293
	.cfi_endproc
.LFE1112:
	.size	s370_move_long_extended, .-s370_move_long_extended
	.p2align 4,,15
	.globl	s370_move_numerics
	.type	s370_move_numerics, @function
s370_move_numerics:
.LFB1113:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r13d
	movl	%eax, %esi
	shrl	$16, %r13d
	shrl	$28, %esi
	andl	$4095, %r13d
	testl	%esi, %esi
	movl	%esi, (%rsp)
	je	.L11433
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %r13d
	andl	$16777215, %r13d
.L11433:
	movl	%eax, %r14d
	shrl	$12, %eax
	andl	$4095, %r14d
	andl	$15, %eax
	movl	%eax, 40(%rsp)
	je	.L11434
	cltq
	addl	192(%rbx,%rax,8), %r14d
	andl	$16777215, %r14d
.L11434:
	movzbl	1(%rdi), %ebp
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	cmpl	$83, %r14d
	jbe	.L11688
.L11436:
	movl	(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L11437
	leal	1(%rax), %edx
	movl	%r13d, %esi
	shrl	$11, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L11689
.L11438:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L11690
.L11439:
	movl	%r13d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L11558
	testb	$1, 46264(%rbx,%rsi)
	je	.L11558
	movq	35000(%rax), %r11
	movl	%r13d, %r12d
	movzbl	%cl, %r8d
	movq	%r11, 984(%rbx)
	xorq	26808(%rax), %r12
.L11441:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 8(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L11442
	leal	1(%rax), %edx
	movl	%r14d, %esi
	shrl	$11, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L11691
.L11443:
	testb	%r8b, %r8b
	jne	.L11692
.L11444:
	movl	%r14d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L11442
	testb	$4, 46264(%rbx,%rsi)
	je	.L11442
	movl	%r14d, %r15d
	xorq	26808(%rax), %r15
.L11445:
	movl	$2047, %r10d
	movl	%r13d, %eax
	subl	%ebp, %r10d
	andl	$2047, %eax
	cmpl	%r10d, %eax
	jg	.L11446
	movl	%r14d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L11447
	leaq	16(%r15), %rdx
	leal	1(%rbp), %eax
	cmpq	%rdx, %r12
	leaq	16(%r12), %rdx
	setae	%cl
	cmpq	%rdx, %r15
	setae	%dl
	orb	%dl, %cl
	je	.L11448
	cmpl	$15, %eax
	jbe	.L11448
	movl	%eax, %esi
	movdqa	.LC8(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %esi
	movdqa	.LC9(%rip), %xmm2
	xorl	%edi, %edi
	movl	%esi, %ecx
	sall	$4, %ecx
.L11454:
	movdqu	(%r12,%rdx), %xmm0
	addl	$1, %edi
	movdqu	(%r15,%rdx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rdx)
	addq	$16, %rdx
	cmpl	%edi, %esi
	ja	.L11454
	movl	%ecx, %edx
	addq	%rdx, %r12
	addq	%rdx, %r15
	cmpl	%ecx, %eax
	je	.L11464
	.p2align 4,,10
	.p2align 3
.L11452:
	movzbl	(%r12), %eax
	addl	$1, %ecx
	addq	$1, %r12
	movzbl	(%r15), %edx
	addq	$1, %r15
	andl	$-16, %eax
	andl	$15, %edx
	orl	%edx, %eax
	movb	%al, -1(%r12)
	cmpl	%ecx, %ebp
	jge	.L11452
.L11464:
	orb	$6, (%r11)
.L11453:
	cmpl	$83, %r13d
	jbe	.L11693
.L11432:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L11448:
	.cfi_restore_state
	xorl	%eax, %eax
	.p2align 4,,10
	.p2align 3
.L11456:
	movzbl	(%r12,%rax), %edx
	movzbl	(%r15,%rax), %ecx
	andl	$-16, %edx
	andl	$15, %ecx
	orl	%ecx, %edx
	movb	%dl, (%r12,%rax)
	addq	$1, %rax
	cmpl	%eax, %ebp
	jge	.L11456
	jmp	.L11464
.L11691:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L11443
.L11442:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %edi
	movq	%r11, 24(%rsp)
	call	s370_logical_to_main_l
	movq	24(%rsp), %r11
	movq	%rax, %r15
	jmp	.L11445
.L11692:
	cmpb	%r8b, 43192(%rbx,%rsi)
	je	.L11444
	jmp	.L11442
.L11446:
	movl	$2048, 24(%rsp)
	subl	%eax, 24(%rsp)
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L11473
	leal	1(%rax), %esi
	movl	24(%rsp), %eax
	movslq	%esi, %rsi
	leal	(%rax,%r13), %ecx
	movl	%ecx, %edi
	andl	$16777215, %edi
	movl	%edi, %edx
	shrl	$11, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rax
	movl	2232(%rax), %r9d
	cmpl	%r9d, 320(%rbx,%rsi,8)
	jne	.L11694
.L11474:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L11695
.L11476:
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L11475
	testb	$1, 46264(%rbx,%rdx)
	je	.L11475
	movq	35000(%rax), %rsi
	movq	%rdi, (%rsp)
	movq	%rsi, 984(%rbx)
	movq	26808(%rax), %rax
	movq	%rsi, 16(%rsp)
	xorq	%rax, (%rsp)
.L11477:
	movl	%r14d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L11478
	movq	%r15, %rax
.L11480:
	movzbl	(%rax), %edx
	addq	$1, %rax
	addq	$1, %r12
	movzbl	-1(%r12), %ecx
	andl	$15, %edx
	andl	$-16, %ecx
	orl	%ecx, %edx
	movb	%dl, -1(%r12)
	movl	%eax, %edx
	subl	%r15d, %edx
	cmpl	%edx, 24(%rsp)
	jg	.L11480
	movl	%ebp, %esi
	subl	24(%rsp), %esi
	js	.L11487
	movq	(%rsp), %r10
	leaq	16(%rax), %rdx
	leal	1(%rsi), %edi
	cmpq	%rdx, %r10
	movq	%r10, %rdx
	setae	%cl
	addq	$16, %rdx
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L11482
	cmpl	$15, %edi
	jbe	.L11482
	movl	%edi, %r9d
	movdqa	.LC8(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r9d
	movdqa	.LC9(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %ecx
	sall	$4, %ecx
.L11488:
	movdqu	(%r10,%rdx), %xmm0
	addl	$1, %r8d
	movdqu	(%rax,%rdx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r10,%rdx)
	addq	$16, %rdx
	cmpl	%r8d, %r9d
	ja	.L11488
	movq	(%rsp), %r8
	movl	%ecx, %edx
	addq	%rdx, %rax
	addq	%rdx, %r8
	cmpl	%edi, %ecx
	je	.L11487
.L11486:
	movzbl	(%r8), %edx
	addl	$1, %ecx
	addq	$1, %r8
	movzbl	(%rax), %edi
	addq	$1, %rax
	andl	$-16, %edx
	andl	$15, %edi
	orl	%edi, %edx
	movb	%dl, -1(%r8)
	cmpl	%esi, %ecx
	jle	.L11486
.L11487:
	orb	$6, (%r11)
	movq	16(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L11453
.L11689:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L11438
.L11437:
	movzbl	97(%rbx), %r8d
.L11440:
	movl	(%rsp), %esi
	leal	1(%rbp), %r9d
	movl	$1, %ecx
	andl	$511, %r9d
	movq	%rbx, %rdx
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	movq	984(%rbx), %r11
	movq	%rax, %r12
	movzbl	97(%rbx), %r8d
	jmp	.L11441
.L11478:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L11491
	leal	(%r10,%r14), %ecx
	leal	1(%rax), %esi
	movl	%ecx, %edi
	andl	$16777215, %edi
	movslq	%esi, %rsi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbx,%rsi,8)
	jne	.L11696
.L11492:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L11697
.L11494:
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L11493
	testb	$4, 46264(%rbx,%rax)
	je	.L11493
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L11495:
	cmpl	%r10d, 24(%rsp)
	je	.L11698
	jge	.L11513
	movq	%r15, %rdx
.L11515:
	movzbl	(%rdx), %ecx
	addq	$1, %rdx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	andl	$15, %ecx
	andl	$-16, %esi
	orl	%esi, %ecx
	movb	%cl, -1(%r12)
	movl	%edx, %ecx
	subl	%r15d, %ecx
	cmpl	%ecx, 24(%rsp)
	jg	.L11515
	movl	%r10d, %ecx
	subl	24(%rsp), %ecx
	testl	%ecx, %ecx
	jle	.L11516
	movq	(%rsp), %r12
	leaq	16(%rdx), %rsi
	cmpq	%rsi, %r12
	movq	%r12, %rsi
	setae	%dil
	addq	$16, %rsi
	cmpq	%rsi, %rdx
	setae	%sil
	orb	%sil, %dil
	je	.L11517
	cmpl	$15, %ecx
	jbe	.L11517
	movl	%ecx, %r9d
	movdqa	.LC8(%rip), %xmm3
	xorl	%esi, %esi
	shrl	$4, %r9d
	movdqa	.LC9(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %edi
	sall	$4, %edi
.L11522:
	movdqu	(%rdx,%rsi), %xmm0
	addl	$1, %r8d
	movdqu	(%r12,%rsi), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rsi)
	addq	$16, %rsi
	cmpl	%r9d, %r8d
	jb	.L11522
	movq	(%rsp), %r9
	movl	%edi, %esi
	addq	%rsi, %rdx
	cmpl	%edi, %ecx
	leaq	(%r9,%rsi), %r8
	je	.L11523
.L11521:
	movzbl	(%rdx), %esi
	addl	$1, %edi
	addq	$1, %r8
	movzbl	-1(%r8), %r9d
	addq	$1, %rdx
	andl	$15, %esi
	andl	$-16, %r9d
	orl	%r9d, %esi
	movb	%sil, -1(%r8)
	cmpl	%edi, %ecx
	jg	.L11521
.L11523:
	movq	(%rsp), %rdi
	subl	$1, %ecx
	leaq	1(%rdi,%rcx), %rdi
	movq	%rdi, (%rsp)
.L11516:
	movl	%ebp, %esi
	subl	%r10d, %esi
	js	.L11487
	movq	(%rsp), %r10
	leal	1(%rsi), %edi
	leaq	16(%r10), %rdx
	cmpq	%rdx, %rax
	leaq	16(%rax), %rdx
	setae	%cl
	cmpq	%rdx, %r10
	setae	%dl
	orb	%dl, %cl
	je	.L11525
	cmpl	$15, %edi
	jbe	.L11525
	movl	%edi, %r9d
	movdqa	.LC8(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r9d
	movdqa	.LC9(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %ecx
	sall	$4, %ecx
.L11530:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %r8d
	movdqu	(%r10,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r10,%rdx)
	addq	$16, %rdx
	cmpl	%r9d, %r8d
	jb	.L11530
	movq	(%rsp), %r8
	movl	%ecx, %edx
	addq	%rdx, %rax
	addq	%rdx, %r8
	cmpl	%ecx, %edi
	je	.L11487
.L11529:
	movzbl	(%rax), %edx
	addl	$1, %ecx
	addq	$1, %r8
	movzbl	-1(%r8), %edi
	addq	$1, %rax
	andl	$15, %edx
	andl	$-16, %edi
	orl	%edi, %edx
	movb	%dl, -1(%r8)
	cmpl	%ecx, %esi
	jge	.L11529
	jmp	.L11487
.L11513:
	movq	%r12, %rdx
.L11534:
	movzbl	(%rdx), %esi
	addq	$1, %rdx
	addq	$1, %r15
	movzbl	-1(%r15), %ecx
	andl	$-16, %esi
	andl	$15, %ecx
	orl	%esi, %ecx
	movb	%cl, -1(%rdx)
	movl	%edx, %ecx
	subl	%r12d, %ecx
	cmpl	%ecx, %r10d
	jg	.L11534
	movl	24(%rsp), %ecx
	subl	%r10d, %ecx
	testl	%ecx, %ecx
	jle	.L11535
	leaq	16(%rdx), %rsi
	cmpq	%rsi, %rax
	leaq	16(%rax), %rsi
	setae	%dil
	cmpq	%rsi, %rdx
	setae	%sil
	orb	%sil, %dil
	je	.L11536
	cmpl	$15, %ecx
	jbe	.L11536
	movl	%ecx, %r9d
	movdqa	.LC8(%rip), %xmm3
	xorl	%esi, %esi
	shrl	$4, %r9d
	movdqa	.LC9(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %edi
	sall	$4, %edi
.L11541:
	movdqu	(%rax,%rsi), %xmm0
	addl	$1, %r8d
	movdqu	(%rdx,%rsi), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%rdx,%rsi)
	addq	$16, %rsi
	cmpl	%r9d, %r8d
	jb	.L11541
	movl	%edi, %r8d
	addq	%r8, %rdx
	addq	%rax, %r8
	cmpl	%edi, %ecx
	je	.L11542
.L11540:
	movzbl	(%r8), %esi
	addl	$1, %edi
	addq	$1, %rdx
	movzbl	-1(%rdx), %r9d
	addq	$1, %r8
	andl	$15, %esi
	andl	$-16, %r9d
	orl	%r9d, %esi
	movb	%sil, -1(%rdx)
	cmpl	%edi, %ecx
	jg	.L11540
.L11542:
	subl	$1, %ecx
	leaq	1(%rax,%rcx), %rax
.L11535:
	movl	%ebp, %esi
	subl	24(%rsp), %esi
	js	.L11487
	movq	(%rsp), %r10
	leaq	16(%rax), %rdx
	leal	1(%rsi), %edi
	cmpq	%rdx, %r10
	movq	%r10, %rdx
	setae	%cl
	addq	$16, %rdx
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L11544
	cmpl	$15, %edi
	jbe	.L11544
	movl	%edi, %r9d
	movdqa	.LC8(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r9d
	movdqa	.LC9(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %ecx
	sall	$4, %ecx
.L11549:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %r8d
	movdqu	(%r10,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r10,%rdx)
	addq	$16, %rdx
	cmpl	%r9d, %r8d
	jb	.L11549
	movq	(%rsp), %r8
	movl	%ecx, %edx
	addq	%rdx, %rax
	addq	%rdx, %r8
	cmpl	%ecx, %edi
	je	.L11487
.L11548:
	movzbl	(%rax), %edx
	addl	$1, %ecx
	addq	$1, %r8
	movzbl	-1(%r8), %edi
	addq	$1, %rax
	andl	$15, %edx
	andl	$-16, %edi
	orl	%edi, %edx
	movb	%dl, -1(%r8)
	cmpl	%ecx, %esi
	jge	.L11548
	jmp	.L11487
.L11698:
	movl	24(%rsp), %edi
	leaq	16(%r15), %rcx
	movl	$1, %edx
	testl	%edi, %edi
	cmovg	%edi, %edx
	cmpq	%rcx, %r12
	setae	%sil
	leaq	16(%r12), %rcx
	cmpq	%rcx, %r15
	setae	%cl
	orb	%cl, %sil
	je	.L11497
	cmpl	$15, %edx
	jbe	.L11497
	movl	%edx, %r8d
	movdqa	.LC8(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r8d
	movdqa	.LC9(%rip), %xmm2
	xorl	%esi, %esi
	movl	%r8d, %edi
	sall	$4, %edi
.L11502:
	movdqu	(%r15,%rcx), %xmm0
	addl	$1, %esi
	movdqu	(%r12,%rcx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %esi
	jb	.L11502
	movl	%edi, %ecx
	addq	%rcx, %r12
	addq	%rcx, %r15
	cmpl	%edi, %edx
	movl	%edi, %ecx
	je	.L11503
.L11501:
	movzbl	(%r15), %edx
	addl	$1, %ecx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	addq	$1, %r15
	andl	$15, %edx
	andl	$-16, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r12)
	cmpl	%ecx, 24(%rsp)
	jg	.L11501
.L11503:
	movl	%ebp, %esi
	subl	24(%rsp), %esi
	js	.L11487
	movq	(%rsp), %r10
	leaq	16(%rax), %rdx
	leal	1(%rsi), %edi
	cmpq	%rdx, %r10
	movq	%r10, %rdx
	setae	%cl
	addq	$16, %rdx
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L11505
	cmpl	$15, %edi
	jbe	.L11505
	movl	%edi, %r9d
	movdqa	.LC8(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r9d
	movdqa	.LC9(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %ecx
	sall	$4, %ecx
.L11510:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %r8d
	movdqu	(%r10,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r10,%rdx)
	addq	$16, %rdx
	cmpl	%r8d, %r9d
	ja	.L11510
	movq	(%rsp), %r8
	movl	%ecx, %edx
	addq	%rdx, %rax
	addq	%rdx, %r8
	cmpl	%edi, %ecx
	je	.L11487
.L11509:
	movzbl	(%r8), %edx
	addl	$1, %ecx
	addq	$1, %r8
	movzbl	(%rax), %edi
	addq	$1, %rax
	andl	$-16, %edx
	andl	$15, %edi
	orl	%edi, %edx
	movb	%dl, -1(%r8)
	cmpl	%ecx, %esi
	jge	.L11509
	jmp	.L11487
.L11517:
	movq	(%rsp), %r9
	xorl	%esi, %esi
.L11524:
	movzbl	(%rdx,%rsi), %edi
	movzbl	(%r9,%rsi), %r8d
	andl	$15, %edi
	andl	$-16, %r8d
	orl	%r8d, %edi
	movb	%dil, (%r9,%rsi)
	addq	$1, %rsi
	cmpl	%esi, %ecx
	jg	.L11524
	jmp	.L11523
.L11525:
	movq	(%rsp), %r8
	xorl	%edx, %edx
.L11532:
	movzbl	(%rax,%rdx), %ecx
	movzbl	(%r8,%rdx), %edi
	andl	$15, %ecx
	andl	$-16, %edi
	orl	%edi, %ecx
	movb	%cl, (%r8,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %esi
	jge	.L11532
	jmp	.L11487
.L11497:
	xorl	%edx, %edx
.L11504:
	movzbl	(%r15,%rdx), %ecx
	movzbl	(%r12,%rdx), %esi
	andl	$15, %ecx
	andl	$-16, %esi
	orl	%esi, %ecx
	movb	%cl, (%r12,%rdx)
	addq	$1, %rdx
	cmpl	%edx, 24(%rsp)
	jg	.L11504
	jmp	.L11503
.L11536:
	xorl	%esi, %esi
.L11543:
	movzbl	(%rax,%rsi), %edi
	movzbl	(%rdx,%rsi), %r8d
	andl	$15, %edi
	andl	$-16, %r8d
	orl	%r8d, %edi
	movb	%dil, (%rdx,%rsi)
	addq	$1, %rsi
	cmpl	%esi, %ecx
	jg	.L11543
	jmp	.L11542
.L11544:
	movq	(%rsp), %r8
	xorl	%edx, %edx
.L11551:
	movzbl	(%rax,%rdx), %ecx
	movzbl	(%r8,%rdx), %edi
	andl	$15, %ecx
	andl	$-16, %edi
	orl	%edi, %ecx
	movb	%cl, (%r8,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %esi
	jge	.L11551
	jmp	.L11487
.L11696:
	movzbl	44216(%rbx,%rax), %r8d
	testb	%r8b, 1976(%rbx,%rsi)
	jne	.L11492
.L11687:
	movzbl	97(%rbx), %r8d
.L11493:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 32(%rsp)
	movq	%r11, 8(%rsp)
	call	s370_logical_to_main_l
	movl	32(%rsp), %r10d
	movq	8(%rsp), %r11
	jmp	.L11495
.L11697:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L11494
	jmp	.L11493
.L11694:
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rsi)
	jne	.L11474
	movzbl	97(%rbx), %r8d
.L11475:
	movl	(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 44(%rsp)
	movq	%r11, 32(%rsp)
	call	s370_logical_to_main_l
	movl	44(%rsp), %r10d
	movq	%rax, (%rsp)
	movq	984(%rbx), %rax
	movq	32(%rsp), %r11
	movq	%rax, 16(%rsp)
	jmp	.L11477
.L11482:
	movq	(%rsp), %r8
	xorl	%edx, %edx
.L11490:
	movzbl	(%r8,%rdx), %ecx
	movzbl	(%rax,%rdx), %edi
	andl	$-16, %ecx
	andl	$15, %edi
	orl	%edi, %ecx
	movb	%cl, (%r8,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %esi
	jge	.L11490
	jmp	.L11487
.L11491:
	leal	(%r10,%r14), %edi
	andl	$16777215, %edi
	jmp	.L11687
.L11505:
	movq	(%rsp), %r8
	xorl	%edx, %edx
.L11512:
	movzbl	(%r8,%rdx), %ecx
	movzbl	(%rax,%rdx), %edi
	andl	$-16, %ecx
	andl	$15, %edi
	orl	%edi, %ecx
	movb	%cl, (%r8,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %esi
	jge	.L11512
	jmp	.L11487
.L11690:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L11439
.L11558:
	movzbl	%cl, %r8d
	jmp	.L11440
.L11447:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L11457
	leal	(%r10,%r14), %ecx
	leal	1(%rax), %esi
	movl	%ecx, %edi
	andl	$16777215, %edi
	movslq	%esi, %rsi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbx,%rsi,8)
	jne	.L11699
.L11458:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L11700
.L11460:
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L11459
	testb	$4, 46264(%rbx,%rax)
	je	.L11459
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L11461:
	movq	%r12, %rdx
.L11463:
	movzbl	(%rdx), %esi
	addq	$1, %rdx
	addq	$1, %r15
	movzbl	-1(%r15), %ecx
	andl	$-16, %esi
	andl	$15, %ecx
	orl	%esi, %ecx
	movb	%cl, -1(%rdx)
	movl	%edx, %ecx
	subl	%r12d, %ecx
	cmpl	%ecx, %r10d
	jg	.L11463
	movl	%ebp, %edi
	subl	%r10d, %edi
	js	.L11464
	leaq	16(%rdx), %rcx
	leal	1(%rdi), %r8d
	cmpq	%rcx, %rax
	leaq	16(%rax), %rcx
	setae	%sil
	cmpq	%rcx, %rdx
	setae	%cl
	orb	%cl, %sil
	je	.L11465
	cmpl	$15, %r8d
	jbe	.L11465
	movl	%r8d, %r10d
	movdqa	.LC8(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r10d
	movdqa	.LC9(%rip), %xmm2
	xorl	%r9d, %r9d
	movl	%r10d, %esi
	sall	$4, %esi
.L11470:
	movdqu	(%rdx,%rcx), %xmm0
	addl	$1, %r9d
	movdqu	(%rax,%rcx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%rdx,%rcx)
	addq	$16, %rcx
	cmpl	%r9d, %r10d
	ja	.L11470
	movl	%esi, %ecx
	addq	%rcx, %rdx
	addq	%rcx, %rax
	cmpl	%r8d, %esi
	je	.L11464
.L11469:
	movzbl	(%rdx), %ecx
	addl	$1, %esi
	addq	$1, %rdx
	movzbl	(%rax), %r8d
	addq	$1, %rax
	andl	$-16, %ecx
	andl	$15, %r8d
	orl	%r8d, %ecx
	movb	%cl, -1(%rdx)
	cmpl	%esi, %edi
	jge	.L11469
	jmp	.L11464
.L11693:
	addl	%r13d, %ebp
	cmpl	$79, %ebp
	jbe	.L11432
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
.L11699:
	.cfi_restore_state
	movzbl	44216(%rbx,%rax), %r8d
	testb	%r8b, 1976(%rbx,%rsi)
	jne	.L11458
.L11686:
	movzbl	97(%rbx), %r8d
.L11459:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 8(%rsp)
	movq	%r11, (%rsp)
	call	s370_logical_to_main_l
	movl	8(%rsp), %r10d
	movq	(%rsp), %r11
	jmp	.L11461
.L11700:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L11460
	jmp	.L11459
.L11688:
	leal	(%r14,%rbp), %eax
	cmpl	$79, %eax
	jbe	.L11436
	movq	%rbx, %rdi
	call	s370_store_int_timer
	jmp	.L11436
.L11473:
	movl	24(%rsp), %eax
	movzbl	97(%rbx), %r8d
	leal	(%rax,%r13), %edi
	andl	$16777215, %edi
	jmp	.L11475
.L11695:
	cmpb	43192(%rbx,%rdx), %r8b
	je	.L11476
	jmp	.L11475
.L11457:
	leal	(%r10,%r14), %edi
	andl	$16777215, %edi
	jmp	.L11686
.L11465:
	xorl	%ecx, %ecx
.L11472:
	movzbl	(%rdx,%rcx), %esi
	movzbl	(%rax,%rcx), %r8d
	andl	$-16, %esi
	andl	$15, %r8d
	orl	%r8d, %esi
	movb	%sil, (%rdx,%rcx)
	addq	$1, %rcx
	cmpl	%ecx, %edi
	jge	.L11472
	jmp	.L11464
	.cfi_endproc
.LFE1113:
	.size	s370_move_numerics, .-s370_move_numerics
	.p2align 4,,15
	.globl	s370_move_string
	.type	s370_move_string, @function
s370_move_string:
.LFB1114:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movzbl	3(%rdi), %r12d
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movzbl	%r12b, %eax
	andl	$15, %r12d
	movl	%eax, 8(%rsp)
	movzbl	%r12b, %eax
	sarl	$4, 8(%rsp)
	movl	%eax, 12(%rsp)
	testl	$-256, 192(%rsi)
	jne	.L11748
.L11702:
	movzbl	192(%rbx), %eax
	movzbl	%r12b, %r12d
	movl	$4096, %r15d
	movb	%al, 7(%rsp)
	movslq	8(%rsp), %rax
	leaq	(%rbx,%rax,8), %rax
	movl	192(%rax), %edx
	movq	%rax, 16(%rsp)
	leaq	(%rbx,%r12,8), %rax
	movq	%rax, 24(%rsp)
	movl	192(%rax), %eax
	movl	%edx, %ebp
	andl	$4095, %edx
	movl	%eax, %r12d
	andl	$4095, %eax
	andl	$16777215, %ebp
	andl	$16777215, %r12d
	cmpl	%eax, %edx
	jbe	.L11703
	subl	%edx, %r15d
.L11704:
	movl	12(%rsp), %eax
	xorl	%r14d, %r14d
	leal	5(%rax), %r11d
	movl	8(%rsp), %eax
	movslq	%r11d, %r11
	leal	5(%rax), %r10d
	movslq	%r10d, %r10
	.p2align 4,,10
	.p2align 3
.L11719:
	leal	-80(%r12), %eax
	cmpl	$3, %eax
	jbe	.L11749
.L11705:
	movl	1892(%rbx,%r11,4), %eax
	testl	%eax, %eax
	je	.L11706
	movl	%r12d, %esi
	addl	$1, %eax
	shrl	$11, %esi
	cltq
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L11750
.L11707:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L11751
.L11708:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L11722
	testb	$4, 46264(%rbx,%rsi)
	je	.L11722
	movl	%r12d, %eax
	movzbl	%cl, %r8d
	xorq	26808(%rdx), %rax
.L11710:
	movzbl	(%rax), %r13d
	movl	1892(%rbx,%r10,4), %eax
	testl	%eax, %eax
	je	.L11711
	movl	%ebp, %esi
	addl	$1, %eax
	shrl	$11, %esi
	cltq
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L11752
.L11712:
	testb	%r8b, %r8b
	jne	.L11753
.L11713:
	movl	%ebp, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L11711
	testb	$2, 46264(%rbx,%rsi)
	je	.L11711
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L11714:
	movb	%r13b, (%rax)
	leal	-80(%rbp), %eax
	cmpl	$3, %eax
	jbe	.L11754
.L11715:
	cmpb	%r13b, 7(%rsp)
	je	.L11755
	addl	$1, %ebp
	addl	$1, %r12d
	addl	$1, %r14d
	andl	$16777215, %ebp
	andl	$16777215, %r12d
	cmpl	%r14d, %r15d
	jg	.L11719
	movq	16(%rsp), %rax
	movl	%ebp, 192(%rax)
	movq	24(%rsp), %rax
	movl	%r12d, 192(%rax)
	movb	$3, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L11703:
	.cfi_restore_state
	subl	%eax, %r15d
	jmp	.L11704
	.p2align 4,,10
	.p2align 3
.L11755:
	movq	16(%rsp), %rax
	movl	%ebp, 192(%rax)
	movb	$1, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L11748:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L11702
.L11752:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L11712
.L11711:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r10, 40(%rsp)
	movq	%r11, 32(%rsp)
	call	s370_logical_to_main_l
	movq	40(%rsp), %r10
	movq	32(%rsp), %r11
	jmp	.L11714
.L11751:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L11708
.L11722:
	movzbl	%cl, %r8d
.L11709:
	movl	12(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movq	%r10, 40(%rsp)
	movq	%r11, 32(%rsp)
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	40(%rsp), %r10
	movq	32(%rsp), %r11
	jmp	.L11710
.L11753:
	cmpb	43192(%rbx,%rsi), %r8b
	je	.L11713
	jmp	.L11711
	.p2align 4,,10
	.p2align 3
.L11750:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rax)
	jne	.L11707
.L11706:
	movzbl	97(%rbx), %r8d
	jmp	.L11709
.L11749:
	movq	%rbx, %rdi
	movq	%r10, 40(%rsp)
	movq	%r11, 32(%rsp)
	call	s370_store_int_timer
	movq	40(%rsp), %r10
	movq	32(%rsp), %r11
	jmp	.L11705
.L11754:
	movq	%rbx, %rdi
	movq	%r10, 40(%rsp)
	movq	%r11, 32(%rsp)
	call	s370_fetch_int_timer
	movq	40(%rsp), %r10
	movq	32(%rsp), %r11
	jmp	.L11715
	.cfi_endproc
.LFE1114:
	.size	s370_move_string, .-s370_move_string
	.p2align 4,,15
	.globl	s370_move_with_offset
	.type	s370_move_with_offset, @function
s370_move_with_offset:
.LFB1115:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r14d
	movl	%eax, %esi
	shrl	$16, %r14d
	shrl	$28, %esi
	andl	$4095, %r14d
	testl	%esi, %esi
	movl	%esi, 32(%rsp)
	je	.L11757
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %r14d
	andl	$16777215, %r14d
.L11757:
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, 36(%rsp)
	je	.L11758
	cltq
	addl	192(%rbx,%rax,8), %r12d
	andl	$16777215, %r12d
.L11758:
	movzbl	1(%rdi), %r11d
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	movl	%r11d, %eax
	shrb	$4, %r11b
	andl	$15, %eax
	movl	%eax, 4(%rsp)
	movzbl	%r11b, %eax
	leal	(%r14,%rax), %r11d
	movl	%eax, 16(%rsp)
	movl	%r11d, %eax
	xorl	%r14d, %eax
	testl	$2147481600, %eax
	jne	.L11759
	movl	32(%rsp), %eax
	movl	%r11d, %ebp
	andl	$16777215, %ebp
	leal	5(%rax), %r13d
	movslq	%r13d, %r13
.L11760:
	movl	4(%rsp), %eax
	leal	(%r12,%rax), %r14d
	movl	%r14d, %eax
	xorl	%r12d, %eax
	testl	$2147481600, %eax
	jne	.L11772
	movl	36(%rsp), %edi
	movl	%r14d, %eax
	andl	$16777215, %eax
	leal	5(%rdi), %r15d
	movslq	%r15d, %r15
.L11773:
	leal	-80(%rax), %edx
	leal	-1(%rax), %edi
	cmpl	$3, %edx
	movl	%edi, 40(%rsp)
	jbe	.L11923
.L11786:
	leaq	(%rbx,%r15,4), %rsi
	movl	1892(%rsi), %edx
	movq	%rsi, 24(%rsp)
	testl	%edx, %edx
	je	.L11787
	leal	1(%rdx), %esi
	movl	%eax, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rsi,8)
	jne	.L11924
.L11788:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L11925
.L11789:
	andl	$14680064, %r14d
	orl	2224(%rbx), %r14d
	cmpl	10424(%rdx), %r14d
	jne	.L11833
	testb	$4, 46264(%rbx,%rcx)
	je	.L11833
	xorq	26808(%rdx), %rax
.L11791:
	movzbl	(%rax), %r14d
	leal	-80(%rbp), %r15d
	cmpl	$3, %r15d
	jbe	.L11926
.L11792:
	leaq	(%rbx,%r13,4), %rax
	movl	1892(%rax), %r10d
	movq	%rax, 8(%rsp)
	testl	%r10d, %r10d
	je	.L11793
	movl	%ebp, %eax
	addl	$1, %r10d
	shrl	$11, %eax
	movslq	%r10d, %r10
	andl	$1023, %eax
	movl	320(%rbx,%r10,8), %edi
	leaq	(%rbx,%rax,8), %rcx
	movl	2232(%rcx), %r9d
	cmpl	%r9d, %edi
	jne	.L11927
.L11794:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L11928
.L11795:
	movl	%r11d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L11836
	testb	$4, 46264(%rbx,%rax)
	je	.L11836
	movl	%ebp, %edx
	movl	%r14d, %r12d
	movzbl	%sil, %r8d
	xorq	26808(%rcx), %rdx
	leal	-1(%rbp), %r13d
	sall	$4, %r12d
	movzbl	(%rdx), %edx
	andl	$15, %edx
	orl	%edx, %r12d
.L11797:
	cmpl	%edi, %r9d
	jne	.L11929
.L11799:
	testb	%r8b, %r8b
	jne	.L11930
.L11801:
	leaq	(%rbx,%rax,8), %rdx
	andl	$14680064, %r11d
	orl	2224(%rbx), %r11d
	cmpl	10424(%rdx), %r11d
	jne	.L11800
	testb	$2, 46264(%rbx,%rax)
	je	.L11800
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L11802:
	cmpl	$3, %r15d
	movb	%r12b, (%rax)
	jbe	.L11931
.L11803:
	movl	16(%rsp), %eax
	testl	%eax, %eax
	je	.L11756
	movl	%eax, %r11d
	xorl	%r12d, %r12d
	subl	$1, %r11d
	addq	$1, %r11
	movq	%r11, 16(%rsp)
	movl	40(%rsp), %r11d
	jmp	.L11819
	.p2align 4,,10
	.p2align 3
.L11935:
	movzbl	97(%rbx), %r8d
	xorl	%r15d, %r15d
	xorl	%r14d, %r14d
.L11806:
	movq	8(%rsp), %rax
	orl	%ebp, %r15d
	movl	%r13d, %ebp
	andl	$16777215, %ebp
	leal	-1(%rbp), %r10d
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L11813
	leal	1(%rax), %ecx
	movl	%ebp, %eax
	shrl	$11, %eax
	movslq	%ecx, %rcx
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L11932
.L11814:
	testb	%r8b, %r8b
	jne	.L11933
.L11815:
	andl	$14680064, %r13d
	orl	2224(%rbx), %r13d
	cmpl	10424(%rdx), %r13d
	jne	.L11813
	testb	$2, 46264(%rbx,%rax)
	je	.L11813
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L11816:
	subl	$80, %ebp
	movb	%r15b, (%rax)
	cmpl	$3, %ebp
	jbe	.L11934
.L11817:
	addq	$1, %r12
	cmpq	16(%rsp), %r12
	je	.L11756
	movl	%r10d, %r13d
.L11819:
	movl	4(%rsp), %eax
	shrb	$4, %r14b
	movl	%r14d, %ebp
	subl	%r12d, %eax
	testl	%eax, %eax
	jle	.L11935
	movl	%r11d, %r14d
	andl	$16777215, %r14d
	leal	-80(%r14), %eax
	leal	-1(%r14), %r10d
	cmpl	$3, %eax
	jbe	.L11936
.L11807:
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L11808
	leal	1(%rax), %ecx
	movl	%r14d, %edx
	shrl	$11, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L11937
.L11809:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L11938
.L11810:
	andl	$14680064, %r11d
	orl	2224(%rbx), %r11d
	cmpl	10424(%rax), %r11d
	jne	.L11811
	testb	$4, 46264(%rbx,%rdx)
	je	.L11811
	xorq	26808(%rax), %r14
.L11812:
	movzbl	(%r14), %r14d
	movl	%r10d, %r11d
	movl	%r14d, %r15d
	sall	$4, %r15d
	jmp	.L11806
	.p2align 4,,10
	.p2align 3
.L11756:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L11759:
	.cfi_restore_state
	movl	32(%rsp), %eax
	leal	5(%rax), %r13d
	movslq	%r13d, %r13
	leaq	(%rbx,%r13,4), %rbp
	movl	1892(%rbp), %eax
	testl	%eax, %eax
	je	.L11761
	movl	%r14d, %ecx
	addl	$1, %eax
	shrl	$11, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L11939
.L11762:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L11940
.L11763:
	movl	%r14d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L11824
	testb	$1, 46264(%rbx,%rcx)
	je	.L11824
	movq	35000(%rdx), %rax
	movq	%rax, 984(%rbx)
.L11765:
	movl	$2047, %eax
	movl	%r14d, %edx
	subl	16(%rsp), %eax
	andl	$2047, %edx
	cmpl	%eax, %edx
	jg	.L11941
	cmpl	$83, %r14d
	jbe	.L11771
.L11922:
	movl	%r11d, %ebp
	andl	$16777215, %ebp
	jmp	.L11760
	.p2align 4,,10
	.p2align 3
.L11772:
	movl	36(%rsp), %eax
	leal	5(%rax), %r15d
	movslq	%r15d, %r15
	leaq	(%rbx,%r15,4), %r10
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L11777
	movl	%r12d, %edx
	addl	$1, %eax
	shrl	$11, %edx
	cltq
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L11942
.L11776:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L11943
.L11778:
	movl	%r12d, %eax
	andl	$14680064, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L11826
	testb	$4, 46264(%rbx,%rdx)
	je	.L11826
.L11779:
	movl	$2047, %eax
	movl	%r12d, %edx
	subl	4(%rsp), %eax
	andl	$2047, %edx
	cmpl	%eax, %edx
	jg	.L11944
	cmpl	$83, %r12d
	jbe	.L11785
	movl	%r14d, %eax
	andl	$16777215, %eax
	jmp	.L11773
.L11932:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L11814
.L11813:
	movl	32(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r11d, 44(%rsp)
	movl	%r10d, 40(%rsp)
	call	s370_logical_to_main_l
	movl	44(%rsp), %r11d
	movl	40(%rsp), %r10d
	jmp	.L11816
.L11937:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L11809
.L11808:
	movzbl	97(%rbx), %r8d
.L11811:
	movl	36(%rsp), %esi
	movl	%r14d, %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 40(%rsp)
	call	s370_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r14
	movl	40(%rsp), %r10d
	jmp	.L11812
.L11933:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L11815
	jmp	.L11813
	.p2align 4,,10
	.p2align 3
.L11938:
	cmpb	43192(%rbx,%rdx), %r8b
	je	.L11810
	.p2align 4,,3
	jmp	.L11811
	.p2align 4,,10
	.p2align 3
.L11934:
	movq	%rbx, %rdi
	movl	%r11d, 44(%rsp)
	movl	%r10d, 40(%rsp)
	call	s370_fetch_int_timer
	movl	44(%rsp), %r11d
	movl	40(%rsp), %r10d
	jmp	.L11817
.L11936:
	movq	%rbx, %rdi
	movl	%r11d, 44(%rsp)
	movl	%r10d, 40(%rsp)
	call	s370_store_int_timer
	movl	44(%rsp), %r11d
	movl	40(%rsp), %r10d
	jmp	.L11807
.L11798:
	movzbl	97(%rbx), %r8d
.L11800:
	movl	32(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s370_logical_to_main_l
	jmp	.L11802
.L11930:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L11801
	.p2align 4,,3
	jmp	.L11800
.L11923:
	movq	%rbx, %rdi
	movl	%eax, 24(%rsp)
	movl	%r11d, 8(%rsp)
	call	s370_store_int_timer
	movl	24(%rsp), %eax
	movl	8(%rsp), %r11d
	jmp	.L11786
.L11931:
	movq	%rbx, %rdi
	call	s370_fetch_int_timer
	jmp	.L11803
.L11944:
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L11945
	leal	1(%rax), %ecx
	movl	%r14d, %eax
	andl	$16777215, %eax
	movslq	%ecx, %rcx
	movl	%eax, %edx
	shrl	$11, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rsi
	movl	2232(%rsi), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L11946
.L11783:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L11947
.L11784:
	movl	%r14d, %ecx
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rsi), %ecx
	jne	.L11782
	testb	$4, 46264(%rbx,%rdx)
	jne	.L11773
.L11782:
	movl	4(%rsp), %edx
	movq	%rbx, %r8
	movl	$4, %ecx
	movl	36(%rsp), %esi
	movl	%r12d, %edi
	movl	%eax, 24(%rsp)
	movl	%r11d, 8(%rsp)
	call	s370_validate_operand.part.11
	movl	8(%rsp), %r11d
	movl	24(%rsp), %eax
	jmp	.L11773
.L11947:
	cmpb	43192(%rbx,%rdx), %cl
	je	.L11784
	jmp	.L11782
.L11946:
	movzbl	44216(%rbx,%rdx), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L11783
	jmp	.L11782
.L11945:
	movl	%r14d, %eax
	andl	$16777215, %eax
	jmp	.L11782
.L11785:
	cmpl	$79, %r14d
	ja	.L11821
	movl	%r14d, %eax
	jmp	.L11773
.L11924:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L11788
.L11787:
	movzbl	97(%rbx), %r8d
.L11790:
	movl	36(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %edi
	movl	%r11d, 8(%rsp)
	call	s370_logical_to_main_l
	movl	8(%rsp), %r11d
	jmp	.L11791
.L11821:
	movq	%rbx, %rdi
	movl	%r11d, 8(%rsp)
	call	s370_store_int_timer
	movl	%r14d, %eax
	movl	8(%rsp), %r11d
	andl	$16777215, %eax
	jmp	.L11773
.L11927:
	movzbl	44216(%rbx,%rax), %edx
	testb	%dl, 1976(%rbx,%r10)
	jne	.L11794
.L11793:
	movzbl	97(%rbx), %r8d
.L11796:
	movl	32(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r11d, 44(%rsp)
	leal	-1(%rbp), %r13d
	movl	%r14d, %r12d
	sall	$4, %r12d
	call	s370_logical_to_main_l
	movzbl	(%rax), %eax
	andl	$15, %eax
	orl	%eax, %r12d
	movq	8(%rsp), %rax
	movl	1892(%rax), %r10d
	testl	%r10d, %r10d
	je	.L11798
	movl	%ebp, %eax
	addl	$1, %r10d
	movzbl	97(%rbx), %r8d
	shrl	$11, %eax
	movslq	%r10d, %r10
	movl	44(%rsp), %r11d
	andl	$1023, %eax
	movl	320(%rbx,%r10,8), %edi
	movl	2232(%rbx,%rax,8), %r9d
	jmp	.L11797
.L11926:
	movq	%rbx, %rdi
	movl	%r11d, 8(%rsp)
	call	s370_store_int_timer
	movl	8(%rsp), %r11d
	jmp	.L11792
.L11929:
	movzbl	44216(%rbx,%rax), %edx
	testb	%dl, 1976(%rbx,%r10)
	jne	.L11799
	jmp	.L11800
.L11928:
	cmpb	43192(%rbx,%rax), %sil
	je	.L11795
.L11836:
	movzbl	%sil, %r8d
	jmp	.L11796
.L11939:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L11762
.L11761:
	movzbl	97(%rbx), %r8d
.L11764:
	movl	32(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %edi
	movl	%r11d, 8(%rsp)
	call	s370_logical_to_main_l
	movl	8(%rsp), %r11d
	jmp	.L11765
.L11940:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L11763
.L11824:
	movzbl	%sil, %r8d
	jmp	.L11764
.L11941:
	movl	1892(%rbp), %eax
	testl	%eax, %eax
	je	.L11767
	leal	1(%rax), %ecx
	movl	%r11d, %ebp
	andl	$16777215, %ebp
	movslq	%ecx, %rcx
	movl	%ebp, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L11948
.L11768:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L11949
.L11770:
	movl	%r11d, %ecx
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L11769
	testb	$1, 46264(%rbx,%rax)
	je	.L11769
	movq	35000(%rdx), %rax
	movq	%rax, 984(%rbx)
	jmp	.L11760
.L11771:
	cmpl	$79, %r11d
	ja	.L11820
	movl	%r11d, %ebp
	jmp	.L11760
.L11767:
	movl	%r11d, %ebp
	andl	$16777215, %ebp
.L11769:
	movl	16(%rsp), %edx
	movq	%rbx, %r8
	movl	$1, %ecx
	movl	32(%rsp), %esi
	movl	%r14d, %edi
	movl	%r11d, 8(%rsp)
	call	s370_validate_operand.part.11
	movl	8(%rsp), %r11d
	jmp	.L11760
.L11949:
	cmpb	43192(%rbx,%rax), %cl
	je	.L11770
	jmp	.L11769
.L11820:
	movq	%rbx, %rdi
	movl	%r11d, 8(%rsp)
	call	s370_store_int_timer
	movl	8(%rsp), %r11d
	jmp	.L11922
.L11948:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L11768
	jmp	.L11769
.L11942:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L11776
.L11777:
	movzbl	97(%rbx), %r8d
.L11775:
	movl	36(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movq	%r10, 24(%rsp)
	movl	%r11d, 8(%rsp)
	call	s370_logical_to_main_l
	movq	24(%rsp), %r10
	movl	8(%rsp), %r11d
	jmp	.L11779
.L11943:
	cmpb	43192(%rbx,%rdx), %sil
	je	.L11778
.L11826:
	movzbl	%sil, %r8d
	jmp	.L11775
.L11925:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L11789
.L11833:
	movzbl	%sil, %r8d
	jmp	.L11790
	.cfi_endproc
.LFE1115:
	.size	s370_move_with_offset, .-s370_move_with_offset
	.p2align 4,,15
	.globl	s370_move_zones
	.type	s370_move_zones, @function
s370_move_zones:
.LFB1116:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r13d
	movl	%eax, %esi
	shrl	$16, %r13d
	shrl	$28, %esi
	andl	$4095, %r13d
	testl	%esi, %esi
	movl	%esi, (%rsp)
	je	.L11951
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %r13d
	andl	$16777215, %r13d
.L11951:
	movl	%eax, %r14d
	shrl	$12, %eax
	andl	$4095, %r14d
	andl	$15, %eax
	movl	%eax, 40(%rsp)
	je	.L11952
	cltq
	addl	192(%rbx,%rax,8), %r14d
	andl	$16777215, %r14d
.L11952:
	movzbl	1(%rdi), %ebp
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	cmpl	$83, %r14d
	jbe	.L12206
.L11954:
	movl	(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L11955
	leal	1(%rax), %edx
	movl	%r13d, %esi
	shrl	$11, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L12207
.L11956:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L12208
.L11957:
	movl	%r13d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L12076
	testb	$1, 46264(%rbx,%rsi)
	je	.L12076
	movq	35000(%rax), %r11
	movl	%r13d, %r12d
	movzbl	%cl, %r8d
	movq	%r11, 984(%rbx)
	xorq	26808(%rax), %r12
.L11959:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 8(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L11960
	leal	1(%rax), %edx
	movl	%r14d, %esi
	shrl	$11, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L12209
.L11961:
	testb	%r8b, %r8b
	jne	.L12210
.L11962:
	movl	%r14d, %edx
	andl	$14680064, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L11960
	testb	$4, 46264(%rbx,%rsi)
	je	.L11960
	movl	%r14d, %r15d
	xorq	26808(%rax), %r15
.L11963:
	movl	$2047, %r10d
	movl	%r13d, %eax
	subl	%ebp, %r10d
	andl	$2047, %eax
	cmpl	%r10d, %eax
	jg	.L11964
	movl	%r14d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L11965
	leaq	16(%r15), %rdx
	leal	1(%rbp), %eax
	cmpq	%rdx, %r12
	leaq	16(%r12), %rdx
	setae	%cl
	cmpq	%rdx, %r15
	setae	%dl
	orb	%dl, %cl
	je	.L11966
	cmpl	$15, %eax
	jbe	.L11966
	movl	%eax, %esi
	movdqa	.LC9(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %esi
	movdqa	.LC8(%rip), %xmm2
	xorl	%edi, %edi
	movl	%esi, %ecx
	sall	$4, %ecx
.L11972:
	movdqu	(%r12,%rdx), %xmm0
	addl	$1, %edi
	movdqu	(%r15,%rdx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rdx)
	addq	$16, %rdx
	cmpl	%edi, %esi
	ja	.L11972
	movl	%ecx, %edx
	addq	%rdx, %r12
	addq	%rdx, %r15
	cmpl	%ecx, %eax
	je	.L11982
	.p2align 4,,10
	.p2align 3
.L11970:
	movzbl	(%r12), %eax
	addl	$1, %ecx
	addq	$1, %r12
	movzbl	(%r15), %edx
	addq	$1, %r15
	andl	$15, %eax
	andl	$-16, %edx
	orl	%edx, %eax
	movb	%al, -1(%r12)
	cmpl	%ecx, %ebp
	jge	.L11970
.L11982:
	orb	$6, (%r11)
.L11971:
	cmpl	$83, %r13d
	jbe	.L12211
.L11950:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L11966:
	.cfi_restore_state
	xorl	%eax, %eax
	.p2align 4,,10
	.p2align 3
.L11974:
	movzbl	(%r12,%rax), %edx
	movzbl	(%r15,%rax), %ecx
	andl	$15, %edx
	andl	$-16, %ecx
	orl	%ecx, %edx
	movb	%dl, (%r12,%rax)
	addq	$1, %rax
	cmpl	%eax, %ebp
	jge	.L11974
	jmp	.L11982
.L12209:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L11961
.L11960:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %edi
	movq	%r11, 24(%rsp)
	call	s370_logical_to_main_l
	movq	24(%rsp), %r11
	movq	%rax, %r15
	jmp	.L11963
.L12210:
	cmpb	%r8b, 43192(%rbx,%rsi)
	je	.L11962
	jmp	.L11960
.L11964:
	movl	$2048, 24(%rsp)
	subl	%eax, 24(%rsp)
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L11991
	leal	1(%rax), %esi
	movl	24(%rsp), %eax
	movslq	%esi, %rsi
	leal	(%rax,%r13), %ecx
	movl	%ecx, %edi
	andl	$16777215, %edi
	movl	%edi, %edx
	shrl	$11, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rax
	movl	2232(%rax), %r9d
	cmpl	%r9d, 320(%rbx,%rsi,8)
	jne	.L12212
.L11992:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L12213
.L11994:
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L11993
	testb	$1, 46264(%rbx,%rdx)
	je	.L11993
	movq	35000(%rax), %rsi
	movq	%rdi, (%rsp)
	movq	%rsi, 984(%rbx)
	movq	26808(%rax), %rax
	movq	%rsi, 16(%rsp)
	xorq	%rax, (%rsp)
.L11995:
	movl	%r14d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L11996
	movq	%r15, %rax
.L11998:
	movzbl	(%rax), %edx
	addq	$1, %rax
	addq	$1, %r12
	movzbl	-1(%r12), %ecx
	andl	$-16, %edx
	andl	$15, %ecx
	orl	%ecx, %edx
	movb	%dl, -1(%r12)
	movl	%eax, %edx
	subl	%r15d, %edx
	cmpl	%edx, 24(%rsp)
	jg	.L11998
	movl	%ebp, %esi
	subl	24(%rsp), %esi
	js	.L12005
	movq	(%rsp), %r10
	leaq	16(%rax), %rdx
	leal	1(%rsi), %edi
	cmpq	%rdx, %r10
	movq	%r10, %rdx
	setae	%cl
	addq	$16, %rdx
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L12000
	cmpl	$15, %edi
	jbe	.L12000
	movl	%edi, %r9d
	movdqa	.LC9(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r9d
	movdqa	.LC8(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %ecx
	sall	$4, %ecx
.L12006:
	movdqu	(%r10,%rdx), %xmm0
	addl	$1, %r8d
	movdqu	(%rax,%rdx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r10,%rdx)
	addq	$16, %rdx
	cmpl	%r8d, %r9d
	ja	.L12006
	movq	(%rsp), %r8
	movl	%ecx, %edx
	addq	%rdx, %rax
	addq	%rdx, %r8
	cmpl	%edi, %ecx
	je	.L12005
.L12004:
	movzbl	(%r8), %edx
	addl	$1, %ecx
	addq	$1, %r8
	movzbl	(%rax), %edi
	addq	$1, %rax
	andl	$15, %edx
	andl	$-16, %edi
	orl	%edi, %edx
	movb	%dl, -1(%r8)
	cmpl	%esi, %ecx
	jle	.L12004
.L12005:
	orb	$6, (%r11)
	movq	16(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L11971
.L12207:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L11956
.L11955:
	movzbl	97(%rbx), %r8d
.L11958:
	movl	(%rsp), %esi
	leal	1(%rbp), %r9d
	movl	$1, %ecx
	andl	$511, %r9d
	movq	%rbx, %rdx
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	movq	984(%rbx), %r11
	movq	%rax, %r12
	movzbl	97(%rbx), %r8d
	jmp	.L11959
.L11996:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L12009
	leal	(%r10,%r14), %ecx
	leal	1(%rax), %esi
	movl	%ecx, %edi
	andl	$16777215, %edi
	movslq	%esi, %rsi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbx,%rsi,8)
	jne	.L12214
.L12010:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L12215
.L12012:
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L12011
	testb	$4, 46264(%rbx,%rax)
	je	.L12011
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L12013:
	cmpl	%r10d, 24(%rsp)
	je	.L12216
	jge	.L12031
	movq	%r15, %rdx
.L12033:
	movzbl	(%rdx), %ecx
	addq	$1, %rdx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	andl	$-16, %ecx
	andl	$15, %esi
	orl	%esi, %ecx
	movb	%cl, -1(%r12)
	movl	%edx, %ecx
	subl	%r15d, %ecx
	cmpl	%ecx, 24(%rsp)
	jg	.L12033
	movl	%r10d, %ecx
	subl	24(%rsp), %ecx
	testl	%ecx, %ecx
	jle	.L12034
	movq	(%rsp), %r12
	leaq	16(%rdx), %rsi
	cmpq	%rsi, %r12
	movq	%r12, %rsi
	setae	%dil
	addq	$16, %rsi
	cmpq	%rsi, %rdx
	setae	%sil
	orb	%sil, %dil
	je	.L12035
	cmpl	$15, %ecx
	jbe	.L12035
	movl	%ecx, %r9d
	movdqa	.LC9(%rip), %xmm3
	xorl	%esi, %esi
	shrl	$4, %r9d
	movdqa	.LC8(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %edi
	sall	$4, %edi
.L12040:
	movdqu	(%rdx,%rsi), %xmm0
	addl	$1, %r8d
	movdqu	(%r12,%rsi), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rsi)
	addq	$16, %rsi
	cmpl	%r9d, %r8d
	jb	.L12040
	movq	(%rsp), %r9
	movl	%edi, %esi
	addq	%rsi, %rdx
	cmpl	%edi, %ecx
	leaq	(%r9,%rsi), %r8
	je	.L12041
.L12039:
	movzbl	(%rdx), %esi
	addl	$1, %edi
	addq	$1, %r8
	movzbl	-1(%r8), %r9d
	addq	$1, %rdx
	andl	$-16, %esi
	andl	$15, %r9d
	orl	%r9d, %esi
	movb	%sil, -1(%r8)
	cmpl	%edi, %ecx
	jg	.L12039
.L12041:
	movq	(%rsp), %rdi
	subl	$1, %ecx
	leaq	1(%rdi,%rcx), %rdi
	movq	%rdi, (%rsp)
.L12034:
	movl	%ebp, %esi
	subl	%r10d, %esi
	js	.L12005
	movq	(%rsp), %r10
	leal	1(%rsi), %edi
	leaq	16(%r10), %rdx
	cmpq	%rdx, %rax
	leaq	16(%rax), %rdx
	setae	%cl
	cmpq	%rdx, %r10
	setae	%dl
	orb	%dl, %cl
	je	.L12043
	cmpl	$15, %edi
	jbe	.L12043
	movl	%edi, %r9d
	movdqa	.LC9(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r9d
	movdqa	.LC8(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %ecx
	sall	$4, %ecx
.L12048:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %r8d
	movdqu	(%r10,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r10,%rdx)
	addq	$16, %rdx
	cmpl	%r9d, %r8d
	jb	.L12048
	movq	(%rsp), %r8
	movl	%ecx, %edx
	addq	%rdx, %rax
	addq	%rdx, %r8
	cmpl	%ecx, %edi
	je	.L12005
.L12047:
	movzbl	(%rax), %edx
	addl	$1, %ecx
	addq	$1, %r8
	movzbl	-1(%r8), %edi
	addq	$1, %rax
	andl	$-16, %edx
	andl	$15, %edi
	orl	%edi, %edx
	movb	%dl, -1(%r8)
	cmpl	%ecx, %esi
	jge	.L12047
	jmp	.L12005
.L12031:
	movq	%r12, %rdx
.L12052:
	movzbl	(%rdx), %esi
	addq	$1, %rdx
	addq	$1, %r15
	movzbl	-1(%r15), %ecx
	andl	$15, %esi
	andl	$-16, %ecx
	orl	%esi, %ecx
	movb	%cl, -1(%rdx)
	movl	%edx, %ecx
	subl	%r12d, %ecx
	cmpl	%ecx, %r10d
	jg	.L12052
	movl	24(%rsp), %ecx
	subl	%r10d, %ecx
	testl	%ecx, %ecx
	jle	.L12053
	leaq	16(%rdx), %rsi
	cmpq	%rsi, %rax
	leaq	16(%rax), %rsi
	setae	%dil
	cmpq	%rsi, %rdx
	setae	%sil
	orb	%sil, %dil
	je	.L12054
	cmpl	$15, %ecx
	jbe	.L12054
	movl	%ecx, %r9d
	movdqa	.LC9(%rip), %xmm3
	xorl	%esi, %esi
	shrl	$4, %r9d
	movdqa	.LC8(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %edi
	sall	$4, %edi
.L12059:
	movdqu	(%rax,%rsi), %xmm0
	addl	$1, %r8d
	movdqu	(%rdx,%rsi), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%rdx,%rsi)
	addq	$16, %rsi
	cmpl	%r9d, %r8d
	jb	.L12059
	movl	%edi, %r8d
	addq	%r8, %rdx
	addq	%rax, %r8
	cmpl	%edi, %ecx
	je	.L12060
.L12058:
	movzbl	(%r8), %esi
	addl	$1, %edi
	addq	$1, %rdx
	movzbl	-1(%rdx), %r9d
	addq	$1, %r8
	andl	$-16, %esi
	andl	$15, %r9d
	orl	%r9d, %esi
	movb	%sil, -1(%rdx)
	cmpl	%edi, %ecx
	jg	.L12058
.L12060:
	subl	$1, %ecx
	leaq	1(%rax,%rcx), %rax
.L12053:
	movl	%ebp, %esi
	subl	24(%rsp), %esi
	js	.L12005
	movq	(%rsp), %r10
	leaq	16(%rax), %rdx
	leal	1(%rsi), %edi
	cmpq	%rdx, %r10
	movq	%r10, %rdx
	setae	%cl
	addq	$16, %rdx
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L12062
	cmpl	$15, %edi
	jbe	.L12062
	movl	%edi, %r9d
	movdqa	.LC9(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r9d
	movdqa	.LC8(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %ecx
	sall	$4, %ecx
.L12067:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %r8d
	movdqu	(%r10,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r10,%rdx)
	addq	$16, %rdx
	cmpl	%r9d, %r8d
	jb	.L12067
	movq	(%rsp), %r8
	movl	%ecx, %edx
	addq	%rdx, %rax
	addq	%rdx, %r8
	cmpl	%ecx, %edi
	je	.L12005
.L12066:
	movzbl	(%rax), %edx
	addl	$1, %ecx
	addq	$1, %r8
	movzbl	-1(%r8), %edi
	addq	$1, %rax
	andl	$-16, %edx
	andl	$15, %edi
	orl	%edi, %edx
	movb	%dl, -1(%r8)
	cmpl	%ecx, %esi
	jge	.L12066
	jmp	.L12005
.L12216:
	movl	24(%rsp), %edi
	leaq	16(%r15), %rcx
	movl	$1, %edx
	testl	%edi, %edi
	cmovg	%edi, %edx
	cmpq	%rcx, %r12
	setae	%sil
	leaq	16(%r12), %rcx
	cmpq	%rcx, %r15
	setae	%cl
	orb	%cl, %sil
	je	.L12015
	cmpl	$15, %edx
	jbe	.L12015
	movl	%edx, %r8d
	movdqa	.LC9(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r8d
	movdqa	.LC8(%rip), %xmm2
	xorl	%esi, %esi
	movl	%r8d, %edi
	sall	$4, %edi
.L12020:
	movdqu	(%r15,%rcx), %xmm0
	addl	$1, %esi
	movdqu	(%r12,%rcx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %esi
	jb	.L12020
	movl	%edi, %ecx
	addq	%rcx, %r12
	addq	%rcx, %r15
	cmpl	%edi, %edx
	movl	%edi, %ecx
	je	.L12021
.L12019:
	movzbl	(%r15), %edx
	addl	$1, %ecx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	addq	$1, %r15
	andl	$-16, %edx
	andl	$15, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r12)
	cmpl	%ecx, 24(%rsp)
	jg	.L12019
.L12021:
	movl	%ebp, %esi
	subl	24(%rsp), %esi
	js	.L12005
	movq	(%rsp), %r10
	leaq	16(%rax), %rdx
	leal	1(%rsi), %edi
	cmpq	%rdx, %r10
	movq	%r10, %rdx
	setae	%cl
	addq	$16, %rdx
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L12023
	cmpl	$15, %edi
	jbe	.L12023
	movl	%edi, %r9d
	movdqa	.LC9(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r9d
	movdqa	.LC8(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %ecx
	sall	$4, %ecx
.L12028:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %r8d
	movdqu	(%r10,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r10,%rdx)
	addq	$16, %rdx
	cmpl	%r8d, %r9d
	ja	.L12028
	movq	(%rsp), %r8
	movl	%ecx, %edx
	addq	%rdx, %rax
	addq	%rdx, %r8
	cmpl	%edi, %ecx
	je	.L12005
.L12027:
	movzbl	(%r8), %edx
	addl	$1, %ecx
	addq	$1, %r8
	movzbl	(%rax), %edi
	addq	$1, %rax
	andl	$15, %edx
	andl	$-16, %edi
	orl	%edi, %edx
	movb	%dl, -1(%r8)
	cmpl	%ecx, %esi
	jge	.L12027
	jmp	.L12005
.L12035:
	movq	(%rsp), %r9
	xorl	%esi, %esi
.L12042:
	movzbl	(%rdx,%rsi), %edi
	movzbl	(%r9,%rsi), %r8d
	andl	$-16, %edi
	andl	$15, %r8d
	orl	%r8d, %edi
	movb	%dil, (%r9,%rsi)
	addq	$1, %rsi
	cmpl	%esi, %ecx
	jg	.L12042
	jmp	.L12041
.L12043:
	movq	(%rsp), %r8
	xorl	%edx, %edx
.L12050:
	movzbl	(%rax,%rdx), %ecx
	movzbl	(%r8,%rdx), %edi
	andl	$-16, %ecx
	andl	$15, %edi
	orl	%edi, %ecx
	movb	%cl, (%r8,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %esi
	jge	.L12050
	jmp	.L12005
.L12015:
	xorl	%edx, %edx
.L12022:
	movzbl	(%r15,%rdx), %ecx
	movzbl	(%r12,%rdx), %esi
	andl	$-16, %ecx
	andl	$15, %esi
	orl	%esi, %ecx
	movb	%cl, (%r12,%rdx)
	addq	$1, %rdx
	cmpl	%edx, 24(%rsp)
	jg	.L12022
	jmp	.L12021
.L12054:
	xorl	%esi, %esi
.L12061:
	movzbl	(%rax,%rsi), %edi
	movzbl	(%rdx,%rsi), %r8d
	andl	$-16, %edi
	andl	$15, %r8d
	orl	%r8d, %edi
	movb	%dil, (%rdx,%rsi)
	addq	$1, %rsi
	cmpl	%esi, %ecx
	jg	.L12061
	jmp	.L12060
.L12062:
	movq	(%rsp), %r8
	xorl	%edx, %edx
.L12069:
	movzbl	(%rax,%rdx), %ecx
	movzbl	(%r8,%rdx), %edi
	andl	$-16, %ecx
	andl	$15, %edi
	orl	%edi, %ecx
	movb	%cl, (%r8,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %esi
	jge	.L12069
	jmp	.L12005
.L12214:
	movzbl	44216(%rbx,%rax), %r8d
	testb	%r8b, 1976(%rbx,%rsi)
	jne	.L12010
.L12205:
	movzbl	97(%rbx), %r8d
.L12011:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 32(%rsp)
	movq	%r11, 8(%rsp)
	call	s370_logical_to_main_l
	movl	32(%rsp), %r10d
	movq	8(%rsp), %r11
	jmp	.L12013
.L12215:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L12012
	jmp	.L12011
.L12212:
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rsi)
	jne	.L11992
	movzbl	97(%rbx), %r8d
.L11993:
	movl	(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 44(%rsp)
	movq	%r11, 32(%rsp)
	call	s370_logical_to_main_l
	movl	44(%rsp), %r10d
	movq	%rax, (%rsp)
	movq	984(%rbx), %rax
	movq	32(%rsp), %r11
	movq	%rax, 16(%rsp)
	jmp	.L11995
.L12000:
	movq	(%rsp), %r8
	xorl	%edx, %edx
.L12008:
	movzbl	(%r8,%rdx), %ecx
	movzbl	(%rax,%rdx), %edi
	andl	$15, %ecx
	andl	$-16, %edi
	orl	%edi, %ecx
	movb	%cl, (%r8,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %esi
	jge	.L12008
	jmp	.L12005
.L12009:
	leal	(%r10,%r14), %edi
	andl	$16777215, %edi
	jmp	.L12205
.L12023:
	movq	(%rsp), %r8
	xorl	%edx, %edx
.L12030:
	movzbl	(%r8,%rdx), %ecx
	movzbl	(%rax,%rdx), %edi
	andl	$15, %ecx
	andl	$-16, %edi
	orl	%edi, %ecx
	movb	%cl, (%r8,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %esi
	jge	.L12030
	jmp	.L12005
.L12208:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L11957
.L12076:
	movzbl	%cl, %r8d
	jmp	.L11958
.L11965:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L11975
	leal	(%r10,%r14), %ecx
	leal	1(%rax), %esi
	movl	%ecx, %edi
	andl	$16777215, %edi
	movslq	%esi, %rsi
	movl	%edi, %eax
	shrl	$11, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbx,%rsi,8)
	jne	.L12217
.L11976:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L12218
.L11978:
	andl	$14680064, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L11977
	testb	$4, 46264(%rbx,%rax)
	je	.L11977
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L11979:
	movq	%r12, %rdx
.L11981:
	movzbl	(%rdx), %esi
	addq	$1, %rdx
	addq	$1, %r15
	movzbl	-1(%r15), %ecx
	andl	$15, %esi
	andl	$-16, %ecx
	orl	%esi, %ecx
	movb	%cl, -1(%rdx)
	movl	%edx, %ecx
	subl	%r12d, %ecx
	cmpl	%ecx, %r10d
	jg	.L11981
	movl	%ebp, %edi
	subl	%r10d, %edi
	js	.L11982
	leaq	16(%rdx), %rcx
	leal	1(%rdi), %r8d
	cmpq	%rcx, %rax
	leaq	16(%rax), %rcx
	setae	%sil
	cmpq	%rcx, %rdx
	setae	%cl
	orb	%cl, %sil
	je	.L11983
	cmpl	$15, %r8d
	jbe	.L11983
	movl	%r8d, %r10d
	movdqa	.LC9(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r10d
	movdqa	.LC8(%rip), %xmm2
	xorl	%r9d, %r9d
	movl	%r10d, %esi
	sall	$4, %esi
.L11988:
	movdqu	(%rdx,%rcx), %xmm0
	addl	$1, %r9d
	movdqu	(%rax,%rcx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%rdx,%rcx)
	addq	$16, %rcx
	cmpl	%r9d, %r10d
	ja	.L11988
	movl	%esi, %ecx
	addq	%rcx, %rdx
	addq	%rcx, %rax
	cmpl	%r8d, %esi
	je	.L11982
.L11987:
	movzbl	(%rdx), %ecx
	addl	$1, %esi
	addq	$1, %rdx
	movzbl	(%rax), %r8d
	addq	$1, %rax
	andl	$15, %ecx
	andl	$-16, %r8d
	orl	%r8d, %ecx
	movb	%cl, -1(%rdx)
	cmpl	%esi, %edi
	jge	.L11987
	jmp	.L11982
.L12211:
	addl	%r13d, %ebp
	cmpl	$79, %ebp
	jbe	.L11950
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	s370_fetch_int_timer
.L12217:
	.cfi_restore_state
	movzbl	44216(%rbx,%rax), %r8d
	testb	%r8b, 1976(%rbx,%rsi)
	jne	.L11976
.L12204:
	movzbl	97(%rbx), %r8d
.L11977:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 8(%rsp)
	movq	%r11, (%rsp)
	call	s370_logical_to_main_l
	movl	8(%rsp), %r10d
	movq	(%rsp), %r11
	jmp	.L11979
.L12218:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L11978
	jmp	.L11977
.L12206:
	leal	(%r14,%rbp), %eax
	cmpl	$79, %eax
	jbe	.L11954
	movq	%rbx, %rdi
	call	s370_store_int_timer
	jmp	.L11954
.L11991:
	movl	24(%rsp), %eax
	movzbl	97(%rbx), %r8d
	leal	(%rax,%r13), %edi
	andl	$16777215, %edi
	jmp	.L11993
.L12213:
	cmpb	43192(%rbx,%rdx), %r8b
	je	.L11994
	jmp	.L11993
.L11975:
	leal	(%r10,%r14), %edi
	andl	$16777215, %edi
	jmp	.L12204
.L11983:
	xorl	%ecx, %ecx
.L11990:
	movzbl	(%rdx,%rcx), %esi
	movzbl	(%rax,%rcx), %r8d
	andl	$15, %esi
	andl	$-16, %r8d
	orl	%r8d, %esi
	movb	%sil, (%rdx,%rcx)
	addq	$1, %rcx
	cmpl	%ecx, %edi
	jge	.L11990
	jmp	.L11982
	.cfi_endproc
.LFE1116:
	.size	s370_move_zones, .-s370_move_zones
	.p2align 4,,15
	.globl	s370_multiply_register
	.type	s370_multiply_register, @function
s370_multiply_register:
.LFB1117:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movzbl	1(%rdi), %eax
	movb	$2, 130(%rsi)
	addq	$2, 136(%rsi)
	movzbl	%al, %ebp
	movl	%eax, %r12d
	sarl	$4, %ebp
	andl	$15, %r12d
	testb	$1, %bpl
	je	.L12220
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L12220:
	leal	1(%rbp), %eax
	movslq	%r12d, %r12
	movslq	%ebp, %rbp
	cltq
	movslq	192(%rbx,%r12,8), %rcx
	leaq	(%rbx,%rax,8), %rdx
	movslq	192(%rdx), %rax
	imulq	%rcx, %rax
	movq	%rax, %rcx
	shrq	$32, %rcx
	movl	%ecx, 192(%rbx,%rbp,8)
	movl	%eax, 192(%rdx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE1117:
	.size	s370_multiply_register, .-s370_multiply_register
	.p2align 4,,15
	.globl	s370_multiply
	.type	s370_multiply, @function
s370_multiply:
.LFB1118:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %esi
	bswap	%esi
	movl	%esi, %eax
	movl	%esi, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%esi, %ebp
	movl	%eax, %r13d
	andl	$4095, %ebp
	andl	$15, %r13d
	andl	$15, %edx
	jne	.L12262
.L12226:
	shrl	$12, %esi
	andl	$15, %esi
	movl	%esi, %r14d
	je	.L12227
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L12227:
	movl	%ebp, %r12d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r12d
	testb	$1, %al
	je	.L12228
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L12228:
	testb	$3, %bpl
	jne	.L12263
.L12229:
	leal	-77(%r12), %eax
	cmpl	$6, %eax
	jbe	.L12264
.L12231:
	leal	5(%r14), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L12232
	leal	1(%rax), %ecx
	movl	%r12d, %eax
	shrl	$11, %eax
	movslq	%ecx, %rcx
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L12265
.L12233:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L12266
.L12234:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L12232
	testb	$4, 46264(%rbx,%rax)
	je	.L12232
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L12235:
	movl	(%rax), %eax
	bswap	%eax
.L12236:
	leal	1(%r13), %edx
	cltq
	movslq	%r13d, %r13
	movslq	%edx, %rdx
	leaq	(%rbx,%rdx,8), %rcx
	movslq	192(%rcx), %rdx
	imulq	%rax, %rdx
	movq	%rdx, %rax
	shrq	$32, %rax
	movl	%eax, 192(%rbx,%r13,8)
	movl	%edx, 192(%rcx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L12265:
	.cfi_restore_state
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L12233
.L12232:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r12d, %edi
	call	s370_logical_to_main_l
	jmp	.L12235
.L12263:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L12229
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r12d, %edi
	call	s370_vfetch4_full
	jmp	.L12236
.L12262:
	movslq	%edx, %rdx
	addl	192(%rbx,%rdx,8), %ebp
	jmp	.L12226
.L12266:
	cmpb	43192(%rbx,%rax), %cl
	je	.L12234
	jmp	.L12232
.L12264:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L12231
	.cfi_endproc
.LFE1118:
	.size	s370_multiply, .-s370_multiply
	.p2align 4,,15
	.globl	s370_multiply_halfword
	.type	s370_multiply_halfword, @function
s370_multiply_halfword:
.LFB1119:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %edx
	shrl	$20, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L12300
.L12268:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L12269
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L12269:
	movl	%ebp, %r13d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r13d
	testb	$1, %bpl
	jne	.L12301
.L12270:
	leal	-79(%r13), %edx
	cmpl	$4, %edx
	jbe	.L12302
.L12272:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L12273
	leal	1(%rdx), %esi
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L12303
.L12274:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L12304
.L12275:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L12273
	testb	$4, 46264(%rbx,%rcx)
	je	.L12273
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L12276:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L12277:
	movslq	%r12d, %r12
	movswq	%ax, %rax
	leaq	(%rbx,%r12,8), %rcx
	movslq	192(%rcx), %rdx
	imulq	%rax, %rdx
	movl	%edx, 192(%rcx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L12303:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L12274
.L12273:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	jmp	.L12276
.L12301:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2047, %edx
	jne	.L12270
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_vfetch2_full
	jmp	.L12277
.L12300:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	jmp	.L12268
.L12304:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L12275
	jmp	.L12273
.L12302:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L12272
	.cfi_endproc
.LFE1119:
	.size	s370_multiply_halfword, .-s370_multiply_halfword
	.p2align 4,,15
	.globl	s370_multiply_halfword_immediate
	.type	s370_multiply_halfword_immediate, @function
s370_multiply_halfword_immediate:
.LFB1120:
	.cfi_startproc
	movl	(%rdi), %eax
	addq	$4, 136(%rsi)
	bswap	%eax
	movl	%eax, %edx
	cwtl
	shrl	$20, %edx
	andl	$15, %edx
	leaq	(%rsi,%rdx,8), %rdx
	imull	192(%rdx), %eax
	movl	%eax, 192(%rdx)
	ret
	.cfi_endproc
.LFE1120:
	.size	s370_multiply_halfword_immediate, .-s370_multiply_halfword_immediate
	.p2align 4,,15
	.globl	s370_multiply_single_register
	.type	s370_multiply_single_register, @function
s370_multiply_single_register:
.LFB1121:
	.cfi_startproc
	movzbl	3(%rdi), %ecx
	addq	$4, 136(%rsi)
	movq	%rcx, %rax
	andl	$15, %ecx
	shrq	%rax
	andl	$120, %eax
	leaq	(%rsi,%rax), %rdx
	movl	192(%rdx), %eax
	imull	192(%rsi,%rcx,8), %eax
	movl	%eax, 192(%rdx)
	ret
	.cfi_endproc
.LFE1121:
	.size	s370_multiply_single_register, .-s370_multiply_single_register
	.p2align 4,,15
	.globl	s370_multiply_single
	.type	s370_multiply_single, @function
s370_multiply_single:
.LFB1122:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %edx
	shrl	$20, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L12340
.L12308:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L12309
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L12309:
	movl	%ebp, %r13d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$16777215, %r13d
	testb	$3, %bpl
	jne	.L12341
.L12310:
	leal	-77(%r13), %edx
	cmpl	$6, %edx
	jbe	.L12342
.L12312:
	leal	5(%r14), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L12313
	leal	1(%rdx), %esi
	movl	%r13d, %ecx
	shrl	$11, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %eax
	cmpl	%eax, 320(%rbx,%rsi,8)
	jne	.L12343
.L12314:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L12344
.L12315:
	andl	$14680064, %ebp
	orl	2224(%rbx), %ebp
	cmpl	10424(%rdx), %ebp
	jne	.L12313
	testb	$4, 46264(%rbx,%rcx)
	je	.L12313
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L12316:
	movl	(%rax), %eax
	bswap	%eax
.L12317:
	movslq	%r12d, %r12
	leaq	(%rbx,%r12,8), %rdx
	imull	192(%rdx), %eax
	movl	%eax, 192(%rdx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
.L12343:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L12314
.L12313:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_logical_to_main_l
	jmp	.L12316
.L12341:
	movl	%ebp, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L12310
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r13d, %edi
	call	s370_vfetch4_full
	jmp	.L12317
.L12340:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	jmp	.L12308
.L12344:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L12315
	jmp	.L12313
.L12342:
	movq	%rbx, %rdi
	call	s370_store_int_timer
	.p2align 4,,5
	jmp	.L12312
	.cfi_endproc
.LFE1122:
	.size	s370_multiply_single, .-s370_multiply_single
	.p2align 4,,15
	.globl	s390_add_register
	.type	s390_add_register, @function
s390_add_register:
.LFB1169:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	movb	$2, 130(%rsi)
	movq	%rsi, %rax
	addq	$2, 136(%rsi)
	movq	%rcx, %rdx
	andl	$15, %ecx
	shrq	%rdx
	andl	$120, %edx
	addq	%rsi, %rdx
	movl	192(%rsi,%rcx,8), %esi
	movl	192(%rdx), %edi
	leal	(%rdi,%rsi), %ecx
	cmpl	$0, %ecx
	movl	%ecx, 192(%rdx)
	jle	.L12346
	shrl	$31, %esi
	testb	%sil, %sil
	jne	.L12358
.L12355:
	movl	$2, %edx
.L12349:
	movb	%dl, 100(%rax)
.L12345:
	rep ret
	.p2align 4,,10
	.p2align 3
.L12358:
	shrl	$31, %edi
	testb	%dil, %dil
	je	.L12355
.L12347:
	testb	$8, 101(%rax)
	movb	$3, 100(%rax)
	je	.L12345
	movq	2032(%rax), %rdx
	movl	$8, %esi
	movq	%rax, %rdi
	jmp	*%rdx
	.p2align 4,,10
	.p2align 3
.L12346:
	jne	.L12359
	shrl	$31, %esi
	testb	%sil, %sil
	je	.L12357
	shrl	$31, %edi
	testb	%dil, %dil
	jne	.L12347
.L12357:
	xorl	%edx, %edx
	jmp	.L12349
	.p2align 4,,10
	.p2align 3
.L12359:
	testl	%esi, %esi
	js	.L12356
	testl	%edi, %edi
	.p2align 4,,5
	jns	.L12347
.L12356:
	movl	$1, %edx
	.p2align 4,,2
	jmp	.L12349
	.cfi_endproc
.LFE1169:
	.size	s390_add_register, .-s390_add_register
	.p2align 4,,15
	.globl	s390_add
	.type	s390_add, @function
s390_add:
.LFB1170:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L12404
.L12361:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L12362
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %edi
.L12362:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L12405
.L12363:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L12365
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L12406
.L12366:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L12407
.L12367:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L12365
	testb	$4, 46264(%rbx,%rsi)
	je	.L12365
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L12368:
	movl	(%rax), %eax
	bswap	%eax
.L12369:
	movslq	%ebp, %rbp
	leaq	(%rbx,%rbp,8), %rcx
	movl	192(%rcx), %esi
	leal	(%rsi,%rax), %edx
	cmpl	$0, %edx
	movl	%edx, 192(%rcx)
	jle	.L12370
	shrl	$31, %eax
	testb	%al, %al
	jne	.L12408
.L12379:
	movl	$2, %eax
.L12373:
	movb	%al, 100(%rbx)
.L12360:
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L12408:
	.cfi_restore_state
	shrl	$31, %esi
	testb	%sil, %sil
	je	.L12379
.L12371:
	testb	$8, 101(%rbx)
	movb	$3, 100(%rbx)
	je	.L12360
	movq	2032(%rbx), %rax
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 16
	movl	$8, %esi
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L12370:
	.cfi_restore_state
	jne	.L12409
	shrl	$31, %eax
	testb	%al, %al
	je	.L12381
	shrl	$31, %esi
	testb	%sil, %sil
	jne	.L12371
.L12381:
	xorl	%eax, %eax
	jmp	.L12373
	.p2align 4,,10
	.p2align 3
.L12409:
	testl	%eax, %eax
	js	.L12380
	testl	%esi, %esi
	.p2align 4,,5
	jns	.L12371
.L12380:
	movl	$1, %eax
	.p2align 4,,2
	jmp	.L12373
.L12406:
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L12366
.L12365:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L12368
.L12405:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L12363
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L12369
.L12407:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L12367
	.p2align 4,,4
	jmp	.L12365
.L12404:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %edi
	jmp	.L12361
	.cfi_endproc
.LFE1170:
	.size	s390_add, .-s390_add
	.p2align 4,,15
	.globl	s390_add_halfword
	.type	s390_add_halfword, @function
s390_add_halfword:
.LFB1171:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L12454
.L12411:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L12412
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %edi
.L12412:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %dil
	jne	.L12455
.L12413:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L12415
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L12456
.L12416:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L12457
.L12417:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L12415
	testb	$4, 46264(%rbx,%rsi)
	je	.L12415
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L12418:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L12419:
	movslq	%ebp, %rbp
	cwtl
	leaq	(%rbx,%rbp,8), %rcx
	movl	192(%rcx), %esi
	leal	(%rsi,%rax), %edx
	cmpl	$0, %edx
	movl	%edx, 192(%rcx)
	jle	.L12420
	shrl	$31, %eax
	testb	%al, %al
	jne	.L12458
.L12429:
	movl	$2, %eax
.L12423:
	movb	%al, 100(%rbx)
.L12410:
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L12458:
	.cfi_restore_state
	shrl	$31, %esi
	testb	%sil, %sil
	je	.L12429
.L12421:
	testb	$8, 101(%rbx)
	movb	$3, 100(%rbx)
	je	.L12410
	movq	2032(%rbx), %rax
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 16
	movl	$8, %esi
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L12420:
	.cfi_restore_state
	jne	.L12459
	shrl	$31, %eax
	testb	%al, %al
	je	.L12431
	shrl	$31, %esi
	testb	%sil, %sil
	jne	.L12421
.L12431:
	xorl	%eax, %eax
	jmp	.L12423
	.p2align 4,,10
	.p2align 3
.L12459:
	testl	%eax, %eax
	js	.L12430
	testl	%esi, %esi
	.p2align 4,,5
	jns	.L12421
.L12430:
	movl	$1, %eax
	.p2align 4,,2
	jmp	.L12423
.L12456:
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L12416
.L12415:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L12418
.L12455:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2047, %edx
	jne	.L12413
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch2_full
	jmp	.L12419
.L12457:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L12417
	.p2align 4,,4
	jmp	.L12415
.L12454:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %edi
	jmp	.L12411
	.cfi_endproc
.LFE1171:
	.size	s390_add_halfword, .-s390_add_halfword
	.p2align 4,,15
	.globl	s390_add_halfword_immediate
	.type	s390_add_halfword_immediate, @function
s390_add_halfword_immediate:
.LFB1172:
	.cfi_startproc
	movl	(%rdi), %edx
	movq	%rsi, %rax
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	bswap	%edx
	movl	%edx, %ecx
	movswl	%dx, %edx
	shrl	$20, %ecx
	andl	$15, %ecx
	leaq	(%rsi,%rcx,8), %rsi
	movl	192(%rsi), %edi
	leal	(%rdi,%rdx), %ecx
	cmpl	$0, %ecx
	movl	%ecx, 192(%rsi)
	jle	.L12461
	shrl	$31, %edx
	testb	%dl, %dl
	jne	.L12473
.L12470:
	movl	$2, %edx
.L12464:
	movb	%dl, 100(%rax)
.L12460:
	rep ret
	.p2align 4,,10
	.p2align 3
.L12473:
	shrl	$31, %edi
	testb	%dil, %dil
	je	.L12470
.L12462:
	testb	$8, 101(%rax)
	movb	$3, 100(%rax)
	je	.L12460
	movq	2032(%rax), %rdx
	movl	$8, %esi
	movq	%rax, %rdi
	jmp	*%rdx
	.p2align 4,,10
	.p2align 3
.L12461:
	jne	.L12474
	shrl	$31, %edx
	testb	%dl, %dl
	je	.L12472
	shrl	$31, %edi
	testb	%dil, %dil
	jne	.L12462
.L12472:
	xorl	%edx, %edx
	jmp	.L12464
	.p2align 4,,10
	.p2align 3
.L12474:
	testl	%edx, %edx
	js	.L12471
	testl	%edi, %edi
	.p2align 4,,5
	jns	.L12462
.L12471:
	movl	$1, %edx
	.p2align 4,,2
	jmp	.L12464
	.cfi_endproc
.LFE1172:
	.size	s390_add_halfword_immediate, .-s390_add_halfword_immediate
	.p2align 4,,15
	.globl	s390_add_logical_register
	.type	s390_add_logical_register, @function
s390_add_logical_register:
.LFB1173:
	.cfi_startproc
	movzbl	1(%rdi), %edi
	addq	$2, 136(%rsi)
	movq	%rdi, %rax
	andl	$15, %edi
	shrq	%rax
	andl	$120, %eax
	leaq	(%rsi,%rax), %rcx
	movl	192(%rsi,%rdi,8), %eax
	movl	192(%rcx), %edx
	addl	%edx, %eax
	movl	%eax, 192(%rcx)
	xorl	%ecx, %ecx
	testl	%eax, %eax
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1173:
	.size	s390_add_logical_register, .-s390_add_logical_register
	.p2align 4,,15
	.globl	s390_1E00
	.type	s390_1E00, @function
s390_1E00:
.LFB1174:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1174:
	.size	s390_1E00, .-s390_1E00
	.p2align 4,,15
	.globl	s390_1E01
	.type	s390_1E01, @function
s390_1E01:
.LFB1175:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1175:
	.size	s390_1E01, .-s390_1E01
	.p2align 4,,15
	.globl	s390_1E02
	.type	s390_1E02, @function
s390_1E02:
.LFB1176:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1176:
	.size	s390_1E02, .-s390_1E02
	.p2align 4,,15
	.globl	s390_1E03
	.type	s390_1E03, @function
s390_1E03:
.LFB1177:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1177:
	.size	s390_1E03, .-s390_1E03
	.p2align 4,,15
	.globl	s390_1E04
	.type	s390_1E04, @function
s390_1E04:
.LFB1178:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1178:
	.size	s390_1E04, .-s390_1E04
	.p2align 4,,15
	.globl	s390_1E05
	.type	s390_1E05, @function
s390_1E05:
.LFB1179:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1179:
	.size	s390_1E05, .-s390_1E05
	.p2align 4,,15
	.globl	s390_1E06
	.type	s390_1E06, @function
s390_1E06:
.LFB1180:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1180:
	.size	s390_1E06, .-s390_1E06
	.p2align 4,,15
	.globl	s390_1E07
	.type	s390_1E07, @function
s390_1E07:
.LFB1181:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1181:
	.size	s390_1E07, .-s390_1E07
	.p2align 4,,15
	.globl	s390_1E08
	.type	s390_1E08, @function
s390_1E08:
.LFB1182:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1182:
	.size	s390_1E08, .-s390_1E08
	.p2align 4,,15
	.globl	s390_1E09
	.type	s390_1E09, @function
s390_1E09:
.LFB1183:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1183:
	.size	s390_1E09, .-s390_1E09
	.p2align 4,,15
	.globl	s390_1E0A
	.type	s390_1E0A, @function
s390_1E0A:
.LFB1184:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1184:
	.size	s390_1E0A, .-s390_1E0A
	.p2align 4,,15
	.globl	s390_1E0B
	.type	s390_1E0B, @function
s390_1E0B:
.LFB1185:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1185:
	.size	s390_1E0B, .-s390_1E0B
	.p2align 4,,15
	.globl	s390_1E0C
	.type	s390_1E0C, @function
s390_1E0C:
.LFB1186:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1186:
	.size	s390_1E0C, .-s390_1E0C
	.p2align 4,,15
	.globl	s390_1E0D
	.type	s390_1E0D, @function
s390_1E0D:
.LFB1187:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1187:
	.size	s390_1E0D, .-s390_1E0D
	.p2align 4,,15
	.globl	s390_1E0E
	.type	s390_1E0E, @function
s390_1E0E:
.LFB1188:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1188:
	.size	s390_1E0E, .-s390_1E0E
	.p2align 4,,15
	.globl	s390_1E0F
	.type	s390_1E0F, @function
s390_1E0F:
.LFB1189:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1189:
	.size	s390_1E0F, .-s390_1E0F
	.p2align 4,,15
	.globl	s390_1E10
	.type	s390_1E10, @function
s390_1E10:
.LFB1190:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1190:
	.size	s390_1E10, .-s390_1E10
	.p2align 4,,15
	.globl	s390_1E11
	.type	s390_1E11, @function
s390_1E11:
.LFB1191:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1191:
	.size	s390_1E11, .-s390_1E11
	.p2align 4,,15
	.globl	s390_1E12
	.type	s390_1E12, @function
s390_1E12:
.LFB1192:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1192:
	.size	s390_1E12, .-s390_1E12
	.p2align 4,,15
	.globl	s390_1E13
	.type	s390_1E13, @function
s390_1E13:
.LFB1193:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1193:
	.size	s390_1E13, .-s390_1E13
	.p2align 4,,15
	.globl	s390_1E14
	.type	s390_1E14, @function
s390_1E14:
.LFB1194:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1194:
	.size	s390_1E14, .-s390_1E14
	.p2align 4,,15
	.globl	s390_1E15
	.type	s390_1E15, @function
s390_1E15:
.LFB1195:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1195:
	.size	s390_1E15, .-s390_1E15
	.p2align 4,,15
	.globl	s390_1E16
	.type	s390_1E16, @function
s390_1E16:
.LFB1196:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1196:
	.size	s390_1E16, .-s390_1E16
	.p2align 4,,15
	.globl	s390_1E17
	.type	s390_1E17, @function
s390_1E17:
.LFB1197:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1197:
	.size	s390_1E17, .-s390_1E17
	.p2align 4,,15
	.globl	s390_1E18
	.type	s390_1E18, @function
s390_1E18:
.LFB1198:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1198:
	.size	s390_1E18, .-s390_1E18
	.p2align 4,,15
	.globl	s390_1E19
	.type	s390_1E19, @function
s390_1E19:
.LFB1199:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1199:
	.size	s390_1E19, .-s390_1E19
	.p2align 4,,15
	.globl	s390_1E1A
	.type	s390_1E1A, @function
s390_1E1A:
.LFB1200:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1200:
	.size	s390_1E1A, .-s390_1E1A
	.p2align 4,,15
	.globl	s390_1E1B
	.type	s390_1E1B, @function
s390_1E1B:
.LFB1201:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1201:
	.size	s390_1E1B, .-s390_1E1B
	.p2align 4,,15
	.globl	s390_1E1C
	.type	s390_1E1C, @function
s390_1E1C:
.LFB1202:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1202:
	.size	s390_1E1C, .-s390_1E1C
	.p2align 4,,15
	.globl	s390_1E1D
	.type	s390_1E1D, @function
s390_1E1D:
.LFB1203:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1203:
	.size	s390_1E1D, .-s390_1E1D
	.p2align 4,,15
	.globl	s390_1E1E
	.type	s390_1E1E, @function
s390_1E1E:
.LFB1204:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1204:
	.size	s390_1E1E, .-s390_1E1E
	.p2align 4,,15
	.globl	s390_1E1F
	.type	s390_1E1F, @function
s390_1E1F:
.LFB1205:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1205:
	.size	s390_1E1F, .-s390_1E1F
	.p2align 4,,15
	.globl	s390_1E20
	.type	s390_1E20, @function
s390_1E20:
.LFB1206:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1206:
	.size	s390_1E20, .-s390_1E20
	.p2align 4,,15
	.globl	s390_1E21
	.type	s390_1E21, @function
s390_1E21:
.LFB1207:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1207:
	.size	s390_1E21, .-s390_1E21
	.p2align 4,,15
	.globl	s390_1E22
	.type	s390_1E22, @function
s390_1E22:
.LFB1208:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1208:
	.size	s390_1E22, .-s390_1E22
	.p2align 4,,15
	.globl	s390_1E23
	.type	s390_1E23, @function
s390_1E23:
.LFB1209:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1209:
	.size	s390_1E23, .-s390_1E23
	.p2align 4,,15
	.globl	s390_1E24
	.type	s390_1E24, @function
s390_1E24:
.LFB1210:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1210:
	.size	s390_1E24, .-s390_1E24
	.p2align 4,,15
	.globl	s390_1E25
	.type	s390_1E25, @function
s390_1E25:
.LFB1211:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1211:
	.size	s390_1E25, .-s390_1E25
	.p2align 4,,15
	.globl	s390_1E26
	.type	s390_1E26, @function
s390_1E26:
.LFB1212:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1212:
	.size	s390_1E26, .-s390_1E26
	.p2align 4,,15
	.globl	s390_1E27
	.type	s390_1E27, @function
s390_1E27:
.LFB1213:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1213:
	.size	s390_1E27, .-s390_1E27
	.p2align 4,,15
	.globl	s390_1E28
	.type	s390_1E28, @function
s390_1E28:
.LFB1214:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1214:
	.size	s390_1E28, .-s390_1E28
	.p2align 4,,15
	.globl	s390_1E29
	.type	s390_1E29, @function
s390_1E29:
.LFB1215:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1215:
	.size	s390_1E29, .-s390_1E29
	.p2align 4,,15
	.globl	s390_1E2A
	.type	s390_1E2A, @function
s390_1E2A:
.LFB1216:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1216:
	.size	s390_1E2A, .-s390_1E2A
	.p2align 4,,15
	.globl	s390_1E2B
	.type	s390_1E2B, @function
s390_1E2B:
.LFB1217:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1217:
	.size	s390_1E2B, .-s390_1E2B
	.p2align 4,,15
	.globl	s390_1E2C
	.type	s390_1E2C, @function
s390_1E2C:
.LFB1218:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1218:
	.size	s390_1E2C, .-s390_1E2C
	.p2align 4,,15
	.globl	s390_1E2D
	.type	s390_1E2D, @function
s390_1E2D:
.LFB1219:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1219:
	.size	s390_1E2D, .-s390_1E2D
	.p2align 4,,15
	.globl	s390_1E2E
	.type	s390_1E2E, @function
s390_1E2E:
.LFB1220:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1220:
	.size	s390_1E2E, .-s390_1E2E
	.p2align 4,,15
	.globl	s390_1E2F
	.type	s390_1E2F, @function
s390_1E2F:
.LFB1221:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1221:
	.size	s390_1E2F, .-s390_1E2F
	.p2align 4,,15
	.globl	s390_1E30
	.type	s390_1E30, @function
s390_1E30:
.LFB1222:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1222:
	.size	s390_1E30, .-s390_1E30
	.p2align 4,,15
	.globl	s390_1E31
	.type	s390_1E31, @function
s390_1E31:
.LFB1223:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1223:
	.size	s390_1E31, .-s390_1E31
	.p2align 4,,15
	.globl	s390_1E32
	.type	s390_1E32, @function
s390_1E32:
.LFB1224:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1224:
	.size	s390_1E32, .-s390_1E32
	.p2align 4,,15
	.globl	s390_1E33
	.type	s390_1E33, @function
s390_1E33:
.LFB1225:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1225:
	.size	s390_1E33, .-s390_1E33
	.p2align 4,,15
	.globl	s390_1E34
	.type	s390_1E34, @function
s390_1E34:
.LFB1226:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1226:
	.size	s390_1E34, .-s390_1E34
	.p2align 4,,15
	.globl	s390_1E35
	.type	s390_1E35, @function
s390_1E35:
.LFB1227:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1227:
	.size	s390_1E35, .-s390_1E35
	.p2align 4,,15
	.globl	s390_1E36
	.type	s390_1E36, @function
s390_1E36:
.LFB1228:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1228:
	.size	s390_1E36, .-s390_1E36
	.p2align 4,,15
	.globl	s390_1E37
	.type	s390_1E37, @function
s390_1E37:
.LFB1229:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1229:
	.size	s390_1E37, .-s390_1E37
	.p2align 4,,15
	.globl	s390_1E38
	.type	s390_1E38, @function
s390_1E38:
.LFB1230:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1230:
	.size	s390_1E38, .-s390_1E38
	.p2align 4,,15
	.globl	s390_1E39
	.type	s390_1E39, @function
s390_1E39:
.LFB1231:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1231:
	.size	s390_1E39, .-s390_1E39
	.p2align 4,,15
	.globl	s390_1E3A
	.type	s390_1E3A, @function
s390_1E3A:
.LFB1232:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1232:
	.size	s390_1E3A, .-s390_1E3A
	.p2align 4,,15
	.globl	s390_1E3B
	.type	s390_1E3B, @function
s390_1E3B:
.LFB1233:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1233:
	.size	s390_1E3B, .-s390_1E3B
	.p2align 4,,15
	.globl	s390_1E3C
	.type	s390_1E3C, @function
s390_1E3C:
.LFB1234:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1234:
	.size	s390_1E3C, .-s390_1E3C
	.p2align 4,,15
	.globl	s390_1E3D
	.type	s390_1E3D, @function
s390_1E3D:
.LFB1235:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1235:
	.size	s390_1E3D, .-s390_1E3D
	.p2align 4,,15
	.globl	s390_1E3E
	.type	s390_1E3E, @function
s390_1E3E:
.LFB1236:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1236:
	.size	s390_1E3E, .-s390_1E3E
	.p2align 4,,15
	.globl	s390_1E3F
	.type	s390_1E3F, @function
s390_1E3F:
.LFB1237:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1237:
	.size	s390_1E3F, .-s390_1E3F
	.p2align 4,,15
	.globl	s390_1E40
	.type	s390_1E40, @function
s390_1E40:
.LFB1238:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1238:
	.size	s390_1E40, .-s390_1E40
	.p2align 4,,15
	.globl	s390_1E41
	.type	s390_1E41, @function
s390_1E41:
.LFB1239:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1239:
	.size	s390_1E41, .-s390_1E41
	.p2align 4,,15
	.globl	s390_1E42
	.type	s390_1E42, @function
s390_1E42:
.LFB1240:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1240:
	.size	s390_1E42, .-s390_1E42
	.p2align 4,,15
	.globl	s390_1E43
	.type	s390_1E43, @function
s390_1E43:
.LFB1241:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1241:
	.size	s390_1E43, .-s390_1E43
	.p2align 4,,15
	.globl	s390_1E44
	.type	s390_1E44, @function
s390_1E44:
.LFB1242:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1242:
	.size	s390_1E44, .-s390_1E44
	.p2align 4,,15
	.globl	s390_1E45
	.type	s390_1E45, @function
s390_1E45:
.LFB1243:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1243:
	.size	s390_1E45, .-s390_1E45
	.p2align 4,,15
	.globl	s390_1E46
	.type	s390_1E46, @function
s390_1E46:
.LFB1244:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1244:
	.size	s390_1E46, .-s390_1E46
	.p2align 4,,15
	.globl	s390_1E47
	.type	s390_1E47, @function
s390_1E47:
.LFB1245:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1245:
	.size	s390_1E47, .-s390_1E47
	.p2align 4,,15
	.globl	s390_1E48
	.type	s390_1E48, @function
s390_1E48:
.LFB1246:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1246:
	.size	s390_1E48, .-s390_1E48
	.p2align 4,,15
	.globl	s390_1E49
	.type	s390_1E49, @function
s390_1E49:
.LFB1247:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1247:
	.size	s390_1E49, .-s390_1E49
	.p2align 4,,15
	.globl	s390_1E4A
	.type	s390_1E4A, @function
s390_1E4A:
.LFB1248:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1248:
	.size	s390_1E4A, .-s390_1E4A
	.p2align 4,,15
	.globl	s390_1E4B
	.type	s390_1E4B, @function
s390_1E4B:
.LFB1249:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1249:
	.size	s390_1E4B, .-s390_1E4B
	.p2align 4,,15
	.globl	s390_1E4C
	.type	s390_1E4C, @function
s390_1E4C:
.LFB1250:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1250:
	.size	s390_1E4C, .-s390_1E4C
	.p2align 4,,15
	.globl	s390_1E4D
	.type	s390_1E4D, @function
s390_1E4D:
.LFB1251:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1251:
	.size	s390_1E4D, .-s390_1E4D
	.p2align 4,,15
	.globl	s390_1E4E
	.type	s390_1E4E, @function
s390_1E4E:
.LFB1252:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1252:
	.size	s390_1E4E, .-s390_1E4E
	.p2align 4,,15
	.globl	s390_1E4F
	.type	s390_1E4F, @function
s390_1E4F:
.LFB1253:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1253:
	.size	s390_1E4F, .-s390_1E4F
	.p2align 4,,15
	.globl	s390_1E50
	.type	s390_1E50, @function
s390_1E50:
.LFB1254:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1254:
	.size	s390_1E50, .-s390_1E50
	.p2align 4,,15
	.globl	s390_1E51
	.type	s390_1E51, @function
s390_1E51:
.LFB1255:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1255:
	.size	s390_1E51, .-s390_1E51
	.p2align 4,,15
	.globl	s390_1E52
	.type	s390_1E52, @function
s390_1E52:
.LFB1256:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1256:
	.size	s390_1E52, .-s390_1E52
	.p2align 4,,15
	.globl	s390_1E53
	.type	s390_1E53, @function
s390_1E53:
.LFB1257:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1257:
	.size	s390_1E53, .-s390_1E53
	.p2align 4,,15
	.globl	s390_1E54
	.type	s390_1E54, @function
s390_1E54:
.LFB1258:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1258:
	.size	s390_1E54, .-s390_1E54
	.p2align 4,,15
	.globl	s390_1E55
	.type	s390_1E55, @function
s390_1E55:
.LFB1259:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1259:
	.size	s390_1E55, .-s390_1E55
	.p2align 4,,15
	.globl	s390_1E56
	.type	s390_1E56, @function
s390_1E56:
.LFB1260:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1260:
	.size	s390_1E56, .-s390_1E56
	.p2align 4,,15
	.globl	s390_1E57
	.type	s390_1E57, @function
s390_1E57:
.LFB1261:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1261:
	.size	s390_1E57, .-s390_1E57
	.p2align 4,,15
	.globl	s390_1E58
	.type	s390_1E58, @function
s390_1E58:
.LFB1262:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1262:
	.size	s390_1E58, .-s390_1E58
	.p2align 4,,15
	.globl	s390_1E59
	.type	s390_1E59, @function
s390_1E59:
.LFB1263:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1263:
	.size	s390_1E59, .-s390_1E59
	.p2align 4,,15
	.globl	s390_1E5A
	.type	s390_1E5A, @function
s390_1E5A:
.LFB1264:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1264:
	.size	s390_1E5A, .-s390_1E5A
	.p2align 4,,15
	.globl	s390_1E5B
	.type	s390_1E5B, @function
s390_1E5B:
.LFB1265:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1265:
	.size	s390_1E5B, .-s390_1E5B
	.p2align 4,,15
	.globl	s390_1E5C
	.type	s390_1E5C, @function
s390_1E5C:
.LFB1266:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1266:
	.size	s390_1E5C, .-s390_1E5C
	.p2align 4,,15
	.globl	s390_1E5D
	.type	s390_1E5D, @function
s390_1E5D:
.LFB1267:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1267:
	.size	s390_1E5D, .-s390_1E5D
	.p2align 4,,15
	.globl	s390_1E5E
	.type	s390_1E5E, @function
s390_1E5E:
.LFB1268:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1268:
	.size	s390_1E5E, .-s390_1E5E
	.p2align 4,,15
	.globl	s390_1E5F
	.type	s390_1E5F, @function
s390_1E5F:
.LFB1269:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1269:
	.size	s390_1E5F, .-s390_1E5F
	.p2align 4,,15
	.globl	s390_1E60
	.type	s390_1E60, @function
s390_1E60:
.LFB1270:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1270:
	.size	s390_1E60, .-s390_1E60
	.p2align 4,,15
	.globl	s390_1E61
	.type	s390_1E61, @function
s390_1E61:
.LFB1271:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1271:
	.size	s390_1E61, .-s390_1E61
	.p2align 4,,15
	.globl	s390_1E62
	.type	s390_1E62, @function
s390_1E62:
.LFB1272:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1272:
	.size	s390_1E62, .-s390_1E62
	.p2align 4,,15
	.globl	s390_1E63
	.type	s390_1E63, @function
s390_1E63:
.LFB1273:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1273:
	.size	s390_1E63, .-s390_1E63
	.p2align 4,,15
	.globl	s390_1E64
	.type	s390_1E64, @function
s390_1E64:
.LFB1274:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1274:
	.size	s390_1E64, .-s390_1E64
	.p2align 4,,15
	.globl	s390_1E65
	.type	s390_1E65, @function
s390_1E65:
.LFB1275:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1275:
	.size	s390_1E65, .-s390_1E65
	.p2align 4,,15
	.globl	s390_1E66
	.type	s390_1E66, @function
s390_1E66:
.LFB1276:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1276:
	.size	s390_1E66, .-s390_1E66
	.p2align 4,,15
	.globl	s390_1E67
	.type	s390_1E67, @function
s390_1E67:
.LFB1277:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1277:
	.size	s390_1E67, .-s390_1E67
	.p2align 4,,15
	.globl	s390_1E68
	.type	s390_1E68, @function
s390_1E68:
.LFB1278:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1278:
	.size	s390_1E68, .-s390_1E68
	.p2align 4,,15
	.globl	s390_1E69
	.type	s390_1E69, @function
s390_1E69:
.LFB1279:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1279:
	.size	s390_1E69, .-s390_1E69
	.p2align 4,,15
	.globl	s390_1E6A
	.type	s390_1E6A, @function
s390_1E6A:
.LFB1280:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1280:
	.size	s390_1E6A, .-s390_1E6A
	.p2align 4,,15
	.globl	s390_1E6B
	.type	s390_1E6B, @function
s390_1E6B:
.LFB1281:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1281:
	.size	s390_1E6B, .-s390_1E6B
	.p2align 4,,15
	.globl	s390_1E6C
	.type	s390_1E6C, @function
s390_1E6C:
.LFB1282:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1282:
	.size	s390_1E6C, .-s390_1E6C
	.p2align 4,,15
	.globl	s390_1E6D
	.type	s390_1E6D, @function
s390_1E6D:
.LFB1283:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1283:
	.size	s390_1E6D, .-s390_1E6D
	.p2align 4,,15
	.globl	s390_1E6E
	.type	s390_1E6E, @function
s390_1E6E:
.LFB1284:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1284:
	.size	s390_1E6E, .-s390_1E6E
	.p2align 4,,15
	.globl	s390_1E6F
	.type	s390_1E6F, @function
s390_1E6F:
.LFB1285:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1285:
	.size	s390_1E6F, .-s390_1E6F
	.p2align 4,,15
	.globl	s390_1E70
	.type	s390_1E70, @function
s390_1E70:
.LFB1286:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1286:
	.size	s390_1E70, .-s390_1E70
	.p2align 4,,15
	.globl	s390_1E71
	.type	s390_1E71, @function
s390_1E71:
.LFB1287:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1287:
	.size	s390_1E71, .-s390_1E71
	.p2align 4,,15
	.globl	s390_1E72
	.type	s390_1E72, @function
s390_1E72:
.LFB1288:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1288:
	.size	s390_1E72, .-s390_1E72
	.p2align 4,,15
	.globl	s390_1E73
	.type	s390_1E73, @function
s390_1E73:
.LFB1289:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1289:
	.size	s390_1E73, .-s390_1E73
	.p2align 4,,15
	.globl	s390_1E74
	.type	s390_1E74, @function
s390_1E74:
.LFB1290:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1290:
	.size	s390_1E74, .-s390_1E74
	.p2align 4,,15
	.globl	s390_1E75
	.type	s390_1E75, @function
s390_1E75:
.LFB1291:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1291:
	.size	s390_1E75, .-s390_1E75
	.p2align 4,,15
	.globl	s390_1E76
	.type	s390_1E76, @function
s390_1E76:
.LFB1292:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1292:
	.size	s390_1E76, .-s390_1E76
	.p2align 4,,15
	.globl	s390_1E77
	.type	s390_1E77, @function
s390_1E77:
.LFB1293:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1293:
	.size	s390_1E77, .-s390_1E77
	.p2align 4,,15
	.globl	s390_1E78
	.type	s390_1E78, @function
s390_1E78:
.LFB1294:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1294:
	.size	s390_1E78, .-s390_1E78
	.p2align 4,,15
	.globl	s390_1E79
	.type	s390_1E79, @function
s390_1E79:
.LFB1295:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1295:
	.size	s390_1E79, .-s390_1E79
	.p2align 4,,15
	.globl	s390_1E7A
	.type	s390_1E7A, @function
s390_1E7A:
.LFB1296:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1296:
	.size	s390_1E7A, .-s390_1E7A
	.p2align 4,,15
	.globl	s390_1E7B
	.type	s390_1E7B, @function
s390_1E7B:
.LFB1297:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1297:
	.size	s390_1E7B, .-s390_1E7B
	.p2align 4,,15
	.globl	s390_1E7C
	.type	s390_1E7C, @function
s390_1E7C:
.LFB1298:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1298:
	.size	s390_1E7C, .-s390_1E7C
	.p2align 4,,15
	.globl	s390_1E7D
	.type	s390_1E7D, @function
s390_1E7D:
.LFB1299:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1299:
	.size	s390_1E7D, .-s390_1E7D
	.p2align 4,,15
	.globl	s390_1E7E
	.type	s390_1E7E, @function
s390_1E7E:
.LFB1300:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1300:
	.size	s390_1E7E, .-s390_1E7E
	.p2align 4,,15
	.globl	s390_1E7F
	.type	s390_1E7F, @function
s390_1E7F:
.LFB1301:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1301:
	.size	s390_1E7F, .-s390_1E7F
	.p2align 4,,15
	.globl	s390_1E80
	.type	s390_1E80, @function
s390_1E80:
.LFB1302:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1302:
	.size	s390_1E80, .-s390_1E80
	.p2align 4,,15
	.globl	s390_1E81
	.type	s390_1E81, @function
s390_1E81:
.LFB1303:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1303:
	.size	s390_1E81, .-s390_1E81
	.p2align 4,,15
	.globl	s390_1E82
	.type	s390_1E82, @function
s390_1E82:
.LFB1304:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1304:
	.size	s390_1E82, .-s390_1E82
	.p2align 4,,15
	.globl	s390_1E83
	.type	s390_1E83, @function
s390_1E83:
.LFB1305:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1305:
	.size	s390_1E83, .-s390_1E83
	.p2align 4,,15
	.globl	s390_1E84
	.type	s390_1E84, @function
s390_1E84:
.LFB1306:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1306:
	.size	s390_1E84, .-s390_1E84
	.p2align 4,,15
	.globl	s390_1E85
	.type	s390_1E85, @function
s390_1E85:
.LFB1307:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1307:
	.size	s390_1E85, .-s390_1E85
	.p2align 4,,15
	.globl	s390_1E86
	.type	s390_1E86, @function
s390_1E86:
.LFB1308:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1308:
	.size	s390_1E86, .-s390_1E86
	.p2align 4,,15
	.globl	s390_1E87
	.type	s390_1E87, @function
s390_1E87:
.LFB1309:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1309:
	.size	s390_1E87, .-s390_1E87
	.p2align 4,,15
	.globl	s390_1E88
	.type	s390_1E88, @function
s390_1E88:
.LFB1310:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1310:
	.size	s390_1E88, .-s390_1E88
	.p2align 4,,15
	.globl	s390_1E89
	.type	s390_1E89, @function
s390_1E89:
.LFB1311:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1311:
	.size	s390_1E89, .-s390_1E89
	.p2align 4,,15
	.globl	s390_1E8A
	.type	s390_1E8A, @function
s390_1E8A:
.LFB1312:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1312:
	.size	s390_1E8A, .-s390_1E8A
	.p2align 4,,15
	.globl	s390_1E8B
	.type	s390_1E8B, @function
s390_1E8B:
.LFB1313:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1313:
	.size	s390_1E8B, .-s390_1E8B
	.p2align 4,,15
	.globl	s390_1E8C
	.type	s390_1E8C, @function
s390_1E8C:
.LFB1314:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1314:
	.size	s390_1E8C, .-s390_1E8C
	.p2align 4,,15
	.globl	s390_1E8D
	.type	s390_1E8D, @function
s390_1E8D:
.LFB1315:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1315:
	.size	s390_1E8D, .-s390_1E8D
	.p2align 4,,15
	.globl	s390_1E8E
	.type	s390_1E8E, @function
s390_1E8E:
.LFB1316:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1316:
	.size	s390_1E8E, .-s390_1E8E
	.p2align 4,,15
	.globl	s390_1E8F
	.type	s390_1E8F, @function
s390_1E8F:
.LFB1317:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1317:
	.size	s390_1E8F, .-s390_1E8F
	.p2align 4,,15
	.globl	s390_1E90
	.type	s390_1E90, @function
s390_1E90:
.LFB1318:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1318:
	.size	s390_1E90, .-s390_1E90
	.p2align 4,,15
	.globl	s390_1E91
	.type	s390_1E91, @function
s390_1E91:
.LFB1319:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1319:
	.size	s390_1E91, .-s390_1E91
	.p2align 4,,15
	.globl	s390_1E92
	.type	s390_1E92, @function
s390_1E92:
.LFB1320:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1320:
	.size	s390_1E92, .-s390_1E92
	.p2align 4,,15
	.globl	s390_1E93
	.type	s390_1E93, @function
s390_1E93:
.LFB1321:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1321:
	.size	s390_1E93, .-s390_1E93
	.p2align 4,,15
	.globl	s390_1E94
	.type	s390_1E94, @function
s390_1E94:
.LFB1322:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1322:
	.size	s390_1E94, .-s390_1E94
	.p2align 4,,15
	.globl	s390_1E95
	.type	s390_1E95, @function
s390_1E95:
.LFB1323:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1323:
	.size	s390_1E95, .-s390_1E95
	.p2align 4,,15
	.globl	s390_1E96
	.type	s390_1E96, @function
s390_1E96:
.LFB1324:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1324:
	.size	s390_1E96, .-s390_1E96
	.p2align 4,,15
	.globl	s390_1E97
	.type	s390_1E97, @function
s390_1E97:
.LFB1325:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1325:
	.size	s390_1E97, .-s390_1E97
	.p2align 4,,15
	.globl	s390_1E98
	.type	s390_1E98, @function
s390_1E98:
.LFB1326:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1326:
	.size	s390_1E98, .-s390_1E98
	.p2align 4,,15
	.globl	s390_1E99
	.type	s390_1E99, @function
s390_1E99:
.LFB1327:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1327:
	.size	s390_1E99, .-s390_1E99
	.p2align 4,,15
	.globl	s390_1E9A
	.type	s390_1E9A, @function
s390_1E9A:
.LFB1328:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1328:
	.size	s390_1E9A, .-s390_1E9A
	.p2align 4,,15
	.globl	s390_1E9B
	.type	s390_1E9B, @function
s390_1E9B:
.LFB1329:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1329:
	.size	s390_1E9B, .-s390_1E9B
	.p2align 4,,15
	.globl	s390_1E9C
	.type	s390_1E9C, @function
s390_1E9C:
.LFB1330:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1330:
	.size	s390_1E9C, .-s390_1E9C
	.p2align 4,,15
	.globl	s390_1E9D
	.type	s390_1E9D, @function
s390_1E9D:
.LFB1331:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1331:
	.size	s390_1E9D, .-s390_1E9D
	.p2align 4,,15
	.globl	s390_1E9E
	.type	s390_1E9E, @function
s390_1E9E:
.LFB1332:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1332:
	.size	s390_1E9E, .-s390_1E9E
	.p2align 4,,15
	.globl	s390_1E9F
	.type	s390_1E9F, @function
s390_1E9F:
.LFB1333:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1333:
	.size	s390_1E9F, .-s390_1E9F
	.p2align 4,,15
	.globl	s390_1EA0
	.type	s390_1EA0, @function
s390_1EA0:
.LFB1334:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1334:
	.size	s390_1EA0, .-s390_1EA0
	.p2align 4,,15
	.globl	s390_1EA1
	.type	s390_1EA1, @function
s390_1EA1:
.LFB1335:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1335:
	.size	s390_1EA1, .-s390_1EA1
	.p2align 4,,15
	.globl	s390_1EA2
	.type	s390_1EA2, @function
s390_1EA2:
.LFB1336:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1336:
	.size	s390_1EA2, .-s390_1EA2
	.p2align 4,,15
	.globl	s390_1EA3
	.type	s390_1EA3, @function
s390_1EA3:
.LFB1337:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1337:
	.size	s390_1EA3, .-s390_1EA3
	.p2align 4,,15
	.globl	s390_1EA4
	.type	s390_1EA4, @function
s390_1EA4:
.LFB1338:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1338:
	.size	s390_1EA4, .-s390_1EA4
	.p2align 4,,15
	.globl	s390_1EA5
	.type	s390_1EA5, @function
s390_1EA5:
.LFB1339:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1339:
	.size	s390_1EA5, .-s390_1EA5
	.p2align 4,,15
	.globl	s390_1EA6
	.type	s390_1EA6, @function
s390_1EA6:
.LFB1340:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1340:
	.size	s390_1EA6, .-s390_1EA6
	.p2align 4,,15
	.globl	s390_1EA7
	.type	s390_1EA7, @function
s390_1EA7:
.LFB1341:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1341:
	.size	s390_1EA7, .-s390_1EA7
	.p2align 4,,15
	.globl	s390_1EA8
	.type	s390_1EA8, @function
s390_1EA8:
.LFB1342:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1342:
	.size	s390_1EA8, .-s390_1EA8
	.p2align 4,,15
	.globl	s390_1EA9
	.type	s390_1EA9, @function
s390_1EA9:
.LFB1343:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1343:
	.size	s390_1EA9, .-s390_1EA9
	.p2align 4,,15
	.globl	s390_1EAA
	.type	s390_1EAA, @function
s390_1EAA:
.LFB1344:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1344:
	.size	s390_1EAA, .-s390_1EAA
	.p2align 4,,15
	.globl	s390_1EAB
	.type	s390_1EAB, @function
s390_1EAB:
.LFB1345:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1345:
	.size	s390_1EAB, .-s390_1EAB
	.p2align 4,,15
	.globl	s390_1EAC
	.type	s390_1EAC, @function
s390_1EAC:
.LFB1346:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1346:
	.size	s390_1EAC, .-s390_1EAC
	.p2align 4,,15
	.globl	s390_1EAD
	.type	s390_1EAD, @function
s390_1EAD:
.LFB1347:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1347:
	.size	s390_1EAD, .-s390_1EAD
	.p2align 4,,15
	.globl	s390_1EAE
	.type	s390_1EAE, @function
s390_1EAE:
.LFB1348:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1348:
	.size	s390_1EAE, .-s390_1EAE
	.p2align 4,,15
	.globl	s390_1EAF
	.type	s390_1EAF, @function
s390_1EAF:
.LFB1349:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1349:
	.size	s390_1EAF, .-s390_1EAF
	.p2align 4,,15
	.globl	s390_1EB0
	.type	s390_1EB0, @function
s390_1EB0:
.LFB1350:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1350:
	.size	s390_1EB0, .-s390_1EB0
	.p2align 4,,15
	.globl	s390_1EB1
	.type	s390_1EB1, @function
s390_1EB1:
.LFB1351:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1351:
	.size	s390_1EB1, .-s390_1EB1
	.p2align 4,,15
	.globl	s390_1EB2
	.type	s390_1EB2, @function
s390_1EB2:
.LFB1352:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1352:
	.size	s390_1EB2, .-s390_1EB2
	.p2align 4,,15
	.globl	s390_1EB3
	.type	s390_1EB3, @function
s390_1EB3:
.LFB1353:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1353:
	.size	s390_1EB3, .-s390_1EB3
	.p2align 4,,15
	.globl	s390_1EB4
	.type	s390_1EB4, @function
s390_1EB4:
.LFB1354:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1354:
	.size	s390_1EB4, .-s390_1EB4
	.p2align 4,,15
	.globl	s390_1EB5
	.type	s390_1EB5, @function
s390_1EB5:
.LFB1355:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1355:
	.size	s390_1EB5, .-s390_1EB5
	.p2align 4,,15
	.globl	s390_1EB6
	.type	s390_1EB6, @function
s390_1EB6:
.LFB1356:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1356:
	.size	s390_1EB6, .-s390_1EB6
	.p2align 4,,15
	.globl	s390_1EB7
	.type	s390_1EB7, @function
s390_1EB7:
.LFB1357:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1357:
	.size	s390_1EB7, .-s390_1EB7
	.p2align 4,,15
	.globl	s390_1EB8
	.type	s390_1EB8, @function
s390_1EB8:
.LFB1358:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1358:
	.size	s390_1EB8, .-s390_1EB8
	.p2align 4,,15
	.globl	s390_1EB9
	.type	s390_1EB9, @function
s390_1EB9:
.LFB1359:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1359:
	.size	s390_1EB9, .-s390_1EB9
	.p2align 4,,15
	.globl	s390_1EBA
	.type	s390_1EBA, @function
s390_1EBA:
.LFB1360:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1360:
	.size	s390_1EBA, .-s390_1EBA
	.p2align 4,,15
	.globl	s390_1EBB
	.type	s390_1EBB, @function
s390_1EBB:
.LFB1361:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1361:
	.size	s390_1EBB, .-s390_1EBB
	.p2align 4,,15
	.globl	s390_1EBC
	.type	s390_1EBC, @function
s390_1EBC:
.LFB1362:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1362:
	.size	s390_1EBC, .-s390_1EBC
	.p2align 4,,15
	.globl	s390_1EBD
	.type	s390_1EBD, @function
s390_1EBD:
.LFB1363:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1363:
	.size	s390_1EBD, .-s390_1EBD
	.p2align 4,,15
	.globl	s390_1EBE
	.type	s390_1EBE, @function
s390_1EBE:
.LFB1364:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1364:
	.size	s390_1EBE, .-s390_1EBE
	.p2align 4,,15
	.globl	s390_1EBF
	.type	s390_1EBF, @function
s390_1EBF:
.LFB1365:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1365:
	.size	s390_1EBF, .-s390_1EBF
	.p2align 4,,15
	.globl	s390_1EC0
	.type	s390_1EC0, @function
s390_1EC0:
.LFB1366:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1366:
	.size	s390_1EC0, .-s390_1EC0
	.p2align 4,,15
	.globl	s390_1EC1
	.type	s390_1EC1, @function
s390_1EC1:
.LFB1367:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1367:
	.size	s390_1EC1, .-s390_1EC1
	.p2align 4,,15
	.globl	s390_1EC2
	.type	s390_1EC2, @function
s390_1EC2:
.LFB1368:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1368:
	.size	s390_1EC2, .-s390_1EC2
	.p2align 4,,15
	.globl	s390_1EC3
	.type	s390_1EC3, @function
s390_1EC3:
.LFB1369:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1369:
	.size	s390_1EC3, .-s390_1EC3
	.p2align 4,,15
	.globl	s390_1EC4
	.type	s390_1EC4, @function
s390_1EC4:
.LFB1370:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1370:
	.size	s390_1EC4, .-s390_1EC4
	.p2align 4,,15
	.globl	s390_1EC5
	.type	s390_1EC5, @function
s390_1EC5:
.LFB1371:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1371:
	.size	s390_1EC5, .-s390_1EC5
	.p2align 4,,15
	.globl	s390_1EC6
	.type	s390_1EC6, @function
s390_1EC6:
.LFB1372:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1372:
	.size	s390_1EC6, .-s390_1EC6
	.p2align 4,,15
	.globl	s390_1EC7
	.type	s390_1EC7, @function
s390_1EC7:
.LFB1373:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1373:
	.size	s390_1EC7, .-s390_1EC7
	.p2align 4,,15
	.globl	s390_1EC8
	.type	s390_1EC8, @function
s390_1EC8:
.LFB1374:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1374:
	.size	s390_1EC8, .-s390_1EC8
	.p2align 4,,15
	.globl	s390_1EC9
	.type	s390_1EC9, @function
s390_1EC9:
.LFB1375:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1375:
	.size	s390_1EC9, .-s390_1EC9
	.p2align 4,,15
	.globl	s390_1ECA
	.type	s390_1ECA, @function
s390_1ECA:
.LFB1376:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1376:
	.size	s390_1ECA, .-s390_1ECA
	.p2align 4,,15
	.globl	s390_1ECB
	.type	s390_1ECB, @function
s390_1ECB:
.LFB1377:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1377:
	.size	s390_1ECB, .-s390_1ECB
	.p2align 4,,15
	.globl	s390_1ECC
	.type	s390_1ECC, @function
s390_1ECC:
.LFB1378:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1378:
	.size	s390_1ECC, .-s390_1ECC
	.p2align 4,,15
	.globl	s390_1ECD
	.type	s390_1ECD, @function
s390_1ECD:
.LFB1379:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1379:
	.size	s390_1ECD, .-s390_1ECD
	.p2align 4,,15
	.globl	s390_1ECE
	.type	s390_1ECE, @function
s390_1ECE:
.LFB1380:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1380:
	.size	s390_1ECE, .-s390_1ECE
	.p2align 4,,15
	.globl	s390_1ECF
	.type	s390_1ECF, @function
s390_1ECF:
.LFB1381:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1381:
	.size	s390_1ECF, .-s390_1ECF
	.p2align 4,,15
	.globl	s390_1ED0
	.type	s390_1ED0, @function
s390_1ED0:
.LFB1382:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1382:
	.size	s390_1ED0, .-s390_1ED0
	.p2align 4,,15
	.globl	s390_1ED1
	.type	s390_1ED1, @function
s390_1ED1:
.LFB1383:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1383:
	.size	s390_1ED1, .-s390_1ED1
	.p2align 4,,15
	.globl	s390_1ED2
	.type	s390_1ED2, @function
s390_1ED2:
.LFB1384:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1384:
	.size	s390_1ED2, .-s390_1ED2
	.p2align 4,,15
	.globl	s390_1ED3
	.type	s390_1ED3, @function
s390_1ED3:
.LFB1385:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1385:
	.size	s390_1ED3, .-s390_1ED3
	.p2align 4,,15
	.globl	s390_1ED4
	.type	s390_1ED4, @function
s390_1ED4:
.LFB1386:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1386:
	.size	s390_1ED4, .-s390_1ED4
	.p2align 4,,15
	.globl	s390_1ED5
	.type	s390_1ED5, @function
s390_1ED5:
.LFB1387:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1387:
	.size	s390_1ED5, .-s390_1ED5
	.p2align 4,,15
	.globl	s390_1ED6
	.type	s390_1ED6, @function
s390_1ED6:
.LFB1388:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1388:
	.size	s390_1ED6, .-s390_1ED6
	.p2align 4,,15
	.globl	s390_1ED7
	.type	s390_1ED7, @function
s390_1ED7:
.LFB1389:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1389:
	.size	s390_1ED7, .-s390_1ED7
	.p2align 4,,15
	.globl	s390_1ED8
	.type	s390_1ED8, @function
s390_1ED8:
.LFB1390:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1390:
	.size	s390_1ED8, .-s390_1ED8
	.p2align 4,,15
	.globl	s390_1ED9
	.type	s390_1ED9, @function
s390_1ED9:
.LFB1391:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1391:
	.size	s390_1ED9, .-s390_1ED9
	.p2align 4,,15
	.globl	s390_1EDA
	.type	s390_1EDA, @function
s390_1EDA:
.LFB1392:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1392:
	.size	s390_1EDA, .-s390_1EDA
	.p2align 4,,15
	.globl	s390_1EDB
	.type	s390_1EDB, @function
s390_1EDB:
.LFB1393:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1393:
	.size	s390_1EDB, .-s390_1EDB
	.p2align 4,,15
	.globl	s390_1EDC
	.type	s390_1EDC, @function
s390_1EDC:
.LFB1394:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1394:
	.size	s390_1EDC, .-s390_1EDC
	.p2align 4,,15
	.globl	s390_1EDD
	.type	s390_1EDD, @function
s390_1EDD:
.LFB1395:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1395:
	.size	s390_1EDD, .-s390_1EDD
	.p2align 4,,15
	.globl	s390_1EDE
	.type	s390_1EDE, @function
s390_1EDE:
.LFB1396:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1396:
	.size	s390_1EDE, .-s390_1EDE
	.p2align 4,,15
	.globl	s390_1EDF
	.type	s390_1EDF, @function
s390_1EDF:
.LFB1397:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1397:
	.size	s390_1EDF, .-s390_1EDF
	.p2align 4,,15
	.globl	s390_1EE0
	.type	s390_1EE0, @function
s390_1EE0:
.LFB1398:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1398:
	.size	s390_1EE0, .-s390_1EE0
	.p2align 4,,15
	.globl	s390_1EE1
	.type	s390_1EE1, @function
s390_1EE1:
.LFB1399:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1399:
	.size	s390_1EE1, .-s390_1EE1
	.p2align 4,,15
	.globl	s390_1EE2
	.type	s390_1EE2, @function
s390_1EE2:
.LFB1400:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1400:
	.size	s390_1EE2, .-s390_1EE2
	.p2align 4,,15
	.globl	s390_1EE3
	.type	s390_1EE3, @function
s390_1EE3:
.LFB1401:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1401:
	.size	s390_1EE3, .-s390_1EE3
	.p2align 4,,15
	.globl	s390_1EE4
	.type	s390_1EE4, @function
s390_1EE4:
.LFB1402:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1402:
	.size	s390_1EE4, .-s390_1EE4
	.p2align 4,,15
	.globl	s390_1EE5
	.type	s390_1EE5, @function
s390_1EE5:
.LFB1403:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1403:
	.size	s390_1EE5, .-s390_1EE5
	.p2align 4,,15
	.globl	s390_1EE6
	.type	s390_1EE6, @function
s390_1EE6:
.LFB1404:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1404:
	.size	s390_1EE6, .-s390_1EE6
	.p2align 4,,15
	.globl	s390_1EE7
	.type	s390_1EE7, @function
s390_1EE7:
.LFB1405:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1405:
	.size	s390_1EE7, .-s390_1EE7
	.p2align 4,,15
	.globl	s390_1EE8
	.type	s390_1EE8, @function
s390_1EE8:
.LFB1406:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1406:
	.size	s390_1EE8, .-s390_1EE8
	.p2align 4,,15
	.globl	s390_1EE9
	.type	s390_1EE9, @function
s390_1EE9:
.LFB1407:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1407:
	.size	s390_1EE9, .-s390_1EE9
	.p2align 4,,15
	.globl	s390_1EEA
	.type	s390_1EEA, @function
s390_1EEA:
.LFB1408:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1408:
	.size	s390_1EEA, .-s390_1EEA
	.p2align 4,,15
	.globl	s390_1EEB
	.type	s390_1EEB, @function
s390_1EEB:
.LFB1409:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1409:
	.size	s390_1EEB, .-s390_1EEB
	.p2align 4,,15
	.globl	s390_1EEC
	.type	s390_1EEC, @function
s390_1EEC:
.LFB1410:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1410:
	.size	s390_1EEC, .-s390_1EEC
	.p2align 4,,15
	.globl	s390_1EED
	.type	s390_1EED, @function
s390_1EED:
.LFB1411:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1411:
	.size	s390_1EED, .-s390_1EED
	.p2align 4,,15
	.globl	s390_1EEE
	.type	s390_1EEE, @function
s390_1EEE:
.LFB1412:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1412:
	.size	s390_1EEE, .-s390_1EEE
	.p2align 4,,15
	.globl	s390_1EEF
	.type	s390_1EEF, @function
s390_1EEF:
.LFB1413:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1413:
	.size	s390_1EEF, .-s390_1EEF
	.p2align 4,,15
	.globl	s390_1EF0
	.type	s390_1EF0, @function
s390_1EF0:
.LFB1414:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1414:
	.size	s390_1EF0, .-s390_1EF0
	.p2align 4,,15
	.globl	s390_1EF1
	.type	s390_1EF1, @function
s390_1EF1:
.LFB1415:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1415:
	.size	s390_1EF1, .-s390_1EF1
	.p2align 4,,15
	.globl	s390_1EF2
	.type	s390_1EF2, @function
s390_1EF2:
.LFB1416:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1416:
	.size	s390_1EF2, .-s390_1EF2
	.p2align 4,,15
	.globl	s390_1EF3
	.type	s390_1EF3, @function
s390_1EF3:
.LFB1417:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1417:
	.size	s390_1EF3, .-s390_1EF3
	.p2align 4,,15
	.globl	s390_1EF4
	.type	s390_1EF4, @function
s390_1EF4:
.LFB1418:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1418:
	.size	s390_1EF4, .-s390_1EF4
	.p2align 4,,15
	.globl	s390_1EF5
	.type	s390_1EF5, @function
s390_1EF5:
.LFB1419:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1419:
	.size	s390_1EF5, .-s390_1EF5
	.p2align 4,,15
	.globl	s390_1EF6
	.type	s390_1EF6, @function
s390_1EF6:
.LFB1420:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1420:
	.size	s390_1EF6, .-s390_1EF6
	.p2align 4,,15
	.globl	s390_1EF7
	.type	s390_1EF7, @function
s390_1EF7:
.LFB1421:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1421:
	.size	s390_1EF7, .-s390_1EF7
	.p2align 4,,15
	.globl	s390_1EF8
	.type	s390_1EF8, @function
s390_1EF8:
.LFB1422:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1422:
	.size	s390_1EF8, .-s390_1EF8
	.p2align 4,,15
	.globl	s390_1EF9
	.type	s390_1EF9, @function
s390_1EF9:
.LFB1423:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1423:
	.size	s390_1EF9, .-s390_1EF9
	.p2align 4,,15
	.globl	s390_1EFA
	.type	s390_1EFA, @function
s390_1EFA:
.LFB1424:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1424:
	.size	s390_1EFA, .-s390_1EFA
	.p2align 4,,15
	.globl	s390_1EFB
	.type	s390_1EFB, @function
s390_1EFB:
.LFB1425:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1425:
	.size	s390_1EFB, .-s390_1EFB
	.p2align 4,,15
	.globl	s390_1EFC
	.type	s390_1EFC, @function
s390_1EFC:
.LFB1426:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1426:
	.size	s390_1EFC, .-s390_1EFC
	.p2align 4,,15
	.globl	s390_1EFD
	.type	s390_1EFD, @function
s390_1EFD:
.LFB1427:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1427:
	.size	s390_1EFD, .-s390_1EFD
	.p2align 4,,15
	.globl	s390_1EFE
	.type	s390_1EFE, @function
s390_1EFE:
.LFB1428:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1428:
	.size	s390_1EFE, .-s390_1EFE
	.p2align 4,,15
	.globl	s390_1EFF
	.type	s390_1EFF, @function
s390_1EFF:
.LFB1429:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1429:
	.size	s390_1EFF, .-s390_1EFF
	.p2align 4,,15
	.globl	s390_and_register
	.type	s390_and_register, @function
s390_and_register:
.LFB1430:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	addq	$2, 136(%rsi)
	movq	%rcx, %rax
	andl	$15, %ecx
	shrq	%rax
	andl	$120, %eax
	leaq	(%rsi,%rax), %rdx
	movl	192(%rsi,%rcx,8), %eax
	andl	%eax, 192(%rdx)
	setne	100(%rsi)
	ret
	.cfi_endproc
.LFE1430:
	.size	s390_and_register, .-s390_and_register
	.p2align 4,,15
	.globl	s390_and_immediate
	.type	s390_and_immediate, @function
s390_and_immediate:
.LFB1431:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %ebp
	shrl	$12, %ecx
	shrl	$16, %ebp
	andl	$4095, %eax
	movl	%ecx, %esi
	andl	$15, %esi
	je	.L13248
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
	andl	120(%rbx), %eax
.L13248:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L13249
	movl	%eax, %edi
	addl	$1, %edx
	shrl	$12, %edi
	movslq	%edx, %rdx
	andl	$1023, %edi
	leaq	(%rbx,%rdi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L13269
.L13250:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L13270
.L13251:
	movl	%eax, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L13249
	testb	$2, 46264(%rbx,%rdi)
	je	.L13249
	xorq	26808(%rcx), %rax
.L13252:
	andb	%bpl, (%rax)
	setne	100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L13269:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L13250
.L13249:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%eax, %edi
	call	s390_logical_to_main_l
	jmp	.L13252
.L13270:
	cmpb	43192(%rbx,%rdi), %dl
	je	.L13251
	.p2align 4,,4
	jmp	.L13249
	.cfi_endproc
.LFE1431:
	.size	s390_and_immediate, .-s390_and_immediate
	.p2align 4,,15
	.globl	s390_and_character
	.type	s390_and_character, @function
s390_and_character:
.LFB1432:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rsi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r14d
	movl	%eax, %ecx
	shrl	$16, %r14d
	shrl	$28, %ecx
	andl	$4095, %r14d
	testl	%ecx, %ecx
	movl	%ecx, 8(%rsp)
	je	.L13272
	movslq	%ecx, %rdx
	addl	192(%rsi,%rdx,8), %r14d
	andl	120(%rsi), %r14d
.L13272:
	movl	%eax, %r15d
	shrl	$12, %eax
	andl	$4095, %r15d
	andl	$15, %eax
	movl	%eax, 40(%rsp)
	je	.L13273
	cltq
	addl	192(%rbp,%rax,8), %r15d
	andl	120(%rbp), %r15d
.L13273:
	movzbl	1(%rdi), %r13d
	movb	$6, 130(%rbp)
	addq	$6, 136(%rbp)
	testl	%r13d, %r13d
	je	.L13414
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	0(%rbp,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L13285
	leal	1(%rax), %edx
	movl	%r14d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	0(%rbp,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbp,%rdx,8)
	jne	.L13415
.L13286:
	movzbl	97(%rbp), %ecx
	testb	%cl, %cl
	jne	.L13416
.L13287:
	movl	%r14d, %edx
	andl	$2143289344, %edx
	orl	2224(%rbp), %edx
	cmpl	10424(%rax), %edx
	jne	.L13344
	testb	$1, 46264(%rbp,%rsi)
	je	.L13344
	movq	35000(%rax), %r11
	movl	%r14d, %ebx
	movzbl	%cl, %r8d
	movq	%r11, 984(%rbp)
	xorq	26808(%rax), %rbx
.L13289:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	0(%rbp,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L13290
	leal	1(%rax), %edx
	movl	%r15d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	0(%rbp,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbp,%rdx,8)
	jne	.L13417
.L13291:
	testb	%r8b, %r8b
	jne	.L13418
.L13292:
	movl	%r15d, %edx
	andl	$2143289344, %edx
	orl	2224(%rbp), %edx
	cmpl	10424(%rax), %edx
	jne	.L13290
	testb	$4, 46264(%rbp,%rsi)
	je	.L13290
	movl	%r15d, %r12d
	xorq	26808(%rax), %r12
.L13293:
	movl	$2047, %r10d
	movl	%r14d, %eax
	subl	%r13d, %r10d
	andl	$2047, %eax
	cmpl	%r10d, %eax
	jg	.L13294
	movl	%r15d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L13295
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	movl	$1, %esi
	.p2align 4,,10
	.p2align 3
.L13297:
	movzbl	(%r12,%rax), %edx
	andb	%dl, (%rbx,%rax)
	cmovne	%esi, %ecx
	addq	$1, %rax
	cmpl	%eax, %r13d
	jge	.L13297
.L13296:
	orb	$6, (%r11)
.L13306:
	movb	%cl, 100(%rbp)
.L13271:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L13417:
	.cfi_restore_state
	movzbl	44216(%rbp,%rsi), %edi
	testb	%dil, 1976(%rbp,%rdx)
	jne	.L13291
.L13290:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r15d, %edi
	movq	%r11, 32(%rsp)
	call	s390_logical_to_main_l
	movq	32(%rsp), %r11
	movq	%rax, %r12
	jmp	.L13293
.L13416:
	cmpb	43192(%rbp,%rsi), %cl
	je	.L13287
.L13344:
	movzbl	%cl, %r8d
.L13288:
	movl	8(%rsp), %esi
	leal	1(%r13), %r9d
	movl	$1, %ecx
	andl	$511, %r9d
	movq	%rbp, %rdx
	movl	%r14d, %edi
	call	s390_logical_to_main_l
	movq	984(%rbp), %r11
	movq	%rax, %rbx
	movzbl	97(%rbp), %r8d
	jmp	.L13289
.L13415:
	movzbl	44216(%rbp,%rsi), %ecx
	testb	%cl, 1976(%rbp,%rdx)
	jne	.L13286
.L13285:
	movzbl	97(%rbp), %r8d
	jmp	.L13288
.L13414:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbp,%rax,4), %eax
	testl	%eax, %eax
	je	.L13275
	leal	1(%rax), %edx
	movl	%r15d, %eax
	shrl	$12, %eax
	movslq	%edx, %rdx
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbp,%rdx,8)
	jne	.L13419
.L13276:
	movzbl	97(%rbp), %edx
	testb	%dl, %dl
	jne	.L13420
.L13277:
	movl	%r15d, %esi
	andl	$2143289344, %esi
	orl	2224(%rbp), %esi
	cmpl	10424(%rcx), %esi
	jne	.L13341
	testb	$4, 46264(%rbp,%rax)
	je	.L13341
	xorq	26808(%rcx), %r15
	movzbl	%dl, %r8d
.L13279:
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbp,%rax,4), %eax
	testl	%eax, %eax
	je	.L13280
	leal	1(%rax), %esi
	movl	%r14d, %eax
	shrl	$12, %eax
	movslq	%esi, %rsi
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbp,%rsi,8)
	jne	.L13421
.L13281:
	testb	%r8b, %r8b
	jne	.L13422
.L13282:
	movl	%r14d, %esi
	andl	$2143289344, %esi
	orl	2224(%rbp), %esi
	cmpl	10424(%rcx), %esi
	jne	.L13280
	testb	$2, 46264(%rbp,%rax)
	je	.L13280
	xorq	26808(%rcx), %r14
.L13283:
	movzbl	(%r14), %eax
	andb	(%r15), %al
	testb	%al, %al
	movb	%al, (%r14)
	setne	100(%rbp)
	jmp	.L13271
.L13295:
	movl	$2048, %r14d
	subl	%eax, %r14d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L13298
	leal	(%r14,%r15), %edi
	andl	120(%rbp), %edi
	leal	1(%rax), %ecx
	movslq	%ecx, %rcx
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbp,%rcx,8)
	jne	.L13423
.L13299:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L13424
.L13301:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbp), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L13300
	testb	$4, 46264(%rbp,%rax)
	je	.L13300
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L13302:
	movq	%rbx, %rdx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L13304:
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	addq	$1, %rdx
	andb	%sil, -1(%rdx)
	movl	%edx, %esi
	cmovne	%edi, %ecx
	subl	%ebx, %esi
	cmpl	%esi, %r14d
	jg	.L13304
	subl	%r14d, %r13d
	js	.L13296
	xorl	%esi, %esi
	movl	$1, %r8d
.L13305:
	movzbl	(%rax,%rsi), %edi
	andb	%dil, (%rdx,%rsi)
	cmovne	%r8d, %ecx
	addq	$1, %rsi
	cmpl	%esi, %r13d
	jge	.L13305
	jmp	.L13296
.L13418:
	cmpb	43192(%rbp,%rsi), %r8b
	je	.L13292
	.p2align 4,,3
	jmp	.L13290
.L13423:
	movzbl	44216(%rbp,%rax), %esi
	testb	%sil, 1976(%rbp,%rcx)
	jne	.L13299
.L13412:
	movzbl	97(%rbp), %r8d
.L13300:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movq	%r11, 8(%rsp)
	call	s390_logical_to_main_l
	movq	8(%rsp), %r11
	jmp	.L13302
.L13424:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L13301
	jmp	.L13300
.L13298:
	leal	(%r14,%r15), %edi
	andl	120(%rbp), %edi
	jmp	.L13412
.L13294:
	movl	$2048, 32(%rsp)
	subl	%eax, 32(%rsp)
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L13307
	leal	1(%rax), %ecx
	movl	32(%rsp), %eax
	movslq	%ecx, %rcx
	leal	(%rax,%r14), %edi
	andl	120(%rbp), %edi
	movl	%edi, %edx
	shrl	$12, %edx
	andl	$1023, %edx
	leaq	0(%rbp,%rdx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbp,%rcx,8)
	jne	.L13425
.L13308:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L13426
.L13310:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbp), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L13309
	testb	$1, 46264(%rbp,%rdx)
	je	.L13309
	movq	35000(%rax), %rcx
	movl	%edi, %r14d
	movq	%rcx, 984(%rbp)
	xorq	26808(%rax), %r14
	movq	%rcx, 8(%rsp)
.L13311:
	movl	%r15d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L13312
	movq	%rbx, %rax
	xorl	%ecx, %ecx
	movl	$1, %esi
.L13314:
	addq	$1, %r12
	movzbl	-1(%r12), %edx
	addq	$1, %rax
	andb	%dl, -1(%rax)
	movl	%eax, %edx
	cmovne	%esi, %ecx
	subl	%ebx, %edx
	cmpl	%edx, 32(%rsp)
	jg	.L13314
	subl	32(%rsp), %r13d
	js	.L13315
	xorl	%eax, %eax
	movl	$1, %esi
.L13316:
	movzbl	(%r12,%rax), %edx
	andb	%dl, (%r14,%rax)
	cmovne	%esi, %ecx
	addq	$1, %rax
	cmpl	%eax, %r13d
	jge	.L13316
.L13315:
	orb	$6, (%r11)
	movq	8(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L13306
.L13422:
	cmpb	%r8b, 43192(%rbp,%rax)
	je	.L13282
.L13280:
	movl	8(%rsp), %esi
	movl	%r14d, %edi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbp, %rdx
	call	s390_logical_to_main_l
	movq	%rax, %r14
	jmp	.L13283
.L13312:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L13317
	leal	(%r10,%r15), %edi
	andl	120(%rbp), %edi
	leal	1(%rax), %ecx
	movslq	%ecx, %rcx
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbp,%rcx,8)
	jne	.L13427
.L13318:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L13428
.L13320:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbp), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L13319
	testb	$4, 46264(%rbp,%rax)
	je	.L13319
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L13321:
	cmpl	%r10d, 32(%rsp)
	je	.L13429
	jge	.L13326
	movq	%r12, %rsi
	xorl	%ecx, %ecx
	movl	$1, %edi
.L13328:
	addq	$1, %rsi
	movzbl	-1(%rsi), %edx
	addq	$1, %rbx
	andb	%dl, -1(%rbx)
	movl	%esi, %edx
	cmovne	%edi, %ecx
	subl	%r12d, %edx
	cmpl	32(%rsp), %edx
	jl	.L13328
	movl	%r10d, %r8d
	subl	32(%rsp), %r8d
	testl	%r8d, %r8d
	jle	.L13329
	xorl	%edx, %edx
	movl	$1, %r9d
.L13331:
	movzbl	(%rsi,%rdx), %edi
	andb	%dil, (%r14,%rdx)
	cmovne	%r9d, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r8d
	jg	.L13331
	subl	$1, %r8d
	leaq	1(%r14,%r8), %r14
.L13329:
	subl	%r10d, %r13d
	js	.L13315
	xorl	%edx, %edx
	movl	$1, %edi
.L13332:
	movzbl	(%rax,%rdx), %esi
	andb	%sil, (%r14,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r13d
	jge	.L13332
	jmp	.L13315
.L13326:
	movq	%rbx, %rdx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L13334:
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	addq	$1, %rdx
	andb	%sil, -1(%rdx)
	movl	%edx, %esi
	cmovne	%edi, %ecx
	subl	%ebx, %esi
	cmpl	%esi, %r10d
	jg	.L13334
	movl	32(%rsp), %r8d
	subl	%r10d, %r8d
	testl	%r8d, %r8d
	jle	.L13335
	xorl	%esi, %esi
	movl	$1, %r9d
.L13337:
	movzbl	(%rax,%rsi), %edi
	andb	%dil, (%rdx,%rsi)
	cmovne	%r9d, %ecx
	addq	$1, %rsi
	cmpl	%esi, %r8d
	jg	.L13337
	subl	$1, %r8d
	leaq	1(%rax,%r8), %rax
.L13335:
	subl	32(%rsp), %r13d
	js	.L13315
	xorl	%edx, %edx
	movl	$1, %edi
.L13338:
	movzbl	(%rax,%rdx), %esi
	andb	%sil, (%r14,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r13d
	jge	.L13338
	jmp	.L13315
.L13429:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L13324:
	movzbl	(%r12,%rdx), %esi
	andb	%sil, (%rbx,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, 32(%rsp)
	jg	.L13324
	subl	32(%rsp), %r13d
	js	.L13315
	xorl	%edx, %edx
	movl	$1, %edi
.L13325:
	movzbl	(%rax,%rdx), %esi
	andb	%sil, (%r14,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r13d
	jge	.L13325
	jmp	.L13315
.L13425:
	movzbl	44216(%rbp,%rdx), %esi
	testb	%sil, 1976(%rbp,%rcx)
	jne	.L13308
	movzbl	97(%rbp), %r8d
.L13309:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 44(%rsp)
	movq	%r11, 24(%rsp)
	call	s390_logical_to_main_l
	movl	44(%rsp), %r10d
	movq	%rax, %r14
	movq	984(%rbp), %rax
	movq	24(%rsp), %r11
	movq	%rax, 8(%rsp)
	jmp	.L13311
.L13426:
	cmpb	43192(%rbp,%rdx), %r8b
	je	.L13310
	jmp	.L13309
.L13421:
	movzbl	44216(%rbp,%rax), %edi
	testb	%dil, 1976(%rbp,%rsi)
	jne	.L13281
	jmp	.L13280
.L13307:
	movl	32(%rsp), %eax
	movzbl	97(%rbp), %r8d
	leal	(%rax,%r14), %edi
	andl	120(%rbp), %edi
	jmp	.L13309
.L13427:
	movzbl	44216(%rbp,%rax), %esi
	testb	%sil, 1976(%rbp,%rcx)
	jne	.L13318
.L13413:
	movzbl	97(%rbp), %r8d
.L13319:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	s390_logical_to_main_l
	movl	24(%rsp), %r10d
	movq	16(%rsp), %r11
	jmp	.L13321
.L13420:
	cmpb	43192(%rbp,%rax), %dl
	je	.L13277
.L13341:
	movzbl	%dl, %r8d
.L13278:
	movl	40(%rsp), %esi
	movl	%r15d, %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	call	s390_logical_to_main_l
	movzbl	97(%rbp), %r8d
	movq	%rax, %r15
	jmp	.L13279
.L13419:
	movzbl	44216(%rbp,%rax), %esi
	testb	%sil, 1976(%rbp,%rdx)
	jne	.L13276
.L13275:
	movzbl	97(%rbp), %r8d
	jmp	.L13278
.L13317:
	leal	(%r10,%r15), %edi
	andl	120(%rbp), %edi
	jmp	.L13413
.L13428:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L13320
	jmp	.L13319
	.cfi_endproc
.LFE1432:
	.size	s390_and_character, .-s390_and_character
	.p2align 4,,15
	.globl	s390_branch_and_link_register
	.type	s390_branch_and_link_register, @function
s390_branch_and_link_register:
.LFB1433:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movzbl	1(%rdi), %r12d
	movl	424(%rsi), %eax
	movzbl	%r12b, %ebp
	andl	$15, %r12d
	sarl	$4, %ebp
	testl	%eax, %eax
	movslq	%r12d, %r13
	js	.L13453
.L13431:
	testb	$2, 103(%rbx)
	movl	192(%rbx,%r13,8), %esi
	je	.L13432
	movl	168(%rbx), %edi
	movslq	%ebp, %rbp
	movq	136(%rbx), %rcx
	leal	2(%rdi,%rcx), %eax
	subl	144(%rbx), %eax
	orl	$-2147483648, %eax
	testl	%r12d, %r12d
	movl	%eax, 192(%rbx,%rbp,8)
	je	.L13435
.L13455:
	movl	120(%rbx), %edx
	movl	%esi, %eax
	movzbl	808(%rbx), %ecx
	andl	%edx, %eax
	testb	$5, %cl
	jne	.L13436
	movl	%eax, %esi
	andl	$2147479553, %esi
	cmpl	%edi, %esi
	jne	.L13436
	xorq	152(%rbx), %rax
	movq	%rax, 136(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L13432:
	.cfi_restore_state
	movzbl	808(%rbx), %eax
	testb	$1, %al
	jne	.L13454
	movl	$1073741824, %r8d
.L13434:
	movzbl	101(%rbx), %eax
	movslq	%ebp, %rbp
	movzbl	100(%rbx), %edx
	movl	168(%rbx), %edi
	movq	136(%rbx), %rcx
	sall	$24, %eax
	sall	$28, %edx
	orl	%edx, %eax
	leal	2(%rdi,%rcx), %edx
	orl	%r8d, %eax
	subl	144(%rbx), %edx
	andl	$16777215, %edx
	orl	%edx, %eax
	testl	%r12d, %r12d
	movl	%eax, 192(%rbx,%rbp,8)
	jne	.L13455
.L13435:
	addq	$2, %rcx
	movq	%rcx, 136(%rbx)
.L13430:
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L13453:
	.cfi_restore_state
	xorl	%r13d, %r13d
	testl	%r12d, %r12d
	je	.L13431
	movb	$0, 130(%rsi)
	movslq	%r12d, %r13
	movq	%rbx, %rdx
	movzbl	103(%rbx), %edi
	movl	192(%rsi,%r13,8), %esi
	shrb	%dil
	andl	$1, %edi
	call	*2040(%rbx)
	movb	$2, 130(%rbx)
	movl	%eax, 424(%rbx)
	jmp	.L13431
.L13436:
	andb	$4, %cl
	movl	%eax, 112(%rbx)
	movq	$0, 160(%rbx)
	je	.L13430
	testb	$-128, 54(%rbx)
	je	.L13430
	testb	$-128, 402(%rbx)
	je	.L13439
	movl	416(%rbx), %ecx
	andl	%edx, %eax
	movl	408(%rbx), %esi
	andl	$2147483647, %ecx
	andl	$2147483647, %esi
	cmpl	%esi, %ecx
	jb	.L13440
	cmpl	%eax, %esi
	ja	.L13430
.L13452:
	cmpl	%eax, %ecx
	jb	.L13430
.L13439:
	orl	$8388608, 56(%rbx)
	jmp	.L13430
.L13454:
	andl	$2, %eax
	cmpb	$1, %al
	sbbl	%r8d, %r8d
	andl	$-1073741824, %r8d
	subl	$1073741824, %r8d
	jmp	.L13434
.L13440:
	cmpl	%eax, %esi
	jbe	.L13439
	jmp	.L13452
	.cfi_endproc
.LFE1433:
	.size	s390_branch_and_link_register, .-s390_branch_and_link_register
	.p2align 4,,15
	.globl	s390_branch_and_link
	.type	s390_branch_and_link, @function
s390_branch_and_link:
.LFB1434:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edi
	shrl	$20, %ecx
	shrl	$16, %edi
	movl	%eax, %edx
	andl	$15, %ecx
	andl	$4095, %edx
	andl	$15, %edi
	jne	.L13476
.L13457:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L13458
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13458:
	testb	$2, 103(%rsi)
	je	.L13459
	movl	168(%rsi), %edi
	movq	136(%rsi), %rax
	leal	4(%rdi,%rax), %eax
	subl	144(%rsi), %eax
	orl	$-2147483648, %eax
.L13460:
	movslq	%ecx, %rcx
	movl	%eax, 192(%rsi,%rcx,8)
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13461
	movl	%edx, %r8d
	andl	$2147479553, %r8d
	cmpl	%edi, %r8d
	jne	.L13461
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13459:
	movl	168(%rsi), %r9d
	movq	136(%rsi), %rax
	movzbl	100(%rsi), %edi
	movzbl	101(%rsi), %r8d
	leal	4(%r9,%rax), %eax
	subl	144(%rsi), %eax
	sall	$28, %edi
	sall	$24, %r8d
	orl	%r8d, %edi
	orl	$-2147483648, %edi
	andl	$16777215, %eax
	orl	%edi, %eax
	movl	%r9d, %edi
	jmp	.L13460
.L13461:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13477
.L13456:
	rep ret
.L13476:
	movslq	%edi, %rdi
	addl	192(%rsi,%rdi,8), %edx
	jmp	.L13457
.L13477:
	testb	$-128, 54(%rsi)
	je	.L13456
	testb	$-128, 402(%rsi)
	je	.L13464
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13465
	cmpl	%eax, %edi
	ja	.L13456
	cmpl	%eax, %ecx
	jae	.L13464
	.p2align 4,,7
	ret
.L13465:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13464
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13456
.L13464:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1434:
	.size	s390_branch_and_link, .-s390_branch_and_link
	.p2align 4,,15
	.globl	s390_branch_and_save_register
	.type	s390_branch_and_save_register, @function
s390_branch_and_save_register:
.LFB1435:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movzbl	1(%rdi), %r12d
	movl	424(%rsi), %eax
	movzbl	%r12b, %ebp
	andl	$15, %r12d
	sarl	$4, %ebp
	testl	%eax, %eax
	movslq	%r12d, %r13
	js	.L13498
.L13479:
	movl	168(%rbx), %esi
	movq	136(%rbx), %rdx
	testb	$2, 103(%rbx)
	movl	192(%rbx,%r13,8), %ecx
	leal	2(%rsi,%rdx), %eax
	je	.L13480
	subl	144(%rbx), %eax
	movslq	%ebp, %rbp
	orl	$-2147483648, %eax
	testl	%r12d, %r12d
	movl	%eax, 192(%rbx,%rbp,8)
	je	.L13482
.L13499:
	movl	%ecx, %eax
	movl	120(%rbx), %edx
	movzbl	808(%rbx), %ecx
	andl	%edx, %eax
	testb	$5, %cl
	jne	.L13483
	movl	%eax, %edi
	andl	$2147479553, %edi
	cmpl	%esi, %edi
	jne	.L13483
	xorq	152(%rbx), %rax
	movq	%rax, 136(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L13480:
	.cfi_restore_state
	subl	144(%rbx), %eax
	movslq	%ebp, %rbp
	andl	$16777215, %eax
	testl	%r12d, %r12d
	movl	%eax, 192(%rbx,%rbp,8)
	jne	.L13499
.L13482:
	addq	$2, %rdx
	movq	%rdx, 136(%rbx)
.L13478:
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L13498:
	.cfi_restore_state
	xorl	%r13d, %r13d
	testl	%r12d, %r12d
	je	.L13479
	movb	$0, 130(%rsi)
	movslq	%r12d, %r13
	movq	%rbx, %rdx
	movzbl	103(%rbx), %edi
	movl	192(%rsi,%r13,8), %esi
	shrb	%dil
	andl	$1, %edi
	call	*2040(%rbx)
	movb	$2, 130(%rbx)
	movl	%eax, 424(%rbx)
	jmp	.L13479
.L13483:
	andb	$4, %cl
	movl	%eax, 112(%rbx)
	movq	$0, 160(%rbx)
	je	.L13478
	testb	$-128, 54(%rbx)
	je	.L13478
	testb	$-128, 402(%rbx)
	je	.L13486
	movl	416(%rbx), %ecx
	andl	%edx, %eax
	movl	408(%rbx), %esi
	andl	$2147483647, %ecx
	andl	$2147483647, %esi
	cmpl	%esi, %ecx
	jb	.L13487
	cmpl	%eax, %esi
	ja	.L13478
.L13497:
	cmpl	%eax, %ecx
	jb	.L13478
.L13486:
	orl	$8388608, 56(%rbx)
	jmp	.L13478
.L13487:
	cmpl	%eax, %esi
	jbe	.L13486
	.p2align 4,,2
	jmp	.L13497
	.cfi_endproc
.LFE1435:
	.size	s390_branch_and_save_register, .-s390_branch_and_save_register
	.p2align 4,,15
	.globl	s390_branch_and_save
	.type	s390_branch_and_save, @function
s390_branch_and_save:
.LFB1436:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edi
	shrl	$20, %ecx
	shrl	$16, %edi
	movl	%eax, %edx
	andl	$15, %ecx
	andl	$4095, %edx
	andl	$15, %edi
	jne	.L13520
.L13501:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L13502
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13502:
	movl	168(%rsi), %edi
	movq	136(%rsi), %rax
	testb	$2, 103(%rsi)
	leal	4(%rdi,%rax), %eax
	je	.L13503
	subl	144(%rsi), %eax
	orl	$-2147483648, %eax
.L13504:
	movslq	%ecx, %rcx
	movl	%eax, 192(%rsi,%rcx,8)
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13505
	movl	%edx, %r8d
	andl	$2147479553, %r8d
	cmpl	%edi, %r8d
	jne	.L13505
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13503:
	subl	144(%rsi), %eax
	andl	$16777215, %eax
	jmp	.L13504
.L13505:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13521
.L13500:
	rep ret
.L13520:
	movslq	%edi, %rdi
	addl	192(%rsi,%rdi,8), %edx
	jmp	.L13501
.L13521:
	testb	$-128, 54(%rsi)
	je	.L13500
	testb	$-128, 402(%rsi)
	je	.L13508
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13509
	cmpl	%eax, %edi
	ja	.L13500
	cmpl	%eax, %ecx
	jae	.L13508
	.p2align 4,,7
	ret
.L13509:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13508
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13500
.L13508:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1436:
	.size	s390_branch_and_save, .-s390_branch_and_save
	.p2align 4,,15
	.globl	s390_branch_and_save_and_set_mode
	.type	s390_branch_and_save_and_set_mode, @function
s390_branch_and_save_and_set_mode:
.LFB1437:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movzbl	1(%rdi), %r12d
	movzbl	%r12b, %ebp
	andl	$15, %r12d
	movslq	%r12d, %rax
	sarl	$4, %ebp
	movl	192(%rsi,%rax,8), %r13d
	movl	424(%rsi), %eax
	testl	%eax, %eax
	js	.L13543
.L13523:
	movq	136(%rbx), %rdx
	movl	168(%rbx), %eax
	testb	$2, 103(%rbx)
	leal	2(%rax,%rdx), %eax
	je	.L13524
	subl	144(%rbx), %eax
	movslq	%ebp, %rbp
	orl	$-2147483648, %eax
	testl	%r12d, %r12d
	movl	%eax, 192(%rbx,%rbp,8)
	je	.L13526
.L13544:
	movzbl	103(%rbx), %edx
	movl	%r13d, %esi
	movl	%r13d, %eax
	shrl	$31, %esi
	sarl	$31, %eax
	movl	%esi, %ecx
	andl	$2130706432, %eax
	addl	%ecx, %ecx
	addl	$16777215, %eax
	andl	$-3, %edx
	andl	%eax, %r13d
	movl	%eax, 120(%rbx)
	orl	%ecx, %edx
	movb	%dl, 103(%rbx)
	movzbl	808(%rbx), %edx
	testb	$5, %dl
	jne	.L13528
	movl	%r13d, %ecx
	andl	$2147479553, %ecx
	cmpl	168(%rbx), %ecx
	jne	.L13528
	xorq	152(%rbx), %r13
	movq	%r13, 136(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L13524:
	.cfi_restore_state
	subl	144(%rbx), %eax
	movslq	%ebp, %rbp
	andl	$16777215, %eax
	testl	%r12d, %r12d
	movl	%eax, 192(%rbx,%rbp,8)
	jne	.L13544
.L13526:
	addq	$2, %rdx
	movq	%rdx, 136(%rbx)
.L13522:
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L13543:
	.cfi_restore_state
	testl	%r12d, %r12d
	je	.L13523
	movb	$0, 130(%rsi)
	movl	%r13d, %edi
	movl	%r13d, %esi
	andl	$-2, %esi
	shrl	$31, %edi
	movq	%rbx, %rdx
	call	s390_trace_br
	movb	$2, 130(%rbx)
	movl	%eax, 424(%rbx)
	jmp	.L13523
.L13528:
	andb	$4, %dl
	movl	%r13d, 112(%rbx)
	movq	$0, 160(%rbx)
	je	.L13522
	testb	$-128, 54(%rbx)
	je	.L13522
	testb	$-128, 402(%rbx)
	je	.L13531
	movl	416(%rbx), %edx
	andl	%r13d, %eax
	movl	408(%rbx), %ecx
	andl	$2147483647, %edx
	andl	$2147483647, %ecx
	cmpl	%ecx, %edx
	jb	.L13532
	cmpl	%eax, %ecx
	ja	.L13522
.L13542:
	cmpl	%eax, %edx
	jb	.L13522
.L13531:
	orl	$8388608, 56(%rbx)
	jmp	.L13522
.L13532:
	cmpl	%eax, %ecx
	jbe	.L13531
	.p2align 4,,2
	jmp	.L13542
	.cfi_endproc
.LFE1437:
	.size	s390_branch_and_save_and_set_mode, .-s390_branch_and_save_and_set_mode
	.p2align 4,,15
	.globl	s390_branch_and_set_mode
	.type	s390_branch_and_set_mode, @function
s390_branch_and_set_mode:
.LFB1438:
	.cfi_startproc
	movzbl	1(%rdi), %edx
	movzbl	%dl, %eax
	andl	$15, %edx
	sarl	$4, %eax
	movslq	%edx, %rcx
	testl	%eax, %eax
	movl	192(%rsi,%rcx,8), %ecx
	je	.L13546
	testb	$2, 103(%rsi)
	cltq
	je	.L13547
	orl	$-2147483648, 192(%rsi,%rax,8)
.L13546:
	testl	%edx, %edx
	je	.L13548
	movzbl	103(%rsi), %edx
	movl	%ecx, %edi
	movl	%ecx, %eax
	shrl	$31, %edi
	sarl	$31, %eax
	addl	%edi, %edi
	andl	$2130706432, %eax
	addl	$16777215, %eax
	andl	$-3, %edx
	andl	%eax, %ecx
	movl	%eax, 120(%rsi)
	orl	%edi, %edx
	movb	%dl, 103(%rsi)
	movzbl	808(%rsi), %edx
	testb	$5, %dl
	jne	.L13550
	movl	%ecx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13550
	xorq	152(%rsi), %rcx
	movq	%rcx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13548:
	addq	$2, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13547:
	andl	$2147483647, 192(%rsi,%rax,8)
	jmp	.L13546
.L13550:
	andb	$4, %dl
	movl	%ecx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13563
.L13545:
	rep ret
.L13563:
	testb	$-128, 54(%rsi)
	je	.L13545
	testb	$-128, 402(%rsi)
	je	.L13553
	movl	416(%rsi), %edx
	andl	%ecx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %edx
	andl	$2147483647, %edi
	cmpl	%edi, %edx
	jb	.L13554
	cmpl	%eax, %edi
	ja	.L13545
	cmpl	%eax, %edx
	jae	.L13553
	.p2align 4,,7
	ret
.L13554:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13553
	cmpl	%eax, %edx
	.p2align 4,,8
	jb	.L13545
.L13553:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1438:
	.size	s390_branch_and_set_mode, .-s390_branch_and_set_mode
	.p2align 4,,15
	.globl	s390_branch_on_condition_register
	.type	s390_branch_on_condition_register, @function
s390_branch_on_condition_register:
.LFB1439:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	movl	%eax, %edi
	andl	$15, %edi
	je	.L13565
	movzbl	100(%rsi), %ecx
	movl	$128, %edx
	sarl	%cl, %edx
	testl	%edx, %eax
	je	.L13565
	movl	120(%rsi), %edx
	andl	$15, %edi
	movzbl	808(%rsi), %ecx
	movl	%edx, %eax
	andl	192(%rsi,%rdi,8), %eax
	testb	$5, %cl
	jne	.L13566
	movl	%eax, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13566
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13565:
	addq	$2, 136(%rsi)
	ret
.L13566:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13581
.L13564:
	rep ret
.L13581:
	testb	$-128, 54(%rsi)
	je	.L13564
	testb	$-128, 402(%rsi)
	je	.L13569
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13570
	cmpl	%eax, %edi
	ja	.L13564
	cmpl	%eax, %ecx
	jae	.L13569
	.p2align 4,,7
	ret
.L13570:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13569
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13564
.L13569:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1439:
	.size	s390_branch_on_condition_register, .-s390_branch_on_condition_register
	.p2align 4,,15
	.globl	s390_store_character
	.type	s390_store_character, @function
s390_store_character:
.LFB1440:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %edi
	shrl	$20, %edx
	shrl	$16, %edi
	movl	%eax, %ecx
	andl	$15, %edx
	andl	$4095, %ecx
	andl	$15, %edi
	jne	.L13608
.L13583:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L13584
	movslq	%eax, %rdi
	addl	192(%rsi,%rdi,8), %ecx
.L13584:
	movslq	%edx, %rdx
	movb	$4, 130(%rsi)
	andl	120(%rsi), %ecx
	addq	$4, 136(%rsi)
	movl	%ecx, %edi
	movzbl	192(%rsi,%rdx,8), %ebx
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L13585
	movl	%ecx, %r8d
	addl	$1, %edx
	shrl	$12, %r8d
	movslq	%edx, %rdx
	andl	$1023, %r8d
	leaq	(%rsi,%r8,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rsi,%rdx,8)
	jne	.L13609
.L13586:
	movzbl	97(%rsi), %edx
	testb	%dl, %dl
	jne	.L13610
.L13587:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rsi), %edx
	cmpl	10424(%rcx), %edx
	jne	.L13585
	testb	$2, 46264(%rsi,%r8)
	je	.L13585
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L13588:
	movb	%bl, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L13609:
	.cfi_restore_state
	movzbl	44216(%rsi,%r8), %r9d
	testb	%r9b, 1976(%rsi,%rdx)
	jne	.L13586
.L13585:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$1, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L13588
.L13608:
	movslq	%edi, %rdi
	addl	192(%rsi,%rdi,8), %ecx
	jmp	.L13583
.L13610:
	cmpb	43192(%rsi,%r8), %dl
	je	.L13587
	jmp	.L13585
	.cfi_endproc
.LFE1440:
	.size	s390_store_character, .-s390_store_character
	.p2align 4,,15
	.globl	s390_branch_on_condition
	.type	s390_branch_on_condition, @function
s390_branch_on_condition:
.LFB1441:
	.cfi_startproc
	movzbl	100(%rsi), %ecx
	movl	$128, %eax
	movzbl	1(%rdi), %edx
	sarl	%cl, %eax
	testl	%eax, %edx
	je	.L13612
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	andl	$4095, %edx
	shrl	$12, %eax
	andl	$15, %ecx
	addl	192(%rsi,%rcx,8), %edx
	andl	$15, %eax
	je	.L13613
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13613:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13614
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13614
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13612:
	addq	$4, 136(%rsi)
	ret
.L13614:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13626
.L13611:
	rep ret
.L13626:
	testb	$-128, 54(%rsi)
	je	.L13611
	testb	$-128, 402(%rsi)
	je	.L13617
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13618
	cmpl	%eax, %edi
	ja	.L13611
	cmpl	%eax, %ecx
	jae	.L13617
	.p2align 4,,7
	ret
.L13618:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13617
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13611
.L13617:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1441:
	.size	s390_branch_on_condition, .-s390_branch_on_condition
	.p2align 4,,15
	.globl	s390_47_0
	.type	s390_47_0, @function
s390_47_0:
.LFB1442:
	.cfi_startproc
	movzbl	100(%rsi), %ecx
	movl	$128, %eax
	movzbl	1(%rdi), %edx
	sarl	%cl, %eax
	testl	%eax, %edx
	je	.L13628
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13629
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13629:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13630
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13630
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13628:
	addq	$4, 136(%rsi)
	ret
.L13630:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13642
.L13627:
	rep ret
.L13642:
	testb	$-128, 54(%rsi)
	je	.L13627
	testb	$-128, 402(%rsi)
	je	.L13633
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13634
	cmpl	%eax, %edi
	ja	.L13627
	cmpl	%eax, %ecx
	jae	.L13633
	.p2align 4,,7
	ret
.L13634:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13633
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13627
.L13633:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1442:
	.size	s390_47_0, .-s390_47_0
	.p2align 4,,15
	.globl	s390_nop4
	.type	s390_nop4, @function
s390_nop4:
.LFB1443:
	.cfi_startproc
	addq	$4, 136(%rsi)
	ret
	.cfi_endproc
.LFE1443:
	.size	s390_nop4, .-s390_nop4
	.p2align 4,,15
	.globl	s390_4710
	.type	s390_4710, @function
s390_4710:
.LFB1444:
	.cfi_startproc
	cmpb	$3, 100(%rsi)
	je	.L13659
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13659:
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13646
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13646:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13647
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13647
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
.L13647:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13660
.L13644:
	rep ret
.L13660:
	testb	$-128, 54(%rsi)
	je	.L13644
	testb	$-128, 402(%rsi)
	je	.L13650
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13651
	cmpl	%eax, %edi
	ja	.L13644
	cmpl	%eax, %ecx
	jae	.L13650
	.p2align 4,,7
	ret
.L13651:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13650
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13644
.L13650:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1444:
	.size	s390_4710, .-s390_4710
	.p2align 4,,15
	.globl	s390_4720
	.type	s390_4720, @function
s390_4720:
.LFB1445:
	.cfi_startproc
	cmpb	$2, 100(%rsi)
	je	.L13676
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13676:
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13663
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13663:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13664
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13664
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
.L13664:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13677
.L13661:
	rep ret
.L13677:
	testb	$-128, 54(%rsi)
	je	.L13661
	testb	$-128, 402(%rsi)
	je	.L13667
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13668
	cmpl	%eax, %edi
	ja	.L13661
	cmpl	%eax, %ecx
	jae	.L13667
	.p2align 4,,7
	ret
.L13668:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13667
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13661
.L13667:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1445:
	.size	s390_4720, .-s390_4720
	.p2align 4,,15
	.globl	s390_4730
	.type	s390_4730, @function
s390_4730:
.LFB1446:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	jbe	.L13679
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13680
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13680:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13681
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13681
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13679:
	addq	$4, 136(%rsi)
	ret
.L13681:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13693
.L13678:
	rep ret
.L13693:
	testb	$-128, 54(%rsi)
	je	.L13678
	testb	$-128, 402(%rsi)
	je	.L13684
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13685
	cmpl	%eax, %edi
	ja	.L13678
	cmpl	%eax, %ecx
	jae	.L13684
	.p2align 4,,7
	ret
.L13685:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13684
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13678
.L13684:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1446:
	.size	s390_4730, .-s390_4730
	.p2align 4,,15
	.globl	s390_4740
	.type	s390_4740, @function
s390_4740:
.LFB1447:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	je	.L13709
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13709:
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13696
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13696:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13697
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13697
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
.L13697:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13710
.L13694:
	rep ret
.L13710:
	testb	$-128, 54(%rsi)
	je	.L13694
	testb	$-128, 402(%rsi)
	je	.L13700
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13701
	cmpl	%eax, %edi
	ja	.L13694
	cmpl	%eax, %ecx
	jae	.L13700
	.p2align 4,,7
	ret
.L13701:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13700
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13694
.L13700:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1447:
	.size	s390_4740, .-s390_4740
	.p2align 4,,15
	.globl	s390_4750
	.type	s390_4750, @function
s390_4750:
.LFB1448:
	.cfi_startproc
	testb	$1, 100(%rsi)
	je	.L13712
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13713
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13713:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13714
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13714
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13712:
	addq	$4, 136(%rsi)
	ret
.L13714:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13726
.L13711:
	rep ret
.L13726:
	testb	$-128, 54(%rsi)
	je	.L13711
	testb	$-128, 402(%rsi)
	je	.L13717
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13718
	cmpl	%eax, %edi
	ja	.L13711
	cmpl	%eax, %ecx
	jae	.L13717
	.p2align 4,,7
	ret
.L13718:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13717
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13711
.L13717:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1448:
	.size	s390_4750, .-s390_4750
	.p2align 4,,15
	.globl	s390_4770
	.type	s390_4770, @function
s390_4770:
.LFB1449:
	.cfi_startproc
	cmpb	$0, 100(%rsi)
	je	.L13728
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13729
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13729:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13730
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13730
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13728:
	addq	$4, 136(%rsi)
	ret
.L13730:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13742
.L13727:
	rep ret
.L13742:
	testb	$-128, 54(%rsi)
	je	.L13727
	testb	$-128, 402(%rsi)
	je	.L13733
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13734
	cmpl	%eax, %edi
	ja	.L13727
	cmpl	%eax, %ecx
	jae	.L13733
	.p2align 4,,7
	ret
.L13734:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13733
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13727
.L13733:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1449:
	.size	s390_4770, .-s390_4770
	.p2align 4,,15
	.globl	s390_4780
	.type	s390_4780, @function
s390_4780:
.LFB1450:
	.cfi_startproc
	cmpb	$0, 100(%rsi)
	jne	.L13744
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13745
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13745:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13746
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13746
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13744:
	addq	$4, 136(%rsi)
	ret
.L13746:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13758
.L13743:
	rep ret
.L13758:
	testb	$-128, 54(%rsi)
	je	.L13743
	testb	$-128, 402(%rsi)
	je	.L13749
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13750
	cmpl	%eax, %edi
	ja	.L13743
	cmpl	%eax, %ecx
	jae	.L13749
	.p2align 4,,7
	ret
.L13750:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13749
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13743
.L13749:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1450:
	.size	s390_4780, .-s390_4780
	.p2align 4,,15
	.globl	s390_47A0
	.type	s390_47A0, @function
s390_47A0:
.LFB1451:
	.cfi_startproc
	testb	$1, 100(%rsi)
	jne	.L13760
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13761
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13761:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13762
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13762
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13760:
	addq	$4, 136(%rsi)
	ret
.L13762:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13774
.L13759:
	rep ret
.L13774:
	testb	$-128, 54(%rsi)
	je	.L13759
	testb	$-128, 402(%rsi)
	je	.L13765
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13766
	cmpl	%eax, %edi
	ja	.L13759
	cmpl	%eax, %ecx
	jae	.L13765
	.p2align 4,,7
	ret
.L13766:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13765
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13759
.L13765:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1451:
	.size	s390_47A0, .-s390_47A0
	.p2align 4,,15
	.globl	s390_47B0
	.type	s390_47B0, @function
s390_47B0:
.LFB1452:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	je	.L13776
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13777
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13777:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13778
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13778
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13776:
	addq	$4, 136(%rsi)
	ret
.L13778:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13790
.L13775:
	rep ret
.L13790:
	testb	$-128, 54(%rsi)
	je	.L13775
	testb	$-128, 402(%rsi)
	je	.L13781
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13782
	cmpl	%eax, %edi
	ja	.L13775
	cmpl	%eax, %ecx
	jae	.L13781
	.p2align 4,,7
	ret
.L13782:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13781
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13775
.L13781:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1452:
	.size	s390_47B0, .-s390_47B0
	.p2align 4,,15
	.globl	s390_47C0
	.type	s390_47C0, @function
s390_47C0:
.LFB1453:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	jbe	.L13806
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13806:
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13793
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13793:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13794
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13794
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
.L13794:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13807
.L13791:
	rep ret
.L13807:
	testb	$-128, 54(%rsi)
	je	.L13791
	testb	$-128, 402(%rsi)
	je	.L13797
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13798
	cmpl	%eax, %edi
	ja	.L13791
	cmpl	%eax, %ecx
	jae	.L13797
	.p2align 4,,7
	ret
.L13798:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13797
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13791
.L13797:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1453:
	.size	s390_47C0, .-s390_47C0
	.p2align 4,,15
	.globl	s390_47D0
	.type	s390_47D0, @function
s390_47D0:
.LFB1454:
	.cfi_startproc
	cmpb	$2, 100(%rsi)
	je	.L13809
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13810
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13810:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13811
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13811
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13809:
	addq	$4, 136(%rsi)
	ret
.L13811:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13823
.L13808:
	rep ret
.L13823:
	testb	$-128, 54(%rsi)
	je	.L13808
	testb	$-128, 402(%rsi)
	je	.L13814
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13815
	cmpl	%eax, %edi
	ja	.L13808
	cmpl	%eax, %ecx
	jae	.L13814
	.p2align 4,,7
	ret
.L13815:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13814
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13808
.L13814:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1454:
	.size	s390_47D0, .-s390_47D0
	.p2align 4,,15
	.globl	s390_47E0
	.type	s390_47E0, @function
s390_47E0:
.LFB1455:
	.cfi_startproc
	cmpb	$3, 100(%rsi)
	je	.L13825
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13826
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13826:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13827
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13827
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L13825:
	addq	$4, 136(%rsi)
	ret
.L13827:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13839
.L13824:
	rep ret
.L13839:
	testb	$-128, 54(%rsi)
	je	.L13824
	testb	$-128, 402(%rsi)
	je	.L13830
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13831
	cmpl	%eax, %edi
	ja	.L13824
	cmpl	%eax, %ecx
	jae	.L13830
	.p2align 4,,7
	ret
.L13831:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13830
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13824
.L13830:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1455:
	.size	s390_47E0, .-s390_47E0
	.p2align 4,,15
	.globl	s390_47F0
	.type	s390_47F0, @function
s390_47F0:
.LFB1456:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L13841
	cltq
	addl	192(%rsi,%rax,8), %edx
.L13841:
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %ecx
	andl	%eax, %edx
	testb	$5, %cl
	jne	.L13842
	movl	%edx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L13842
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
.L13842:
	andb	$4, %cl
	movl	%edx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L13854
.L13840:
	rep ret
.L13854:
	testb	$-128, 54(%rsi)
	je	.L13840
	testb	$-128, 402(%rsi)
	je	.L13845
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L13846
	cmpl	%eax, %edi
	ja	.L13840
	cmpl	%eax, %ecx
	jae	.L13845
	.p2align 4,,7
	ret
.L13846:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L13845
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L13840
.L13845:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1456:
	.size	s390_47F0, .-s390_47F0
	.p2align 4,,15
	.globl	s390_and
	.type	s390_and, @function
s390_and:
.LFB1457:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L13887
.L13856:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L13857
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %edi
.L13857:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L13888
.L13858:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L13860
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L13889
.L13861:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L13890
.L13862:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L13860
	testb	$4, 46264(%rbx,%rsi)
	je	.L13860
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L13863:
	movl	(%rax), %eax
	bswap	%eax
.L13864:
	movslq	%ebp, %rbp
	leaq	(%rbx,%rbp,8), %rdx
	andl	%eax, 192(%rdx)
	setne	100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L13889:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L13861
.L13860:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L13863
.L13888:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L13858
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L13864
.L13887:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %edi
	jmp	.L13856
.L13890:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L13862
	jmp	.L13860
	.cfi_endproc
.LFE1457:
	.size	s390_and, .-s390_and
	.p2align 4,,15
	.globl	s390_load
	.type	s390_load, @function
s390_load:
.LFB1458:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %ebp
	shrl	$16, %ecx
	movl	%eax, %edx
	shrl	$20, %ebp
	andl	$4095, %edx
	andl	$15, %ecx
	shrl	$12, %eax
	andl	$15, %ebp
	addl	192(%rsi,%rcx,8), %edx
	andl	$15, %eax
	je	.L13892
	movslq	%eax, %rcx
	addl	192(%rsi,%rcx,8), %edx
.L13892:
	movl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	%edx, %edi
	testb	$3, %dil
	jne	.L13919
.L13893:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L13895
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L13920
.L13896:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L13921
.L13897:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L13895
	testb	$4, 46264(%rbx,%rsi)
	je	.L13895
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L13898:
	movl	(%rax), %eax
	bswap	%eax
.L13899:
	movslq	%ebp, %rbp
	movl	%eax, 192(%rbx,%rbp,8)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L13920:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L13896
.L13895:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L13898
.L13919:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L13893
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L13899
.L13921:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L13897
	.p2align 4,,4
	jmp	.L13895
	.cfi_endproc
.LFE1458:
	.size	s390_load, .-s390_load
	.p2align 4,,15
	.globl	s390_5800
	.type	s390_5800, @function
s390_5800:
.LFB1459:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L13923
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L13923:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L13950
.L13924:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L13926
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L13951
.L13927:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L13952
.L13928:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L13926
	testb	$4, 46264(%rbx,%rsi)
	je	.L13926
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L13929:
	movl	(%rax), %eax
	bswap	%eax
.L13930:
	movl	%eax, 192(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L13951:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L13927
.L13926:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L13929
.L13950:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L13924
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L13930
.L13952:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L13928
	.p2align 4,,4
	jmp	.L13926
	.cfi_endproc
.LFE1459:
	.size	s390_5800, .-s390_5800
	.p2align 4,,15
	.globl	s390_5810
	.type	s390_5810, @function
s390_5810:
.LFB1460:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L13954
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L13954:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L13981
.L13955:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L13957
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L13982
.L13958:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L13983
.L13959:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L13957
	testb	$4, 46264(%rbx,%rsi)
	je	.L13957
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L13960:
	movl	(%rax), %eax
	bswap	%eax
.L13961:
	movl	%eax, 200(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L13982:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L13958
.L13957:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L13960
.L13981:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L13955
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L13961
.L13983:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L13959
	.p2align 4,,4
	jmp	.L13957
	.cfi_endproc
.LFE1460:
	.size	s390_5810, .-s390_5810
	.p2align 4,,15
	.globl	s390_5820
	.type	s390_5820, @function
s390_5820:
.LFB1461:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L13985
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L13985:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14012
.L13986:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L13988
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14013
.L13989:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14014
.L13990:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L13988
	testb	$4, 46264(%rbx,%rsi)
	je	.L13988
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L13991:
	movl	(%rax), %eax
	bswap	%eax
.L13992:
	movl	%eax, 208(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14013:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L13989
.L13988:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L13991
.L14012:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L13986
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L13992
.L14014:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L13990
	.p2align 4,,4
	jmp	.L13988
	.cfi_endproc
.LFE1461:
	.size	s390_5820, .-s390_5820
	.p2align 4,,15
	.globl	s390_5830
	.type	s390_5830, @function
s390_5830:
.LFB1462:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L14016
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L14016:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14043
.L14017:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14019
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14044
.L14020:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14045
.L14021:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L14019
	testb	$4, 46264(%rbx,%rsi)
	je	.L14019
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L14022:
	movl	(%rax), %eax
	bswap	%eax
.L14023:
	movl	%eax, 216(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14044:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L14020
.L14019:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14022
.L14043:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14017
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L14023
.L14045:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L14021
	.p2align 4,,4
	jmp	.L14019
	.cfi_endproc
.LFE1462:
	.size	s390_5830, .-s390_5830
	.p2align 4,,15
	.globl	s390_5840
	.type	s390_5840, @function
s390_5840:
.LFB1463:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L14047
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L14047:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14074
.L14048:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14050
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14075
.L14051:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14076
.L14052:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L14050
	testb	$4, 46264(%rbx,%rsi)
	je	.L14050
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L14053:
	movl	(%rax), %eax
	bswap	%eax
.L14054:
	movl	%eax, 224(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14075:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L14051
.L14050:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14053
.L14074:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14048
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L14054
.L14076:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L14052
	.p2align 4,,4
	jmp	.L14050
	.cfi_endproc
.LFE1463:
	.size	s390_5840, .-s390_5840
	.p2align 4,,15
	.globl	s390_5850
	.type	s390_5850, @function
s390_5850:
.LFB1464:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L14078
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L14078:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14105
.L14079:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14081
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14106
.L14082:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14107
.L14083:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L14081
	testb	$4, 46264(%rbx,%rsi)
	je	.L14081
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L14084:
	movl	(%rax), %eax
	bswap	%eax
.L14085:
	movl	%eax, 232(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14106:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L14082
.L14081:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14084
.L14105:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14079
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L14085
.L14107:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L14083
	.p2align 4,,4
	jmp	.L14081
	.cfi_endproc
.LFE1464:
	.size	s390_5850, .-s390_5850
	.p2align 4,,15
	.globl	s390_5860
	.type	s390_5860, @function
s390_5860:
.LFB1465:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L14109
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L14109:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14136
.L14110:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14112
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14137
.L14113:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14138
.L14114:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L14112
	testb	$4, 46264(%rbx,%rsi)
	je	.L14112
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L14115:
	movl	(%rax), %eax
	bswap	%eax
.L14116:
	movl	%eax, 240(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14137:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L14113
.L14112:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14115
.L14136:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14110
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L14116
.L14138:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L14114
	.p2align 4,,4
	jmp	.L14112
	.cfi_endproc
.LFE1465:
	.size	s390_5860, .-s390_5860
	.p2align 4,,15
	.globl	s390_5870
	.type	s390_5870, @function
s390_5870:
.LFB1466:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L14140
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L14140:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14167
.L14141:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14143
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14168
.L14144:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14169
.L14145:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L14143
	testb	$4, 46264(%rbx,%rsi)
	je	.L14143
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L14146:
	movl	(%rax), %eax
	bswap	%eax
.L14147:
	movl	%eax, 248(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14168:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L14144
.L14143:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14146
.L14167:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14141
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L14147
.L14169:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L14145
	.p2align 4,,4
	jmp	.L14143
	.cfi_endproc
.LFE1466:
	.size	s390_5870, .-s390_5870
	.p2align 4,,15
	.globl	s390_5880
	.type	s390_5880, @function
s390_5880:
.LFB1467:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L14171
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L14171:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14198
.L14172:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14174
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14199
.L14175:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14200
.L14176:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L14174
	testb	$4, 46264(%rbx,%rsi)
	je	.L14174
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L14177:
	movl	(%rax), %eax
	bswap	%eax
.L14178:
	movl	%eax, 256(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14199:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L14175
.L14174:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14177
.L14198:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14172
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L14178
.L14200:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L14176
	.p2align 4,,4
	jmp	.L14174
	.cfi_endproc
.LFE1467:
	.size	s390_5880, .-s390_5880
	.p2align 4,,15
	.globl	s390_5890
	.type	s390_5890, @function
s390_5890:
.LFB1468:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L14202
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L14202:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14229
.L14203:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14205
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14230
.L14206:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14231
.L14207:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L14205
	testb	$4, 46264(%rbx,%rsi)
	je	.L14205
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L14208:
	movl	(%rax), %eax
	bswap	%eax
.L14209:
	movl	%eax, 264(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14230:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L14206
.L14205:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14208
.L14229:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14203
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L14209
.L14231:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L14207
	.p2align 4,,4
	jmp	.L14205
	.cfi_endproc
.LFE1468:
	.size	s390_5890, .-s390_5890
	.p2align 4,,15
	.globl	s390_58A0
	.type	s390_58A0, @function
s390_58A0:
.LFB1469:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L14233
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L14233:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14260
.L14234:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14236
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14261
.L14237:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14262
.L14238:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L14236
	testb	$4, 46264(%rbx,%rsi)
	je	.L14236
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L14239:
	movl	(%rax), %eax
	bswap	%eax
.L14240:
	movl	%eax, 272(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14261:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L14237
.L14236:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14239
.L14260:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14234
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L14240
.L14262:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L14238
	.p2align 4,,4
	jmp	.L14236
	.cfi_endproc
.LFE1469:
	.size	s390_58A0, .-s390_58A0
	.p2align 4,,15
	.globl	s390_58B0
	.type	s390_58B0, @function
s390_58B0:
.LFB1470:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L14264
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L14264:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14291
.L14265:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14267
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14292
.L14268:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14293
.L14269:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L14267
	testb	$4, 46264(%rbx,%rsi)
	je	.L14267
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L14270:
	movl	(%rax), %eax
	bswap	%eax
.L14271:
	movl	%eax, 280(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14292:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L14268
.L14267:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14270
.L14291:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14265
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L14271
.L14293:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L14269
	.p2align 4,,4
	jmp	.L14267
	.cfi_endproc
.LFE1470:
	.size	s390_58B0, .-s390_58B0
	.p2align 4,,15
	.globl	s390_58C0
	.type	s390_58C0, @function
s390_58C0:
.LFB1471:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L14295
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L14295:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14322
.L14296:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14298
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14323
.L14299:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14324
.L14300:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L14298
	testb	$4, 46264(%rbx,%rsi)
	je	.L14298
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L14301:
	movl	(%rax), %eax
	bswap	%eax
.L14302:
	movl	%eax, 288(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14323:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L14299
.L14298:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14301
.L14322:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14296
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L14302
.L14324:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L14300
	.p2align 4,,4
	jmp	.L14298
	.cfi_endproc
.LFE1471:
	.size	s390_58C0, .-s390_58C0
	.p2align 4,,15
	.globl	s390_58D0
	.type	s390_58D0, @function
s390_58D0:
.LFB1472:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L14326
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L14326:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14353
.L14327:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14329
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14354
.L14330:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14355
.L14331:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L14329
	testb	$4, 46264(%rbx,%rsi)
	je	.L14329
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L14332:
	movl	(%rax), %eax
	bswap	%eax
.L14333:
	movl	%eax, 296(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14354:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L14330
.L14329:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14332
.L14353:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14327
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L14333
.L14355:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L14331
	.p2align 4,,4
	jmp	.L14329
	.cfi_endproc
.LFE1472:
	.size	s390_58D0, .-s390_58D0
	.p2align 4,,15
	.globl	s390_58E0
	.type	s390_58E0, @function
s390_58E0:
.LFB1473:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L14357
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L14357:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14384
.L14358:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14360
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14385
.L14361:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14386
.L14362:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L14360
	testb	$4, 46264(%rbx,%rsi)
	je	.L14360
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L14363:
	movl	(%rax), %eax
	bswap	%eax
.L14364:
	movl	%eax, 304(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14385:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L14361
.L14360:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14363
.L14384:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14358
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L14364
.L14386:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L14362
	.p2align 4,,4
	jmp	.L14360
	.cfi_endproc
.LFE1473:
	.size	s390_58E0, .-s390_58E0
	.p2align 4,,15
	.globl	s390_58F0
	.type	s390_58F0, @function
s390_58F0:
.LFB1474:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L14388
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L14388:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L14415
.L14389:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14391
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L14416
.L14392:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L14417
.L14393:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L14391
	testb	$4, 46264(%rbx,%rsi)
	je	.L14391
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L14394:
	movl	(%rax), %eax
	bswap	%eax
.L14395:
	movl	%eax, 312(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14416:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L14392
.L14391:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14394
.L14415:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14389
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L14395
.L14417:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L14393
	.p2align 4,,4
	jmp	.L14391
	.cfi_endproc
.LFE1474:
	.size	s390_58F0, .-s390_58F0
	.p2align 4,,15
	.globl	s390_store
	.type	s390_store, @function
s390_store:
.LFB1475:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %edi
	shrl	$16, %edx
	movl	%eax, %ecx
	shrl	$20, %edi
	andl	$4095, %ecx
	andl	$15, %edx
	shrl	$12, %eax
	andl	$15, %edi
	addl	192(%rsi,%rdx,8), %ecx
	andl	$15, %eax
	je	.L14419
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %ecx
.L14419:
	andl	120(%rsi), %ecx
	movb	$4, 130(%rsi)
	movslq	%edi, %rdi
	addq	$4, 136(%rsi)
	testb	$3, %cl
	movl	%ecx, %r10d
	movl	192(%rsi,%rdi,8), %ebx
	jne	.L14447
.L14420:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14422
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %edi
	cmpl	%edi, 320(%rsi,%rcx,8)
	jne	.L14448
.L14423:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14449
.L14424:
	movl	%r10d, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14422
	testb	$2, 46264(%rsi,%rdx)
	je	.L14422
	movl	%r10d, %eax
	xorq	26808(%r8), %rax
.L14425:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14448:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L14423
.L14422:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movl	%r10d, %edi
	call	s390_logical_to_main_l
	jmp	.L14425
.L14447:
	movl	%ecx, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14420
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movl	%r10d, %esi
	jmp	s390_vstore4_full
.L14449:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14424
	jmp	.L14422
	.cfi_endproc
.LFE1475:
	.size	s390_store, .-s390_store
	.p2align 4,,15
	.globl	s390_5000
	.type	s390_5000, @function
s390_5000:
.LFB1476:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14451
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14451:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	192(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14479
.L14452:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14454
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14480
.L14455:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14481
.L14456:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14454
	testb	$2, 46264(%rsi,%rdx)
	je	.L14454
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14457:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14480:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14455
.L14454:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14457
.L14479:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14452
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14481:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14456
	jmp	.L14454
	.cfi_endproc
.LFE1476:
	.size	s390_5000, .-s390_5000
	.p2align 4,,15
	.globl	s390_5010
	.type	s390_5010, @function
s390_5010:
.LFB1477:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14483
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14483:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	200(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14511
.L14484:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14486
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14512
.L14487:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14513
.L14488:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14486
	testb	$2, 46264(%rsi,%rdx)
	je	.L14486
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14489:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14512:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14487
.L14486:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14489
.L14511:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14484
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14513:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14488
	jmp	.L14486
	.cfi_endproc
.LFE1477:
	.size	s390_5010, .-s390_5010
	.p2align 4,,15
	.globl	s390_5020
	.type	s390_5020, @function
s390_5020:
.LFB1478:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14515
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14515:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	208(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14543
.L14516:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14518
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14544
.L14519:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14545
.L14520:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14518
	testb	$2, 46264(%rsi,%rdx)
	je	.L14518
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14521:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14544:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14519
.L14518:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14521
.L14543:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14516
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14545:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14520
	jmp	.L14518
	.cfi_endproc
.LFE1478:
	.size	s390_5020, .-s390_5020
	.p2align 4,,15
	.globl	s390_5030
	.type	s390_5030, @function
s390_5030:
.LFB1479:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14547
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14547:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	216(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14575
.L14548:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14550
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14576
.L14551:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14577
.L14552:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14550
	testb	$2, 46264(%rsi,%rdx)
	je	.L14550
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14553:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14576:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14551
.L14550:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14553
.L14575:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14548
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14577:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14552
	jmp	.L14550
	.cfi_endproc
.LFE1479:
	.size	s390_5030, .-s390_5030
	.p2align 4,,15
	.globl	s390_5040
	.type	s390_5040, @function
s390_5040:
.LFB1480:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14579
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14579:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	224(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14607
.L14580:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14582
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14608
.L14583:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14609
.L14584:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14582
	testb	$2, 46264(%rsi,%rdx)
	je	.L14582
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14585:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14608:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14583
.L14582:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14585
.L14607:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14580
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14609:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14584
	jmp	.L14582
	.cfi_endproc
.LFE1480:
	.size	s390_5040, .-s390_5040
	.p2align 4,,15
	.globl	s390_5050
	.type	s390_5050, @function
s390_5050:
.LFB1481:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14611
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14611:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	232(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14639
.L14612:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14614
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14640
.L14615:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14641
.L14616:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14614
	testb	$2, 46264(%rsi,%rdx)
	je	.L14614
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14617:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14640:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14615
.L14614:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14617
.L14639:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14612
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14641:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14616
	jmp	.L14614
	.cfi_endproc
.LFE1481:
	.size	s390_5050, .-s390_5050
	.p2align 4,,15
	.globl	s390_5060
	.type	s390_5060, @function
s390_5060:
.LFB1482:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14643
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14643:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	240(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14671
.L14644:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14646
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14672
.L14647:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14673
.L14648:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14646
	testb	$2, 46264(%rsi,%rdx)
	je	.L14646
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14649:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14672:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14647
.L14646:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14649
.L14671:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14644
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14673:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14648
	jmp	.L14646
	.cfi_endproc
.LFE1482:
	.size	s390_5060, .-s390_5060
	.p2align 4,,15
	.globl	s390_5070
	.type	s390_5070, @function
s390_5070:
.LFB1483:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14675
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14675:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	248(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14703
.L14676:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14678
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14704
.L14679:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14705
.L14680:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14678
	testb	$2, 46264(%rsi,%rdx)
	je	.L14678
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14681:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14704:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14679
.L14678:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14681
.L14703:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14676
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14705:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14680
	jmp	.L14678
	.cfi_endproc
.LFE1483:
	.size	s390_5070, .-s390_5070
	.p2align 4,,15
	.globl	s390_5080
	.type	s390_5080, @function
s390_5080:
.LFB1484:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14707
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14707:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	256(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14735
.L14708:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14710
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14736
.L14711:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14737
.L14712:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14710
	testb	$2, 46264(%rsi,%rdx)
	je	.L14710
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14713:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14736:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14711
.L14710:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14713
.L14735:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14708
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14737:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14712
	jmp	.L14710
	.cfi_endproc
.LFE1484:
	.size	s390_5080, .-s390_5080
	.p2align 4,,15
	.globl	s390_5090
	.type	s390_5090, @function
s390_5090:
.LFB1485:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14739
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14739:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	264(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14767
.L14740:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14742
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14768
.L14743:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14769
.L14744:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14742
	testb	$2, 46264(%rsi,%rdx)
	je	.L14742
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14745:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14768:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14743
.L14742:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14745
.L14767:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14740
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14769:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14744
	jmp	.L14742
	.cfi_endproc
.LFE1485:
	.size	s390_5090, .-s390_5090
	.p2align 4,,15
	.globl	s390_50A0
	.type	s390_50A0, @function
s390_50A0:
.LFB1486:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14771
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14771:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	272(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14799
.L14772:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14774
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14800
.L14775:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14801
.L14776:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14774
	testb	$2, 46264(%rsi,%rdx)
	je	.L14774
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14777:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14800:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14775
.L14774:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14777
.L14799:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14772
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14801:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14776
	jmp	.L14774
	.cfi_endproc
.LFE1486:
	.size	s390_50A0, .-s390_50A0
	.p2align 4,,15
	.globl	s390_50B0
	.type	s390_50B0, @function
s390_50B0:
.LFB1487:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14803
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14803:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	280(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14831
.L14804:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14806
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14832
.L14807:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14833
.L14808:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14806
	testb	$2, 46264(%rsi,%rdx)
	je	.L14806
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14809:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14832:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14807
.L14806:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14809
.L14831:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14804
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14833:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14808
	jmp	.L14806
	.cfi_endproc
.LFE1487:
	.size	s390_50B0, .-s390_50B0
	.p2align 4,,15
	.globl	s390_50C0
	.type	s390_50C0, @function
s390_50C0:
.LFB1488:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14835
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14835:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	288(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14863
.L14836:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14838
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14864
.L14839:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14865
.L14840:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14838
	testb	$2, 46264(%rsi,%rdx)
	je	.L14838
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14841:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14864:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14839
.L14838:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14841
.L14863:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14836
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14865:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14840
	jmp	.L14838
	.cfi_endproc
.LFE1488:
	.size	s390_50C0, .-s390_50C0
	.p2align 4,,15
	.globl	s390_50D0
	.type	s390_50D0, @function
s390_50D0:
.LFB1489:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14867
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14867:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	296(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14895
.L14868:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14870
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14896
.L14871:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14897
.L14872:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14870
	testb	$2, 46264(%rsi,%rdx)
	je	.L14870
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14873:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14896:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14871
.L14870:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14873
.L14895:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14868
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14897:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14872
	jmp	.L14870
	.cfi_endproc
.LFE1489:
	.size	s390_50D0, .-s390_50D0
	.p2align 4,,15
	.globl	s390_50E0
	.type	s390_50E0, @function
s390_50E0:
.LFB1490:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14899
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14899:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	304(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14927
.L14900:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14902
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14928
.L14903:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14929
.L14904:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14902
	testb	$2, 46264(%rsi,%rdx)
	je	.L14902
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14905:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14928:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14903
.L14902:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14905
.L14927:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14900
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14929:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14904
	jmp	.L14902
	.cfi_endproc
.LFE1490:
	.size	s390_50E0, .-s390_50E0
	.p2align 4,,15
	.globl	s390_50F0
	.type	s390_50F0, @function
s390_50F0:
.LFB1491:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L14931
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %r10d
.L14931:
	movl	120(%rsi), %edi
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	312(%rsi), %ebx
	andl	%r10d, %edi
	testb	$3, %dil
	jne	.L14959
.L14932:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L14934
	leal	1(%rdx), %ecx
	movl	%edi, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movl	2232(%r8), %r11d
	cmpl	%r11d, 320(%rsi,%rcx,8)
	jne	.L14960
.L14935:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L14961
.L14936:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rsi), %ecx
	cmpl	10424(%r8), %ecx
	jne	.L14934
	testb	$2, 46264(%rsi,%rdx)
	je	.L14934
	movl	%edi, %eax
	xorq	26808(%r8), %rax
.L14937:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L14960:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %r9d
	testb	%r9b, 1976(%rsi,%rcx)
	jne	.L14935
.L14934:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L14937
.L14959:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L14932
	movq	%rsi, %rcx
	movl	%edi, %esi
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movl	%eax, %edx
	jmp	s390_vstore4_full
.L14961:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L14936
	jmp	.L14934
	.cfi_endproc
.LFE1491:
	.size	s390_50F0, .-s390_50F0
	.p2align 4,,15
	.globl	s390_load_address
	.type	s390_load_address, @function
s390_load_address:
.LFB1492:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	movl	%eax, %ecx
	shrl	$16, %edi
	movl	%eax, %edx
	shrl	$20, %ecx
	andl	$4095, %edx
	andl	$15, %edi
	shrl	$12, %eax
	andl	$15, %ecx
	addl	192(%rsi,%rdi,8), %edx
	andl	$15, %eax
	je	.L14963
	cltq
	addl	192(%rsi,%rax,8), %edx
.L14963:
	andl	120(%rsi), %edx
	movslq	%ecx, %rcx
	addq	$4, 136(%rsi)
	movl	%edx, 192(%rsi,%rcx,8)
	ret
	.cfi_endproc
.LFE1492:
	.size	s390_load_address, .-s390_load_address
	.p2align 4,,15
	.globl	s390_4100
	.type	s390_4100, @function
s390_4100:
.LFB1493:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L14968
	cltq
	addl	192(%rsi,%rax,8), %edx
.L14968:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 192(%rsi)
	ret
	.cfi_endproc
.LFE1493:
	.size	s390_4100, .-s390_4100
	.p2align 4,,15
	.globl	s390_4110
	.type	s390_4110, @function
s390_4110:
.LFB1494:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L14973
	cltq
	addl	192(%rsi,%rax,8), %edx
.L14973:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 200(%rsi)
	ret
	.cfi_endproc
.LFE1494:
	.size	s390_4110, .-s390_4110
	.p2align 4,,15
	.globl	s390_4120
	.type	s390_4120, @function
s390_4120:
.LFB1495:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L14978
	cltq
	addl	192(%rsi,%rax,8), %edx
.L14978:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 208(%rsi)
	ret
	.cfi_endproc
.LFE1495:
	.size	s390_4120, .-s390_4120
	.p2align 4,,15
	.globl	s390_4130
	.type	s390_4130, @function
s390_4130:
.LFB1496:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L14983
	cltq
	addl	192(%rsi,%rax,8), %edx
.L14983:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 216(%rsi)
	ret
	.cfi_endproc
.LFE1496:
	.size	s390_4130, .-s390_4130
	.p2align 4,,15
	.globl	s390_4140
	.type	s390_4140, @function
s390_4140:
.LFB1497:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L14988
	cltq
	addl	192(%rsi,%rax,8), %edx
.L14988:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 224(%rsi)
	ret
	.cfi_endproc
.LFE1497:
	.size	s390_4140, .-s390_4140
	.p2align 4,,15
	.globl	s390_4150
	.type	s390_4150, @function
s390_4150:
.LFB1498:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L14993
	cltq
	addl	192(%rsi,%rax,8), %edx
.L14993:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 232(%rsi)
	ret
	.cfi_endproc
.LFE1498:
	.size	s390_4150, .-s390_4150
	.p2align 4,,15
	.globl	s390_4160
	.type	s390_4160, @function
s390_4160:
.LFB1499:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L14998
	cltq
	addl	192(%rsi,%rax,8), %edx
.L14998:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 240(%rsi)
	ret
	.cfi_endproc
.LFE1499:
	.size	s390_4160, .-s390_4160
	.p2align 4,,15
	.globl	s390_4170
	.type	s390_4170, @function
s390_4170:
.LFB1500:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L15003
	cltq
	addl	192(%rsi,%rax,8), %edx
.L15003:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 248(%rsi)
	ret
	.cfi_endproc
.LFE1500:
	.size	s390_4170, .-s390_4170
	.p2align 4,,15
	.globl	s390_4180
	.type	s390_4180, @function
s390_4180:
.LFB1501:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L15008
	cltq
	addl	192(%rsi,%rax,8), %edx
.L15008:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 256(%rsi)
	ret
	.cfi_endproc
.LFE1501:
	.size	s390_4180, .-s390_4180
	.p2align 4,,15
	.globl	s390_4190
	.type	s390_4190, @function
s390_4190:
.LFB1502:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L15013
	cltq
	addl	192(%rsi,%rax,8), %edx
.L15013:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 264(%rsi)
	ret
	.cfi_endproc
.LFE1502:
	.size	s390_4190, .-s390_4190
	.p2align 4,,15
	.globl	s390_41A0
	.type	s390_41A0, @function
s390_41A0:
.LFB1503:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L15018
	cltq
	addl	192(%rsi,%rax,8), %edx
.L15018:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 272(%rsi)
	ret
	.cfi_endproc
.LFE1503:
	.size	s390_41A0, .-s390_41A0
	.p2align 4,,15
	.globl	s390_41B0
	.type	s390_41B0, @function
s390_41B0:
.LFB1504:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L15023
	cltq
	addl	192(%rsi,%rax,8), %edx
.L15023:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 280(%rsi)
	ret
	.cfi_endproc
.LFE1504:
	.size	s390_41B0, .-s390_41B0
	.p2align 4,,15
	.globl	s390_41C0
	.type	s390_41C0, @function
s390_41C0:
.LFB1505:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L15028
	cltq
	addl	192(%rsi,%rax,8), %edx
.L15028:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 288(%rsi)
	ret
	.cfi_endproc
.LFE1505:
	.size	s390_41C0, .-s390_41C0
	.p2align 4,,15
	.globl	s390_41D0
	.type	s390_41D0, @function
s390_41D0:
.LFB1506:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L15033
	cltq
	addl	192(%rsi,%rax,8), %edx
.L15033:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 296(%rsi)
	ret
	.cfi_endproc
.LFE1506:
	.size	s390_41D0, .-s390_41D0
	.p2align 4,,15
	.globl	s390_41E0
	.type	s390_41E0, @function
s390_41E0:
.LFB1507:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L15038
	cltq
	addl	192(%rsi,%rax,8), %edx
.L15038:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 304(%rsi)
	ret
	.cfi_endproc
.LFE1507:
	.size	s390_41E0, .-s390_41E0
	.p2align 4,,15
	.globl	s390_41F0
	.type	s390_41F0, @function
s390_41F0:
.LFB1508:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L15043
	cltq
	addl	192(%rsi,%rax,8), %edx
.L15043:
	andl	120(%rsi), %edx
	addq	$4, 136(%rsi)
	movl	%edx, 312(%rsi)
	ret
	.cfi_endproc
.LFE1508:
	.size	s390_41F0, .-s390_41F0
	.p2align 4,,15
	.globl	s390_insert_character
	.type	s390_insert_character, @function
s390_insert_character:
.LFB1509:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %ecx
	shrl	$20, %ebp
	shrl	$16, %ecx
	movl	%eax, %edx
	andl	$15, %ebp
	andl	$4095, %edx
	andl	$15, %ecx
	jne	.L15073
.L15048:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L15049
	movslq	%eax, %rcx
	addl	192(%rbx,%rcx,8), %edx
.L15049:
	movl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	%edx, %edi
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15050
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15074
.L15051:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15075
.L15052:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15050
	testb	$4, 46264(%rbx,%rsi)
	je	.L15050
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15053:
	movzbl	(%rax), %eax
	movslq	%ebp, %rbp
	movb	%al, 192(%rbx,%rbp,8)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L15074:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15051
.L15050:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15053
.L15073:
	movslq	%ecx, %rcx
	addl	192(%rsi,%rcx,8), %edx
	jmp	.L15048
.L15075:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15052
	jmp	.L15050
	.cfi_endproc
.LFE1509:
	.size	s390_insert_character, .-s390_insert_character
	.p2align 4,,15
	.globl	s390_add_logical
	.type	s390_add_logical, @function
s390_add_logical:
.LFB1510:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L15110
.L15077:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L15078
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %edi
.L15078:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15111
.L15079:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15081
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15112
.L15082:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15113
.L15083:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15081
	testb	$4, 46264(%rbx,%rsi)
	je	.L15081
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15084:
	movl	(%rax), %eax
	bswap	%eax
.L15085:
	movslq	%ebp, %rbp
	leaq	(%rbx,%rbp,8), %rcx
	movl	192(%rcx), %edx
	addl	%edx, %eax
	movl	%eax, 192(%rcx)
	xorl	%ecx, %ecx
	testl	%eax, %eax
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L15112:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15082
.L15081:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15084
.L15111:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15079
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15085
.L15110:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %edi
	jmp	.L15077
.L15113:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15083
	jmp	.L15081
	.cfi_endproc
.LFE1510:
	.size	s390_add_logical, .-s390_add_logical
	.p2align 4,,15
	.globl	s390_compare_logical
	.type	s390_compare_logical, @function
s390_compare_logical:
.LFB1511:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %ebp
	shrl	$16, %ecx
	movl	%eax, %edx
	shrl	$20, %ebp
	andl	$4095, %edx
	andl	$15, %ecx
	shrl	$12, %eax
	andl	$15, %ebp
	addl	192(%rsi,%rcx,8), %edx
	andl	$15, %eax
	je	.L15115
	movslq	%eax, %rcx
	addl	192(%rsi,%rcx,8), %edx
.L15115:
	movl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	%edx, %edi
	testb	$3, %dil
	jne	.L15145
.L15116:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15118
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15146
.L15119:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15147
.L15120:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15118
	testb	$4, 46264(%rbx,%rsi)
	je	.L15118
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15121:
	movl	(%rax), %eax
	bswap	%eax
.L15122:
	movslq	%ebp, %rbp
	movl	$1, %edx
	movl	192(%rbx,%rbp,8), %ecx
	cmpl	%eax, %ecx
	jb	.L15123
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15123:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L15146:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15119
.L15118:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15121
.L15145:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15116
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15122
.L15147:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15120
	.p2align 4,,4
	jmp	.L15118
	.cfi_endproc
.LFE1511:
	.size	s390_compare_logical, .-s390_compare_logical
	.p2align 4,,15
	.globl	s390_5500
	.type	s390_5500, @function
s390_5500:
.LFB1512:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15149
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15149:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15179
.L15150:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15152
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15180
.L15153:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15181
.L15154:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15152
	testb	$4, 46264(%rbx,%rsi)
	je	.L15152
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15155:
	movl	(%rax), %eax
	bswap	%eax
.L15156:
	movl	192(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15157
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15157:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15180:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15153
.L15152:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15155
.L15179:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15150
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15156
.L15181:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15154
	.p2align 4,,4
	jmp	.L15152
	.cfi_endproc
.LFE1512:
	.size	s390_5500, .-s390_5500
	.p2align 4,,15
	.globl	s390_5510
	.type	s390_5510, @function
s390_5510:
.LFB1513:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15183
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15183:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15213
.L15184:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15186
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15214
.L15187:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15215
.L15188:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15186
	testb	$4, 46264(%rbx,%rsi)
	je	.L15186
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15189:
	movl	(%rax), %eax
	bswap	%eax
.L15190:
	movl	200(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15191
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15191:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15214:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15187
.L15186:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15189
.L15213:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15184
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15190
.L15215:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15188
	.p2align 4,,4
	jmp	.L15186
	.cfi_endproc
.LFE1513:
	.size	s390_5510, .-s390_5510
	.p2align 4,,15
	.globl	s390_5520
	.type	s390_5520, @function
s390_5520:
.LFB1514:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15217
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15217:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15247
.L15218:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15220
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15248
.L15221:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15249
.L15222:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15220
	testb	$4, 46264(%rbx,%rsi)
	je	.L15220
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15223:
	movl	(%rax), %eax
	bswap	%eax
.L15224:
	movl	208(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15225
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15225:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15248:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15221
.L15220:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15223
.L15247:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15218
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15224
.L15249:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15222
	.p2align 4,,4
	jmp	.L15220
	.cfi_endproc
.LFE1514:
	.size	s390_5520, .-s390_5520
	.p2align 4,,15
	.globl	s390_5530
	.type	s390_5530, @function
s390_5530:
.LFB1515:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15251
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15251:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15281
.L15252:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15254
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15282
.L15255:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15283
.L15256:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15254
	testb	$4, 46264(%rbx,%rsi)
	je	.L15254
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15257:
	movl	(%rax), %eax
	bswap	%eax
.L15258:
	movl	216(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15259
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15259:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15282:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15255
.L15254:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15257
.L15281:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15252
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15258
.L15283:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15256
	.p2align 4,,4
	jmp	.L15254
	.cfi_endproc
.LFE1515:
	.size	s390_5530, .-s390_5530
	.p2align 4,,15
	.globl	s390_5540
	.type	s390_5540, @function
s390_5540:
.LFB1516:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15285
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15285:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15315
.L15286:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15288
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15316
.L15289:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15317
.L15290:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15288
	testb	$4, 46264(%rbx,%rsi)
	je	.L15288
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15291:
	movl	(%rax), %eax
	bswap	%eax
.L15292:
	movl	224(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15293
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15293:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15316:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15289
.L15288:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15291
.L15315:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15286
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15292
.L15317:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15290
	.p2align 4,,4
	jmp	.L15288
	.cfi_endproc
.LFE1516:
	.size	s390_5540, .-s390_5540
	.p2align 4,,15
	.globl	s390_5550
	.type	s390_5550, @function
s390_5550:
.LFB1517:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15319
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15319:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15349
.L15320:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15322
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15350
.L15323:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15351
.L15324:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15322
	testb	$4, 46264(%rbx,%rsi)
	je	.L15322
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15325:
	movl	(%rax), %eax
	bswap	%eax
.L15326:
	movl	232(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15327
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15327:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15350:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15323
.L15322:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15325
.L15349:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15320
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15326
.L15351:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15324
	.p2align 4,,4
	jmp	.L15322
	.cfi_endproc
.LFE1517:
	.size	s390_5550, .-s390_5550
	.p2align 4,,15
	.globl	s390_5560
	.type	s390_5560, @function
s390_5560:
.LFB1518:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15353
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15353:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15383
.L15354:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15356
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15384
.L15357:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15385
.L15358:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15356
	testb	$4, 46264(%rbx,%rsi)
	je	.L15356
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15359:
	movl	(%rax), %eax
	bswap	%eax
.L15360:
	movl	240(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15361
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15361:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15384:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15357
.L15356:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15359
.L15383:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15354
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15360
.L15385:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15358
	.p2align 4,,4
	jmp	.L15356
	.cfi_endproc
.LFE1518:
	.size	s390_5560, .-s390_5560
	.p2align 4,,15
	.globl	s390_5570
	.type	s390_5570, @function
s390_5570:
.LFB1519:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15387
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15387:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15417
.L15388:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15390
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15418
.L15391:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15419
.L15392:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15390
	testb	$4, 46264(%rbx,%rsi)
	je	.L15390
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15393:
	movl	(%rax), %eax
	bswap	%eax
.L15394:
	movl	248(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15395
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15395:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15418:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15391
.L15390:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15393
.L15417:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15388
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15394
.L15419:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15392
	.p2align 4,,4
	jmp	.L15390
	.cfi_endproc
.LFE1519:
	.size	s390_5570, .-s390_5570
	.p2align 4,,15
	.globl	s390_5580
	.type	s390_5580, @function
s390_5580:
.LFB1520:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15421
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15421:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15451
.L15422:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15424
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15452
.L15425:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15453
.L15426:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15424
	testb	$4, 46264(%rbx,%rsi)
	je	.L15424
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15427:
	movl	(%rax), %eax
	bswap	%eax
.L15428:
	movl	256(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15429
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15429:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15452:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15425
.L15424:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15427
.L15451:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15422
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15428
.L15453:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15426
	.p2align 4,,4
	jmp	.L15424
	.cfi_endproc
.LFE1520:
	.size	s390_5580, .-s390_5580
	.p2align 4,,15
	.globl	s390_5590
	.type	s390_5590, @function
s390_5590:
.LFB1521:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15455
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15455:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15485
.L15456:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15458
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15486
.L15459:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15487
.L15460:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15458
	testb	$4, 46264(%rbx,%rsi)
	je	.L15458
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15461:
	movl	(%rax), %eax
	bswap	%eax
.L15462:
	movl	264(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15463
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15463:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15486:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15459
.L15458:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15461
.L15485:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15456
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15462
.L15487:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15460
	.p2align 4,,4
	jmp	.L15458
	.cfi_endproc
.LFE1521:
	.size	s390_5590, .-s390_5590
	.p2align 4,,15
	.globl	s390_55A0
	.type	s390_55A0, @function
s390_55A0:
.LFB1522:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15489
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15489:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15519
.L15490:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15492
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15520
.L15493:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15521
.L15494:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15492
	testb	$4, 46264(%rbx,%rsi)
	je	.L15492
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15495:
	movl	(%rax), %eax
	bswap	%eax
.L15496:
	movl	272(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15497
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15497:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15520:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15493
.L15492:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15495
.L15519:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15490
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15496
.L15521:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15494
	.p2align 4,,4
	jmp	.L15492
	.cfi_endproc
.LFE1522:
	.size	s390_55A0, .-s390_55A0
	.p2align 4,,15
	.globl	s390_55B0
	.type	s390_55B0, @function
s390_55B0:
.LFB1523:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15523
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15523:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15553
.L15524:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15526
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15554
.L15527:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15555
.L15528:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15526
	testb	$4, 46264(%rbx,%rsi)
	je	.L15526
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15529:
	movl	(%rax), %eax
	bswap	%eax
.L15530:
	movl	280(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15531
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15531:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15554:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15527
.L15526:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15529
.L15553:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15524
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15530
.L15555:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15528
	.p2align 4,,4
	jmp	.L15526
	.cfi_endproc
.LFE1523:
	.size	s390_55B0, .-s390_55B0
	.p2align 4,,15
	.globl	s390_55C0
	.type	s390_55C0, @function
s390_55C0:
.LFB1524:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15557
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15557:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15587
.L15558:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15560
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15588
.L15561:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15589
.L15562:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15560
	testb	$4, 46264(%rbx,%rsi)
	je	.L15560
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15563:
	movl	(%rax), %eax
	bswap	%eax
.L15564:
	movl	288(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15565
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15565:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15588:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15561
.L15560:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15563
.L15587:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15558
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15564
.L15589:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15562
	.p2align 4,,4
	jmp	.L15560
	.cfi_endproc
.LFE1524:
	.size	s390_55C0, .-s390_55C0
	.p2align 4,,15
	.globl	s390_55D0
	.type	s390_55D0, @function
s390_55D0:
.LFB1525:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15591
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15591:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15621
.L15592:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15594
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15622
.L15595:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15623
.L15596:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15594
	testb	$4, 46264(%rbx,%rsi)
	je	.L15594
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15597:
	movl	(%rax), %eax
	bswap	%eax
.L15598:
	movl	296(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15599
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15599:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15622:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15595
.L15594:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15597
.L15621:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15592
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15598
.L15623:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15596
	.p2align 4,,4
	jmp	.L15594
	.cfi_endproc
.LFE1525:
	.size	s390_55D0, .-s390_55D0
	.p2align 4,,15
	.globl	s390_55E0
	.type	s390_55E0, @function
s390_55E0:
.LFB1526:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15625
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15625:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15655
.L15626:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15628
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15656
.L15629:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15657
.L15630:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15628
	testb	$4, 46264(%rbx,%rsi)
	je	.L15628
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15631:
	movl	(%rax), %eax
	bswap	%eax
.L15632:
	movl	304(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15633
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15633:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15656:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15629
.L15628:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15631
.L15655:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15626
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15632
.L15657:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15630
	.p2align 4,,4
	jmp	.L15628
	.cfi_endproc
.LFE1526:
	.size	s390_55E0, .-s390_55E0
	.p2align 4,,15
	.globl	s390_55F0
	.type	s390_55F0, @function
s390_55F0:
.LFB1527:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L15659
	movslq	%eax, %rdx
	addl	192(%rsi,%rdx,8), %edi
.L15659:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L15689
.L15660:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15662
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15690
.L15663:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15691
.L15664:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15662
	testb	$4, 46264(%rbx,%rsi)
	je	.L15662
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15665:
	movl	(%rax), %eax
	bswap	%eax
.L15666:
	movl	312(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L15667
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L15667:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L15690:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15663
.L15662:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15665
.L15689:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L15660
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L15666
.L15691:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15664
	.p2align 4,,4
	jmp	.L15662
	.cfi_endproc
.LFE1527:
	.size	s390_55F0, .-s390_55F0
	.p2align 4,,15
	.globl	s390_load_halfword
	.type	s390_load_halfword, @function
s390_load_halfword:
.LFB1528:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L15724
.L15693:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L15694
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %edi
.L15694:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %dil
	jne	.L15725
.L15695:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L15697
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L15726
.L15698:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L15727
.L15699:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L15697
	testb	$4, 46264(%rbx,%rsi)
	je	.L15697
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L15700:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L15701:
	movslq	%ebp, %rbp
	cwtl
	movl	%eax, 192(%rbx,%rbp,8)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L15726:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L15698
.L15697:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L15700
.L15725:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2047, %edx
	jne	.L15695
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch2_full
	jmp	.L15701
.L15724:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %edi
	jmp	.L15693
.L15727:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L15699
	jmp	.L15697
	.cfi_endproc
.LFE1528:
	.size	s390_load_halfword, .-s390_load_halfword
	.p2align 4,,15
	.globl	s390_branch_relative_on_condition
	.type	s390_branch_relative_on_condition, @function
s390_branch_relative_on_condition:
.LFB1529:
	.cfi_startproc
	movzbl	100(%rsi), %ecx
	movl	$128, %eax
	movzbl	1(%rdi), %edx
	sarl	%cl, %eax
	testl	%eax, %edx
	je	.L15729
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15730
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15730
	cmpq	160(%rsi), %rax
	jae	.L15730
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15729:
	addq	$4, 136(%rsi)
	ret
.L15730:
	testb	$1, %dl
	jne	.L15732
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15733:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L15743
.L15728:
	rep ret
.L15743:
	testb	$-128, 54(%rsi)
	je	.L15728
	testb	$-128, 402(%rsi)
	je	.L15735
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15736
	cmpl	%ecx, %edx
	ja	.L15728
	cmpl	%ecx, %eax
	jae	.L15735
	.p2align 4,,7
	ret
.L15732:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15733
.L15736:
	cmpl	%ecx, %edx
	jbe	.L15735
	cmpl	%ecx, %eax
	jb	.L15728
.L15735:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1529:
	.size	s390_branch_relative_on_condition, .-s390_branch_relative_on_condition
	.p2align 4,,15
	.globl	s390_A714
	.type	s390_A714, @function
s390_A714:
.LFB1530:
	.cfi_startproc
	cmpb	$3, 100(%rsi)
	je	.L15759
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15759:
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15746
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15746
	cmpq	160(%rsi), %rax
	jae	.L15746
	movq	%rax, 136(%rsi)
	ret
.L15746:
	testb	$1, %dl
	jne	.L15748
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15749:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L15760
.L15744:
	rep ret
.L15760:
	testb	$-128, 54(%rsi)
	je	.L15744
	testb	$-128, 402(%rsi)
	je	.L15751
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15752
	cmpl	%ecx, %edx
	ja	.L15744
	cmpl	%ecx, %eax
	jae	.L15751
	.p2align 4,,7
	ret
.L15748:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15749
.L15752:
	cmpl	%ecx, %edx
	jbe	.L15751
	cmpl	%ecx, %eax
	jb	.L15744
.L15751:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1530:
	.size	s390_A714, .-s390_A714
	.p2align 4,,15
	.globl	s390_A724
	.type	s390_A724, @function
s390_A724:
.LFB1531:
	.cfi_startproc
	cmpb	$2, 100(%rsi)
	je	.L15776
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15776:
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15763
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15763
	cmpq	160(%rsi), %rax
	jae	.L15763
	movq	%rax, 136(%rsi)
	ret
.L15763:
	testb	$1, %dl
	jne	.L15765
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15766:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L15777
.L15761:
	rep ret
.L15777:
	testb	$-128, 54(%rsi)
	je	.L15761
	testb	$-128, 402(%rsi)
	je	.L15768
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15769
	cmpl	%ecx, %edx
	ja	.L15761
	cmpl	%ecx, %eax
	jae	.L15768
	.p2align 4,,7
	ret
.L15765:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15766
.L15769:
	cmpl	%ecx, %edx
	jbe	.L15768
	cmpl	%ecx, %eax
	jb	.L15761
.L15768:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1531:
	.size	s390_A724, .-s390_A724
	.p2align 4,,15
	.globl	s390_A734
	.type	s390_A734, @function
s390_A734:
.LFB1532:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	jbe	.L15779
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15780
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15780
	cmpq	160(%rsi), %rax
	jae	.L15780
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15779:
	addq	$4, 136(%rsi)
	ret
.L15780:
	testb	$1, %dl
	jne	.L15782
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15783:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L15793
.L15778:
	rep ret
.L15793:
	testb	$-128, 54(%rsi)
	je	.L15778
	testb	$-128, 402(%rsi)
	je	.L15785
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15786
	cmpl	%ecx, %edx
	ja	.L15778
	cmpl	%ecx, %eax
	jae	.L15785
	.p2align 4,,7
	ret
.L15782:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15783
.L15786:
	cmpl	%ecx, %edx
	jbe	.L15785
	cmpl	%ecx, %eax
	jb	.L15778
.L15785:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1532:
	.size	s390_A734, .-s390_A734
	.p2align 4,,15
	.globl	s390_A744
	.type	s390_A744, @function
s390_A744:
.LFB1533:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	je	.L15809
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15809:
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15796
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15796
	cmpq	160(%rsi), %rax
	jae	.L15796
	movq	%rax, 136(%rsi)
	ret
.L15796:
	testb	$1, %dl
	jne	.L15798
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15799:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L15810
.L15794:
	rep ret
.L15810:
	testb	$-128, 54(%rsi)
	je	.L15794
	testb	$-128, 402(%rsi)
	je	.L15801
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15802
	cmpl	%ecx, %edx
	ja	.L15794
	cmpl	%ecx, %eax
	jae	.L15801
	.p2align 4,,7
	ret
.L15798:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15799
.L15802:
	cmpl	%ecx, %edx
	jbe	.L15801
	cmpl	%ecx, %eax
	jb	.L15794
.L15801:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1533:
	.size	s390_A744, .-s390_A744
	.p2align 4,,15
	.globl	s390_A754
	.type	s390_A754, @function
s390_A754:
.LFB1534:
	.cfi_startproc
	testb	$1, 100(%rsi)
	je	.L15812
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15813
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15813
	cmpq	160(%rsi), %rax
	jae	.L15813
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15812:
	addq	$4, 136(%rsi)
	ret
.L15813:
	testb	$1, %dl
	jne	.L15815
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15816:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L15826
.L15811:
	rep ret
.L15826:
	testb	$-128, 54(%rsi)
	je	.L15811
	testb	$-128, 402(%rsi)
	je	.L15818
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15819
	cmpl	%ecx, %edx
	ja	.L15811
	cmpl	%ecx, %eax
	jae	.L15818
	.p2align 4,,7
	ret
.L15815:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15816
.L15819:
	cmpl	%ecx, %edx
	jbe	.L15818
	cmpl	%ecx, %eax
	jb	.L15811
.L15818:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1534:
	.size	s390_A754, .-s390_A754
	.p2align 4,,15
	.globl	s390_A774
	.type	s390_A774, @function
s390_A774:
.LFB1535:
	.cfi_startproc
	cmpb	$0, 100(%rsi)
	je	.L15828
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15829
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15829
	cmpq	160(%rsi), %rax
	jae	.L15829
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15828:
	addq	$4, 136(%rsi)
	ret
.L15829:
	testb	$1, %dl
	jne	.L15831
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15832:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L15842
.L15827:
	rep ret
.L15842:
	testb	$-128, 54(%rsi)
	je	.L15827
	testb	$-128, 402(%rsi)
	je	.L15834
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15835
	cmpl	%ecx, %edx
	ja	.L15827
	cmpl	%ecx, %eax
	jae	.L15834
	.p2align 4,,7
	ret
.L15831:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15832
.L15835:
	cmpl	%ecx, %edx
	jbe	.L15834
	cmpl	%ecx, %eax
	jb	.L15827
.L15834:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1535:
	.size	s390_A774, .-s390_A774
	.p2align 4,,15
	.globl	s390_A784
	.type	s390_A784, @function
s390_A784:
.LFB1536:
	.cfi_startproc
	cmpb	$0, 100(%rsi)
	jne	.L15844
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15845
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15845
	cmpq	160(%rsi), %rax
	jae	.L15845
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15844:
	addq	$4, 136(%rsi)
	ret
.L15845:
	testb	$1, %dl
	jne	.L15847
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15848:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L15858
.L15843:
	rep ret
.L15858:
	testb	$-128, 54(%rsi)
	je	.L15843
	testb	$-128, 402(%rsi)
	je	.L15850
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15851
	cmpl	%ecx, %edx
	ja	.L15843
	cmpl	%ecx, %eax
	jae	.L15850
	.p2align 4,,7
	ret
.L15847:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15848
.L15851:
	cmpl	%ecx, %edx
	jbe	.L15850
	cmpl	%ecx, %eax
	jb	.L15843
.L15850:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1536:
	.size	s390_A784, .-s390_A784
	.p2align 4,,15
	.globl	s390_A7A4
	.type	s390_A7A4, @function
s390_A7A4:
.LFB1537:
	.cfi_startproc
	testb	$1, 100(%rsi)
	jne	.L15860
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15861
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15861
	cmpq	160(%rsi), %rax
	jae	.L15861
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15860:
	addq	$4, 136(%rsi)
	ret
.L15861:
	testb	$1, %dl
	jne	.L15863
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15864:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L15874
.L15859:
	rep ret
.L15874:
	testb	$-128, 54(%rsi)
	je	.L15859
	testb	$-128, 402(%rsi)
	je	.L15866
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15867
	cmpl	%ecx, %edx
	ja	.L15859
	cmpl	%ecx, %eax
	jae	.L15866
	.p2align 4,,7
	ret
.L15863:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15864
.L15867:
	cmpl	%ecx, %edx
	jbe	.L15866
	cmpl	%ecx, %eax
	jb	.L15859
.L15866:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1537:
	.size	s390_A7A4, .-s390_A7A4
	.p2align 4,,15
	.globl	s390_A7B4
	.type	s390_A7B4, @function
s390_A7B4:
.LFB1538:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	je	.L15876
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15877
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15877
	cmpq	160(%rsi), %rax
	jae	.L15877
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15876:
	addq	$4, 136(%rsi)
	ret
.L15877:
	testb	$1, %dl
	jne	.L15879
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15880:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L15890
.L15875:
	rep ret
.L15890:
	testb	$-128, 54(%rsi)
	je	.L15875
	testb	$-128, 402(%rsi)
	je	.L15882
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15883
	cmpl	%ecx, %edx
	ja	.L15875
	cmpl	%ecx, %eax
	jae	.L15882
	.p2align 4,,7
	ret
.L15879:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15880
.L15883:
	cmpl	%ecx, %edx
	jbe	.L15882
	cmpl	%ecx, %eax
	jb	.L15875
.L15882:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1538:
	.size	s390_A7B4, .-s390_A7B4
	.p2align 4,,15
	.globl	s390_A7C4
	.type	s390_A7C4, @function
s390_A7C4:
.LFB1539:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	jbe	.L15906
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15906:
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15893
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15893
	cmpq	160(%rsi), %rax
	jae	.L15893
	movq	%rax, 136(%rsi)
	ret
.L15893:
	testb	$1, %dl
	jne	.L15895
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15896:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L15907
.L15891:
	rep ret
.L15907:
	testb	$-128, 54(%rsi)
	je	.L15891
	testb	$-128, 402(%rsi)
	je	.L15898
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15899
	cmpl	%ecx, %edx
	ja	.L15891
	cmpl	%ecx, %eax
	jae	.L15898
	.p2align 4,,7
	ret
.L15895:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15896
.L15899:
	cmpl	%ecx, %edx
	jbe	.L15898
	cmpl	%ecx, %eax
	jb	.L15891
.L15898:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1539:
	.size	s390_A7C4, .-s390_A7C4
	.p2align 4,,15
	.globl	s390_A7D4
	.type	s390_A7D4, @function
s390_A7D4:
.LFB1540:
	.cfi_startproc
	cmpb	$2, 100(%rsi)
	je	.L15909
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15910
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15910
	cmpq	160(%rsi), %rax
	jae	.L15910
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15909:
	addq	$4, 136(%rsi)
	ret
.L15910:
	testb	$1, %dl
	jne	.L15912
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15913:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L15923
.L15908:
	rep ret
.L15923:
	testb	$-128, 54(%rsi)
	je	.L15908
	testb	$-128, 402(%rsi)
	je	.L15915
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15916
	cmpl	%ecx, %edx
	ja	.L15908
	cmpl	%ecx, %eax
	jae	.L15915
	.p2align 4,,7
	ret
.L15912:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15913
.L15916:
	cmpl	%ecx, %edx
	jbe	.L15915
	cmpl	%ecx, %eax
	jb	.L15908
.L15915:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1540:
	.size	s390_A7D4, .-s390_A7D4
	.p2align 4,,15
	.globl	s390_A7E4
	.type	s390_A7E4, @function
s390_A7E4:
.LFB1541:
	.cfi_startproc
	cmpb	$3, 100(%rsi)
	je	.L15925
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15926
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15926
	cmpq	160(%rsi), %rax
	jae	.L15926
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15925:
	addq	$4, 136(%rsi)
	ret
.L15926:
	testb	$1, %dl
	jne	.L15928
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15929:
	movq	$0, 160(%rsi)
	andb	$4, %dl
	jne	.L15939
.L15924:
	rep ret
.L15939:
	testb	$-128, 54(%rsi)
	je	.L15924
	testb	$-128, 402(%rsi)
	je	.L15931
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15932
	cmpl	%ecx, %edx
	ja	.L15924
	cmpl	%ecx, %eax
	jae	.L15931
	.p2align 4,,7
	ret
.L15928:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15929
.L15932:
	cmpl	%ecx, %edx
	jbe	.L15931
	cmpl	%ecx, %eax
	jb	.L15924
.L15931:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1541:
	.size	s390_A7E4, .-s390_A7E4
	.p2align 4,,15
	.globl	s390_A7F4
	.type	s390_A7F4, @function
s390_A7F4:
.LFB1542:
	.cfi_startproc
	movzbl	808(%rsi), %edx
	movl	(%rdi), %eax
	testb	$5, %dl
	bswap	%eax
	movswl	%ax, %ecx
	jne	.L15941
	leal	(%rcx,%rcx), %eax
	cltq
	addq	136(%rsi), %rax
	cmpq	144(%rsi), %rax
	jb	.L15941
	cmpq	160(%rsi), %rax
	jae	.L15941
	movq	%rax, 136(%rsi)
	ret
.L15941:
	testb	$1, %dl
	jne	.L15943
	movq	136(%rsi), %rax
	subq	144(%rsi), %rax
	addl	168(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L15944:
	movq	$0, 160(%rsi)
	andl	$4, %edx
	jne	.L15954
.L15940:
	rep ret
.L15954:
	testb	$-128, 54(%rsi)
	je	.L15940
	testb	$-128, 402(%rsi)
	je	.L15946
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L15947
	cmpl	%ecx, %edx
	ja	.L15940
	cmpl	%ecx, %eax
	jae	.L15946
	.p2align 4,,7
	ret
.L15943:
	movl	800(%rsi), %eax
	leal	(%rax,%rcx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L15944
.L15947:
	cmpl	%ecx, %edx
	jbe	.L15946
	cmpl	%ecx, %eax
	jb	.L15940
.L15946:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1542:
	.size	s390_A7F4, .-s390_A7F4
	.p2align 4,,15
	.globl	s390_branch_on_count_register
	.type	s390_branch_on_count_register, @function
s390_branch_on_count_register:
.LFB1543:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	movl	%eax, %ecx
	shrq	%rax
	andl	$15, %ecx
	andl	$120, %eax
	movslq	%ecx, %rdx
	addq	%rsi, %rax
	movl	192(%rsi,%rdx,8), %edi
	subl	$1, 192(%rax)
	je	.L15956
	testl	%ecx, %ecx
	je	.L15956
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %edx
	andl	%eax, %edi
	testb	$5, %dl
	jne	.L15957
	movl	%edi, %ecx
	andl	$2147479553, %ecx
	cmpl	168(%rsi), %ecx
	jne	.L15957
	xorq	152(%rsi), %rdi
	movq	%rdi, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15956:
	addq	$2, 136(%rsi)
	ret
.L15957:
	andb	$4, %dl
	movl	%edi, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L15972
.L15955:
	rep ret
.L15972:
	testb	$-128, 54(%rsi)
	je	.L15955
	testb	$-128, 402(%rsi)
	je	.L15960
	movl	416(%rsi), %edx
	andl	%edi, %eax
	movl	408(%rsi), %ecx
	andl	$2147483647, %edx
	andl	$2147483647, %ecx
	cmpl	%ecx, %edx
	jb	.L15961
	cmpl	%eax, %ecx
	ja	.L15955
	cmpl	%eax, %edx
	jae	.L15960
	.p2align 4,,7
	ret
.L15961:
	cmpl	%eax, %ecx
	.p2align 4,,8
	jbe	.L15960
	cmpl	%eax, %edx
	.p2align 4,,8
	jb	.L15955
.L15960:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1543:
	.size	s390_branch_on_count_register, .-s390_branch_on_count_register
	.p2align 4,,15
	.globl	s390_branch_on_count
	.type	s390_branch_on_count, @function
s390_branch_on_count:
.LFB1544:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %edi
	shrl	$20, %edx
	shrl	$16, %edi
	movl	%eax, %ecx
	andl	$15, %edx
	andl	$4095, %ecx
	andl	$15, %edi
	jne	.L15992
.L15974:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L15975
	cltq
	addl	192(%rsi,%rax,8), %ecx
.L15975:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rdx
	subl	$1, 192(%rdx)
	je	.L15976
	movl	120(%rsi), %eax
	movzbl	808(%rsi), %edx
	andl	%eax, %ecx
	testb	$5, %dl
	jne	.L15977
	movl	%ecx, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L15977
	xorq	152(%rsi), %rcx
	movq	%rcx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15976:
	addq	$4, 136(%rsi)
	ret
.L15977:
	andb	$4, %dl
	movl	%ecx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L15993
.L15973:
	rep ret
.L15992:
	movslq	%edi, %rdi
	addl	192(%rsi,%rdi,8), %ecx
	jmp	.L15974
.L15993:
	testb	$-128, 54(%rsi)
	je	.L15973
	testb	$-128, 402(%rsi)
	je	.L15980
	movl	416(%rsi), %edx
	andl	%ecx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %edx
	andl	$2147483647, %edi
	cmpl	%edi, %edx
	jb	.L15981
	cmpl	%eax, %edi
	ja	.L15973
	cmpl	%eax, %edx
	jae	.L15980
	.p2align 4,,7
	ret
.L15981:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L15980
	cmpl	%eax, %edx
	.p2align 4,,8
	jb	.L15973
.L15980:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1544:
	.size	s390_branch_on_count, .-s390_branch_on_count
	.p2align 4,,15
	.globl	s390_branch_on_index_high
	.type	s390_branch_on_index_high, @function
s390_branch_on_index_high:
.LFB1545:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	movl	%eax, %edi
	shrl	$20, %edx
	movl	%ecx, %r9d
	shrl	$12, %edi
	andl	$15, %edx
	andl	$15, %r9d
	andl	$4095, %eax
	andl	$15, %edi
	je	.L15995
	movslq	%edi, %rdi
	addl	192(%rsi,%rdi,8), %eax
.L15995:
	movslq	%r9d, %rdi
	andl	$1, %ecx
	movl	192(%rsi,%rdi,8), %edi
	movl	%edi, %r8d
	jne	.L15996
	addl	$1, %r9d
	movslq	%r9d, %r9
	movl	192(%rsi,%r9,8), %r8d
.L15996:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rcx
	movl	192(%rcx), %edx
	addl	%edi, %edx
	cmpl	%edx, %r8d
	movl	%edx, 192(%rcx)
	jge	.L15997
	movl	120(%rsi), %edx
	movzbl	808(%rsi), %ecx
	andl	%edx, %eax
	testb	$5, %cl
	jne	.L15998
	movl	%eax, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L15998
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L15997:
	addq	$4, 136(%rsi)
	ret
.L15998:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L16011
.L15994:
	rep ret
.L16011:
	testb	$-128, 54(%rsi)
	je	.L15994
	testb	$-128, 402(%rsi)
	je	.L16001
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L16002
	cmpl	%eax, %edi
	ja	.L15994
	cmpl	%eax, %ecx
	jae	.L16001
	.p2align 4,,7
	ret
.L16002:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L16001
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L15994
.L16001:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1545:
	.size	s390_branch_on_index_high, .-s390_branch_on_index_high
	.p2align 4,,15
	.globl	s390_branch_on_index_low_or_equal
	.type	s390_branch_on_index_low_or_equal, @function
s390_branch_on_index_low_or_equal:
.LFB1546:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	movl	%eax, %edi
	shrl	$20, %edx
	movl	%ecx, %r9d
	shrl	$12, %edi
	andl	$15, %edx
	andl	$15, %r9d
	andl	$4095, %eax
	andl	$15, %edi
	je	.L16013
	movslq	%edi, %rdi
	addl	192(%rsi,%rdi,8), %eax
.L16013:
	movslq	%r9d, %rdi
	andl	$1, %ecx
	movl	192(%rsi,%rdi,8), %edi
	movl	%edi, %r8d
	jne	.L16014
	addl	$1, %r9d
	movslq	%r9d, %r9
	movl	192(%rsi,%r9,8), %r8d
.L16014:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rcx
	movl	192(%rcx), %edx
	addl	%edi, %edx
	cmpl	%edx, %r8d
	movl	%edx, 192(%rcx)
	jl	.L16015
	movl	120(%rsi), %edx
	movzbl	808(%rsi), %ecx
	andl	%edx, %eax
	testb	$5, %cl
	jne	.L16016
	movl	%eax, %edi
	andl	$2147479553, %edi
	cmpl	168(%rsi), %edi
	jne	.L16016
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L16015:
	addq	$4, 136(%rsi)
	ret
.L16016:
	andb	$4, %cl
	movl	%eax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L16029
.L16012:
	rep ret
.L16029:
	testb	$-128, 54(%rsi)
	je	.L16012
	testb	$-128, 402(%rsi)
	je	.L16019
	movl	416(%rsi), %ecx
	andl	%edx, %eax
	movl	408(%rsi), %edi
	andl	$2147483647, %ecx
	andl	$2147483647, %edi
	cmpl	%edi, %ecx
	jb	.L16020
	cmpl	%eax, %edi
	ja	.L16012
	cmpl	%eax, %ecx
	jae	.L16019
	.p2align 4,,7
	ret
.L16020:
	cmpl	%eax, %edi
	.p2align 4,,8
	jbe	.L16019
	cmpl	%eax, %ecx
	.p2align 4,,8
	jb	.L16012
.L16019:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1546:
	.size	s390_branch_on_index_low_or_equal, .-s390_branch_on_index_low_or_equal
	.p2align 4,,15
	.globl	s390_branch_relative_and_save
	.type	s390_branch_relative_and_save, @function
s390_branch_relative_and_save:
.LFB1547:
	.cfi_startproc
	movl	(%rdi), %edx
	movl	168(%rsi), %r9d
	movq	136(%rsi), %r8
	movq	144(%rsi), %rdi
	bswap	%edx
	movl	%edx, %ecx
	shrl	$20, %ecx
	leal	4(%r9,%r8), %eax
	andl	$15, %ecx
	testb	$2, 103(%rsi)
	je	.L16031
	subl	%edi, %eax
	orl	$-2147483648, %eax
.L16032:
	movslq	%ecx, %rcx
	movswl	%dx, %edx
	movl	%eax, 192(%rsi,%rcx,8)
	movzbl	808(%rsi), %ecx
	testb	$5, %cl
	jne	.L16033
	leal	(%rdx,%rdx), %eax
	cltq
	addq	%r8, %rax
	cmpq	%rax, %rdi
	ja	.L16033
	cmpq	160(%rsi), %rax
	jae	.L16033
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L16031:
	subl	%edi, %eax
	andl	$16777215, %eax
	jmp	.L16032
.L16033:
	testb	$1, %cl
	jne	.L16035
	leal	(%r9,%rdx,2), %eax
	subq	%rdi, %r8
	addl	%r8d, %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L16036:
	movq	$0, 160(%rsi)
	andl	$4, %ecx
	jne	.L16046
.L16030:
	rep ret
.L16046:
	testb	$-128, 54(%rsi)
	je	.L16030
	testb	$-128, 402(%rsi)
	je	.L16038
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L16039
	cmpl	%ecx, %edx
	ja	.L16030
	cmpl	%ecx, %eax
	jae	.L16038
	.p2align 4,,7
	ret
.L16035:
	movl	800(%rsi), %eax
	leal	(%rax,%rdx,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L16036
.L16039:
	cmpl	%ecx, %edx
	jbe	.L16038
	cmpl	%ecx, %eax
	jb	.L16030
.L16038:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1547:
	.size	s390_branch_relative_and_save, .-s390_branch_relative_and_save
	.p2align 4,,15
	.globl	s390_branch_relative_on_count
	.type	s390_branch_relative_on_count, @function
s390_branch_relative_on_count:
.LFB1548:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$20, %edx
	andl	$15, %edx
	leaq	(%rsi,%rdx,8), %rcx
	movl	192(%rcx), %edi
	leal	-1(%rdi), %edx
	testl	%edx, %edx
	movl	%edx, 192(%rcx)
	je	.L16048
	movzbl	808(%rsi), %ecx
	cwtl
	testb	$5, %cl
	jne	.L16049
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	136(%rsi), %rdx
	cmpq	144(%rsi), %rdx
	jb	.L16049
	cmpq	160(%rsi), %rdx
	jae	.L16049
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L16048:
	addq	$4, 136(%rsi)
	ret
.L16049:
	testb	$1, %cl
	jne	.L16051
	movq	136(%rsi), %rdx
	subq	144(%rsi), %rdx
	addl	168(%rsi), %edx
	leal	(%rdx,%rax,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L16052:
	movq	$0, 160(%rsi)
	andb	$4, %cl
	jne	.L16062
.L16047:
	rep ret
.L16062:
	testb	$-128, 54(%rsi)
	je	.L16047
	testb	$-128, 402(%rsi)
	je	.L16054
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L16055
	cmpl	%ecx, %edx
	ja	.L16047
	cmpl	%ecx, %eax
	jae	.L16054
	.p2align 4,,7
	ret
.L16051:
	movl	800(%rsi), %edx
	leal	(%rdx,%rax,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L16052
.L16055:
	cmpl	%ecx, %edx
	jbe	.L16054
	cmpl	%ecx, %eax
	jb	.L16047
.L16054:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1548:
	.size	s390_branch_relative_on_count, .-s390_branch_relative_on_count
	.p2align 4,,15
	.globl	s390_branch_relative_on_index_high
	.type	s390_branch_relative_on_index_high, @function
s390_branch_relative_on_index_high:
.LFB1549:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	shrl	$20, %edx
	movl	%ecx, %r9d
	andl	$15, %edx
	andl	$15, %r9d
	andl	$1, %ecx
	movslq	%r9d, %rdi
	movl	192(%rsi,%rdi,8), %edi
	movl	%edi, %r8d
	jne	.L16064
	addl	$1, %r9d
	movslq	%r9d, %r9
	movl	192(%rsi,%r9,8), %r8d
.L16064:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rcx
	addl	192(%rcx), %edi
	cmpl	%edi, %r8d
	movl	%edi, 192(%rcx)
	jge	.L16065
	movzbl	808(%rsi), %ecx
	cwtl
	testb	$5, %cl
	jne	.L16066
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	136(%rsi), %rdx
	cmpq	144(%rsi), %rdx
	jb	.L16066
	cmpq	160(%rsi), %rdx
	jae	.L16066
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L16065:
	addq	$4, 136(%rsi)
	ret
.L16066:
	testb	$1, %cl
	jne	.L16068
	movq	136(%rsi), %rdx
	subq	144(%rsi), %rdx
	addl	168(%rsi), %edx
	leal	(%rdx,%rax,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L16069:
	movq	$0, 160(%rsi)
	andb	$4, %cl
	jne	.L16080
.L16063:
	rep ret
.L16080:
	testb	$-128, 54(%rsi)
	je	.L16063
	testb	$-128, 402(%rsi)
	je	.L16071
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L16072
	cmpl	%ecx, %edx
	ja	.L16063
	cmpl	%ecx, %eax
	jae	.L16071
	.p2align 4,,7
	ret
.L16068:
	movl	800(%rsi), %edx
	leal	(%rdx,%rax,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L16069
.L16072:
	cmpl	%ecx, %edx
	jbe	.L16071
	cmpl	%ecx, %eax
	jb	.L16063
.L16071:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1549:
	.size	s390_branch_relative_on_index_high, .-s390_branch_relative_on_index_high
	.p2align 4,,15
	.globl	s390_branch_relative_on_index_low_or_equal
	.type	s390_branch_relative_on_index_low_or_equal, @function
s390_branch_relative_on_index_low_or_equal:
.LFB1550:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	shrl	$20, %edx
	movl	%ecx, %r9d
	andl	$15, %edx
	andl	$15, %r9d
	andl	$1, %ecx
	movslq	%r9d, %rdi
	movl	192(%rsi,%rdi,8), %edi
	movl	%edi, %r8d
	jne	.L16082
	addl	$1, %r9d
	movslq	%r9d, %r9
	movl	192(%rsi,%r9,8), %r8d
.L16082:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rcx
	addl	192(%rcx), %edi
	cmpl	%edi, %r8d
	movl	%edi, 192(%rcx)
	jl	.L16083
	movzbl	808(%rsi), %ecx
	cwtl
	testb	$5, %cl
	jne	.L16084
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	136(%rsi), %rdx
	cmpq	144(%rsi), %rdx
	jb	.L16084
	cmpq	160(%rsi), %rdx
	jae	.L16084
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L16083:
	addq	$4, 136(%rsi)
	ret
.L16084:
	testb	$1, %cl
	jne	.L16086
	movq	136(%rsi), %rdx
	subq	144(%rsi), %rdx
	addl	168(%rsi), %edx
	leal	(%rdx,%rax,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
.L16087:
	movq	$0, 160(%rsi)
	andb	$4, %cl
	jne	.L16098
.L16081:
	rep ret
.L16098:
	testb	$-128, 54(%rsi)
	je	.L16081
	testb	$-128, 402(%rsi)
	je	.L16089
	movl	416(%rsi), %eax
	movl	408(%rsi), %edx
	movl	120(%rsi), %ecx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	andl	112(%rsi), %ecx
	cmpl	%edx, %eax
	jb	.L16090
	cmpl	%ecx, %edx
	ja	.L16081
	cmpl	%ecx, %eax
	jae	.L16089
	.p2align 4,,7
	ret
.L16086:
	movl	800(%rsi), %edx
	leal	(%rdx,%rax,2), %eax
	andl	120(%rsi), %eax
	movl	%eax, 112(%rsi)
	jmp	.L16087
.L16090:
	cmpl	%ecx, %edx
	jbe	.L16089
	cmpl	%ecx, %eax
	jb	.L16081
.L16089:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE1550:
	.size	s390_branch_relative_on_index_low_or_equal, .-s390_branch_relative_on_index_low_or_equal
	.p2align 4,,15
	.globl	s390_checksum
	.type	s390_checksum, @function
s390_checksum:
.LFB1551:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movq	%rsi, %r12
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movzbl	3(%rdi), %eax
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	%eax, %ebp
	movzbl	%al, %ebx
	andl	$15, %ebp
	sarl	$4, %ebx
	testb	$1, %al
	movzbl	%bpl, %edi
	movl	%edi, 32(%rsp)
	jne	.L16163
.L16100:
	movl	120(%r12), %r13d
	movzbl	%bpl, %ebp
	movslq	%ebx, %rbx
	movl	32(%rsp), %esi
	leaq	(%r12,%rbp,8), %rax
	movq	%rax, 16(%rsp)
	andl	192(%rax), %r13d
	movl	%esi, %eax
	addl	$1, %eax
	cltq
	leaq	(%r12,%rax,8), %rax
	movl	192(%rax), %r14d
	movq	%rax, 8(%rsp)
	leaq	(%r12,%rbx,8), %rax
	movq	%rax, 24(%rsp)
	movl	192(%rax), %r15d
	testl	%r14d, %r14d
	je	.L16122
	leal	5(%rsi), %r11d
	movl	$1024, %r10d
	movslq	%r11d, %r11
	.p2align 4,,10
	.p2align 3
.L16102:
	xorl	%ebx, %ebx
	cmpl	$3, %r14d
	movl	$4, %ebp
	ja	.L16164
.L16160:
	sall	$8, %ebx
	testl	%r14d, %r14d
	jne	.L16165
.L16113:
	subl	$1, %ebp
	jne	.L16160
.L16112:
	movl	%ebx, %ebx
	movl	$4294967295, %eax
	addq	%rbx, %r15
	cmpq	%rax, %r15
	jbe	.L16120
	movl	%r15d, %r15d
	addq	$1, %r15
.L16120:
	testl	%r14d, %r14d
	je	.L16122
	subl	$1, %r10d
	jne	.L16102
	movl	$3, %eax
	jmp	.L16101
	.p2align 4,,10
	.p2align 3
.L16165:
	movl	1892(%r12,%r11,4), %eax
	testl	%eax, %eax
	je	.L16114
	movl	%r13d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%r12,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%r12,%rax,8)
	jne	.L16166
.L16115:
	movzbl	97(%r12), %esi
	testb	%sil, %sil
	jne	.L16167
.L16116:
	movl	%r13d, %eax
	andl	$2143289344, %eax
	orl	2224(%r12), %eax
	cmpl	10424(%rdx), %eax
	jne	.L16129
	testb	$4, 46264(%r12,%rcx)
	je	.L16129
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L16118:
	movzbl	(%rax), %eax
	addl	$1, %r13d
	subl	$1, %r14d
	andl	120(%r12), %r13d
	orl	%eax, %ebx
	jmp	.L16113
	.p2align 4,,10
	.p2align 3
.L16164:
	testb	$3, %r13b
	jne	.L16168
.L16104:
	movl	1892(%r12,%r11,4), %eax
	testl	%eax, %eax
	je	.L16106
	movl	%r13d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%r12,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%r12,%rax,8)
	jne	.L16169
.L16107:
	movzbl	97(%r12), %esi
	testb	%sil, %sil
	jne	.L16170
.L16108:
	movl	%r13d, %eax
	andl	$2143289344, %eax
	orl	2224(%r12), %eax
	cmpl	10424(%rdx), %eax
	jne	.L16126
	testb	$4, 46264(%r12,%rcx)
	je	.L16126
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L16110:
	movl	(%rax), %ebx
	bswap	%ebx
.L16111:
	addl	$4, %r13d
	subl	$4, %r14d
	andl	120(%r12), %r13d
	jmp	.L16112
	.p2align 4,,10
	.p2align 3
.L16122:
	xorl	%eax, %eax
.L16101:
	movq	24(%rsp), %rsi
	movq	16(%rsp), %rdi
	movl	%r15d, 192(%rsi)
	movq	8(%rsp), %rsi
	movl	%r13d, 192(%rdi)
	movl	%r14d, 192(%rsi)
	movb	%al, 100(%r12)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L16163:
	.cfi_restore_state
	movl	$6, %esi
	movq	%r12, %rdi
	call	*2032(%r12)
	jmp	.L16100
.L16167:
	cmpb	43192(%r12,%rcx), %sil
	je	.L16116
.L16129:
	movzbl	%sil, %r8d
.L16117:
	movl	32(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%r12, %rdx
	movl	%r13d, %edi
	movq	%r11, 40(%rsp)
	movl	%r10d, 36(%rsp)
	call	s390_logical_to_main_l
	movq	40(%rsp), %r11
	movl	36(%rsp), %r10d
	jmp	.L16118
.L16166:
	movzbl	44216(%r12,%rcx), %esi
	testb	%sil, 1976(%r12,%rax)
	jne	.L16115
.L16114:
	movzbl	97(%r12), %r8d
	jmp	.L16117
.L16168:
	movl	%r13d, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L16104
	movl	32(%rsp), %esi
	movq	%r12, %rdx
	movl	%r13d, %edi
	movq	%r11, 40(%rsp)
	movl	%r10d, 36(%rsp)
	call	s390_vfetch4_full
	movq	40(%rsp), %r11
	movl	%eax, %ebx
	movl	36(%rsp), %r10d
	jmp	.L16111
.L16170:
	cmpb	43192(%r12,%rcx), %sil
	je	.L16108
.L16126:
	movzbl	%sil, %r8d
.L16109:
	movl	32(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%r12, %rdx
	movl	%r13d, %edi
	movq	%r11, 40(%rsp)
	movl	%r10d, 36(%rsp)
	call	s390_logical_to_main_l
	movq	40(%rsp), %r11
	movl	36(%rsp), %r10d
	jmp	.L16110
.L16169:
	movzbl	44216(%r12,%rcx), %esi
	testb	%sil, 1976(%r12,%rax)
	jne	.L16107
.L16106:
	movzbl	97(%r12), %r8d
	jmp	.L16109
	.cfi_endproc
.LFE1551:
	.size	s390_checksum, .-s390_checksum
	.p2align 4,,15
	.globl	s390_compare_register
	.type	s390_compare_register, @function
s390_compare_register:
.LFB1552:
	.cfi_startproc
	movzbl	1(%rdi), %edx
	movl	$1, %ecx
	addq	$2, 136(%rsi)
	movq	%rdx, %rax
	andl	$15, %edx
	movl	192(%rsi,%rdx,8), %edi
	shrq	$4, %rax
	andl	$15, %eax
	cmpl	%edi, 192(%rsi,%rax,8)
	jl	.L16172
	setg	%cl
	addl	%ecx, %ecx
.L16172:
	movb	%cl, 100(%rsi)
	ret
	.cfi_endproc
.LFE1552:
	.size	s390_compare_register, .-s390_compare_register
	.p2align 4,,15
	.globl	s390_compare
	.type	s390_compare, @function
s390_compare:
.LFB1553:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L16210
.L16176:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L16177
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %edi
.L16177:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L16211
.L16178:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L16180
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L16212
.L16181:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L16213
.L16182:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L16180
	testb	$4, 46264(%rbx,%rsi)
	je	.L16180
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L16183:
	movl	(%rax), %eax
	bswap	%eax
.L16184:
	movslq	%ebp, %rbp
	movl	$1, %edx
	cmpl	%eax, 192(%rbx,%rbp,8)
	jl	.L16185
	setg	%dl
	addl	%edx, %edx
.L16185:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L16212:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L16181
.L16180:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L16183
.L16211:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L16178
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L16184
.L16210:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %edi
	jmp	.L16176
.L16213:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L16182
	jmp	.L16180
	.cfi_endproc
.LFE1553:
	.size	s390_compare, .-s390_compare
	.p2align 4,,15
	.globl	s390_compare_and_form_codeword
	.type	s390_compare_and_form_codeword, @function
s390_compare_and_form_codeword:
.LFB1554:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$104, %rsp
	.cfi_def_cfa_offset 160
	movl	(%rdi), %r14d
	bswap	%r14d
	movl	%r14d, %eax
	andl	$4095, %r14d
	shrl	$12, %eax
	andl	$15, %eax
	je	.L16215
	cltq
	addl	192(%rsi,%rax,8), %r14d
	andl	120(%rsi), %r14d
.L16215:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	testb	$1, 200(%rbx)
	jne	.L16216
	movl	208(%rbx), %eax
	testb	$1, %al
	je	.L16771
.L16216:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movl	208(%rbx), %eax
	movl	216(%rbx), %ebp
.L16217:
	movl	%r14d, %r13d
	andw	$32766, %r13w
	jmp	.L16489
	.p2align 4,,10
	.p2align 3
.L16218:
	movl	200(%rbx), %r15d
	movzwl	%ax, %eax
	movl	120(%rbx), %edx
	addl	%eax, %ebp
	addl	%eax, %r15d
	andl	%edx, %r15d
	andl	%edx, %ebp
	movl	1916(%rbx), %edx
	testl	%edx, %edx
	je	.L16220
	leal	1(%rdx), %eax
	movl	%r15d, %edi
	shrl	$12, %edi
	cltq
	movl	%edi, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rax,8)
	jne	.L16772
.L16221:
	movzbl	97(%rbx), %r12d
	testb	%r12b, %r12b
	jne	.L16773
.L16223:
	movl	%r15d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L16511
	testb	$4, 46264(%rbx,%rsi)
	je	.L16511
	movl	%r15d, %r11d
	xorq	26808(%rcx), %r11
.L16224:
	movl	%r15d, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	je	.L16335
	movzwl	(%r11), %eax
	leaq	48(%rsp), %r15
	movw	%ax, 48(%rsp)
.L16336:
	testl	%edx, %edx
	je	.L16354
	leal	1(%rdx), %eax
	movl	%ebp, %edi
	shrl	$12, %edi
	cltq
	movl	%edi, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r9d
	cmpl	%r9d, 320(%rbx,%rax,8)
	jne	.L16774
.L16355:
	testb	%r12b, %r12b
	jne	.L16775
.L16357:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L16356
	testb	$4, 46264(%rbx,%rsi)
	je	.L16356
	movl	%ebp, %r12d
	xorq	26808(%rcx), %r12
.L16358:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	je	.L16469
	movzwl	(%r12), %eax
	leaq	64(%rsp), %rbp
	movw	%ax, 64(%rsp)
.L16470:
	movl	208(%rbx), %eax
	movl	$2, %edx
	movq	%rbp, %rsi
	movq	%r15, %rdi
	leal	2(%rax), %r12d
	movl	%r12d, 208(%rbx)
	call	memcmp
	testl	%eax, %eax
	jne	.L16488
	movl	216(%rbx), %ebp
	movl	%r12d, %eax
.L16489:
	cmpw	%ax, %r13w
	jae	.L16218
	orl	$-2147483648, %ebp
	movb	$0, 100(%rbx)
	movl	%ebp, 208(%rbx)
	addq	$104, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L16771:
	.cfi_restore_state
	movl	216(%rbx), %ebp
	testb	$1, %bpl
	je	.L16217
	jmp	.L16216
	.p2align 4,,10
	.p2align 3
.L16488:
	andl	$1, %r14d
	testl	%eax, %eax
	movq	%r15, %rcx
	movl	%r12d, %r15d
	js	.L16776
	testb	%r14b, %r14b
	jne	.L16493
	movl	200(%rbx), %ecx
	movb	$2, 100(%rbx)
	movl	216(%rbx), %esi
	movzbl	48(%rsp), %eax
	movzbl	49(%rsp), %edx
	movl	%ecx, 216(%rbx)
	movl	%esi, 200(%rbx)
	notl	%eax
	notl	%edx
.L16492:
	sall	$16, %r15d
	movzbl	%dl, %edx
	movzbl	%al, %eax
	orl	%r15d, %edx
	sall	$8, %eax
	orl	%eax, %edx
	movl	%edx, 208(%rbx)
	addq	$104, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L16776:
	.cfi_restore_state
	testb	%r14b, %r14b
	jne	.L16491
	movzbl	64(%rsp), %eax
	movb	$1, 100(%rbx)
	movzbl	65(%rsp), %edx
	notl	%eax
	notl	%edx
	jmp	.L16492
.L16493:
	movzwl	0(%rbp), %edx
	movb	$1, 100(%rbx)
	movl	%edx, %eax
	shrw	$8, %dx
	jmp	.L16492
.L16491:
	movzwl	(%rcx), %edx
	movb	$2, 100(%rbx)
	movl	200(%rbx), %eax
	movl	216(%rbx), %ecx
	movl	%eax, 216(%rbx)
	movl	%edx, %eax
	shrw	$8, %dx
	movl	%ecx, 200(%rbx)
	jmp	.L16492
.L16354:
	movl	%ebp, %edi
	shrl	$12, %edi
.L16356:
	andl	$1023, %edi
	testb	$4, 96(%rbx)
	movl	%edi, 8(%rsp)
	movzbl	1144(%rbx), %eax
	jne	.L16359
	andb	$-8, 994(%rbx)
	testb	$1, %al
	je	.L16777
	movzbl	99(%rbx), %esi
	cmpb	$64, %sil
	je	.L16506
.L16507:
	movq	1064(%rbx), %rcx
	movq	1080(%rcx), %rdi
	testb	$1, 2(%rdi)
	je	.L16363
	testb	$64, 99(%rcx)
	je	.L16363
.L16364:
	movl	588(%rcx), %r11d
.L16367:
	testl	%r11d, %r11d
	je	.L16409
	cmpl	$1, %r11d
	je	.L16770
	cmpl	$15, %edx
	jle	.L16371
	leal	1(%rdx), %eax
	cltq
	movl	320(%rbx,%rax,8), %eax
	movl	$1, 976(%rbx)
	movq	%rax, 968(%rbx)
	movzbl	2010(%rbx), %eax
	andl	$3, %eax
	leal	(%rax,%rax), %edx
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	%edx, %eax
	movb	%al, 994(%rbx)
.L16370:
	movl	328(%rbx), %eax
	xorl	%edx, %edx
	andl	$16252928, %eax
	cmpl	$11534336, %eax
	je	.L16778
.L16420:
	movl	$18, %edi
	movl	$18, %esi
	movw	%di, 992(%rbx)
.L16429:
	movq	%rbx, %rdi
	movq	%rdx, (%rsp)
	call	*2032(%rbx)
	movq	(%rsp), %rdx
.L16419:
.L16414:
	movl	$16, %ecx
	movq	%rdx, 944(%rbx)
	movl	$16, %esi
	movw	%cx, 992(%rbx)
.L16430:
	movl	976(%rbx), %ecx
	movl	%ebp, %edx
	andl	$2147479552, %edx
	movl	%edx, 792(%rbx)
	cmpl	$1, %ecx
	je	.L16779
	cmpl	$2, %ecx
	movzbl	99(%rbx), %eax
	je	.L16780
.L16437:
	orl	%ecx, %edx
	movl	%edx, 792(%rbx)
.L16433:
	cmpb	$64, %al
	je	.L16407
	testb	$1, 1144(%rbx)
	je	.L16468
	movq	1064(%rbx), %rax
	movq	1080(%rax), %rdx
	testb	$1, 2(%rdx)
	je	.L16468
	testb	$64, 99(%rax)
	je	.L16468
.L16407:
	movb	$1, 1012(%rbx)
.L16467:
.L16468:
	movq	%rbx, %rdi
	xorl	%r12d, %r12d
	call	*2032(%rbx)
	jmp	.L16358
.L16773:
	cmpb	43192(%rbx,%rsi), %r12b
	je	.L16223
.L16511:
	movb	%r12b, (%rsp)
.L16222:
	andl	$1023, %edi
	testb	$4, 96(%rbx)
	movl	%edi, 16(%rsp)
	movzbl	1144(%rbx), %eax
	jne	.L16225
	andb	$-8, 994(%rbx)
	testb	$1, %al
	je	.L16781
	movzbl	99(%rbx), %esi
	cmpb	$64, %sil
	je	.L16504
.L16505:
	movq	1064(%rbx), %rcx
	movq	1080(%rcx), %rdi
	testb	$1, 2(%rdi)
	je	.L16229
	testb	$64, 99(%rcx)
	je	.L16229
.L16230:
	movl	588(%rcx), %r11d
.L16233:
	testl	%r11d, %r11d
	je	.L16275
	cmpl	$1, %r11d
	je	.L16769
	cmpl	$15, %edx
	jle	.L16237
	leal	1(%rdx), %eax
	cltq
	movl	320(%rbx,%rax,8), %eax
	movl	$1, 976(%rbx)
	movq	%rax, 968(%rbx)
	movzbl	2010(%rbx), %eax
	andl	$3, %eax
	leal	(%rax,%rax), %edx
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	%edx, %eax
	movb	%al, 994(%rbx)
.L16236:
	movl	328(%rbx), %eax
	xorl	%edx, %edx
	andl	$16252928, %eax
	cmpl	$11534336, %eax
	je	.L16782
.L16286:
	movl	$18, %ecx
	movl	$18, %esi
	movw	%cx, 992(%rbx)
.L16295:
	movq	%rbx, %rdi
	movq	%rdx, (%rsp)
	call	*2032(%rbx)
	movq	(%rsp), %rdx
.L16285:
.L16280:
	movl	$16, %eax
	movq	%rdx, 944(%rbx)
	movl	$16, %esi
	movw	%ax, 992(%rbx)
.L16296:
	movl	976(%rbx), %ecx
	movl	%r15d, %edx
	andl	$2147479552, %edx
	movl	%edx, 792(%rbx)
	cmpl	$1, %ecx
	je	.L16783
	cmpl	$2, %ecx
	movzbl	99(%rbx), %eax
	je	.L16784
.L16303:
	orl	%ecx, %edx
	movl	%edx, 792(%rbx)
.L16299:
	cmpb	$64, %al
	je	.L16273
	testb	$1, 1144(%rbx)
	je	.L16334
	movq	1064(%rbx), %rax
	movq	1080(%rax), %rdx
	testb	$1, 2(%rdx)
	je	.L16334
	testb	$64, 99(%rax)
	je	.L16334
.L16273:
	movb	$1, 1012(%rbx)
.L16333:
.L16334:
	movq	%rbx, %rdi
	call	*2032(%rbx)
	xorl	%r11d, %r11d
.L16326:
	movl	1916(%rbx), %edx
	movzbl	97(%rbx), %r12d
	jmp	.L16224
.L16225:
	movzbl	99(%rbx), %esi
	movl	%eax, %ecx
	andb	$-8, 994(%rbx)
	andl	$1, %ecx
	cmpb	$64, %sil
	je	.L16228
	testb	%cl, %cl
	jne	.L16505
.L16229:
	cmpb	$-128, %sil
	je	.L16769
	cmpb	$-64, %sil
	je	.L16785
.L16275:
	movl	$0, 976(%rbx)
	movl	336(%rbx), %eax
	movq	%rax, 968(%rbx)
	jmp	.L16236
.L16359:
	movzbl	99(%rbx), %esi
	movl	%eax, %ecx
	andb	$-8, 994(%rbx)
	andl	$1, %ecx
	cmpb	$64, %sil
	je	.L16362
	testb	%cl, %cl
	jne	.L16507
.L16363:
	cmpb	$-128, %sil
	je	.L16770
	cmpb	$-64, %sil
	je	.L16786
.L16409:
	movl	$0, 976(%rbx)
	movl	336(%rbx), %eax
	movq	%rax, 968(%rbx)
	jmp	.L16370
.L16772:
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rax)
	jne	.L16221
.L16765:
	movzbl	97(%rbx), %eax
	movb	%al, (%rsp)
	jmp	.L16222
.L16469:
	movl	1916(%rbx), %eax
	testl	%eax, %eax
	je	.L16471
	leal	1(%rbp), %edi
	andl	120(%rbx), %edi
	leal	1(%rax), %ecx
	movslq	%ecx, %rcx
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L16787
.L16472:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L16788
.L16474:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L16473
	testb	$4, 46264(%rbx,%rax)
	je	.L16473
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L16475:
	movzbl	(%r12), %edx
	leaq	64(%rsp), %rbp
	movb	%dl, 64(%rsp)
	movzbl	(%rax), %eax
	movb	%al, 65(%rsp)
	jmp	.L16470
.L16335:
	testl	%edx, %edx
	je	.L16337
	leal	1(%r15), %edi
	andl	120(%rbx), %edi
	leal	1(%rdx), %esi
	movslq	%esi, %rsi
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movl	2232(%rcx), %r8d
	cmpl	%r8d, 320(%rbx,%rsi,8)
	jne	.L16789
.L16338:
	testb	%r12b, %r12b
	jne	.L16790
.L16340:
	movl	%edi, %esi
	andl	$2143289344, %esi
	orl	2224(%rbx), %esi
	cmpl	10424(%rcx), %esi
	jne	.L16339
	testb	$4, 46264(%rbx,%rax)
	je	.L16339
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L16341:
	movzbl	(%r11), %ecx
	leaq	48(%rsp), %r15
	movb	%cl, 48(%rsp)
	movzbl	(%rax), %eax
	movb	%al, 49(%rsp)
	jmp	.L16336
.L16220:
	movl	%r15d, %edi
	shrl	$12, %edi
	jmp	.L16765
.L16775:
	cmpb	%r12b, 43192(%rbx,%rsi)
	je	.L16357
	jmp	.L16356
	.p2align 4,,10
	.p2align 3
.L16774:
	movzbl	1976(%rbx,%rax), %eax
	testb	%al, 44216(%rbx,%rsi)
	jne	.L16355
	jmp	.L16356
	.p2align 4,,10
	.p2align 3
.L16781:
	movslq	%edi, %r12
	movl	%r15d, %ecx
	movl	%r15d, %r11d
	leaq	(%rbx,%r12,8), %rax
	andl	$2147479552, %ecx
	movl	%r15d, %edx
	movq	%r11, 944(%rbx)
	andl	$2143289344, %edx
	movq	%rcx, 960(%rbx)
	movl	$-1, 2232(%rax)
	movl	2224(%rbx), %esi
	movl	%edx, 18616(%rax)
	orl	%edx, %esi
	movl	%esi, 10424(%rax)
	movb	$0, 45240(%rbx,%r12)
	movb	$0, 44216(%rbx,%r12)
	movb	$0, 46264(%rbx,%r12)
.L16227:
	movl	%r11d, %esi
	movl	%r11d, %edx
	movl	88(%rbx), %eax
	andl	$2147479552, %esi
	je	.L16307
	cmpl	%eax, %esi
	je	.L16307
.L16308:
	movl	%ecx, %esi
	movq	%r11, 952(%rbx)
	movl	%ecx, %edx
	andl	$2147479552, %esi
	je	.L16309
	cmpl	%eax, %esi
	je	.L16309
.L16310:
	cmpq	1040(%rbx), %r11
	ja	.L16311
	movzbl	1144(%rbx), %eax
	testb	$2, %al
	jne	.L16791
.L16312:
	movq	%r11, %rdx
	shrq	$11, %rdx
	addq	1032(%rbx), %rdx
	testb	$1, %al
	movq	%rdx, 984(%rbx)
	jne	.L16792
	cmpb	$0, (%rsp)
	movzbl	(%rdx), %esi
	jne	.L16793
.L16327:
	orl	$4, %esi
	movb	%sil, (%rdx)
	leaq	(%rbx,%r12,8), %rdx
	movl	%r15d, %esi
	movq	984(%rbx), %rax
	andl	$2147479552, %esi
	movq	%rax, 35000(%rdx)
	movzbl	(%rax), %eax
	movb	$4, 46264(%rbx,%r12)
	andl	$-16, %eax
	movb	%al, 43192(%rbx,%r12)
	movq	1024(%rbx), %rax
	addq	%rax, %rcx
	addq	%rax, %r11
	xorq	%rsi, %rcx
	movq	%rcx, 26808(%rdx)
	jmp	.L16326
.L16307:
	movl	%edx, %r11d
	xorl	%eax, %r11d
	jmp	.L16308
.L16309:
	movl	%eax, %ecx
	xorl	%edx, %ecx
	jmp	.L16310
.L16777:
	movslq	%edi, %r8
	movl	%ebp, %esi
	movl	%ebp, %ecx
	leaq	(%rbx,%r8,8), %rax
	andl	$2147479552, %esi
	movl	%ebp, %edx
	movq	%rcx, 944(%rbx)
	andl	$2143289344, %edx
	movq	%rsi, 960(%rbx)
	movl	$-1, 2232(%rax)
	movl	2224(%rbx), %edi
	movl	%edx, 18616(%rax)
	orl	%edx, %edi
	movl	%edi, 10424(%rax)
	movb	$0, 45240(%rbx,%r8)
	movb	$0, 44216(%rbx,%r8)
	movb	$0, 46264(%rbx,%r8)
.L16361:
	movl	%ecx, %edi
	movl	%ecx, %edx
	movl	88(%rbx), %eax
	andl	$2147479552, %edi
	je	.L16441
	cmpl	%eax, %edi
	je	.L16441
.L16442:
	movl	%esi, %edi
	movq	%rcx, 952(%rbx)
	movl	%esi, %edx
	andl	$2147479552, %edi
	je	.L16443
	cmpl	%eax, %edi
	je	.L16443
.L16444:
	cmpq	1040(%rbx), %rcx
	ja	.L16445
	movzbl	1144(%rbx), %eax
	testb	$2, %al
	jne	.L16794
.L16446:
	movq	%rcx, %rdx
	shrq	$11, %rdx
	addq	1032(%rbx), %rdx
	testb	$1, %al
	movq	%rdx, 984(%rbx)
	jne	.L16795
	testb	%r12b, %r12b
	movzbl	(%rdx), %edi
	jne	.L16796
.L16461:
	orl	$4, %edi
	movb	%dil, (%rdx)
	leaq	(%rbx,%r8,8), %rdx
	movq	984(%rbx), %rax
	movq	%rax, 35000(%rdx)
	movzbl	(%rax), %eax
	movb	$4, 46264(%rbx,%r8)
	movq	1024(%rbx), %r12
	andl	$-16, %eax
	movb	%al, 43192(%rbx,%r8)
	movl	%ebp, %eax
	addq	%r12, %rsi
	andl	$2147479552, %eax
	addq	%rcx, %r12
	xorq	%rax, %rsi
	movq	%rsi, 26808(%rdx)
	jmp	.L16358
.L16441:
	movl	%edx, %ecx
	xorl	%eax, %ecx
	jmp	.L16442
.L16443:
	movl	%eax, %esi
	xorl	%edx, %esi
	jmp	.L16444
.L16770:
	movl	$2, 976(%rbx)
	movl	384(%rbx), %eax
	movq	%rax, 968(%rbx)
	jmp	.L16370
.L16769:
	movl	$2, 976(%rbx)
	movl	384(%rbx), %eax
	movq	%rax, 968(%rbx)
	jmp	.L16236
.L16786:
	movl	$3, 976(%rbx)
	movl	432(%rbx), %eax
	movq	%rax, 968(%rbx)
	jmp	.L16370
.L16782:
	movq	968(%rbx), %rcx
	movzbl	994(%rbx), %eax
	movslq	16(%rsp), %r12
	movq	%rcx, %rdx
	shrq	$8, %rdx
	andl	$-2, %eax
	leaq	(%rbx,%r12,8), %r9
	andl	$1, %edx
	orl	%edx, %eax
	movl	%r15d, %edx
	andl	$2143289344, %edx
	movb	%al, 994(%rbx)
	movl	%edx, 8(%rsp)
	orl	2224(%rbx), %edx
	cmpl	10424(%r9), %edx
	je	.L16797
.L16276:
	movq	%r15, %rax
	movq	%rcx, %rdx
	andl	$127, %ecx
	shrq	$18, %rax
	andl	$2147479552, %edx
	andl	$8188, %eax
	addq	%rax, %rdx
	movl	%r15d, %eax
	shrl	$24, %eax
	cmpl	%eax, %ecx
	jb	.L16280
	cmpq	1040(%rbx), %rdx
	ja	.L16281
	movl	%edx, %eax
	movl	%edx, %ecx
	andl	$2147479552, %eax
	jne	.L16282
	movl	88(%rbx), %edx
.L16283:
	xorl	%ecx, %edx
.L16284:
	movq	%rdx, %rdi
	movq	%rbx, %rsi
	movq	%r9, 24(%rsp)
	movq	%rdx, 16(%rsp)
	call	s390_fetch_main_absolute
	movq	16(%rsp), %rdx
	movl	(%rax), %ecx
	movq	24(%rsp), %r9
	bswap	%ecx
	testb	$32, %cl
	jne	.L16280
	testl	%ecx, %ecx
	js	.L16286
	testb	$1, 994(%rbx)
	je	.L16287
	testb	$16, %cl
	jne	.L16286
.L16287:
	movl	%r15d, %eax
	movl	%ecx, %r11d
	andl	$1044480, %eax
	andl	$2147483584, %r11d
	movl	%eax, %esi
	shrl	$16, %eax
	shrl	$10, %esi
	addq	%rsi, %r11
	movl	%ecx, %esi
	andl	$15, %esi
	cmpl	%eax, %esi
	jb	.L16288
	cmpq	1040(%rbx), %r11
	ja	.L16281
	movl	%r11d, %eax
	movl	%r11d, %esi
	andl	$2147479552, %eax
	jne	.L16289
	movl	88(%rbx), %r11d
.L16290:
	xorl	%esi, %r11d
.L16291:
	movq	%rbx, %rsi
	movq	%r11, %rdi
	movq	%r9, 40(%rsp)
	movl	%ecx, 36(%rsp)
	movq	%rdx, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	s390_fetch_fullword_absolute
	movq	16(%rsp), %r11
	testb	$4, %ah
	movl	%eax, %esi
	movq	24(%rsp), %rdx
	movl	36(%rsp), %ecx
	movq	40(%rsp), %r9
	jne	.L16288
	testl	$-2147481344, %eax
	jne	.L16286
	testb	$2, %ah
	jne	.L16293
	movzbl	994(%rbx), %edx
	shrb	%dl
	andl	$3, %edx
.L16294:
	movq	968(%rbx), %rdi
	movl	%edi, 2232(%r9)
	movl	8(%rsp), %edi
	orl	2224(%rbx), %edi
	movl	%eax, 18616(%r9)
	movl	%ecx, %eax
	shrl	$4, %eax
	andl	$1, %eax
	movl	%edi, 10424(%r9)
	movb	%al, 44216(%rbx,%r12)
	movb	$0, 46264(%rbx,%r12)
	movb	%dl, 45240(%rbx,%r12)
	movq	$0, 26808(%r9)
.L16279:
	movq	%rsi, %rcx
	movl	%r15d, %r11d
	xorl	%edi, %edi
	andl	$2147479552, %ecx
	andl	$4095, %r11d
	movw	%di, 992(%rbx)
	orq	%rcx, %r11
	movq	%rcx, 960(%rbx)
	movq	%r11, 944(%rbx)
	jmp	.L16227
	.p2align 4,,10
	.p2align 3
.L16228:
	testb	%cl, %cl
	jne	.L16504
	movl	588(%rbx), %r11d
	jmp	.L16233
.L16362:
	testb	%cl, %cl
	jne	.L16506
	movl	588(%rbx), %r11d
	jmp	.L16367
.L16778:
	movq	968(%rbx), %rcx
	movzbl	994(%rbx), %eax
	movslq	8(%rsp), %r8
	movq	%rcx, %rdx
	shrq	$8, %rdx
	andl	$-2, %eax
	leaq	(%rbx,%r8,8), %r9
	andl	$1, %edx
	orl	%edx, %eax
	movl	%ebp, %edx
	andl	$2143289344, %edx
	movb	%al, 994(%rbx)
	movl	%edx, (%rsp)
	orl	2224(%rbx), %edx
	cmpl	10424(%r9), %edx
	je	.L16798
.L16410:
	movq	%rbp, %rax
	movq	%rcx, %rdx
	andl	$127, %ecx
	shrq	$18, %rax
	andl	$2147479552, %edx
	andl	$8188, %eax
	addq	%rax, %rdx
	movl	%ebp, %eax
	shrl	$24, %eax
	cmpl	%eax, %ecx
	jb	.L16414
	cmpq	1040(%rbx), %rdx
	ja	.L16415
	movl	%edx, %eax
	movl	%edx, %ecx
	andl	$2147479552, %eax
	jne	.L16416
	movl	88(%rbx), %edx
.L16417:
	xorl	%ecx, %edx
.L16418:
	movq	%rdx, %rdi
	movq	%rbx, %rsi
	movq	%r8, 24(%rsp)
	movq	%r9, 16(%rsp)
	movq	%rdx, 8(%rsp)
	call	s390_fetch_main_absolute
	movq	8(%rsp), %rdx
	movl	(%rax), %ecx
	movq	16(%rsp), %r9
	movq	24(%rsp), %r8
	bswap	%ecx
	testb	$32, %cl
	jne	.L16414
	testl	%ecx, %ecx
	js	.L16420
	testb	$1, 994(%rbx)
	je	.L16421
	testb	$16, %cl
	jne	.L16420
.L16421:
	movl	%ebp, %eax
	movl	%ecx, %r10d
	andl	$1044480, %eax
	andl	$2147483584, %r10d
	movl	%eax, %esi
	shrl	$16, %eax
	shrl	$10, %esi
	addq	%rsi, %r10
	movl	%ecx, %esi
	andl	$15, %esi
	cmpl	%eax, %esi
	jb	.L16422
	cmpq	1040(%rbx), %r10
	ja	.L16415
	movl	%r10d, %eax
	movl	%r10d, %esi
	andl	$2147479552, %eax
	jne	.L16423
	movl	88(%rbx), %r10d
.L16424:
	xorl	%esi, %r10d
.L16425:
	movq	%rbx, %rsi
	movq	%r10, %rdi
	movq	%r8, 40(%rsp)
	movl	%ecx, 36(%rsp)
	movq	%rdx, 24(%rsp)
	movq	%r9, 16(%rsp)
	movq	%r10, 8(%rsp)
	call	s390_fetch_fullword_absolute
	movq	8(%rsp), %r10
	testb	$4, %ah
	movl	%eax, %esi
	movq	16(%rsp), %r9
	movq	24(%rsp), %rdx
	movl	36(%rsp), %ecx
	movq	40(%rsp), %r8
	jne	.L16422
	testl	$-2147481344, %eax
	jne	.L16420
	testb	$2, %ah
	jne	.L16427
	movzbl	994(%rbx), %edx
	shrb	%dl
	andl	$3, %edx
.L16428:
	movq	968(%rbx), %rdi
	movl	%edi, 2232(%r9)
	movl	(%rsp), %edi
	orl	2224(%rbx), %edi
	movl	%eax, 18616(%r9)
	movl	%ecx, %eax
	shrl	$4, %eax
	andl	$1, %eax
	movl	%edi, 10424(%r9)
	movb	%al, 44216(%rbx,%r8)
	movb	$0, 46264(%rbx,%r8)
	movb	%dl, 45240(%rbx,%r8)
	movq	$0, 26808(%r9)
.L16413:
	movl	%ebp, %ecx
	andl	$2147479552, %esi
	xorl	%r9d, %r9d
	andl	$4095, %ecx
	movq	%rsi, 960(%rbx)
	orq	%rsi, %rcx
	movw	%r9w, 992(%rbx)
	movq	%rcx, 944(%rbx)
	jmp	.L16361
	.p2align 4,,10
	.p2align 3
.L16785:
	movl	$3, 976(%rbx)
	movl	432(%rbx), %eax
	movq	%rax, 968(%rbx)
	jmp	.L16236
.L16416:
	cmpl	88(%rbx), %eax
	jne	.L16418
	movl	%eax, %edx
	jmp	.L16417
.L16415:
	movl	$5, %r8d
	movl	$5, %esi
	movw	%r8w, 992(%rbx)
	jmp	.L16429
.L16289:
	cmpl	88(%rbx), %eax
	jne	.L16291
	movl	%eax, %r11d
	jmp	.L16290
.L16292:
.L16288:
	movl	$17, %eax
	movq	%r11, 944(%rbx)
	movl	$17, %esi
	movw	%ax, 992(%rbx)
	jmp	.L16296
.L16796:
	movl	%edi, %r9d
	andl	$-16, %r9d
	cmpb	%r9b, %r12b
	je	.L16461
	testb	$8, %dil
	je	.L16461
	cmpl	$2047, %ebp
	ja	.L16463
	testb	$2, 331(%rbx)
	je	.L16463
	testb	$1, 994(%rbx)
	je	.L16461
.L16463:
	cmpb	$-112, %r9b
	je	.L16799
.L16464:
	testb	$2, %al
	jne	.L16800
	movl	%ebp, %eax
	movb	$1, 1012(%rbx)
	andl	$2147479552, %eax
	orl	976(%rbx), %eax
	movl	%eax, 792(%rbx)
.L16466:
	movl	$4, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movzwl	992(%rbx), %esi
	jmp	.L16468
.L16445:
	movl	$5, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movl	%ebp, %edx
	movb	$1, 1012(%rbx)
	andl	$2147479552, %edx
	orl	976(%rbx), %edx
	testb	$2, 1144(%rbx)
	movl	%edx, 792(%rbx)
	je	.L16466
	movq	1056(%rbx), %rax
.L16465:
	testb	$6, 994(%rax)
	je	.L16466
	movl	$4, %esi
	movl	%edx, 792(%rax)
	movq	%rax, %rdi
	movb	$1, 1012(%rax)
	call	*2032(%rax)
	movzwl	992(%rbx), %esi
	jmp	.L16468
.L16800:
	movl	%ebp, %edx
	movq	1056(%rbx), %rax
	andl	$2147479552, %edx
	orl	976(%rbx), %edx
	andb	$-7, 994(%rax)
	movb	$1, 1012(%rbx)
	movl	%edx, 792(%rbx)
	jmp	.L16465
.L16799:
	testb	$1, 331(%rbx)
	je	.L16464
	jmp	.L16461
.L16795:
	addq	1024(%rbx), %rcx
	movq	%rcx, %r12
	jmp	.L16358
.L16794:
	movq	1056(%rbx), %rdx
	andb	$-7, 994(%rdx)
	testb	$4, %al
	jne	.L16446
	cmpl	$1, 80(%rdx)
	movl	$-3, %esi
	movq	1080(%rbx), %rax
	je	.L16801
	testb	$1, 2(%rax)
	je	.L16450
	movzbl	99(%rbx), %eax
	andl	$64, %eax
	cmpb	$1, %al
	sbbl	%esi, %esi
	andl	$-4, %esi
	addl	$1, %esi
.L16450:
	addq	1096(%rbx), %rcx
	movq	%r8, (%rsp)
	movq	%rcx, %rdi
	xorl	%ecx, %ecx
	call	z900_translate_addr
	movq	(%rsp), %r8
	testl	%eax, %eax
	setne	%al
.L16449:
	testb	%al, %al
	je	.L16451
	movq	1056(%rbx), %rax
	movq	%r8, (%rsp)
	movzwl	992(%rax), %esi
	movq	%rax, %rdi
	call	*2032(%rax)
	movq	(%rsp), %r8
.L16451:
	movzbl	994(%rbx), %edx
	movq	1056(%rbx), %rax
	movl	%edx, %ecx
	andl	$-7, %edx
	orb	994(%rax), %cl
	andl	$6, %ecx
	orl	%ecx, %edx
	movb	%dl, 994(%rbx)
	movzbl	994(%rax), %edx
	shrb	%dl
	andl	$3, %edx
	orb	%dl, 45240(%rbx,%r8)
	testb	$4, 96(%rbx)
	jne	.L16452
	movl	%ebp, %ecx
	andl	$2143289344, %ecx
	movl	%ecx, 18616(%rbx,%r8,8)
.L16452:
	movq	1080(%rbx), %rcx
	testb	$1, 2(%rcx)
	je	.L16453
	testb	$64, 99(%rbx)
	je	.L16453
	movq	968(%rbx), %rcx
	andl	$2, %edx
	movl	%ecx, 2232(%rbx,%r8,8)
	movzbl	994(%rax), %esi
	movzbl	994(%rbx), %ecx
	andl	$1, %esi
	andl	$-2, %ecx
	orl	%esi, %ecx
	movb	%cl, 994(%rbx)
	movq	968(%rax), %rcx
	movl	$17, 1916(%rbx)
	movb	%dl, 2010(%rbx)
	xorb	$8, %ch
	movq	%rcx, 968(%rbx)
	movl	%ecx, 464(%rbx)
	shrq	$8, %rcx
	xorq	$1, %rcx
	andl	$1, %ecx
	movb	%cl, 1994(%rbx)
.L16453:
	movq	944(%rax), %rcx
	movl	88(%rax), %edx
	movl	%ecx, %edi
	movl	%ecx, %esi
	andl	$2147479552, %edi
	je	.L16455
	cmpl	%edx, %edi
	je	.L16455
.L16456:
	movq	960(%rax), %rsi
	movq	%rcx, 952(%rax)
	movl	%esi, %r9d
	movl	%esi, %edi
	andl	$2147479552, %r9d
	je	.L16457
	cmpl	%edx, %r9d
	je	.L16457
.L16458:
	cmpq	1040(%rax), %rcx
	ja	.L16445
	movzbl	1144(%rbx), %eax
	jmp	.L16446
.L16801:
	testb	$1, 2(%rax)
	je	.L16448
	movzbl	99(%rbx), %eax
	andl	$64, %eax
	cmpb	$1, %al
	sbbl	%esi, %esi
	andl	$-4, %esi
	addl	$1, %esi
.L16448:
	movl	1096(%rbx), %edi
	movq	%r8, (%rsp)
	addl	%ecx, %edi
	xorl	%ecx, %ecx
	call	s390_translate_addr
	movq	(%rsp), %r8
	testl	%eax, %eax
	setne	%al
	jmp	.L16449
.L16457:
	movl	%edx, %esi
	xorl	%edi, %esi
	jmp	.L16458
.L16455:
	movl	%esi, %ecx
	xorl	%edx, %ecx
	jmp	.L16456
.L16504:
	movq	1064(%rbx), %rcx
	movq	1080(%rcx), %rsi
	testb	$1, 2(%rsi)
	je	.L16275
	testb	$64, 99(%rcx)
	je	.L16275
	jmp	.L16230
.L16793:
	movl	%esi, %edi
	andl	$-16, %edi
	cmpb	(%rsp), %dil
	je	.L16327
	testb	$8, %sil
	je	.L16327
	cmpl	$2047, %r15d
	ja	.L16329
	testb	$2, 331(%rbx)
	je	.L16329
	testb	$1, 994(%rbx)
	je	.L16327
.L16329:
	cmpb	$-112, %dil
	je	.L16802
.L16330:
	testb	$2, %al
	jne	.L16803
	movl	%r15d, %eax
	movb	$1, 1012(%rbx)
	andl	$2147479552, %eax
	orl	976(%rbx), %eax
	movl	%eax, 792(%rbx)
.L16332:
	movl	$4, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movzwl	992(%rbx), %esi
	jmp	.L16334
.L16792:
	addq	1024(%rbx), %r11
	jmp	.L16326
.L16791:
	movq	1056(%rbx), %rdx
	andb	$-7, 994(%rdx)
	testb	$4, %al
	jne	.L16312
	cmpl	$1, 80(%rdx)
	movl	$-3, %esi
	movq	1080(%rbx), %rax
	je	.L16804
	testb	$1, 2(%rax)
	je	.L16316
	movzbl	99(%rbx), %eax
	andl	$64, %eax
	cmpb	$1, %al
	sbbl	%esi, %esi
	andl	$-4, %esi
	addl	$1, %esi
.L16316:
	movq	%r11, %rdi
	xorl	%ecx, %ecx
	addq	1096(%rbx), %rdi
	call	z900_translate_addr
	testl	%eax, %eax
	setne	%al
.L16315:
	testb	%al, %al
	je	.L16317
	movq	1056(%rbx), %rax
	movzwl	992(%rax), %esi
	movq	%rax, %rdi
	call	*2032(%rax)
.L16317:
	movzbl	994(%rbx), %edx
	movq	1056(%rbx), %rax
	movl	%edx, %ecx
	andl	$-7, %edx
	orb	994(%rax), %cl
	andl	$6, %ecx
	orl	%ecx, %edx
	movb	%dl, 994(%rbx)
	movzbl	994(%rax), %edx
	shrb	%dl
	andl	$3, %edx
	orb	%dl, 45240(%rbx,%r12)
	testb	$4, 96(%rbx)
	jne	.L16318
	movl	%r15d, %ecx
	andl	$2143289344, %ecx
	movl	%ecx, 18616(%rbx,%r12,8)
.L16318:
	movq	1080(%rbx), %rcx
	testb	$1, 2(%rcx)
	je	.L16319
	testb	$64, 99(%rbx)
	je	.L16319
	movq	968(%rbx), %rcx
	andl	$2, %edx
	movl	%ecx, 2232(%rbx,%r12,8)
	movzbl	994(%rax), %esi
	movzbl	994(%rbx), %ecx
	andl	$1, %esi
	andl	$-2, %ecx
	orl	%esi, %ecx
	movb	%cl, 994(%rbx)
	movq	968(%rax), %rcx
	movl	$17, 1916(%rbx)
	movb	%dl, 2010(%rbx)
	xorb	$8, %ch
	movq	%rcx, 968(%rbx)
	movl	%ecx, 464(%rbx)
	shrq	$8, %rcx
	xorq	$1, %rcx
	andl	$1, %ecx
	movb	%cl, 1994(%rbx)
.L16319:
	movq	944(%rax), %r11
	movl	88(%rax), %edx
	movl	%r11d, %esi
	movl	%r11d, %ecx
	andl	$2147479552, %esi
	je	.L16321
	cmpl	%edx, %esi
	je	.L16321
.L16322:
	movq	960(%rax), %rcx
	movq	%r11, 952(%rax)
	movl	%ecx, %edi
	movl	%ecx, %esi
	andl	$2147479552, %edi
	je	.L16323
	cmpl	%edx, %edi
	je	.L16323
.L16324:
	cmpq	1040(%rax), %r11
	ja	.L16311
	movzbl	1144(%rbx), %eax
	jmp	.L16312
.L16804:
	testb	$1, 2(%rax)
	je	.L16314
	movzbl	99(%rbx), %eax
	andl	$64, %eax
	cmpb	$1, %al
	sbbl	%esi, %esi
	andl	$-4, %esi
	addl	$1, %esi
.L16314:
	movl	1096(%rbx), %edi
	xorl	%ecx, %ecx
	addl	%r11d, %edi
	call	s390_translate_addr
	testl	%eax, %eax
	setne	%al
	jmp	.L16315
.L16323:
	movl	%edx, %ecx
	xorl	%esi, %ecx
	jmp	.L16324
.L16321:
	movl	%ecx, %r11d
	xorl	%edx, %r11d
	jmp	.L16322
.L16803:
	movl	%r15d, %edx
	movq	1056(%rbx), %rax
	andl	$2147479552, %edx
	orl	976(%rbx), %edx
	andb	$-7, 994(%rax)
	movb	$1, 1012(%rbx)
	movl	%edx, 792(%rbx)
.L16331:
	testb	$6, 994(%rax)
	je	.L16332
	movl	$4, %esi
	movl	%edx, 792(%rax)
	movq	%rax, %rdi
	movb	$1, 1012(%rax)
	call	*2032(%rax)
	movzwl	992(%rbx), %esi
	jmp	.L16334
.L16802:
	testb	$1, 331(%rbx)
	je	.L16330
	jmp	.L16327
.L16337:
	leal	1(%r15), %edi
	andl	120(%rbx), %edi
.L16339:
	movzbl	%r12b, %r8d
	movq	%rbx, %rdx
	movq	%r11, (%rsp)
	movl	$1, %r9d
	movl	$4, %ecx
	movl	$1, %esi
	call	s390_logical_to_main_l
	movl	1916(%rbx), %edx
	movzbl	97(%rbx), %r12d
	movq	(%rsp), %r11
	jmp	.L16341
.L16790:
	cmpb	%r12b, 43192(%rbx,%rax)
	je	.L16340
	jmp	.L16339
.L16789:
	movzbl	1976(%rbx,%rsi), %esi
	testb	%sil, 44216(%rbx,%rax)
	jne	.L16338
	jmp	.L16339
.L16281:
	movl	$5, %esi
	movw	%si, 992(%rbx)
	movl	$5, %esi
	jmp	.L16295
.L16797:
	cmpb	$0, 44216(%rbx,%r12)
	jne	.L16277
	movl	2232(%r9), %eax
	cmpq	%rax, %rcx
	jne	.L16276
.L16278:
	movzbl	45240(%rbx,%r12), %eax
	movl	18616(%r9), %esi
	testb	%al, %al
	je	.L16279
	andl	$3, %eax
	leal	(%rax,%rax), %edx
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	%edx, %eax
	movb	%al, 994(%rbx)
	jmp	.L16279
.L16787:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L16472
.L16768:
	movzbl	97(%rbx), %r8d
.L16473:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	call	s390_logical_to_main_l
	jmp	.L16475
.L16788:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L16474
	.p2align 4,,3
	jmp	.L16473
.L16277:
	testb	$1, %al
	jne	.L16276
	.p2align 4,,9
	jmp	.L16278
.L16798:
	cmpb	$0, 44216(%rbx,%r8)
	jne	.L16411
	movl	2232(%r9), %eax
	cmpq	%rax, %rcx
	jne	.L16410
.L16412:
	movzbl	45240(%rbx,%r8), %eax
	movl	18616(%r9), %esi
	testb	%al, %al
	je	.L16413
	andl	$3, %eax
	leal	(%rax,%rax), %edx
	movzbl	994(%rbx), %eax
	andl	$-7, %eax
	orl	%edx, %eax
	movb	%al, 994(%rbx)
	jmp	.L16413
.L16371:
	movzwl	394(%rbx), %ecx
	testl	$-33554432, %r11d
	movw	%cx, (%rsp)
	je	.L16805
.L16372:
	movl	$40, %eax
	movl	$40, %esi
	movw	%ax, 992(%rbx)
	jmp	.L16407
.L16411:
	testb	$1, %al
	jne	.L16410
	jmp	.L16412
.L16805:
	testl	$16777216, %r11d
	.p2align 4,,2
	je	.L16373
	movl	368(%rbx), %edx
	andl	$2147483584, %edx
.L16374:
	movl	%edx, %ecx
	cmpq	1040(%rbx), %rcx
	jbe	.L16806
.L16375:
	movl	$5, %eax
	movl	$5, %esi
	movw	%ax, 992(%rbx)
.L16406:
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L16372
.L16780:
	testb	$127, %al
	jne	.L16437
	orl	$-2147483646, %edx
	movl	%edx, 792(%rbx)
	jmp	.L16433
.L16779:
	movq	968(%rbx), %rcx
	movl	336(%rbx), %eax
	xorq	%rcx, %rax
	testl	$2147479552, %eax
	je	.L16767
	movl	384(%rbx), %eax
	xorq	%rcx, %rax
	testl	$2147479552, %eax
	jne	.L16434
	orl	$2, %edx
	movl	%edx, 792(%rbx)
.L16767:
	movzbl	99(%rbx), %eax
	jmp	.L16433
.L16434:
	movl	432(%rbx), %eax
	xorq	%rcx, %rax
	testl	$2147479552, %eax
	jne	.L16435
	orl	$3, %edx
	movzbl	99(%rbx), %eax
	movl	%edx, 792(%rbx)
	jmp	.L16433
.L16806:
	movl	%edx, %ecx
	andl	$2147479552, %ecx
	jne	.L16376
	movl	88(%rbx), %ecx
.L16377:
	xorl	%ecx, %edx
.L16378:
	leal	16(%rdx), %esi
	testb	$2, %al
	movl	%esi, %ecx
	jne	.L16807
.L16379:
	movq	%rcx, %rax
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	movl	(%rax,%rcx), %edx
	movzwl	%r11w, %ecx
	movl	%ecx, %esi
	shrl	$3, %esi
	bswap	%edx
	movl	%edx, %eax
	andl	$127, %edx
	andl	$2147483520, %eax
	cmpl	%esi, %edx
	jae	.L16808
.L16382:
	movl	$41, %eax
	movl	$41, %esi
	movw	%ax, 992(%rbx)
	jmp	.L16407
.L16373:
	movl	344(%rbx), %edx
	andl	$2147483584, %edx
	jmp	.L16374
.L16435:
	orl	$1, %edx
	movzbl	99(%rbx), %eax
	movl	%edx, 792(%rbx)
	jmp	.L16433
.L16808:
	sall	$4, %ecx
	addl	%ecx, %eax
	movl	%eax, %edi
	cmpq	1040(%rbx), %rdi
	ja	.L16375
	movl	%eax, %edx
	andl	$2147479552, %edx
	jne	.L16383
	movl	88(%rbx), %edi
.L16384:
	xorl	%eax, %edi
.L16385:
	movq	%rbx, %rsi
	movl	%r11d, 16(%rsp)
	call	s390_fetch_main_absolute
	movl	(%rax), %r10d
	movl	8(%rax), %edx
	movl	12(%rax), %r8d
	bswap	%r10d
	testl	%r10d, %r10d
	bswap	%edx
	bswap	%r8d
	js	.L16382
	movl	16(%rsp), %r11d
	xorl	%r10d, %r11d
	andl	$16711680, %r11d
	je	.L16809
.L16386:
	movl	$42, %r12d
	movl	$42, %esi
	movw	%r12w, 992(%rbx)
	jmp	.L16407
.L16807:
	testb	$4, %al
	jne	.L16379
	movq	1056(%rbx), %rdx
	movl	%r11d, 16(%rsp)
	cmpl	$1, 80(%rdx)
	je	.L16810
	addq	1096(%rbx), %rcx
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$-3, %esi
	movq	%rcx, %rdi
	movl	$4, %ecx
	call	z900_logical_to_main_l
	movl	16(%rsp), %r11d
.L16381:
	movq	1056(%rbx), %rax
	movq	952(%rax), %rcx
	jmp	.L16379
.L16376:
	cmpl	88(%rbx), %ecx
	jne	.L16378
	jmp	.L16377
.L16810:
	movl	1096(%rbx), %edi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$4, %ecx
	addl	%esi, %edi
	movl	$-3, %esi
	call	s390_logical_to_main_l
	movl	16(%rsp), %r11d
	jmp	.L16381
.L16809:
	movl	%edx, %eax
	andl	$2147483584, %eax
	andl	$2147479552, %edx
	jne	.L16387
	movl	88(%rbx), %edx
.L16388:
	xorl	%edx, %eax
.L16389:
	movl	%eax, %edi
	cmpq	1040(%rbx), %rdi
	ja	.L16375
	movq	%rbx, %rsi
	movl	%r8d, 24(%rsp)
	movl	%r10d, 16(%rsp)
	call	s390_fetch_main_absolute
	movl	(%rax), %edx
	movl	4(%rax), %ecx
	movl	8(%rax), %r11d
	movl	20(%rax), %eax
	bswap	%edx
	testl	%edx, %edx
	bswap	%ecx
	bswap	%r11d
	bswap	%eax
	js	.L16390
	movl	24(%rsp), %r8d
	movl	16(%rsp), %r10d
	cmpl	%r8d, %eax
	je	.L16811
.L16391:
	movl	$44, %r10d
	movl	$44, %esi
	movw	%r10w, 992(%rbx)
	jmp	.L16407
.L16383:
	cmpl	88(%rbx), %edx
	jne	.L16385
	movl	%edx, %edi
	jmp	.L16384
.L16811:
	testl	$16777216, %r10d
	je	.L16392
	cmpw	%r10w, (%rsp)
	je	.L16392
	testb	$2, %dl
	je	.L16812
.L16393:
	movl	$23, %eax
	movl	$23, %esi
	movw	%ax, 992(%rbx)
	jmp	.L16406
.L16390:
	movl	$43, %r11d
	movl	$43, %esi
	movw	%r11w, 992(%rbx)
	jmp	.L16407
.L16387:
	cmpl	88(%rbx), %edx
	jne	.L16389
	jmp	.L16388
.L16812:
	testb	$15, %cl
	.p2align 4,,5
	jne	.L16393
	testb	$1, %dl
	.p2align 4,,5
	je	.L16394
	testb	$1, 330(%rbx)
	je	.L16393
.L16394:
	movzwl	(%rsp), %edi
	andl	$65520, %ecx
	andl	$2147483644, %edx
	movl	%edi, %eax
	andl	$65520, %eax
	cmpl	%eax, %ecx
	jl	.L16403
	movl	%edi, %eax
	shrw	$2, %ax
	movzwl	%ax, %eax
	addl	%eax, %edx
	movl	%edx, %eax
	andl	$2147483647, %eax
	movl	%eax, %ecx
	cmpq	1040(%rbx), %rcx
	ja	.L16396
	andl	$2147479552, %edx
	jne	.L16397
	movl	88(%rbx), %edx
.L16398:
	xorl	%edx, %eax
.L16399:
	movzbl	1144(%rbx), %edx
	testb	$2, %dl
	jne	.L16813
.L16400:
	movq	1024(%rbx), %rcx
	movl	%eax, %edx
	shrl	$11, %eax
	addq	1032(%rbx), %rax
	movzbl	(%rcx,%rdx), %edx
	movl	(%rsp), %ecx
	orb	$4, (%rax)
	andl	$3, %ecx
	addl	%ecx, %ecx
	sall	%cl, %edx
	andl	$64, %edx
	jne	.L16392
.L16403:
	movl	$45, %eax
	movl	$45, %esi
	movw	%ax, 992(%rbx)
	jmp	.L16407
.L16237:
	movzwl	394(%rbx), %ecx
	testl	$-33554432, %r11d
	movw	%cx, 8(%rsp)
	je	.L16814
.L16238:
	movl	$40, %r12d
	movl	$40, %esi
	movw	%r12w, 992(%rbx)
	jmp	.L16273
.L16783:
	movq	968(%rbx), %rcx
	movl	336(%rbx), %eax
	xorq	%rcx, %rax
	testl	$2147479552, %eax
	je	.L16766
	movl	384(%rbx), %eax
	xorq	%rcx, %rax
	testl	$2147479552, %eax
	jne	.L16300
	orl	$2, %edx
	movl	%edx, 792(%rbx)
.L16766:
	movzbl	99(%rbx), %eax
	jmp	.L16299
.L16282:
	cmpl	88(%rbx), %eax
	jne	.L16284
	movl	%eax, %edx
	jmp	.L16283
.L16506:
	movq	1064(%rbx), %rcx
	movq	1080(%rcx), %rsi
	testb	$1, 2(%rsi)
	je	.L16409
	testb	$64, 99(%rcx)
	je	.L16409
	jmp	.L16364
.L16311:
	movl	$5, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movl	%r15d, %edx
	movb	$1, 1012(%rbx)
	andl	$2147479552, %edx
	orl	976(%rbx), %edx
	testb	$2, 1144(%rbx)
	movl	%edx, 792(%rbx)
	je	.L16332
	movq	1056(%rbx), %rax
	jmp	.L16331
.L16784:
	testb	$127, %al
	jne	.L16303
	orl	$-2147483646, %edx
	movl	%edx, 792(%rbx)
	jmp	.L16299
.L16392:
	andl	$33554432, %r10d
	movzbl	994(%rbx), %eax
	je	.L16404
	movl	$1, 976(%rbx)
	andl	$-7, %eax
	orl	$4, %eax
	movb	%al, 994(%rbx)
	movl	$2, %eax
.L16405:
	xorl	$3072, %r11d
	movl	%r11d, %edx
	orl	$256, %edx
	movq	%rdx, 968(%rbx)
.L16499:
	movl	%edx, 464(%rbx)
	shrq	$8, %rdx
	xorq	$1, %rdx
	movb	%al, 2010(%rbx)
	movl	$17, 1916(%rbx)
	andl	$1, %edx
	movb	%dl, 1994(%rbx)
	jmp	.L16370
.L16813:
	andl	$4, %edx
	jne	.L16400
	movq	1056(%rbx), %rdx
	movl	%r10d, 24(%rsp)
	movl	%r11d, 16(%rsp)
	cmpl	$1, 80(%rdx)
	je	.L16815
	movl	%eax, %edi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	addq	1096(%rbx), %rdi
	xorl	%ecx, %ecx
	movl	$-3, %esi
	call	z900_logical_to_main_l
	movl	24(%rsp), %r10d
	movl	16(%rsp), %r11d
.L16402:
	movq	1056(%rbx), %rax
	movl	952(%rax), %eax
	jmp	.L16400
.L16404:
	movl	$1, 976(%rbx)
	shrb	%al
	movl	%r11d, %edx
	andl	$2, %eax
	movq	%rdx, 968(%rbx)
	jne	.L16405
	jmp	.L16499
.L16815:
	addl	1096(%rbx), %eax
	movl	$1, %r9d
	xorl	%r8d, %r8d
	xorl	%ecx, %ecx
	movl	$-3, %esi
	movl	%eax, %edi
	call	s390_logical_to_main_l
	movl	16(%rsp), %r11d
	movl	24(%rsp), %r10d
	jmp	.L16402
.L16397:
	cmpl	88(%rbx), %edx
	jne	.L16399
	jmp	.L16398
.L16396:
	movl	$5, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L16403
.L16293:
	movzbl	994(%rbx), %edi
	movl	%edi, %edx
	andl	$-7, %edi
	shrb	%dl
	andl	$3, %edx
	orl	$1, %edx
	leal	(%rdx,%rdx), %r11d
	orl	%r11d, %edi
	movb	%dil, 994(%rbx)
	jmp	.L16294
.L16427:
	movzbl	994(%rbx), %edi
	movl	%edi, %edx
	andl	$-7, %edi
	shrb	%dl
	andl	$3, %edx
	orl	$1, %edx
	leal	(%rdx,%rdx), %r10d
	orl	%r10d, %edi
	movb	%dil, 994(%rbx)
	jmp	.L16428
.L16423:
	cmpl	88(%rbx), %eax
	jne	.L16425
	movl	%eax, %r10d
	jmp	.L16424
.L16426:
.L16422:
	movl	$17, %esi
	movq	%r10, 944(%rbx)
	movw	%si, 992(%rbx)
	movl	$17, %esi
	jmp	.L16430
.L16471:
	leal	1(%rbp), %edi
	andl	120(%rbx), %edi
	jmp	.L16768
.L16814:
	testl	$16777216, %r11d
	je	.L16239
	movl	368(%rbx), %edx
	andl	$2147483584, %edx
.L16240:
	movl	%edx, %ecx
	cmpq	1040(%rbx), %rcx
	jbe	.L16816
.L16241:
	movl	$5, %eax
	movl	$5, %esi
	movw	%ax, 992(%rbx)
.L16272:
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L16238
.L16300:
	movl	432(%rbx), %eax
	xorq	%rcx, %rax
	testl	$2147479552, %eax
	jne	.L16301
	orl	$3, %edx
	movzbl	99(%rbx), %eax
	movl	%edx, 792(%rbx)
	jmp	.L16299
.L16816:
	movl	%edx, %ecx
	andl	$2147479552, %ecx
	jne	.L16242
	movl	88(%rbx), %ecx
.L16243:
	xorl	%ecx, %edx
.L16244:
	leal	16(%rdx), %esi
	testb	$2, %al
	movl	%esi, %ecx
	jne	.L16817
.L16245:
	movq	%rcx, %rax
	shrq	$11, %rax
	addq	1032(%rbx), %rax
	orb	$4, (%rax)
	movq	1024(%rbx), %rax
	movl	(%rax,%rcx), %edx
	movzwl	%r11w, %ecx
	movl	%ecx, %esi
	shrl	$3, %esi
	bswap	%edx
	movl	%edx, %eax
	andl	$127, %edx
	andl	$2147483520, %eax
	cmpl	%esi, %edx
	jae	.L16818
.L16248:
	movl	$41, %r11d
	movl	$41, %esi
	movw	%r11w, 992(%rbx)
	jmp	.L16273
.L16239:
	movl	344(%rbx), %edx
	andl	$2147483584, %edx
	jmp	.L16240
.L16301:
	orl	$1, %edx
	movzbl	99(%rbx), %eax
	movl	%edx, 792(%rbx)
	jmp	.L16299
.L16818:
	sall	$4, %ecx
	addl	%ecx, %eax
	movl	%eax, %edi
	cmpq	1040(%rbx), %rdi
	ja	.L16241
	movl	%eax, %edx
	andl	$2147479552, %edx
	jne	.L16249
	movl	88(%rbx), %edi
.L16250:
	xorl	%eax, %edi
.L16251:
	movq	%rbx, %rsi
	movl	%r11d, 24(%rsp)
	call	s390_fetch_main_absolute
	movl	(%rax), %r12d
	movl	8(%rax), %edx
	movl	12(%rax), %r8d
	bswap	%r12d
	testl	%r12d, %r12d
	bswap	%edx
	bswap	%r8d
	js	.L16248
	movl	24(%rsp), %r11d
	xorl	%r12d, %r11d
	andl	$16711680, %r11d
	je	.L16819
.L16252:
	movl	$42, %r10d
	movl	$42, %esi
	movw	%r10w, 992(%rbx)
	jmp	.L16273
.L16817:
	testb	$4, %al
	jne	.L16245
	movq	1056(%rbx), %rdx
	movl	%r11d, 24(%rsp)
	cmpl	$1, 80(%rdx)
	je	.L16820
	addq	1096(%rbx), %rcx
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$-3, %esi
	movq	%rcx, %rdi
	movl	$4, %ecx
	call	z900_logical_to_main_l
	movl	24(%rsp), %r11d
.L16247:
	movq	1056(%rbx), %rax
	movq	952(%rax), %rcx
	jmp	.L16245
.L16242:
	cmpl	88(%rbx), %ecx
	jne	.L16244
	jmp	.L16243
.L16820:
	movl	1096(%rbx), %edi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movl	$4, %ecx
	addl	%esi, %edi
	movl	$-3, %esi
	call	s390_logical_to_main_l
	movl	24(%rsp), %r11d
	jmp	.L16247
.L16819:
	movl	%edx, %eax
	andl	$2147483584, %eax
	andl	$2147479552, %edx
	jne	.L16253
	movl	88(%rbx), %edx
.L16254:
	xorl	%edx, %eax
.L16255:
	movl	%eax, %edi
	cmpq	1040(%rbx), %rdi
	ja	.L16241
	movq	%rbx, %rsi
	movl	%r8d, 24(%rsp)
	call	s390_fetch_main_absolute
	movl	(%rax), %edx
	movl	4(%rax), %ecx
	movl	8(%rax), %r10d
	movl	20(%rax), %eax
	bswap	%edx
	testl	%edx, %edx
	bswap	%ecx
	bswap	%r10d
	bswap	%eax
	js	.L16256
	movl	24(%rsp), %r8d
	cmpl	%r8d, %eax
	je	.L16821
.L16257:
	movl	$44, %r8d
	movl	$44, %esi
	movw	%r8w, 992(%rbx)
	jmp	.L16273
.L16249:
	cmpl	88(%rbx), %edx
	jne	.L16251
	movl	%edx, %edi
	jmp	.L16250
.L16821:
	testl	$16777216, %r12d
	je	.L16258
	cmpw	%r12w, 8(%rsp)
	je	.L16258
	testb	$2, %dl
	je	.L16822
.L16259:
	movl	$23, %eax
	movl	$23, %esi
	movw	%ax, 992(%rbx)
	jmp	.L16272
.L16256:
	movl	$43, %r9d
	movl	$43, %esi
	movw	%r9w, 992(%rbx)
	jmp	.L16273
.L16253:
	cmpl	88(%rbx), %edx
	jne	.L16255
	jmp	.L16254
.L16822:
	testb	$15, %cl
	.p2align 4,,5
	jne	.L16259
	testb	$1, %dl
	.p2align 4,,5
	je	.L16260
	testb	$1, 330(%rbx)
	je	.L16259
.L16260:
	movzwl	8(%rsp), %edi
	andl	$65520, %ecx
	andl	$2147483644, %edx
	movl	%edi, %eax
	andl	$65520, %eax
	cmpl	%eax, %ecx
	jl	.L16269
	movl	%edi, %eax
	shrw	$2, %ax
	movzwl	%ax, %eax
	addl	%eax, %edx
	movl	%edx, %eax
	andl	$2147483647, %eax
	movl	%eax, %ecx
	cmpq	1040(%rbx), %rcx
	ja	.L16262
	andl	$2147479552, %edx
	jne	.L16263
	movl	88(%rbx), %edx
.L16264:
	xorl	%edx, %eax
.L16265:
	movzbl	1144(%rbx), %edx
	testb	$2, %dl
	jne	.L16823
.L16266:
	movq	1024(%rbx), %rcx
	movl	%eax, %edx
	shrl	$11, %eax
	addq	1032(%rbx), %rax
	movzbl	(%rcx,%rdx), %edx
	movl	8(%rsp), %ecx
	orb	$4, (%rax)
	andl	$3, %ecx
	addl	%ecx, %ecx
	sall	%cl, %edx
	andl	$64, %edx
	jne	.L16258
.L16269:
	movl	$45, %edx
	movl	$45, %esi
	movw	%dx, 992(%rbx)
	jmp	.L16273
.L16258:
	andl	$33554432, %r12d
	movzbl	994(%rbx), %eax
	je	.L16270
	movl	$1, 976(%rbx)
	andl	$-7, %eax
	orl	$4, %eax
	movb	%al, 994(%rbx)
	movl	$2, %eax
.L16271:
	movl	%r10d, %r11d
	xorl	$3072, %r11d
	movl	%r11d, %edx
	orl	$256, %edx
	movq	%rdx, 968(%rbx)
.L16494:
	movl	%edx, 464(%rbx)
	shrq	$8, %rdx
	xorq	$1, %rdx
	movb	%al, 2010(%rbx)
	movl	$17, 1916(%rbx)
	andl	$1, %edx
	movb	%dl, 1994(%rbx)
	jmp	.L16236
.L16823:
	andl	$4, %edx
	jne	.L16266
	movq	1056(%rbx), %rdx
	movl	%r10d, 24(%rsp)
	cmpl	$1, 80(%rdx)
	je	.L16824
	movl	%eax, %edi
	movl	$1, %r9d
	xorl	%r8d, %r8d
	addq	1096(%rbx), %rdi
	xorl	%ecx, %ecx
	movl	$-3, %esi
	call	z900_logical_to_main_l
	movl	24(%rsp), %r10d
.L16268:
	movq	1056(%rbx), %rax
	movl	952(%rax), %eax
	jmp	.L16266
.L16270:
	movl	$1, 976(%rbx)
	shrb	%al
	movl	%r10d, %edx
	andl	$2, %eax
	movq	%rdx, 968(%rbx)
	jne	.L16271
	jmp	.L16494
.L16824:
	addl	1096(%rbx), %eax
	movl	$1, %r9d
	xorl	%r8d, %r8d
	xorl	%ecx, %ecx
	movl	$-3, %esi
	movl	%eax, %edi
	call	s390_logical_to_main_l
	movl	24(%rsp), %r10d
	jmp	.L16268
.L16263:
	cmpl	88(%rbx), %edx
	jne	.L16265
	.p2align 4,,3
	jmp	.L16264
.L16262:
	movl	$5, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L16269
	.cfi_endproc
.LFE1554:
	.size	s390_compare_and_form_codeword, .-s390_compare_and_form_codeword
	.p2align 4,,15
	.globl	s390_compare_and_swap
	.type	s390_compare_and_swap, @function
s390_compare_and_swap:
.LFB1555:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 64
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %r13d
	movl	%ebp, %r15d
	shrl	$20, %r13d
	movl	%ebp, %esi
	shrl	$16, %r15d
	shrl	$12, %esi
	andl	$15, %r13d
	andl	$15, %r15d
	andl	$4095, %ebp
	andl	$15, %esi
	movl	%esi, %r12d
	je	.L16826
	movslq	%esi, %rax
	addl	192(%rbx,%rax,8), %ebp
	andl	120(%rbx), %ebp
.L16826:
	addq	$4, 136(%rbx)
	testb	$3, %bpl
	movb	$4, 130(%rbx)
	jne	.L16869
.L16827:
	leal	5(%r12), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L16828
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L16870
.L16829:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L16871
.L16830:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L16828
	testb	$2, 46264(%rbx,%rcx)
	je	.L16828
	movl	%ebp, %r12d
	xorq	26808(%rdx), %r12
.L16831:
	movq	40(%rbx), %rdi
	movslq	%r13d, %r13
	movq	1056(%rbx), %rcx
	leaq	(%rbx,%r13,8), %r14
	movl	192(%r14), %r13d
	movl	3000(%rdi), %eax
	bswap	%r13d
	cmpl	%eax, 48(%rcx)
	je	.L16832
	addq	$1936, %rdi
	movl	$.LC0, %esi
	call	ptt_pthread_mutex_lock
	movq	1056(%rbx), %rcx
	movq	40(%rbx), %rdi
	movzwl	1010(%rcx), %eax
	movw	%ax, 1928(%rdi)
.L16832:
	movslq	%r15d, %r15
	movl	%r13d, %eax
	leaq	(%rbx,%r15,8), %r15
	movl	192(%r15), %edx
	bswap	%edx
#APP
# 406 "machdep.h" 1
	lock;   cmpxchgl %edx,(%r12)
	setnz   %dl
	
# 0 "" 2
#NO_APP
	movl	%eax, %r13d
	movzwl	1010(%rcx), %eax
	movb	%dl, 100(%rbx)
	cmpw	%ax, 1928(%rdi)
	je	.L16872
.L16833:
	cmpb	$1, %dl
	je	.L16873
.L16825:
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L16873:
	.cfi_restore_state
	testb	$8, pttclass+1(%rip)
	jne	.L16874
.L16836:
	bswap	%r13d
	movl	%r13d, 192(%r14)
	testb	$2, 1144(%rbx)
	jne	.L16875
.L16837:
	cmpl	$1, sysblk+236(%rip)
	jle	.L16825
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	sched_yield
	.p2align 4,,10
	.p2align 3
.L16869:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L16827
	.p2align 4,,10
	.p2align 3
.L16872:
	movl	$-1, %eax
	addq	$1936, %rdi
	movl	$.LC1, %esi
	movw	%ax, -8(%rdi)
	call	ptt_pthread_mutex_unlock
	movzbl	100(%rbx), %edx
	jmp	.L16833
	.p2align 4,,10
	.p2align 3
.L16874:
	movl	192(%r15), %ecx
	movl	%ebp, %r9d
	movl	$.LC2, %r8d
	movl	192(%r14), %edx
	movl	$.LC3, %esi
	movl	$2048, %edi
	call	ptt_pthread_trace
	jmp	.L16836
.L16870:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L16829
.L16828:
	movzbl	97(%rbx), %r8d
	movl	%r12d, %esi
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %r12
	jmp	.L16831
.L16871:
	cmpb	43192(%rbx,%rcx), %al
	je	.L16830
	jmp	.L16828
.L16875:
	movq	1080(%rbx), %rax
	testb	$4, 72(%rax)
	je	.L16837
	movl	52(%rbx), %eax
	leaq	1232(%rbx), %rdi
	andl	56(%rbx), %eax
	testl	$16318464, %eax
	jne	.L16838
	movl	$-4, %esi
	call	longjmp
.L16838:
	movl	$-5, %esi
	call	longjmp
	.cfi_endproc
.LFE1555:
	.size	s390_compare_and_swap, .-s390_compare_and_swap
	.p2align 4,,15
	.globl	s390_compare_double_and_swap
	.type	s390_compare_double_and_swap, @function
s390_compare_double_and_swap:
.LFB1556:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	(%rdi), %r13d
	bswap	%r13d
	movl	%r13d, %eax
	movl	%r13d, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%r13d, %esi
	movl	%eax, %ebp
	movl	%edx, %r15d
	shrl	$12, %esi
	andl	$15, %ebp
	andl	$15, %r15d
	andl	$4095, %r13d
	andl	$15, %esi
	movl	%esi, %r12d
	je	.L16877
	movslq	%esi, %rcx
	addl	192(%rbx,%rcx,8), %r13d
	andl	120(%rbx), %r13d
.L16877:
	orl	%edx, %eax
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %al
	je	.L16878
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L16878:
	testb	$7, %r13b
	jne	.L16924
.L16879:
	leal	5(%r12), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L16880
	movl	%r13d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L16925
.L16881:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L16926
.L16882:
	movl	%r13d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L16880
	testb	$2, 46264(%rbx,%rcx)
	je	.L16880
	movl	%r13d, %r14d
	xorq	26808(%rdx), %r14
.L16883:
	movslq	%ebp, %rax
	addl	$1, %ebp
	movq	40(%rbx), %rdi
	leaq	(%rbx,%rax,8), %r10
	movslq	%ebp, %rbp
	movq	1056(%rbx), %rdx
	leaq	(%rbx,%rbp,8), %r11
	movl	192(%r10), %r12d
	movl	192(%r11), %eax
	salq	$32, %r12
	orq	%rax, %r12
	movslq	%r15d, %rax
	addl	$1, %r15d
	leaq	(%rbx,%rax,8), %rcx
	movslq	%r15d, %r15
	bswap	%r12
	movl	192(%rcx), %ebp
	movl	192(%rbx,%r15,8), %eax
	salq	$32, %rbp
	orq	%rax, %rbp
	movl	3000(%rdi), %eax
	bswap	%rbp
	cmpl	%eax, 48(%rdx)
	je	.L16884
	addq	$1936, %rdi
	movl	$.LC4, %esi
	movq	%r10, 24(%rsp)
	movq	%r11, 16(%rsp)
	movq	%rcx, 8(%rsp)
	call	ptt_pthread_mutex_lock
	movq	1056(%rbx), %rdx
	movq	40(%rbx), %rdi
	movq	24(%rsp), %r10
	movq	16(%rsp), %r11
	movzwl	1010(%rdx), %eax
	movq	8(%rsp), %rcx
	movw	%ax, 1928(%rdi)
.L16884:
	movq	%r12, %rax
#APP
# 422 "machdep.h" 1
	lock;   cmpxchgq %rbp,(%r14)
	setnz   %bpl
	
# 0 "" 2
#NO_APP
	movq	%rax, %r12
	movzwl	1010(%rdx), %eax
	movb	%bpl, 100(%rbx)
	cmpw	%ax, 1928(%rdi)
	je	.L16927
.L16885:
	cmpb	$1, %bpl
	je	.L16928
.L16876:
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L16928:
	.cfi_restore_state
	testb	$8, pttclass+1(%rip)
	jne	.L16929
.L16888:
	bswap	%r12
	movq	%r12, %rax
	shrq	$32, %rax
	movl	%eax, 192(%r10)
	movl	%r12d, 192(%r11)
	testb	$2, 1144(%rbx)
	jne	.L16930
.L16889:
	cmpl	$1, sysblk+236(%rip)
	jle	.L16876
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	sched_yield
	.p2align 4,,10
	.p2align 3
.L16924:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L16879
	.p2align 4,,10
	.p2align 3
.L16927:
	movl	$-1, %eax
	movl	$.LC5, %esi
	movq	%r10, 24(%rsp)
	movw	%ax, 1928(%rdi)
	addq	$1936, %rdi
	movq	%r11, 16(%rsp)
	movq	%rcx, 8(%rsp)
	call	ptt_pthread_mutex_unlock
	movzbl	100(%rbx), %ebp
	movq	24(%rsp), %r10
	movq	16(%rsp), %r11
	movq	8(%rsp), %rcx
	jmp	.L16885
	.p2align 4,,10
	.p2align 3
.L16929:
	movl	192(%r10), %edx
	movl	%r13d, %r9d
	movl	$.LC6, %r8d
	movl	192(%rcx), %ecx
	movl	$.LC7, %esi
	movl	$2048, %edi
	movq	%r11, 16(%rsp)
	movq	%r10, 8(%rsp)
	call	ptt_pthread_trace
	movq	16(%rsp), %r11
	movq	8(%rsp), %r10
	jmp	.L16888
.L16925:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L16881
.L16880:
	movzbl	97(%rbx), %r8d
	movl	$8, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %esi
	movl	%r13d, %edi
	call	s390_logical_to_main_l
	movq	%rax, %r14
	jmp	.L16883
.L16926:
	cmpb	43192(%rbx,%rcx), %al
	je	.L16882
	jmp	.L16880
.L16930:
	movq	1080(%rbx), %rax
	testb	$4, 72(%rax)
	je	.L16889
	movl	52(%rbx), %eax
	leaq	1232(%rbx), %rdi
	andl	56(%rbx), %eax
	testl	$16318464, %eax
	jne	.L16890
	movl	$-4, %esi
	call	longjmp
.L16890:
	movl	$-5, %esi
	call	longjmp
	.cfi_endproc
.LFE1556:
	.size	s390_compare_double_and_swap, .-s390_compare_double_and_swap
	.p2align 4,,15
	.globl	s390_compare_halfword
	.type	s390_compare_halfword, @function
s390_compare_halfword:
.LFB1557:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L16966
.L16932:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L16933
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %edi
.L16933:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %dil
	jne	.L16967
.L16934:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L16936
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L16968
.L16937:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L16969
.L16938:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L16936
	testb	$4, 46264(%rbx,%rsi)
	je	.L16936
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L16939:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L16940:
	cwtl
	movslq	%ebp, %rbp
	movl	$1, %edx
	cmpl	192(%rbx,%rbp,8), %eax
	jg	.L16941
	setl	%dl
	addl	%edx, %edx
.L16941:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L16968:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L16937
.L16936:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L16939
.L16967:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2047, %edx
	jne	.L16934
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch2_full
	jmp	.L16940
.L16966:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %edi
	jmp	.L16932
.L16969:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L16938
	jmp	.L16936
	.cfi_endproc
.LFE1557:
	.size	s390_compare_halfword, .-s390_compare_halfword
	.p2align 4,,15
	.globl	s390_compare_halfword_immediate
	.type	s390_compare_halfword_immediate, @function
s390_compare_halfword_immediate:
.LFB1558:
	.cfi_startproc
	movl	(%rdi), %eax
	movl	$1, %edx
	addq	$4, 136(%rsi)
	bswap	%eax
	movl	%eax, %ecx
	cwtl
	shrl	$20, %ecx
	andl	$15, %ecx
	cmpl	%eax, 192(%rsi,%rcx,8)
	jl	.L16971
	setg	%dl
	addl	%edx, %edx
.L16971:
	movb	%dl, 100(%rsi)
	ret
	.cfi_endproc
.LFE1558:
	.size	s390_compare_halfword_immediate, .-s390_compare_halfword_immediate
	.p2align 4,,15
	.globl	s390_compare_logical_register
	.type	s390_compare_logical_register, @function
s390_compare_logical_register:
.LFB1559:
	.cfi_startproc
	movzbl	1(%rdi), %edx
	addq	$2, 136(%rsi)
	movq	%rdx, %rax
	andl	$15, %edx
	shrq	$4, %rax
	movl	192(%rsi,%rdx,8), %edx
	andl	$15, %eax
	movl	192(%rsi,%rax,8), %ecx
	movl	$1, %eax
	cmpl	%edx, %ecx
	jb	.L16975
	cmpl	%ecx, %edx
	sbbl	%eax, %eax
	andl	$2, %eax
.L16975:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1559:
	.size	s390_compare_logical_register, .-s390_compare_logical_register
	.p2align 4,,15
	.globl	s390_1500
	.type	s390_1500, @function
s390_1500:
.LFB1560:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1560:
	.size	s390_1500, .-s390_1500
	.p2align 4,,15
	.globl	s390_1501
	.type	s390_1501, @function
s390_1501:
.LFB1561:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L16980
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L16980:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1561:
	.size	s390_1501, .-s390_1501
	.p2align 4,,15
	.globl	s390_1502
	.type	s390_1502, @function
s390_1502:
.LFB1562:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L16984
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L16984:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1562:
	.size	s390_1502, .-s390_1502
	.p2align 4,,15
	.globl	s390_1503
	.type	s390_1503, @function
s390_1503:
.LFB1563:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L16988
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L16988:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1563:
	.size	s390_1503, .-s390_1503
	.p2align 4,,15
	.globl	s390_1504
	.type	s390_1504, @function
s390_1504:
.LFB1564:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L16992
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L16992:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1564:
	.size	s390_1504, .-s390_1504
	.p2align 4,,15
	.globl	s390_1505
	.type	s390_1505, @function
s390_1505:
.LFB1565:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L16996
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L16996:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1565:
	.size	s390_1505, .-s390_1505
	.p2align 4,,15
	.globl	s390_1506
	.type	s390_1506, @function
s390_1506:
.LFB1566:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17000
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17000:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1566:
	.size	s390_1506, .-s390_1506
	.p2align 4,,15
	.globl	s390_1507
	.type	s390_1507, @function
s390_1507:
.LFB1567:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17004
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17004:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1567:
	.size	s390_1507, .-s390_1507
	.p2align 4,,15
	.globl	s390_1508
	.type	s390_1508, @function
s390_1508:
.LFB1568:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17008
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17008:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1568:
	.size	s390_1508, .-s390_1508
	.p2align 4,,15
	.globl	s390_1509
	.type	s390_1509, @function
s390_1509:
.LFB1569:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17012
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17012:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1569:
	.size	s390_1509, .-s390_1509
	.p2align 4,,15
	.globl	s390_150A
	.type	s390_150A, @function
s390_150A:
.LFB1570:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17016
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17016:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1570:
	.size	s390_150A, .-s390_150A
	.p2align 4,,15
	.globl	s390_150B
	.type	s390_150B, @function
s390_150B:
.LFB1571:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17020
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17020:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1571:
	.size	s390_150B, .-s390_150B
	.p2align 4,,15
	.globl	s390_150C
	.type	s390_150C, @function
s390_150C:
.LFB1572:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17024
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17024:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1572:
	.size	s390_150C, .-s390_150C
	.p2align 4,,15
	.globl	s390_150D
	.type	s390_150D, @function
s390_150D:
.LFB1573:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17028
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17028:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1573:
	.size	s390_150D, .-s390_150D
	.p2align 4,,15
	.globl	s390_150E
	.type	s390_150E, @function
s390_150E:
.LFB1574:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17032
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17032:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1574:
	.size	s390_150E, .-s390_150E
	.p2align 4,,15
	.globl	s390_150F
	.type	s390_150F, @function
s390_150F:
.LFB1575:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17036
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17036:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1575:
	.size	s390_150F, .-s390_150F
	.p2align 4,,15
	.globl	s390_1510
	.type	s390_1510, @function
s390_1510:
.LFB1576:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17040
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17040:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1576:
	.size	s390_1510, .-s390_1510
	.p2align 4,,15
	.globl	s390_1511
	.type	s390_1511, @function
s390_1511:
.LFB1577:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1577:
	.size	s390_1511, .-s390_1511
	.p2align 4,,15
	.globl	s390_1512
	.type	s390_1512, @function
s390_1512:
.LFB1578:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17045
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17045:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1578:
	.size	s390_1512, .-s390_1512
	.p2align 4,,15
	.globl	s390_1513
	.type	s390_1513, @function
s390_1513:
.LFB1579:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17049
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17049:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1579:
	.size	s390_1513, .-s390_1513
	.p2align 4,,15
	.globl	s390_1514
	.type	s390_1514, @function
s390_1514:
.LFB1580:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17053
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17053:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1580:
	.size	s390_1514, .-s390_1514
	.p2align 4,,15
	.globl	s390_1515
	.type	s390_1515, @function
s390_1515:
.LFB1581:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17057
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17057:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1581:
	.size	s390_1515, .-s390_1515
	.p2align 4,,15
	.globl	s390_1516
	.type	s390_1516, @function
s390_1516:
.LFB1582:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17061
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17061:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1582:
	.size	s390_1516, .-s390_1516
	.p2align 4,,15
	.globl	s390_1517
	.type	s390_1517, @function
s390_1517:
.LFB1583:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17065
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17065:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1583:
	.size	s390_1517, .-s390_1517
	.p2align 4,,15
	.globl	s390_1518
	.type	s390_1518, @function
s390_1518:
.LFB1584:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17069
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17069:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1584:
	.size	s390_1518, .-s390_1518
	.p2align 4,,15
	.globl	s390_1519
	.type	s390_1519, @function
s390_1519:
.LFB1585:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17073
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17073:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1585:
	.size	s390_1519, .-s390_1519
	.p2align 4,,15
	.globl	s390_151A
	.type	s390_151A, @function
s390_151A:
.LFB1586:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17077
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17077:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1586:
	.size	s390_151A, .-s390_151A
	.p2align 4,,15
	.globl	s390_151B
	.type	s390_151B, @function
s390_151B:
.LFB1587:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17081
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17081:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1587:
	.size	s390_151B, .-s390_151B
	.p2align 4,,15
	.globl	s390_151C
	.type	s390_151C, @function
s390_151C:
.LFB1588:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17085
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17085:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1588:
	.size	s390_151C, .-s390_151C
	.p2align 4,,15
	.globl	s390_151D
	.type	s390_151D, @function
s390_151D:
.LFB1589:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17089
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17089:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1589:
	.size	s390_151D, .-s390_151D
	.p2align 4,,15
	.globl	s390_151E
	.type	s390_151E, @function
s390_151E:
.LFB1590:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17093
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17093:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1590:
	.size	s390_151E, .-s390_151E
	.p2align 4,,15
	.globl	s390_151F
	.type	s390_151F, @function
s390_151F:
.LFB1591:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17097
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17097:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1591:
	.size	s390_151F, .-s390_151F
	.p2align 4,,15
	.globl	s390_1520
	.type	s390_1520, @function
s390_1520:
.LFB1592:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17101
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17101:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1592:
	.size	s390_1520, .-s390_1520
	.p2align 4,,15
	.globl	s390_1521
	.type	s390_1521, @function
s390_1521:
.LFB1593:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17105
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17105:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1593:
	.size	s390_1521, .-s390_1521
	.p2align 4,,15
	.globl	s390_1522
	.type	s390_1522, @function
s390_1522:
.LFB1594:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1594:
	.size	s390_1522, .-s390_1522
	.p2align 4,,15
	.globl	s390_1523
	.type	s390_1523, @function
s390_1523:
.LFB1595:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17110
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17110:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1595:
	.size	s390_1523, .-s390_1523
	.p2align 4,,15
	.globl	s390_1524
	.type	s390_1524, @function
s390_1524:
.LFB1596:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17114
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17114:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1596:
	.size	s390_1524, .-s390_1524
	.p2align 4,,15
	.globl	s390_1525
	.type	s390_1525, @function
s390_1525:
.LFB1597:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17118
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17118:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1597:
	.size	s390_1525, .-s390_1525
	.p2align 4,,15
	.globl	s390_1526
	.type	s390_1526, @function
s390_1526:
.LFB1598:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17122
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17122:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1598:
	.size	s390_1526, .-s390_1526
	.p2align 4,,15
	.globl	s390_1527
	.type	s390_1527, @function
s390_1527:
.LFB1599:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17126
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17126:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1599:
	.size	s390_1527, .-s390_1527
	.p2align 4,,15
	.globl	s390_1528
	.type	s390_1528, @function
s390_1528:
.LFB1600:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17130
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17130:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1600:
	.size	s390_1528, .-s390_1528
	.p2align 4,,15
	.globl	s390_1529
	.type	s390_1529, @function
s390_1529:
.LFB1601:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17134
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17134:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1601:
	.size	s390_1529, .-s390_1529
	.p2align 4,,15
	.globl	s390_152A
	.type	s390_152A, @function
s390_152A:
.LFB1602:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17138
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17138:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1602:
	.size	s390_152A, .-s390_152A
	.p2align 4,,15
	.globl	s390_152B
	.type	s390_152B, @function
s390_152B:
.LFB1603:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17142
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17142:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1603:
	.size	s390_152B, .-s390_152B
	.p2align 4,,15
	.globl	s390_152C
	.type	s390_152C, @function
s390_152C:
.LFB1604:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17146
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17146:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1604:
	.size	s390_152C, .-s390_152C
	.p2align 4,,15
	.globl	s390_152D
	.type	s390_152D, @function
s390_152D:
.LFB1605:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17150
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17150:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1605:
	.size	s390_152D, .-s390_152D
	.p2align 4,,15
	.globl	s390_152E
	.type	s390_152E, @function
s390_152E:
.LFB1606:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17154
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17154:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1606:
	.size	s390_152E, .-s390_152E
	.p2align 4,,15
	.globl	s390_152F
	.type	s390_152F, @function
s390_152F:
.LFB1607:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17158
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17158:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1607:
	.size	s390_152F, .-s390_152F
	.p2align 4,,15
	.globl	s390_1530
	.type	s390_1530, @function
s390_1530:
.LFB1608:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17162
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17162:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1608:
	.size	s390_1530, .-s390_1530
	.p2align 4,,15
	.globl	s390_1531
	.type	s390_1531, @function
s390_1531:
.LFB1609:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17166
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17166:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1609:
	.size	s390_1531, .-s390_1531
	.p2align 4,,15
	.globl	s390_1532
	.type	s390_1532, @function
s390_1532:
.LFB1610:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17170
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17170:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1610:
	.size	s390_1532, .-s390_1532
	.p2align 4,,15
	.globl	s390_1533
	.type	s390_1533, @function
s390_1533:
.LFB1611:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1611:
	.size	s390_1533, .-s390_1533
	.p2align 4,,15
	.globl	s390_1534
	.type	s390_1534, @function
s390_1534:
.LFB1612:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17175
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17175:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1612:
	.size	s390_1534, .-s390_1534
	.p2align 4,,15
	.globl	s390_1535
	.type	s390_1535, @function
s390_1535:
.LFB1613:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17179
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17179:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1613:
	.size	s390_1535, .-s390_1535
	.p2align 4,,15
	.globl	s390_1536
	.type	s390_1536, @function
s390_1536:
.LFB1614:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17183
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17183:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1614:
	.size	s390_1536, .-s390_1536
	.p2align 4,,15
	.globl	s390_1537
	.type	s390_1537, @function
s390_1537:
.LFB1615:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17187
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17187:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1615:
	.size	s390_1537, .-s390_1537
	.p2align 4,,15
	.globl	s390_1538
	.type	s390_1538, @function
s390_1538:
.LFB1616:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17191
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17191:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1616:
	.size	s390_1538, .-s390_1538
	.p2align 4,,15
	.globl	s390_1539
	.type	s390_1539, @function
s390_1539:
.LFB1617:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17195
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17195:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1617:
	.size	s390_1539, .-s390_1539
	.p2align 4,,15
	.globl	s390_153A
	.type	s390_153A, @function
s390_153A:
.LFB1618:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17199
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17199:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1618:
	.size	s390_153A, .-s390_153A
	.p2align 4,,15
	.globl	s390_153B
	.type	s390_153B, @function
s390_153B:
.LFB1619:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17203
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17203:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1619:
	.size	s390_153B, .-s390_153B
	.p2align 4,,15
	.globl	s390_153C
	.type	s390_153C, @function
s390_153C:
.LFB1620:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17207
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17207:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1620:
	.size	s390_153C, .-s390_153C
	.p2align 4,,15
	.globl	s390_153D
	.type	s390_153D, @function
s390_153D:
.LFB1621:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17211
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17211:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1621:
	.size	s390_153D, .-s390_153D
	.p2align 4,,15
	.globl	s390_153E
	.type	s390_153E, @function
s390_153E:
.LFB1622:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17215
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17215:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1622:
	.size	s390_153E, .-s390_153E
	.p2align 4,,15
	.globl	s390_153F
	.type	s390_153F, @function
s390_153F:
.LFB1623:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17219
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17219:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1623:
	.size	s390_153F, .-s390_153F
	.p2align 4,,15
	.globl	s390_1540
	.type	s390_1540, @function
s390_1540:
.LFB1624:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17223
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17223:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1624:
	.size	s390_1540, .-s390_1540
	.p2align 4,,15
	.globl	s390_1541
	.type	s390_1541, @function
s390_1541:
.LFB1625:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17227
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17227:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1625:
	.size	s390_1541, .-s390_1541
	.p2align 4,,15
	.globl	s390_1542
	.type	s390_1542, @function
s390_1542:
.LFB1626:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17231
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17231:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1626:
	.size	s390_1542, .-s390_1542
	.p2align 4,,15
	.globl	s390_1543
	.type	s390_1543, @function
s390_1543:
.LFB1627:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17235
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17235:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1627:
	.size	s390_1543, .-s390_1543
	.p2align 4,,15
	.globl	s390_1544
	.type	s390_1544, @function
s390_1544:
.LFB1628:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1628:
	.size	s390_1544, .-s390_1544
	.p2align 4,,15
	.globl	s390_1545
	.type	s390_1545, @function
s390_1545:
.LFB1629:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17240
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17240:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1629:
	.size	s390_1545, .-s390_1545
	.p2align 4,,15
	.globl	s390_1546
	.type	s390_1546, @function
s390_1546:
.LFB1630:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17244
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17244:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1630:
	.size	s390_1546, .-s390_1546
	.p2align 4,,15
	.globl	s390_1547
	.type	s390_1547, @function
s390_1547:
.LFB1631:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17248
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17248:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1631:
	.size	s390_1547, .-s390_1547
	.p2align 4,,15
	.globl	s390_1548
	.type	s390_1548, @function
s390_1548:
.LFB1632:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17252
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17252:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1632:
	.size	s390_1548, .-s390_1548
	.p2align 4,,15
	.globl	s390_1549
	.type	s390_1549, @function
s390_1549:
.LFB1633:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17256
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17256:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1633:
	.size	s390_1549, .-s390_1549
	.p2align 4,,15
	.globl	s390_154A
	.type	s390_154A, @function
s390_154A:
.LFB1634:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17260
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17260:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1634:
	.size	s390_154A, .-s390_154A
	.p2align 4,,15
	.globl	s390_154B
	.type	s390_154B, @function
s390_154B:
.LFB1635:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17264
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17264:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1635:
	.size	s390_154B, .-s390_154B
	.p2align 4,,15
	.globl	s390_154C
	.type	s390_154C, @function
s390_154C:
.LFB1636:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17268
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17268:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1636:
	.size	s390_154C, .-s390_154C
	.p2align 4,,15
	.globl	s390_154D
	.type	s390_154D, @function
s390_154D:
.LFB1637:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17272
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17272:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1637:
	.size	s390_154D, .-s390_154D
	.p2align 4,,15
	.globl	s390_154E
	.type	s390_154E, @function
s390_154E:
.LFB1638:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17276
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17276:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1638:
	.size	s390_154E, .-s390_154E
	.p2align 4,,15
	.globl	s390_154F
	.type	s390_154F, @function
s390_154F:
.LFB1639:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17280
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17280:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1639:
	.size	s390_154F, .-s390_154F
	.p2align 4,,15
	.globl	s390_1550
	.type	s390_1550, @function
s390_1550:
.LFB1640:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17284
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17284:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1640:
	.size	s390_1550, .-s390_1550
	.p2align 4,,15
	.globl	s390_1551
	.type	s390_1551, @function
s390_1551:
.LFB1641:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17288
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17288:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1641:
	.size	s390_1551, .-s390_1551
	.p2align 4,,15
	.globl	s390_1552
	.type	s390_1552, @function
s390_1552:
.LFB1642:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17292
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17292:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1642:
	.size	s390_1552, .-s390_1552
	.p2align 4,,15
	.globl	s390_1553
	.type	s390_1553, @function
s390_1553:
.LFB1643:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17296
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17296:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1643:
	.size	s390_1553, .-s390_1553
	.p2align 4,,15
	.globl	s390_1554
	.type	s390_1554, @function
s390_1554:
.LFB1644:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17300
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17300:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1644:
	.size	s390_1554, .-s390_1554
	.p2align 4,,15
	.globl	s390_1555
	.type	s390_1555, @function
s390_1555:
.LFB1645:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1645:
	.size	s390_1555, .-s390_1555
	.p2align 4,,15
	.globl	s390_1556
	.type	s390_1556, @function
s390_1556:
.LFB1646:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17305
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17305:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1646:
	.size	s390_1556, .-s390_1556
	.p2align 4,,15
	.globl	s390_1557
	.type	s390_1557, @function
s390_1557:
.LFB1647:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17309
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17309:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1647:
	.size	s390_1557, .-s390_1557
	.p2align 4,,15
	.globl	s390_1558
	.type	s390_1558, @function
s390_1558:
.LFB1648:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17313
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17313:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1648:
	.size	s390_1558, .-s390_1558
	.p2align 4,,15
	.globl	s390_1559
	.type	s390_1559, @function
s390_1559:
.LFB1649:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17317
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17317:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1649:
	.size	s390_1559, .-s390_1559
	.p2align 4,,15
	.globl	s390_155A
	.type	s390_155A, @function
s390_155A:
.LFB1650:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17321
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17321:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1650:
	.size	s390_155A, .-s390_155A
	.p2align 4,,15
	.globl	s390_155B
	.type	s390_155B, @function
s390_155B:
.LFB1651:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17325
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17325:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1651:
	.size	s390_155B, .-s390_155B
	.p2align 4,,15
	.globl	s390_155C
	.type	s390_155C, @function
s390_155C:
.LFB1652:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17329
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17329:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1652:
	.size	s390_155C, .-s390_155C
	.p2align 4,,15
	.globl	s390_155D
	.type	s390_155D, @function
s390_155D:
.LFB1653:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17333
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17333:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1653:
	.size	s390_155D, .-s390_155D
	.p2align 4,,15
	.globl	s390_155E
	.type	s390_155E, @function
s390_155E:
.LFB1654:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17337
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17337:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1654:
	.size	s390_155E, .-s390_155E
	.p2align 4,,15
	.globl	s390_155F
	.type	s390_155F, @function
s390_155F:
.LFB1655:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17341
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17341:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1655:
	.size	s390_155F, .-s390_155F
	.p2align 4,,15
	.globl	s390_1560
	.type	s390_1560, @function
s390_1560:
.LFB1656:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17345
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17345:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1656:
	.size	s390_1560, .-s390_1560
	.p2align 4,,15
	.globl	s390_1561
	.type	s390_1561, @function
s390_1561:
.LFB1657:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17349
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17349:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1657:
	.size	s390_1561, .-s390_1561
	.p2align 4,,15
	.globl	s390_1562
	.type	s390_1562, @function
s390_1562:
.LFB1658:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17353
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17353:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1658:
	.size	s390_1562, .-s390_1562
	.p2align 4,,15
	.globl	s390_1563
	.type	s390_1563, @function
s390_1563:
.LFB1659:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17357
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17357:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1659:
	.size	s390_1563, .-s390_1563
	.p2align 4,,15
	.globl	s390_1564
	.type	s390_1564, @function
s390_1564:
.LFB1660:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17361
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17361:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1660:
	.size	s390_1564, .-s390_1564
	.p2align 4,,15
	.globl	s390_1565
	.type	s390_1565, @function
s390_1565:
.LFB1661:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17365
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17365:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1661:
	.size	s390_1565, .-s390_1565
	.p2align 4,,15
	.globl	s390_1566
	.type	s390_1566, @function
s390_1566:
.LFB1662:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1662:
	.size	s390_1566, .-s390_1566
	.p2align 4,,15
	.globl	s390_1567
	.type	s390_1567, @function
s390_1567:
.LFB1663:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17370
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17370:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1663:
	.size	s390_1567, .-s390_1567
	.p2align 4,,15
	.globl	s390_1568
	.type	s390_1568, @function
s390_1568:
.LFB1664:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17374
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17374:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1664:
	.size	s390_1568, .-s390_1568
	.p2align 4,,15
	.globl	s390_1569
	.type	s390_1569, @function
s390_1569:
.LFB1665:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17378
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17378:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1665:
	.size	s390_1569, .-s390_1569
	.p2align 4,,15
	.globl	s390_156A
	.type	s390_156A, @function
s390_156A:
.LFB1666:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17382
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17382:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1666:
	.size	s390_156A, .-s390_156A
	.p2align 4,,15
	.globl	s390_156B
	.type	s390_156B, @function
s390_156B:
.LFB1667:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17386
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17386:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1667:
	.size	s390_156B, .-s390_156B
	.p2align 4,,15
	.globl	s390_156C
	.type	s390_156C, @function
s390_156C:
.LFB1668:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17390
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17390:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1668:
	.size	s390_156C, .-s390_156C
	.p2align 4,,15
	.globl	s390_156D
	.type	s390_156D, @function
s390_156D:
.LFB1669:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17394
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17394:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1669:
	.size	s390_156D, .-s390_156D
	.p2align 4,,15
	.globl	s390_156E
	.type	s390_156E, @function
s390_156E:
.LFB1670:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17398
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17398:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1670:
	.size	s390_156E, .-s390_156E
	.p2align 4,,15
	.globl	s390_156F
	.type	s390_156F, @function
s390_156F:
.LFB1671:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17402
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17402:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1671:
	.size	s390_156F, .-s390_156F
	.p2align 4,,15
	.globl	s390_1570
	.type	s390_1570, @function
s390_1570:
.LFB1672:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17406
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17406:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1672:
	.size	s390_1570, .-s390_1570
	.p2align 4,,15
	.globl	s390_1571
	.type	s390_1571, @function
s390_1571:
.LFB1673:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17410
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17410:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1673:
	.size	s390_1571, .-s390_1571
	.p2align 4,,15
	.globl	s390_1572
	.type	s390_1572, @function
s390_1572:
.LFB1674:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17414
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17414:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1674:
	.size	s390_1572, .-s390_1572
	.p2align 4,,15
	.globl	s390_1573
	.type	s390_1573, @function
s390_1573:
.LFB1675:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17418
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17418:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1675:
	.size	s390_1573, .-s390_1573
	.p2align 4,,15
	.globl	s390_1574
	.type	s390_1574, @function
s390_1574:
.LFB1676:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17422
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17422:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1676:
	.size	s390_1574, .-s390_1574
	.p2align 4,,15
	.globl	s390_1575
	.type	s390_1575, @function
s390_1575:
.LFB1677:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17426
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17426:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1677:
	.size	s390_1575, .-s390_1575
	.p2align 4,,15
	.globl	s390_1576
	.type	s390_1576, @function
s390_1576:
.LFB1678:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17430
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17430:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1678:
	.size	s390_1576, .-s390_1576
	.p2align 4,,15
	.globl	s390_1577
	.type	s390_1577, @function
s390_1577:
.LFB1679:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1679:
	.size	s390_1577, .-s390_1577
	.p2align 4,,15
	.globl	s390_1578
	.type	s390_1578, @function
s390_1578:
.LFB1680:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17435
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17435:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1680:
	.size	s390_1578, .-s390_1578
	.p2align 4,,15
	.globl	s390_1579
	.type	s390_1579, @function
s390_1579:
.LFB1681:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17439
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17439:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1681:
	.size	s390_1579, .-s390_1579
	.p2align 4,,15
	.globl	s390_157A
	.type	s390_157A, @function
s390_157A:
.LFB1682:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17443
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17443:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1682:
	.size	s390_157A, .-s390_157A
	.p2align 4,,15
	.globl	s390_157B
	.type	s390_157B, @function
s390_157B:
.LFB1683:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17447
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17447:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1683:
	.size	s390_157B, .-s390_157B
	.p2align 4,,15
	.globl	s390_157C
	.type	s390_157C, @function
s390_157C:
.LFB1684:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17451
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17451:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1684:
	.size	s390_157C, .-s390_157C
	.p2align 4,,15
	.globl	s390_157D
	.type	s390_157D, @function
s390_157D:
.LFB1685:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17455
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17455:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1685:
	.size	s390_157D, .-s390_157D
	.p2align 4,,15
	.globl	s390_157E
	.type	s390_157E, @function
s390_157E:
.LFB1686:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17459
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17459:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1686:
	.size	s390_157E, .-s390_157E
	.p2align 4,,15
	.globl	s390_157F
	.type	s390_157F, @function
s390_157F:
.LFB1687:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17463
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17463:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1687:
	.size	s390_157F, .-s390_157F
	.p2align 4,,15
	.globl	s390_1580
	.type	s390_1580, @function
s390_1580:
.LFB1688:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17467
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17467:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1688:
	.size	s390_1580, .-s390_1580
	.p2align 4,,15
	.globl	s390_1581
	.type	s390_1581, @function
s390_1581:
.LFB1689:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17471
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17471:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1689:
	.size	s390_1581, .-s390_1581
	.p2align 4,,15
	.globl	s390_1582
	.type	s390_1582, @function
s390_1582:
.LFB1690:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17475
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17475:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1690:
	.size	s390_1582, .-s390_1582
	.p2align 4,,15
	.globl	s390_1583
	.type	s390_1583, @function
s390_1583:
.LFB1691:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17479
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17479:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1691:
	.size	s390_1583, .-s390_1583
	.p2align 4,,15
	.globl	s390_1584
	.type	s390_1584, @function
s390_1584:
.LFB1692:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17483
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17483:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1692:
	.size	s390_1584, .-s390_1584
	.p2align 4,,15
	.globl	s390_1585
	.type	s390_1585, @function
s390_1585:
.LFB1693:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17487
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17487:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1693:
	.size	s390_1585, .-s390_1585
	.p2align 4,,15
	.globl	s390_1586
	.type	s390_1586, @function
s390_1586:
.LFB1694:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17491
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17491:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1694:
	.size	s390_1586, .-s390_1586
	.p2align 4,,15
	.globl	s390_1587
	.type	s390_1587, @function
s390_1587:
.LFB1695:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17495
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17495:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1695:
	.size	s390_1587, .-s390_1587
	.p2align 4,,15
	.globl	s390_1588
	.type	s390_1588, @function
s390_1588:
.LFB1696:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1696:
	.size	s390_1588, .-s390_1588
	.p2align 4,,15
	.globl	s390_1589
	.type	s390_1589, @function
s390_1589:
.LFB1697:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17500
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17500:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1697:
	.size	s390_1589, .-s390_1589
	.p2align 4,,15
	.globl	s390_158A
	.type	s390_158A, @function
s390_158A:
.LFB1698:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17504
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17504:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1698:
	.size	s390_158A, .-s390_158A
	.p2align 4,,15
	.globl	s390_158B
	.type	s390_158B, @function
s390_158B:
.LFB1699:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17508
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17508:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1699:
	.size	s390_158B, .-s390_158B
	.p2align 4,,15
	.globl	s390_158C
	.type	s390_158C, @function
s390_158C:
.LFB1700:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17512
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17512:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1700:
	.size	s390_158C, .-s390_158C
	.p2align 4,,15
	.globl	s390_158D
	.type	s390_158D, @function
s390_158D:
.LFB1701:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17516
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17516:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1701:
	.size	s390_158D, .-s390_158D
	.p2align 4,,15
	.globl	s390_158E
	.type	s390_158E, @function
s390_158E:
.LFB1702:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17520
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17520:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1702:
	.size	s390_158E, .-s390_158E
	.p2align 4,,15
	.globl	s390_158F
	.type	s390_158F, @function
s390_158F:
.LFB1703:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17524
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17524:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1703:
	.size	s390_158F, .-s390_158F
	.p2align 4,,15
	.globl	s390_1590
	.type	s390_1590, @function
s390_1590:
.LFB1704:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17528
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17528:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1704:
	.size	s390_1590, .-s390_1590
	.p2align 4,,15
	.globl	s390_1591
	.type	s390_1591, @function
s390_1591:
.LFB1705:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17532
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17532:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1705:
	.size	s390_1591, .-s390_1591
	.p2align 4,,15
	.globl	s390_1592
	.type	s390_1592, @function
s390_1592:
.LFB1706:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17536
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17536:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1706:
	.size	s390_1592, .-s390_1592
	.p2align 4,,15
	.globl	s390_1593
	.type	s390_1593, @function
s390_1593:
.LFB1707:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17540
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17540:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1707:
	.size	s390_1593, .-s390_1593
	.p2align 4,,15
	.globl	s390_1594
	.type	s390_1594, @function
s390_1594:
.LFB1708:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17544
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17544:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1708:
	.size	s390_1594, .-s390_1594
	.p2align 4,,15
	.globl	s390_1595
	.type	s390_1595, @function
s390_1595:
.LFB1709:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17548
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17548:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1709:
	.size	s390_1595, .-s390_1595
	.p2align 4,,15
	.globl	s390_1596
	.type	s390_1596, @function
s390_1596:
.LFB1710:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17552
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17552:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1710:
	.size	s390_1596, .-s390_1596
	.p2align 4,,15
	.globl	s390_1597
	.type	s390_1597, @function
s390_1597:
.LFB1711:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17556
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17556:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1711:
	.size	s390_1597, .-s390_1597
	.p2align 4,,15
	.globl	s390_1598
	.type	s390_1598, @function
s390_1598:
.LFB1712:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17560
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17560:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1712:
	.size	s390_1598, .-s390_1598
	.p2align 4,,15
	.globl	s390_1599
	.type	s390_1599, @function
s390_1599:
.LFB1713:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1713:
	.size	s390_1599, .-s390_1599
	.p2align 4,,15
	.globl	s390_159A
	.type	s390_159A, @function
s390_159A:
.LFB1714:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17565
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17565:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1714:
	.size	s390_159A, .-s390_159A
	.p2align 4,,15
	.globl	s390_159B
	.type	s390_159B, @function
s390_159B:
.LFB1715:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17569
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17569:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1715:
	.size	s390_159B, .-s390_159B
	.p2align 4,,15
	.globl	s390_159C
	.type	s390_159C, @function
s390_159C:
.LFB1716:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17573
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17573:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1716:
	.size	s390_159C, .-s390_159C
	.p2align 4,,15
	.globl	s390_159D
	.type	s390_159D, @function
s390_159D:
.LFB1717:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17577
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17577:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1717:
	.size	s390_159D, .-s390_159D
	.p2align 4,,15
	.globl	s390_159E
	.type	s390_159E, @function
s390_159E:
.LFB1718:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17581
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17581:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1718:
	.size	s390_159E, .-s390_159E
	.p2align 4,,15
	.globl	s390_159F
	.type	s390_159F, @function
s390_159F:
.LFB1719:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17585
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17585:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1719:
	.size	s390_159F, .-s390_159F
	.p2align 4,,15
	.globl	s390_15A0
	.type	s390_15A0, @function
s390_15A0:
.LFB1720:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17589
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17589:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1720:
	.size	s390_15A0, .-s390_15A0
	.p2align 4,,15
	.globl	s390_15A1
	.type	s390_15A1, @function
s390_15A1:
.LFB1721:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17593
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17593:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1721:
	.size	s390_15A1, .-s390_15A1
	.p2align 4,,15
	.globl	s390_15A2
	.type	s390_15A2, @function
s390_15A2:
.LFB1722:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17597
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17597:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1722:
	.size	s390_15A2, .-s390_15A2
	.p2align 4,,15
	.globl	s390_15A3
	.type	s390_15A3, @function
s390_15A3:
.LFB1723:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17601
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17601:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1723:
	.size	s390_15A3, .-s390_15A3
	.p2align 4,,15
	.globl	s390_15A4
	.type	s390_15A4, @function
s390_15A4:
.LFB1724:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17605
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17605:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1724:
	.size	s390_15A4, .-s390_15A4
	.p2align 4,,15
	.globl	s390_15A5
	.type	s390_15A5, @function
s390_15A5:
.LFB1725:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17609
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17609:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1725:
	.size	s390_15A5, .-s390_15A5
	.p2align 4,,15
	.globl	s390_15A6
	.type	s390_15A6, @function
s390_15A6:
.LFB1726:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17613
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17613:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1726:
	.size	s390_15A6, .-s390_15A6
	.p2align 4,,15
	.globl	s390_15A7
	.type	s390_15A7, @function
s390_15A7:
.LFB1727:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17617
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17617:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1727:
	.size	s390_15A7, .-s390_15A7
	.p2align 4,,15
	.globl	s390_15A8
	.type	s390_15A8, @function
s390_15A8:
.LFB1728:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17621
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17621:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1728:
	.size	s390_15A8, .-s390_15A8
	.p2align 4,,15
	.globl	s390_15A9
	.type	s390_15A9, @function
s390_15A9:
.LFB1729:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17625
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17625:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1729:
	.size	s390_15A9, .-s390_15A9
	.p2align 4,,15
	.globl	s390_15AA
	.type	s390_15AA, @function
s390_15AA:
.LFB1730:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1730:
	.size	s390_15AA, .-s390_15AA
	.p2align 4,,15
	.globl	s390_15AB
	.type	s390_15AB, @function
s390_15AB:
.LFB1731:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17630
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17630:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1731:
	.size	s390_15AB, .-s390_15AB
	.p2align 4,,15
	.globl	s390_15AC
	.type	s390_15AC, @function
s390_15AC:
.LFB1732:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17634
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17634:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1732:
	.size	s390_15AC, .-s390_15AC
	.p2align 4,,15
	.globl	s390_15AD
	.type	s390_15AD, @function
s390_15AD:
.LFB1733:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17638
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17638:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1733:
	.size	s390_15AD, .-s390_15AD
	.p2align 4,,15
	.globl	s390_15AE
	.type	s390_15AE, @function
s390_15AE:
.LFB1734:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17642
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17642:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1734:
	.size	s390_15AE, .-s390_15AE
	.p2align 4,,15
	.globl	s390_15AF
	.type	s390_15AF, @function
s390_15AF:
.LFB1735:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17646
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17646:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1735:
	.size	s390_15AF, .-s390_15AF
	.p2align 4,,15
	.globl	s390_15B0
	.type	s390_15B0, @function
s390_15B0:
.LFB1736:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17650
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17650:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1736:
	.size	s390_15B0, .-s390_15B0
	.p2align 4,,15
	.globl	s390_15B1
	.type	s390_15B1, @function
s390_15B1:
.LFB1737:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17654
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17654:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1737:
	.size	s390_15B1, .-s390_15B1
	.p2align 4,,15
	.globl	s390_15B2
	.type	s390_15B2, @function
s390_15B2:
.LFB1738:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17658
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17658:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1738:
	.size	s390_15B2, .-s390_15B2
	.p2align 4,,15
	.globl	s390_15B3
	.type	s390_15B3, @function
s390_15B3:
.LFB1739:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17662
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17662:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1739:
	.size	s390_15B3, .-s390_15B3
	.p2align 4,,15
	.globl	s390_15B4
	.type	s390_15B4, @function
s390_15B4:
.LFB1740:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17666
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17666:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1740:
	.size	s390_15B4, .-s390_15B4
	.p2align 4,,15
	.globl	s390_15B5
	.type	s390_15B5, @function
s390_15B5:
.LFB1741:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17670
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17670:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1741:
	.size	s390_15B5, .-s390_15B5
	.p2align 4,,15
	.globl	s390_15B6
	.type	s390_15B6, @function
s390_15B6:
.LFB1742:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17674
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17674:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1742:
	.size	s390_15B6, .-s390_15B6
	.p2align 4,,15
	.globl	s390_15B7
	.type	s390_15B7, @function
s390_15B7:
.LFB1743:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17678
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17678:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1743:
	.size	s390_15B7, .-s390_15B7
	.p2align 4,,15
	.globl	s390_15B8
	.type	s390_15B8, @function
s390_15B8:
.LFB1744:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17682
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17682:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1744:
	.size	s390_15B8, .-s390_15B8
	.p2align 4,,15
	.globl	s390_15B9
	.type	s390_15B9, @function
s390_15B9:
.LFB1745:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17686
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17686:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1745:
	.size	s390_15B9, .-s390_15B9
	.p2align 4,,15
	.globl	s390_15BA
	.type	s390_15BA, @function
s390_15BA:
.LFB1746:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17690
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17690:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1746:
	.size	s390_15BA, .-s390_15BA
	.p2align 4,,15
	.globl	s390_15BB
	.type	s390_15BB, @function
s390_15BB:
.LFB1747:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1747:
	.size	s390_15BB, .-s390_15BB
	.p2align 4,,15
	.globl	s390_15BC
	.type	s390_15BC, @function
s390_15BC:
.LFB1748:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17695
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17695:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1748:
	.size	s390_15BC, .-s390_15BC
	.p2align 4,,15
	.globl	s390_15BD
	.type	s390_15BD, @function
s390_15BD:
.LFB1749:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17699
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17699:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1749:
	.size	s390_15BD, .-s390_15BD
	.p2align 4,,15
	.globl	s390_15BE
	.type	s390_15BE, @function
s390_15BE:
.LFB1750:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17703
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17703:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1750:
	.size	s390_15BE, .-s390_15BE
	.p2align 4,,15
	.globl	s390_15BF
	.type	s390_15BF, @function
s390_15BF:
.LFB1751:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17707
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17707:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1751:
	.size	s390_15BF, .-s390_15BF
	.p2align 4,,15
	.globl	s390_15C0
	.type	s390_15C0, @function
s390_15C0:
.LFB1752:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17711
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17711:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1752:
	.size	s390_15C0, .-s390_15C0
	.p2align 4,,15
	.globl	s390_15C1
	.type	s390_15C1, @function
s390_15C1:
.LFB1753:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17715
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17715:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1753:
	.size	s390_15C1, .-s390_15C1
	.p2align 4,,15
	.globl	s390_15C2
	.type	s390_15C2, @function
s390_15C2:
.LFB1754:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17719
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17719:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1754:
	.size	s390_15C2, .-s390_15C2
	.p2align 4,,15
	.globl	s390_15C3
	.type	s390_15C3, @function
s390_15C3:
.LFB1755:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17723
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17723:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1755:
	.size	s390_15C3, .-s390_15C3
	.p2align 4,,15
	.globl	s390_15C4
	.type	s390_15C4, @function
s390_15C4:
.LFB1756:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17727
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17727:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1756:
	.size	s390_15C4, .-s390_15C4
	.p2align 4,,15
	.globl	s390_15C5
	.type	s390_15C5, @function
s390_15C5:
.LFB1757:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17731
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17731:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1757:
	.size	s390_15C5, .-s390_15C5
	.p2align 4,,15
	.globl	s390_15C6
	.type	s390_15C6, @function
s390_15C6:
.LFB1758:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17735
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17735:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1758:
	.size	s390_15C6, .-s390_15C6
	.p2align 4,,15
	.globl	s390_15C7
	.type	s390_15C7, @function
s390_15C7:
.LFB1759:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17739
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17739:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1759:
	.size	s390_15C7, .-s390_15C7
	.p2align 4,,15
	.globl	s390_15C8
	.type	s390_15C8, @function
s390_15C8:
.LFB1760:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17743
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17743:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1760:
	.size	s390_15C8, .-s390_15C8
	.p2align 4,,15
	.globl	s390_15C9
	.type	s390_15C9, @function
s390_15C9:
.LFB1761:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17747
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17747:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1761:
	.size	s390_15C9, .-s390_15C9
	.p2align 4,,15
	.globl	s390_15CA
	.type	s390_15CA, @function
s390_15CA:
.LFB1762:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17751
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17751:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1762:
	.size	s390_15CA, .-s390_15CA
	.p2align 4,,15
	.globl	s390_15CB
	.type	s390_15CB, @function
s390_15CB:
.LFB1763:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17755
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17755:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1763:
	.size	s390_15CB, .-s390_15CB
	.p2align 4,,15
	.globl	s390_15CC
	.type	s390_15CC, @function
s390_15CC:
.LFB1764:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1764:
	.size	s390_15CC, .-s390_15CC
	.p2align 4,,15
	.globl	s390_15CD
	.type	s390_15CD, @function
s390_15CD:
.LFB1765:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17760
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17760:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1765:
	.size	s390_15CD, .-s390_15CD
	.p2align 4,,15
	.globl	s390_15CE
	.type	s390_15CE, @function
s390_15CE:
.LFB1766:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17764
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17764:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1766:
	.size	s390_15CE, .-s390_15CE
	.p2align 4,,15
	.globl	s390_15CF
	.type	s390_15CF, @function
s390_15CF:
.LFB1767:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17768
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17768:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1767:
	.size	s390_15CF, .-s390_15CF
	.p2align 4,,15
	.globl	s390_15D0
	.type	s390_15D0, @function
s390_15D0:
.LFB1768:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17772
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17772:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1768:
	.size	s390_15D0, .-s390_15D0
	.p2align 4,,15
	.globl	s390_15D1
	.type	s390_15D1, @function
s390_15D1:
.LFB1769:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17776
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17776:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1769:
	.size	s390_15D1, .-s390_15D1
	.p2align 4,,15
	.globl	s390_15D2
	.type	s390_15D2, @function
s390_15D2:
.LFB1770:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17780
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17780:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1770:
	.size	s390_15D2, .-s390_15D2
	.p2align 4,,15
	.globl	s390_15D3
	.type	s390_15D3, @function
s390_15D3:
.LFB1771:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17784
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17784:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1771:
	.size	s390_15D3, .-s390_15D3
	.p2align 4,,15
	.globl	s390_15D4
	.type	s390_15D4, @function
s390_15D4:
.LFB1772:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17788
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17788:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1772:
	.size	s390_15D4, .-s390_15D4
	.p2align 4,,15
	.globl	s390_15D5
	.type	s390_15D5, @function
s390_15D5:
.LFB1773:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17792
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17792:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1773:
	.size	s390_15D5, .-s390_15D5
	.p2align 4,,15
	.globl	s390_15D6
	.type	s390_15D6, @function
s390_15D6:
.LFB1774:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17796
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17796:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1774:
	.size	s390_15D6, .-s390_15D6
	.p2align 4,,15
	.globl	s390_15D7
	.type	s390_15D7, @function
s390_15D7:
.LFB1775:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17800
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17800:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1775:
	.size	s390_15D7, .-s390_15D7
	.p2align 4,,15
	.globl	s390_15D8
	.type	s390_15D8, @function
s390_15D8:
.LFB1776:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17804
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17804:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1776:
	.size	s390_15D8, .-s390_15D8
	.p2align 4,,15
	.globl	s390_15D9
	.type	s390_15D9, @function
s390_15D9:
.LFB1777:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17808
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17808:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1777:
	.size	s390_15D9, .-s390_15D9
	.p2align 4,,15
	.globl	s390_15DA
	.type	s390_15DA, @function
s390_15DA:
.LFB1778:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17812
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17812:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1778:
	.size	s390_15DA, .-s390_15DA
	.p2align 4,,15
	.globl	s390_15DB
	.type	s390_15DB, @function
s390_15DB:
.LFB1779:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17816
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17816:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1779:
	.size	s390_15DB, .-s390_15DB
	.p2align 4,,15
	.globl	s390_15DC
	.type	s390_15DC, @function
s390_15DC:
.LFB1780:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17820
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17820:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1780:
	.size	s390_15DC, .-s390_15DC
	.p2align 4,,15
	.globl	s390_15DD
	.type	s390_15DD, @function
s390_15DD:
.LFB1781:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1781:
	.size	s390_15DD, .-s390_15DD
	.p2align 4,,15
	.globl	s390_15DE
	.type	s390_15DE, @function
s390_15DE:
.LFB1782:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17825
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17825:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1782:
	.size	s390_15DE, .-s390_15DE
	.p2align 4,,15
	.globl	s390_15DF
	.type	s390_15DF, @function
s390_15DF:
.LFB1783:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17829
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17829:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1783:
	.size	s390_15DF, .-s390_15DF
	.p2align 4,,15
	.globl	s390_15E0
	.type	s390_15E0, @function
s390_15E0:
.LFB1784:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17833
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17833:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1784:
	.size	s390_15E0, .-s390_15E0
	.p2align 4,,15
	.globl	s390_15E1
	.type	s390_15E1, @function
s390_15E1:
.LFB1785:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17837
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17837:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1785:
	.size	s390_15E1, .-s390_15E1
	.p2align 4,,15
	.globl	s390_15E2
	.type	s390_15E2, @function
s390_15E2:
.LFB1786:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17841
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17841:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1786:
	.size	s390_15E2, .-s390_15E2
	.p2align 4,,15
	.globl	s390_15E3
	.type	s390_15E3, @function
s390_15E3:
.LFB1787:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17845
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17845:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1787:
	.size	s390_15E3, .-s390_15E3
	.p2align 4,,15
	.globl	s390_15E4
	.type	s390_15E4, @function
s390_15E4:
.LFB1788:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17849
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17849:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1788:
	.size	s390_15E4, .-s390_15E4
	.p2align 4,,15
	.globl	s390_15E5
	.type	s390_15E5, @function
s390_15E5:
.LFB1789:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17853
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17853:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1789:
	.size	s390_15E5, .-s390_15E5
	.p2align 4,,15
	.globl	s390_15E6
	.type	s390_15E6, @function
s390_15E6:
.LFB1790:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17857
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17857:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1790:
	.size	s390_15E6, .-s390_15E6
	.p2align 4,,15
	.globl	s390_15E7
	.type	s390_15E7, @function
s390_15E7:
.LFB1791:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17861
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17861:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1791:
	.size	s390_15E7, .-s390_15E7
	.p2align 4,,15
	.globl	s390_15E8
	.type	s390_15E8, @function
s390_15E8:
.LFB1792:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17865
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17865:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1792:
	.size	s390_15E8, .-s390_15E8
	.p2align 4,,15
	.globl	s390_15E9
	.type	s390_15E9, @function
s390_15E9:
.LFB1793:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17869
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17869:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1793:
	.size	s390_15E9, .-s390_15E9
	.p2align 4,,15
	.globl	s390_15EA
	.type	s390_15EA, @function
s390_15EA:
.LFB1794:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17873
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17873:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1794:
	.size	s390_15EA, .-s390_15EA
	.p2align 4,,15
	.globl	s390_15EB
	.type	s390_15EB, @function
s390_15EB:
.LFB1795:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17877
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17877:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1795:
	.size	s390_15EB, .-s390_15EB
	.p2align 4,,15
	.globl	s390_15EC
	.type	s390_15EC, @function
s390_15EC:
.LFB1796:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17881
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17881:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1796:
	.size	s390_15EC, .-s390_15EC
	.p2align 4,,15
	.globl	s390_15ED
	.type	s390_15ED, @function
s390_15ED:
.LFB1797:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17885
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17885:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1797:
	.size	s390_15ED, .-s390_15ED
	.p2align 4,,15
	.globl	s390_15EE
	.type	s390_15EE, @function
s390_15EE:
.LFB1798:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1798:
	.size	s390_15EE, .-s390_15EE
	.p2align 4,,15
	.globl	s390_15EF
	.type	s390_15EF, @function
s390_15EF:
.LFB1799:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17890
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17890:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1799:
	.size	s390_15EF, .-s390_15EF
	.p2align 4,,15
	.globl	s390_15F0
	.type	s390_15F0, @function
s390_15F0:
.LFB1800:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17894
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17894:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1800:
	.size	s390_15F0, .-s390_15F0
	.p2align 4,,15
	.globl	s390_15F1
	.type	s390_15F1, @function
s390_15F1:
.LFB1801:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17898
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17898:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1801:
	.size	s390_15F1, .-s390_15F1
	.p2align 4,,15
	.globl	s390_15F2
	.type	s390_15F2, @function
s390_15F2:
.LFB1802:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17902
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17902:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1802:
	.size	s390_15F2, .-s390_15F2
	.p2align 4,,15
	.globl	s390_15F3
	.type	s390_15F3, @function
s390_15F3:
.LFB1803:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17906
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17906:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1803:
	.size	s390_15F3, .-s390_15F3
	.p2align 4,,15
	.globl	s390_15F4
	.type	s390_15F4, @function
s390_15F4:
.LFB1804:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17910
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17910:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1804:
	.size	s390_15F4, .-s390_15F4
	.p2align 4,,15
	.globl	s390_15F5
	.type	s390_15F5, @function
s390_15F5:
.LFB1805:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17914
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17914:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1805:
	.size	s390_15F5, .-s390_15F5
	.p2align 4,,15
	.globl	s390_15F6
	.type	s390_15F6, @function
s390_15F6:
.LFB1806:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17918
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17918:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1806:
	.size	s390_15F6, .-s390_15F6
	.p2align 4,,15
	.globl	s390_15F7
	.type	s390_15F7, @function
s390_15F7:
.LFB1807:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17922
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17922:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1807:
	.size	s390_15F7, .-s390_15F7
	.p2align 4,,15
	.globl	s390_15F8
	.type	s390_15F8, @function
s390_15F8:
.LFB1808:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17926
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17926:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1808:
	.size	s390_15F8, .-s390_15F8
	.p2align 4,,15
	.globl	s390_15F9
	.type	s390_15F9, @function
s390_15F9:
.LFB1809:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17930
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17930:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1809:
	.size	s390_15F9, .-s390_15F9
	.p2align 4,,15
	.globl	s390_15FA
	.type	s390_15FA, @function
s390_15FA:
.LFB1810:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17934
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17934:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1810:
	.size	s390_15FA, .-s390_15FA
	.p2align 4,,15
	.globl	s390_15FB
	.type	s390_15FB, @function
s390_15FB:
.LFB1811:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17938
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17938:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1811:
	.size	s390_15FB, .-s390_15FB
	.p2align 4,,15
	.globl	s390_15FC
	.type	s390_15FC, @function
s390_15FC:
.LFB1812:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17942
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17942:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1812:
	.size	s390_15FC, .-s390_15FC
	.p2align 4,,15
	.globl	s390_15FD
	.type	s390_15FD, @function
s390_15FD:
.LFB1813:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17946
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17946:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1813:
	.size	s390_15FD, .-s390_15FD
	.p2align 4,,15
	.globl	s390_15FE
	.type	s390_15FE, @function
s390_15FE:
.LFB1814:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L17950
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L17950:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE1814:
	.size	s390_15FE, .-s390_15FE
	.p2align 4,,15
	.globl	s390_15FF
	.type	s390_15FF, @function
s390_15FF:
.LFB1815:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE1815:
	.size	s390_15FF, .-s390_15FF
	.p2align 4,,15
	.globl	s390_compare_logical_immediate
	.type	s390_compare_logical_immediate, @function
s390_compare_logical_immediate:
.LFB1816:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %ebp
	shrl	$12, %edx
	shrl	$16, %ebp
	andl	$4095, %eax
	movl	%edx, %esi
	andl	$15, %esi
	je	.L17955
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
	andl	120(%rbx), %eax
.L17955:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %ecx
	testl	%ecx, %ecx
	je	.L17956
	leal	1(%rcx), %edx
	movl	%eax, %edi
	shrl	$12, %edi
	movslq	%edx, %rdx
	andl	$1023, %edi
	leaq	(%rbx,%rdi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L17979
.L17957:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L17980
.L17958:
	movl	%eax, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L17956
	testb	$4, 46264(%rbx,%rdi)
	je	.L17956
	xorq	26808(%rcx), %rax
.L17959:
	cmpb	(%rax), %bpl
	movl	$1, %edx
	ja	.L17960
	sbbl	%edx, %edx
	andl	$2, %edx
.L17960:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L17979:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L17957
.L17956:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %edi
	call	s390_logical_to_main_l
	jmp	.L17959
.L17980:
	cmpb	43192(%rbx,%rdi), %dl
	je	.L17958
	.p2align 4,,4
	jmp	.L17956
	.cfi_endproc
.LFE1816:
	.size	s390_compare_logical_immediate, .-s390_compare_logical_immediate
	.p2align 4,,15
	.globl	s390_compare_logical_character
	.type	s390_compare_logical_character, @function
s390_compare_logical_character:
.LFB1817:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %r15d
	shrl	$16, %ebp
	shrl	$28, %r15d
	andl	$4095, %ebp
	testl	%r15d, %r15d
	je	.L17982
	movslq	%r15d, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	andl	120(%rsi), %ebp
.L17982:
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, 16(%rsp)
	je	.L17983
	cltq
	addl	192(%rbx,%rax,8), %r12d
	andl	120(%rbx), %r12d
.L17983:
	movzbl	1(%rdi), %eax
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	movl	%eax, 12(%rsp)
	leal	5(%r15), %eax
	cltq
	leaq	(%rbx,%rax,4), %r10
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L17984
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18163
.L17985:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L18164
.L17986:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L17984
	testb	$4, 46264(%rbx,%rcx)
	je	.L17984
	movl	%ebp, %r13d
	movzbl	%sil, %r8d
	xorq	26808(%rdx), %r13
.L17987:
	movl	16(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L17988
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L18165
.L17989:
	testb	%r8b, %r8b
	jne	.L18166
.L17990:
	movl	%r12d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L17988
	testb	$4, 46264(%rbx,%rcx)
	je	.L17988
	movl	%r12d, %r14d
	xorq	26808(%rdx), %r14
.L17991:
	movl	$2047, %eax
	movl	%ebp, %edx
	subl	12(%rsp), %eax
	andl	$2047, %edx
	cmpl	%eax, %edx
	ja	.L17992
	movl	%r12d, %edx
	andl	$2047, %edx
	cmpl	%edx, %eax
	jb	.L17993
	movl	12(%rsp), %edx
	movq	%r14, %rsi
	movq	%r13, %rdi
	addl	$1, %edx
	call	memcmp
.L17994:
	xorl	%edx, %edx
	testl	%eax, %eax
	jne	.L18032
.L18031:
	movb	%dl, 100(%rbx)
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L17992:
	.cfi_restore_state
	movl	$2048, %ecx
	movl	%ecx, %edi
	subl	%edx, %edi
	movl	%r12d, %edx
	andl	$2047, %edx
	movl	%edi, 24(%rsp)
	cmpl	%edx, %eax
	jb	.L18000
	movl	%edi, %r12d
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%r12, %rdx
	movq	%r10, 16(%rsp)
	call	memcmp
	movq	16(%rsp), %r10
	testl	%eax, %eax
	jne	.L18032
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L18167
	addl	24(%rsp), %ebp
	leal	1(%rax), %edx
	movslq	%edx, %rdx
	movl	%ebp, %edi
	andl	120(%rbx), %edi
	movl	%edi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L18168
.L18002:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L18169
.L18003:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L18001
	testb	$4, 46264(%rbx,%rcx)
	je	.L18001
	xorq	26808(%rax), %rdi
.L18004:
	movl	12(%rsp), %edx
	leaq	(%r14,%r12), %rsi
	addl	$1, %edx
	subl	24(%rsp), %edx
	call	memcmp
	xorl	%edx, %edx
	testl	%eax, %eax
	je	.L18031
	.p2align 4,,10
	.p2align 3
.L18032:
	sarl	$31, %eax
	leal	2(%rax), %edx
	jmp	.L18031
	.p2align 4,,10
	.p2align 3
.L18000:
	subl	%edx, %ecx
	cmpl	%ecx, 24(%rsp)
	movl	%ecx, 32(%rsp)
	je	.L18170
	movq	%r11, 56(%rsp)
	movq	%r10, 48(%rsp)
	jae	.L18014
	movl	24(%rsp), %eax
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%rax, %rdx
	movq	%rax, 40(%rsp)
	call	memcmp
	movq	48(%rsp), %r10
	testl	%eax, %eax
	movq	56(%rsp), %r11
	jne	.L18032
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L18171
	addl	24(%rsp), %ebp
	addl	$1, %eax
	movl	120(%rbx), %ecx
	cltq
	andl	%ebp, %ecx
	movl	%ecx, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18172
.L18016:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L18173
.L18017:
	movl	%ecx, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18015
	testb	$4, 46264(%rbx,%rsi)
	je	.L18015
	movl	%ecx, %ebp
	xorq	26808(%rdx), %rbp
.L18018:
	movl	32(%rsp), %edx
	movq	%rbp, %rdi
	movq	%r11, 48(%rsp)
	movq	40(%rsp), %rax
	subl	24(%rsp), %edx
	leaq	(%r14,%rax), %rsi
	call	memcmp
	testl	%eax, %eax
	jne	.L18032
	movq	48(%rsp), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18174
	addl	32(%rsp), %r12d
	addl	$1, %eax
	cltq
	movl	%r12d, %esi
	andl	120(%rbx), %esi
	movl	%esi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18175
.L18020:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L18176
.L18021:
	movl	%esi, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18019
	testb	$4, 46264(%rbx,%rcx)
	je	.L18019
	xorq	26808(%rdx), %rsi
.L18022:
	movl	32(%rsp), %eax
	movl	12(%rsp), %edx
	movl	%eax, %edi
	subq	40(%rsp), %rdi
	addl	$1, %edx
	subl	%eax, %edx
	addq	%rbp, %rdi
	call	memcmp
	jmp	.L17994
	.p2align 4,,10
	.p2align 3
.L17993:
	movl	$2048, %ebp
	movq	%r14, %rsi
	movq	%r13, %rdi
	subl	%edx, %ebp
	movq	%r11, 24(%rsp)
	movl	%ebp, %r15d
	movq	%r15, %rdx
	call	memcmp
	movq	24(%rsp), %r11
	testl	%eax, %eax
	jne	.L18032
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18177
	leal	1(%rax), %edx
	addl	%ebp, %r12d
	movl	%r12d, %esi
	movslq	%edx, %rdx
	andl	120(%rbx), %esi
	movl	%esi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L18178
.L17997:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L18179
.L17998:
	movl	%esi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L17996
	testb	$4, 46264(%rbx,%rcx)
	je	.L17996
	xorq	26808(%rax), %rsi
.L17999:
	movl	12(%rsp), %edx
	leaq	0(%r13,%r15), %rdi
	addl	$1, %edx
	subl	%ebp, %edx
	call	memcmp
	jmp	.L17994
	.p2align 4,,10
	.p2align 3
.L18170:
	movl	24(%rsp), %edx
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%r11, 40(%rsp)
	movq	%r10, 32(%rsp)
	call	memcmp
	movq	32(%rsp), %r10
	testl	%eax, %eax
	movq	40(%rsp), %r11
	jne	.L18032
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L18180
	addl	24(%rsp), %ebp
	leal	1(%rax), %ecx
	movl	120(%rbx), %r8d
	movslq	%ecx, %rcx
	movl	%ebp, %edx
	andl	%r8d, %edx
	movl	%edx, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L18181
.L18007:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L18182
.L18008:
	movl	%edx, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L18006
	testb	$4, 46264(%rbx,%rsi)
	je	.L18006
	movl	%edx, %ebp
	xorq	26808(%rax), %rbp
.L18009:
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18183
	addl	24(%rsp), %r12d
	leal	1(%rax), %edx
	movl	%r8d, %esi
	movslq	%edx, %rdx
	andl	%r12d, %esi
	movl	%esi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %r9d
	cmpl	%r9d, 320(%rbx,%rdx,8)
	jne	.L18184
.L18011:
	testb	%dil, %dil
	jne	.L18185
.L18012:
	movl	%esi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L18010
	testb	$4, 46264(%rbx,%rcx)
	je	.L18010
	xorq	26808(%rax), %rsi
.L18013:
	movl	12(%rsp), %edx
	movq	%rbp, %rdi
	addl	$1, %edx
	subl	24(%rsp), %edx
	call	memcmp
	jmp	.L17994
	.p2align 4,,10
	.p2align 3
.L18014:
	movl	32(%rsp), %eax
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%rax, %rdx
	movq	%rax, 40(%rsp)
	call	memcmp
	movq	48(%rsp), %r10
	testl	%eax, %eax
	movq	56(%rsp), %r11
	jne	.L18032
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18186
	addl	32(%rsp), %r12d
	addl	$1, %eax
	movl	120(%rbx), %ecx
	cltq
	andl	%r12d, %ecx
	movl	%ecx, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18187
.L18024:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L18188
.L18025:
	movl	%ecx, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18023
	testb	$4, 46264(%rbx,%rsi)
	je	.L18023
	movl	%ecx, %r12d
	xorq	26808(%rdx), %r12
.L18026:
	movl	24(%rsp), %edx
	movq	%r12, %rsi
	movq	%r10, 16(%rsp)
	movq	40(%rsp), %rax
	subl	32(%rsp), %edx
	leaq	0(%r13,%rax), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L18032
	movq	16(%rsp), %r10
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L18189
	addl	24(%rsp), %ebp
	addl	$1, %eax
	cltq
	movl	%ebp, %edi
	andl	120(%rbx), %edi
	movl	%edi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L18190
.L18028:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L18191
.L18029:
	movl	%edi, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18027
	testb	$4, 46264(%rbx,%rcx)
	je	.L18027
	xorq	26808(%rdx), %rdi
.L18030:
	movl	24(%rsp), %eax
	movl	12(%rsp), %edx
	movl	%eax, %esi
	subq	40(%rsp), %rsi
	addl	$1, %edx
	subl	%eax, %edx
	addq	%r12, %rsi
	call	memcmp
	jmp	.L17994
.L18165:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L17989
.L17988:
	movl	16(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movq	%r11, 32(%rsp)
	movq	%r10, 24(%rsp)
	call	s390_logical_to_main_l
	movq	32(%rsp), %r11
	movq	%rax, %r14
	movq	24(%rsp), %r10
	jmp	.L17991
.L18163:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L17985
.L17984:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	movq	%r10, 24(%rsp)
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r13
	movq	24(%rsp), %r10
	jmp	.L17987
.L18164:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L17986
	jmp	.L17984
.L18166:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L17990
	.p2align 4,,3
	jmp	.L17988
.L18177:
	addl	%ebp, %r12d
.L17996:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movl	16(%rsp), %esi
	movq	%rbx, %rdx
	movzbl	97(%rbx), %r8d
	andl	%r12d, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L17999
.L18167:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L18001:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	%r15d, %esi
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L18004
.L18189:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L18027:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	%r15d, %esi
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L18030
.L18186:
	movl	32(%rsp), %eax
	addl	%eax, %r12d
.L18023:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movq	%r10, 48(%rsp)
	movl	16(%rsp), %esi
	andl	%r12d, %edi
	call	s390_logical_to_main_l
	movq	48(%rsp), %r10
	movq	%rax, %r12
	jmp	.L18026
.L18174:
	movl	32(%rsp), %eax
	addl	%eax, %r12d
.L18019:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movl	16(%rsp), %esi
	movq	%rbx, %rdx
	movzbl	97(%rbx), %r8d
	andl	%r12d, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L18022
.L18171:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L18015:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movq	%r11, 48(%rsp)
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	48(%rsp), %r11
	movq	%rax, %rbp
	jmp	.L18018
.L18183:
	movl	24(%rsp), %eax
	addl	%eax, %r12d
.L18010:
	movl	16(%rsp), %esi
	andl	%r8d, %r12d
	movl	$1, %r9d
	movzbl	%dil, %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L18013
.L18185:
	cmpb	%dil, 43192(%rbx,%rcx)
	je	.L18012
	jmp	.L18010
.L18184:
	movzbl	44216(%rbx,%rcx), %r9d
	testb	%r9b, 1976(%rbx,%rdx)
	jne	.L18011
	jmp	.L18010
.L18180:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L18006:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movq	%r11, 32(%rsp)
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %edi
	movq	%rax, %rbp
	movl	120(%rbx), %r8d
	movq	32(%rsp), %r11
	jmp	.L18009
.L18182:
	cmpb	43192(%rbx,%rsi), %dil
	je	.L18008
	jmp	.L18006
.L18181:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L18007
	jmp	.L18006
.L18176:
	cmpb	43192(%rbx,%rcx), %al
	je	.L18021
	.p2align 4,,4
	jmp	.L18019
.L18173:
	cmpb	43192(%rbx,%rsi), %al
	je	.L18017
	.p2align 4,,4
	jmp	.L18015
.L18172:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L18016
	jmp	.L18015
.L18190:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L18028
	jmp	.L18027
.L18175:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L18020
	jmp	.L18019
.L18191:
	cmpb	43192(%rbx,%rcx), %al
	je	.L18029
	.p2align 4,,4
	jmp	.L18027
.L18188:
	cmpb	43192(%rbx,%rsi), %al
	je	.L18025
	.p2align 4,,4
	jmp	.L18023
.L18187:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L18024
	jmp	.L18023
.L18169:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L18003
	.p2align 4,,4
	jmp	.L18001
.L18168:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L18002
	jmp	.L18001
.L18179:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L17998
	.p2align 4,,4
	jmp	.L17996
.L18178:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L17997
	jmp	.L17996
	.cfi_endproc
.LFE1817:
	.size	s390_compare_logical_character, .-s390_compare_logical_character
	.p2align 4,,15
	.globl	s390_D500
	.type	s390_D500, @function
s390_D500:
.LFB1818:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L18193
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
	andl	120(%rbx), %eax
.L18193:
	movzbl	4(%rdi), %r13d
	movzbl	5(%rdi), %edx
	movl	%r13d, %ebp
	shrb	$4, %r13b
	andl	$15, %ebp
	movzbl	%r13b, %r13d
	sall	$8, %ebp
	orl	%edx, %ebp
	testl	%r13d, %r13d
	je	.L18194
	movslq	%r13d, %rdx
	addl	192(%rbx,%rdx,8), %ebp
	andl	120(%rbx), %ebp
.L18194:
	addq	$6, 136(%rbx)
	movb	$6, 130(%rbx)
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %ecx
	testl	%ecx, %ecx
	je	.L18195
	movl	%eax, %r8d
	addl	$1, %ecx
	shrl	$12, %r8d
	movslq	%ecx, %rcx
	andl	$1023, %r8d
	leaq	(%rbx,%r8,8), %rdi
	movl	2232(%rdi), %edx
	cmpl	%edx, 320(%rbx,%rcx,8)
	jne	.L18238
.L18196:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L18239
.L18197:
	movl	%eax, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdi), %ecx
	jne	.L18195
	testb	$4, 46264(%rbx,%r8)
	je	.L18195
	movl	%eax, %r12d
	movzbl	%dl, %r8d
	xorq	26808(%rdi), %r12
.L18198:
	leal	5(%r13), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L18199
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L18240
.L18200:
	testb	%r8b, %r8b
	jne	.L18241
.L18201:
	movl	%ebp, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L18199
	testb	$4, 46264(%rbx,%rcx)
	je	.L18199
	xorq	26808(%rax), %rbp
.L18202:
	movzbl	(%r12), %edx
	xorl	%ecx, %ecx
	movzbl	0(%rbp), %eax
	subl	%eax, %edx
	je	.L18203
	sarl	$31, %edx
	leal	2(%rdx), %ecx
.L18203:
	movb	%cl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L18238:
	.cfi_restore_state
	movzbl	44216(%rbx,%r8), %edx
	testb	%dl, 1976(%rbx,%rcx)
	jne	.L18196
.L18195:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %edi
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r12
	jmp	.L18198
.L18240:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L18200
.L18199:
	movl	%ebp, %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	call	s390_logical_to_main_l
	movq	%rax, %rbp
	jmp	.L18202
.L18239:
	cmpb	43192(%rbx,%r8), %dl
	je	.L18197
	jmp	.L18195
.L18241:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L18201
	.p2align 4,,3
	jmp	.L18199
	.cfi_endproc
.LFE1818:
	.size	s390_D500, .-s390_D500
	.p2align 4,,15
	.globl	s390_D501
	.type	s390_D501, @function
s390_D501:
.LFB1819:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, 12(%rsp)
	je	.L18243
	cltq
	addl	192(%rsi,%rax,8), %r12d
	andl	120(%rsi), %r12d
.L18243:
	movzbl	4(%rdi), %r15d
	movzbl	5(%rdi), %eax
	movl	%r15d, %ebp
	shrb	$4, %r15b
	andl	$15, %ebp
	movzbl	%r15b, %r15d
	sall	$8, %ebp
	orl	%eax, %ebp
	testl	%r15d, %r15d
	je	.L18244
	movslq	%r15d, %rax
	addl	192(%rbx,%rax,8), %ebp
	andl	120(%rbx), %ebp
.L18244:
	movl	12(%rsp), %eax
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18245
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18362
.L18246:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L18363
.L18247:
	movl	%r12d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18245
	testb	$4, 46264(%rbx,%rcx)
	je	.L18245
	movl	%r12d, %r14d
	movzbl	%sil, %r8d
	xorq	26808(%rdx), %r14
.L18248:
	leal	5(%r15), %eax
	cltq
	leaq	(%rbx,%rax,4), %r10
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L18249
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L18364
.L18250:
	testb	%r8b, %r8b
	jne	.L18365
.L18251:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18249
	testb	$4, 46264(%rbx,%rcx)
	je	.L18249
	movl	%ebp, %r13d
	xorq	26808(%rdx), %r13
.L18252:
	movl	%r12d, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	movl	%ebp, %eax
	je	.L18253
	andl	$2047, %eax
	cmpl	$2047, %eax
	je	.L18254
	movzwl	(%r14), %edx
	movzwl	0(%r13), %eax
#APP
# 2762 "general1.c" 1
	rorw $8, %dx
# 0 "" 2
# 2763 "general1.c" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
	cmpw	%ax, %dx
	je	.L18278
	sbbl	%eax, %eax
	addl	$2, %eax
.L18276:
	movb	%al, 100(%rbx)
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L18253:
	.cfi_restore_state
	andl	$2047, %eax
	movzbl	(%r14), %edx
	cmpl	$2047, %eax
	movzbl	0(%r13), %eax
	je	.L18263
	subl	%eax, %edx
	jne	.L18277
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18366
	leal	1(%rax), %ecx
	addl	$1, %r12d
	movl	%r12d, %eax
	movslq	%ecx, %rcx
	andl	120(%rbx), %eax
	movl	%eax, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L18367
.L18265:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L18368
.L18266:
	movl	%eax, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L18264
	testb	$4, 46264(%rbx,%rsi)
	je	.L18264
	xorq	26808(%rdx), %rax
.L18267:
	movzbl	(%rax), %edx
	movzbl	1(%r13), %eax
	subl	%eax, %edx
	jmp	.L18262
	.p2align 4,,10
	.p2align 3
.L18263:
	subl	%eax, %edx
	jne	.L18277
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18369
	movl	120(%rbx), %r8d
	leal	1(%rax), %ecx
	addl	$1, %r12d
	movl	%r12d, %edx
	movslq	%ecx, %rcx
	andl	%r8d, %edx
	movl	%edx, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L18370
.L18269:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L18371
.L18270:
	movl	%edx, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L18268
	testb	$4, 46264(%rbx,%rsi)
	je	.L18268
	movl	%edx, %r12d
	xorq	26808(%rax), %r12
.L18271:
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L18372
	leal	1(%rax), %ecx
	addl	$1, %ebp
	movl	%r8d, %eax
	andl	%ebp, %eax
	movslq	%ecx, %rcx
	movl	%eax, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbx,%rcx,8)
	jne	.L18373
.L18273:
	testb	%dil, %dil
	jne	.L18374
.L18274:
	movl	%eax, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L18272
	testb	$4, 46264(%rbx,%rsi)
	je	.L18272
	xorq	26808(%rdx), %rax
.L18275:
	movzbl	(%r12), %edx
	movzbl	(%rax), %eax
	subl	%eax, %edx
	jmp	.L18262
	.p2align 4,,10
	.p2align 3
.L18254:
	movzbl	(%r14), %edx
	movzbl	0(%r13), %eax
	subl	%eax, %edx
	jne	.L18277
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L18375
	leal	1(%rax), %ecx
	addl	$1, %ebp
	movl	%ebp, %eax
	movslq	%ecx, %rcx
	andl	120(%rbx), %eax
	movl	%eax, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L18376
.L18259:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L18377
.L18260:
	movl	%eax, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L18258
	testb	$4, 46264(%rbx,%rsi)
	je	.L18258
	xorq	26808(%rdx), %rax
.L18261:
	movzbl	1(%r14), %edx
	movzbl	(%rax), %eax
	subl	%eax, %edx
.L18262:
	xorl	%eax, %eax
	testl	%edx, %edx
	je	.L18276
	.p2align 4,,10
	.p2align 3
.L18277:
	sarl	$31, %edx
	leal	2(%rdx), %eax
	jmp	.L18276
	.p2align 4,,10
	.p2align 3
.L18278:
	xorl	%eax, %eax
	jmp	.L18276
.L18364:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L18250
.L18249:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	movq	%r10, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	s390_logical_to_main_l
	movq	24(%rsp), %r10
	movq	%rax, %r13
	movq	16(%rsp), %r11
	jmp	.L18252
.L18362:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L18246
.L18245:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movl	12(%rsp), %esi
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movq	%r11, 16(%rsp)
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r14
	movq	16(%rsp), %r11
	jmp	.L18248
.L18365:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L18251
	jmp	.L18249
.L18363:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L18247
	.p2align 4,,3
	jmp	.L18245
.L18366:
	addl	$1, %r12d
.L18264:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	12(%rsp), %esi
	andl	%r12d, %edi
	call	s390_logical_to_main_l
	jmp	.L18267
.L18375:
	addl	$1, %ebp
.L18258:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	%r15d, %esi
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	jmp	.L18261
.L18368:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L18266
	.p2align 4,,4
	jmp	.L18264
.L18367:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L18265
	jmp	.L18264
.L18377:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L18260
	.p2align 4,,4
	jmp	.L18258
.L18376:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L18259
	jmp	.L18258
.L18372:
	addl	$1, %ebp
.L18272:
	andl	%r8d, %ebp
	movl	$1, %r9d
	movzbl	%dil, %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	call	s390_logical_to_main_l
	jmp	.L18275
.L18374:
	cmpb	%dil, 43192(%rbx,%rsi)
	je	.L18274
	.p2align 4,,3
	jmp	.L18272
.L18373:
	movzbl	44216(%rbx,%rsi), %r9d
	testb	%r9b, 1976(%rbx,%rcx)
	jne	.L18273
	jmp	.L18272
.L18369:
	addl	$1, %r12d
.L18268:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movq	%r10, 16(%rsp)
	movl	12(%rsp), %esi
	andl	%r12d, %edi
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %edi
	movq	%rax, %r12
	movl	120(%rbx), %r8d
	movq	16(%rsp), %r10
	jmp	.L18271
.L18371:
	cmpb	43192(%rbx,%rsi), %dil
	je	.L18270
	jmp	.L18268
.L18370:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L18269
	jmp	.L18268
	.cfi_endproc
.LFE1819:
	.size	s390_D501, .-s390_D501
	.p2align 4,,15
	.globl	s390_D503
	.type	s390_D503, @function
s390_D503:
.LFB1820:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, (%rsp)
	je	.L18379
	cltq
	addl	192(%rsi,%rax,8), %r12d
	andl	120(%rsi), %r12d
.L18379:
	movzbl	4(%rdi), %eax
	movzbl	5(%rdi), %edx
	movl	%eax, %ebp
	shrb	$4, %al
	andl	$15, %ebp
	movzbl	%al, %r10d
	sall	$8, %ebp
	orl	%edx, %ebp
	testl	%r10d, %r10d
	je	.L18380
	movslq	%r10d, %rax
	addl	192(%rbx,%rax,8), %ebp
	andl	120(%rbx), %ebp
.L18380:
	movl	(%rsp), %eax
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 8(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L18381
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18563
.L18382:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L18564
.L18383:
	movl	%r12d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18381
	testb	$4, 46264(%rbx,%rcx)
	je	.L18381
	movl	%r12d, %r13d
	movzbl	%sil, %r8d
	xorq	26808(%rdx), %r13
.L18384:
	leal	5(%r10), %eax
	cltq
	leaq	(%rbx,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18385
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18565
.L18386:
	testb	%r8b, %r8b
	jne	.L18566
.L18387:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18385
	testb	$4, 46264(%rbx,%rcx)
	je	.L18385
	movl	%ebp, %r14d
	xorq	26808(%rdx), %r14
.L18388:
	movl	%r12d, %r15d
	andl	$2047, %r15d
	cmpl	$2044, %r15d
	ja	.L18389
	movl	%ebp, %r12d
	andl	$2047, %r12d
	cmpl	$2044, %r12d
	ja	.L18390
	movl	0(%r13), %edx
	movl	(%r14), %eax
	bswap	%edx
	bswap	%eax
	cmpl	%eax, %edx
	je	.L18434
	sbbl	%eax, %eax
	addl	$2, %eax
.L18430:
	movb	%al, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L18389:
	.cfi_restore_state
	movl	$2048, %eax
	movl	%eax, %esi
	subl	%r15d, %esi
	movl	%esi, 4(%rsp)
	movl	%ebp, %esi
	andl	$2047, %esi
	cmpl	$2044, %esi
	movl	%esi, 16(%rsp)
	ja	.L18399
	movl	4(%rsp), %ebp
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%rbp, %rdx
	call	memcmp
	testl	%eax, %eax
	jne	.L18431
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L18567
	addl	4(%rsp), %r12d
	leal	1(%rax), %edx
	movslq	%edx, %rdx
	movl	%r12d, %edi
	andl	120(%rbx), %edi
	movl	%edi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L18568
.L18401:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L18569
.L18402:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L18400
	testb	$4, 46264(%rbx,%rcx)
	je	.L18400
	xorq	26808(%rax), %rdi
.L18403:
	leal	-2044(%r15), %edx
	leaq	(%r14,%rbp), %rsi
	call	memcmp
	testl	%eax, %eax
	jne	.L18431
.L18434:
	xorl	%eax, %eax
	jmp	.L18430
	.p2align 4,,10
	.p2align 3
.L18399:
	subl	16(%rsp), %eax
	cmpl	%eax, 4(%rsp)
	movl	%eax, 24(%rsp)
	je	.L18570
	movq	%r11, 40(%rsp)
	movl	%r10d, 32(%rsp)
	jae	.L18413
	movl	4(%rsp), %r15d
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%r15, %rdx
	call	memcmp
	movl	32(%rsp), %r10d
	testl	%eax, %eax
	movq	40(%rsp), %r11
	jne	.L18431
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L18571
	addl	4(%rsp), %r12d
	addl	$1, %eax
	movl	120(%rbx), %ecx
	cltq
	andl	%r12d, %ecx
	movl	%ecx, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18572
.L18415:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L18573
.L18416:
	movl	%ecx, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18414
	testb	$4, 46264(%rbx,%rsi)
	je	.L18414
	movl	%ecx, %r12d
	xorq	26808(%rdx), %r12
.L18417:
	movl	24(%rsp), %edx
	movq	%r12, %rdi
	movq	%r11, 8(%rsp)
	leaq	(%r14,%r15), %rsi
	movl	%r10d, (%rsp)
	subl	4(%rsp), %edx
	call	memcmp
	testl	%eax, %eax
	jne	.L18431
	movq	8(%rsp), %r11
	movl	(%rsp), %r10d
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18574
	addl	24(%rsp), %ebp
	addl	$1, %eax
	cltq
	movl	%ebp, %esi
	andl	120(%rbx), %esi
	movl	%esi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18575
.L18419:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L18576
.L18420:
	movl	%esi, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18418
	testb	$4, 46264(%rbx,%rcx)
	je	.L18418
	xorq	26808(%rdx), %rsi
.L18421:
	movl	24(%rsp), %edi
	movl	16(%rsp), %edx
	subq	%r15, %rdi
	subl	$2044, %edx
	addq	%r12, %rdi
	call	memcmp
	jmp	.L18398
	.p2align 4,,10
	.p2align 3
.L18390:
	movl	$2048, %ecx
	movq	%r14, %rsi
	movq	%r13, %rdi
	subl	%r12d, %ecx
	movq	%r11, 8(%rsp)
	movl	%ecx, %r15d
	movl	%r10d, 4(%rsp)
	movq	%r15, %rdx
	movl	%ecx, (%rsp)
	call	memcmp
	movl	(%rsp), %ecx
	testl	%eax, %eax
	movl	4(%rsp), %r10d
	movq	8(%rsp), %r11
	jne	.L18431
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18577
	leal	1(%rax), %edx
	addl	%ecx, %ebp
	movl	%ebp, %esi
	movslq	%edx, %rdx
	andl	120(%rbx), %esi
	movl	%esi, %edi
	shrl	$12, %edi
	andl	$1023, %edi
	leaq	(%rbx,%rdi,8), %rax
	movl	2232(%rax), %ecx
	cmpl	%ecx, 320(%rbx,%rdx,8)
	jne	.L18578
.L18395:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L18579
.L18396:
	movl	%esi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L18394
	testb	$4, 46264(%rbx,%rdi)
	je	.L18394
	xorq	26808(%rax), %rsi
.L18397:
	leal	-2044(%r12), %edx
	leaq	0(%r13,%r15), %rdi
	call	memcmp
.L18398:
	testl	%eax, %eax
	je	.L18434
	.p2align 4,,10
	.p2align 3
.L18431:
	sarl	$31, %eax
	addl	$2, %eax
	jmp	.L18430
	.p2align 4,,10
	.p2align 3
.L18570:
	movl	4(%rsp), %edx
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%r11, 24(%rsp)
	movl	%r10d, 16(%rsp)
	call	memcmp
	movl	16(%rsp), %r10d
	testl	%eax, %eax
	movq	24(%rsp), %r11
	jne	.L18431
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L18580
	addl	4(%rsp), %r12d
	leal	1(%rax), %ecx
	movl	120(%rbx), %r8d
	movslq	%ecx, %rcx
	movl	%r12d, %edx
	andl	%r8d, %edx
	movl	%edx, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L18581
.L18406:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L18582
.L18407:
	movl	%edx, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L18405
	testb	$4, 46264(%rbx,%rsi)
	je	.L18405
	movl	%edx, %r12d
	xorq	26808(%rax), %r12
.L18408:
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18583
	addl	4(%rsp), %ebp
	leal	1(%rax), %edx
	movl	%r8d, %esi
	movslq	%edx, %rdx
	andl	%ebp, %esi
	movl	%esi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %r9d
	cmpl	%r9d, 320(%rbx,%rdx,8)
	jne	.L18584
.L18410:
	testb	%dil, %dil
	jne	.L18585
.L18411:
	movl	%esi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L18409
	testb	$4, 46264(%rbx,%rcx)
	je	.L18409
	xorq	26808(%rax), %rsi
.L18412:
	movq	%r12, %rdi
	leal	-2044(%r15), %edx
	call	memcmp
	jmp	.L18398
	.p2align 4,,10
	.p2align 3
.L18413:
	movl	24(%rsp), %eax
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%rax, %rdx
	movq	%rax, 16(%rsp)
	call	memcmp
	movl	32(%rsp), %r10d
	testl	%eax, %eax
	movq	40(%rsp), %r11
	jne	.L18431
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18586
	addl	24(%rsp), %ebp
	addl	$1, %eax
	movl	120(%rbx), %ecx
	cltq
	andl	%ebp, %ecx
	movl	%ecx, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18587
.L18423:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L18588
.L18424:
	movl	%ecx, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18422
	testb	$4, 46264(%rbx,%rsi)
	je	.L18422
	movl	%ecx, %ebp
	xorq	26808(%rdx), %rbp
.L18425:
	movl	4(%rsp), %edx
	movq	%rbp, %rsi
	movq	16(%rsp), %rax
	subl	24(%rsp), %edx
	leaq	0(%r13,%rax), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L18431
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L18589
	addl	4(%rsp), %r12d
	addl	$1, %eax
	cltq
	movl	%r12d, %edi
	andl	120(%rbx), %edi
	movl	%edi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L18590
.L18427:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L18591
.L18428:
	movl	%edi, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18426
	testb	$4, 46264(%rbx,%rcx)
	je	.L18426
	xorq	26808(%rdx), %rdi
.L18429:
	movl	4(%rsp), %esi
	leal	-2044(%r15), %edx
	subq	16(%rsp), %rsi
	addq	%rbp, %rsi
	call	memcmp
	jmp	.L18398
.L18565:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L18386
.L18385:
	movl	%r10d, %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r11, 16(%rsp)
	movl	%r10d, 4(%rsp)
	call	s390_logical_to_main_l
	movq	16(%rsp), %r11
	movq	%rax, %r14
	movl	4(%rsp), %r10d
	jmp	.L18388
.L18563:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L18382
.L18381:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movl	(%rsp), %esi
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r10d, 4(%rsp)
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r13
	movl	4(%rsp), %r10d
	jmp	.L18384
.L18564:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L18383
	jmp	.L18381
.L18566:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L18387
	.p2align 4,,3
	jmp	.L18385
.L18577:
	addl	%ecx, %ebp
.L18394:
	movl	120(%rbx), %edi
	movl	%r10d, %esi
	movl	$1, %r9d
	movzbl	97(%rbx), %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L18397
.L18567:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L18400:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	(%rsp), %esi
	andl	%r12d, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L18403
.L18589:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L18426:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	(%rsp), %esi
	andl	%r12d, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L18429
.L18586:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L18422:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	%r10d, %esi
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rbp
	jmp	.L18425
.L18574:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L18418:
	movl	120(%rbx), %edi
	movl	%r10d, %esi
	movl	$1, %r9d
	movzbl	97(%rbx), %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L18421
.L18571:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L18414:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movq	%r11, 32(%rsp)
	movl	(%rsp), %esi
	movl	%r10d, 8(%rsp)
	andl	%r12d, %edi
	call	s390_logical_to_main_l
	movq	32(%rsp), %r11
	movq	%rax, %r12
	movl	8(%rsp), %r10d
	jmp	.L18417
.L18583:
	movl	4(%rsp), %eax
	addl	%eax, %ebp
.L18409:
	andl	%r8d, %ebp
	movl	%r10d, %esi
	movzbl	%dil, %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L18412
.L18585:
	cmpb	%dil, 43192(%rbx,%rcx)
	je	.L18411
	jmp	.L18409
.L18584:
	movzbl	44216(%rbx,%rcx), %r9d
	testb	%r9b, 1976(%rbx,%rdx)
	jne	.L18410
	jmp	.L18409
.L18580:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L18405:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movq	%r11, 16(%rsp)
	movl	(%rsp), %esi
	movl	%r10d, 8(%rsp)
	andl	%r12d, %edi
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %edi
	movq	%rax, %r12
	movl	120(%rbx), %r8d
	movq	16(%rsp), %r11
	movl	8(%rsp), %r10d
	jmp	.L18408
.L18582:
	cmpb	43192(%rbx,%rsi), %dil
	je	.L18407
	jmp	.L18405
.L18581:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L18406
	jmp	.L18405
.L18576:
	cmpb	43192(%rbx,%rcx), %al
	je	.L18420
	.p2align 4,,4
	jmp	.L18418
.L18573:
	cmpb	43192(%rbx,%rsi), %al
	je	.L18416
	.p2align 4,,4
	jmp	.L18414
.L18572:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L18415
	jmp	.L18414
.L18590:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L18427
	jmp	.L18426
.L18575:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L18419
	jmp	.L18418
.L18591:
	cmpb	43192(%rbx,%rcx), %al
	je	.L18428
	.p2align 4,,4
	jmp	.L18426
.L18588:
	cmpb	43192(%rbx,%rsi), %al
	je	.L18424
	.p2align 4,,4
	jmp	.L18422
.L18587:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L18423
	jmp	.L18422
.L18569:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L18402
	.p2align 4,,4
	jmp	.L18400
.L18568:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L18401
	jmp	.L18400
.L18579:
	cmpb	43192(%rbx,%rdi), %dl
	je	.L18396
	.p2align 4,,4
	jmp	.L18394
.L18578:
	movzbl	44216(%rbx,%rdi), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L18395
	jmp	.L18394
	.cfi_endproc
.LFE1820:
	.size	s390_D503, .-s390_D503
	.p2align 4,,15
	.globl	s390_D507
	.type	s390_D507, @function
s390_D507:
.LFB1821:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, (%rsp)
	je	.L18593
	cltq
	addl	192(%rsi,%rax,8), %r12d
	andl	120(%rsi), %r12d
.L18593:
	movzbl	4(%rdi), %eax
	movzbl	5(%rdi), %edx
	movl	%eax, %ebp
	shrb	$4, %al
	andl	$15, %ebp
	movzbl	%al, %r10d
	sall	$8, %ebp
	orl	%edx, %ebp
	testl	%r10d, %r10d
	je	.L18594
	movslq	%r10d, %rax
	addl	192(%rbx,%rax,8), %ebp
	andl	120(%rbx), %ebp
.L18594:
	movl	(%rsp), %eax
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 8(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L18595
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18777
.L18596:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L18778
.L18597:
	movl	%r12d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18595
	testb	$4, 46264(%rbx,%rcx)
	je	.L18595
	movl	%r12d, %r13d
	movzbl	%sil, %r8d
	xorq	26808(%rdx), %r13
.L18598:
	leal	5(%r10), %eax
	cltq
	leaq	(%rbx,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18599
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18779
.L18600:
	testb	%r8b, %r8b
	jne	.L18780
.L18601:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18599
	testb	$4, 46264(%rbx,%rcx)
	je	.L18599
	movl	%ebp, %r14d
	xorq	26808(%rdx), %r14
.L18602:
	movl	%r12d, %r15d
	andl	$2047, %r15d
	cmpl	$2040, %r15d
	ja	.L18603
	movl	%ebp, %r12d
	andl	$2047, %r12d
	cmpl	$2040, %r12d
	ja	.L18604
	movq	0(%r13), %rdx
	movq	(%r14), %rax
	bswap	%rdx
	bswap	%rax
	cmpq	%rax, %rdx
	je	.L18648
	sbbl	%eax, %eax
	addl	$2, %eax
.L18644:
	movb	%al, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L18603:
	.cfi_restore_state
	movl	$2048, %eax
	movl	%eax, %esi
	subl	%r15d, %esi
	movl	%esi, 4(%rsp)
	movl	%ebp, %esi
	andl	$2047, %esi
	cmpl	$2040, %esi
	movl	%esi, 16(%rsp)
	ja	.L18613
	movl	4(%rsp), %ebp
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%rbp, %rdx
	call	memcmp
	testl	%eax, %eax
	jne	.L18645
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L18781
	addl	4(%rsp), %r12d
	leal	1(%rax), %edx
	movslq	%edx, %rdx
	movl	%r12d, %edi
	andl	120(%rbx), %edi
	movl	%edi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L18782
.L18615:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L18783
.L18616:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L18614
	testb	$4, 46264(%rbx,%rcx)
	je	.L18614
	xorq	26808(%rax), %rdi
.L18617:
	leal	-2040(%r15), %edx
	leaq	(%r14,%rbp), %rsi
	call	memcmp
	testl	%eax, %eax
	jne	.L18645
.L18648:
	xorl	%eax, %eax
	jmp	.L18644
	.p2align 4,,10
	.p2align 3
.L18613:
	subl	16(%rsp), %eax
	cmpl	%eax, 4(%rsp)
	movl	%eax, 24(%rsp)
	je	.L18784
	movq	%r11, 40(%rsp)
	movl	%r10d, 32(%rsp)
	jae	.L18627
	movl	4(%rsp), %r15d
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%r15, %rdx
	call	memcmp
	movl	32(%rsp), %r10d
	testl	%eax, %eax
	movq	40(%rsp), %r11
	jne	.L18645
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L18785
	addl	4(%rsp), %r12d
	addl	$1, %eax
	movl	120(%rbx), %ecx
	cltq
	andl	%r12d, %ecx
	movl	%ecx, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18786
.L18629:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L18787
.L18630:
	movl	%ecx, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18628
	testb	$4, 46264(%rbx,%rsi)
	je	.L18628
	movl	%ecx, %r12d
	xorq	26808(%rdx), %r12
.L18631:
	movl	24(%rsp), %edx
	movq	%r12, %rdi
	movq	%r11, 8(%rsp)
	leaq	(%r14,%r15), %rsi
	movl	%r10d, (%rsp)
	subl	4(%rsp), %edx
	call	memcmp
	testl	%eax, %eax
	jne	.L18645
	movq	8(%rsp), %r11
	movl	(%rsp), %r10d
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18788
	addl	24(%rsp), %ebp
	addl	$1, %eax
	cltq
	movl	%ebp, %esi
	andl	120(%rbx), %esi
	movl	%esi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18789
.L18633:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L18790
.L18634:
	movl	%esi, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18632
	testb	$4, 46264(%rbx,%rcx)
	je	.L18632
	xorq	26808(%rdx), %rsi
.L18635:
	movl	24(%rsp), %edi
	movl	16(%rsp), %edx
	subq	%r15, %rdi
	subl	$2040, %edx
	addq	%r12, %rdi
	call	memcmp
	jmp	.L18612
	.p2align 4,,10
	.p2align 3
.L18604:
	movl	$2048, %ecx
	movq	%r14, %rsi
	movq	%r13, %rdi
	subl	%r12d, %ecx
	movq	%r11, 8(%rsp)
	movl	%ecx, %r15d
	movl	%r10d, 4(%rsp)
	movq	%r15, %rdx
	movl	%ecx, (%rsp)
	call	memcmp
	movl	(%rsp), %ecx
	testl	%eax, %eax
	movl	4(%rsp), %r10d
	movq	8(%rsp), %r11
	jne	.L18645
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18791
	leal	1(%rax), %edx
	addl	%ecx, %ebp
	movl	%ebp, %esi
	movslq	%edx, %rdx
	andl	120(%rbx), %esi
	movl	%esi, %edi
	shrl	$12, %edi
	andl	$1023, %edi
	leaq	(%rbx,%rdi,8), %rax
	movl	2232(%rax), %ecx
	cmpl	%ecx, 320(%rbx,%rdx,8)
	jne	.L18792
.L18609:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L18793
.L18610:
	movl	%esi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L18608
	testb	$4, 46264(%rbx,%rdi)
	je	.L18608
	xorq	26808(%rax), %rsi
.L18611:
	leal	-2040(%r12), %edx
	leaq	0(%r13,%r15), %rdi
	call	memcmp
.L18612:
	testl	%eax, %eax
	je	.L18648
	.p2align 4,,10
	.p2align 3
.L18645:
	sarl	$31, %eax
	addl	$2, %eax
	jmp	.L18644
	.p2align 4,,10
	.p2align 3
.L18784:
	movl	4(%rsp), %edx
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%r11, 24(%rsp)
	movl	%r10d, 16(%rsp)
	call	memcmp
	movl	16(%rsp), %r10d
	testl	%eax, %eax
	movq	24(%rsp), %r11
	jne	.L18645
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L18794
	addl	4(%rsp), %r12d
	leal	1(%rax), %ecx
	movl	120(%rbx), %r8d
	movslq	%ecx, %rcx
	movl	%r12d, %edx
	andl	%r8d, %edx
	movl	%edx, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L18795
.L18620:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L18796
.L18621:
	movl	%edx, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L18619
	testb	$4, 46264(%rbx,%rsi)
	je	.L18619
	movl	%edx, %r12d
	xorq	26808(%rax), %r12
.L18622:
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18797
	addl	4(%rsp), %ebp
	leal	1(%rax), %edx
	movl	%r8d, %esi
	movslq	%edx, %rdx
	andl	%ebp, %esi
	movl	%esi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %r9d
	cmpl	%r9d, 320(%rbx,%rdx,8)
	jne	.L18798
.L18624:
	testb	%dil, %dil
	jne	.L18799
.L18625:
	movl	%esi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L18623
	testb	$4, 46264(%rbx,%rcx)
	je	.L18623
	xorq	26808(%rax), %rsi
.L18626:
	movq	%r12, %rdi
	leal	-2040(%r15), %edx
	call	memcmp
	jmp	.L18612
	.p2align 4,,10
	.p2align 3
.L18627:
	movl	24(%rsp), %eax
	movq	%r14, %rsi
	movq	%r13, %rdi
	movq	%rax, %rdx
	movq	%rax, 16(%rsp)
	call	memcmp
	movl	32(%rsp), %r10d
	testl	%eax, %eax
	movq	40(%rsp), %r11
	jne	.L18645
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L18800
	addl	24(%rsp), %ebp
	addl	$1, %eax
	movl	120(%rbx), %ecx
	cltq
	andl	%ebp, %ecx
	movl	%ecx, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18801
.L18637:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L18802
.L18638:
	movl	%ecx, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18636
	testb	$4, 46264(%rbx,%rsi)
	je	.L18636
	movl	%ecx, %ebp
	xorq	26808(%rdx), %rbp
.L18639:
	movl	4(%rsp), %edx
	movq	%rbp, %rsi
	movq	16(%rsp), %rax
	subl	24(%rsp), %edx
	leaq	0(%r13,%rax), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L18645
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L18803
	addl	4(%rsp), %r12d
	addl	$1, %eax
	cltq
	movl	%r12d, %edi
	andl	120(%rbx), %edi
	movl	%edi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L18804
.L18641:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L18805
.L18642:
	movl	%edi, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18640
	testb	$4, 46264(%rbx,%rcx)
	je	.L18640
	xorq	26808(%rdx), %rdi
.L18643:
	movl	4(%rsp), %esi
	leal	-2040(%r15), %edx
	subq	16(%rsp), %rsi
	addq	%rbp, %rsi
	call	memcmp
	jmp	.L18612
.L18779:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L18600
.L18599:
	movl	%r10d, %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r11, 16(%rsp)
	movl	%r10d, 4(%rsp)
	call	s390_logical_to_main_l
	movq	16(%rsp), %r11
	movq	%rax, %r14
	movl	4(%rsp), %r10d
	jmp	.L18602
.L18777:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L18596
.L18595:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movl	(%rsp), %esi
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r10d, 4(%rsp)
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r13
	movl	4(%rsp), %r10d
	jmp	.L18598
.L18778:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L18597
	jmp	.L18595
.L18780:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L18601
	.p2align 4,,3
	jmp	.L18599
.L18791:
	addl	%ecx, %ebp
.L18608:
	movl	120(%rbx), %edi
	movl	%r10d, %esi
	movl	$1, %r9d
	movzbl	97(%rbx), %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L18611
.L18781:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L18614:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	(%rsp), %esi
	andl	%r12d, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L18617
.L18803:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L18640:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	(%rsp), %esi
	andl	%r12d, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L18643
.L18800:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L18636:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	%r10d, %esi
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rbp
	jmp	.L18639
.L18788:
	movl	24(%rsp), %eax
	addl	%eax, %ebp
.L18632:
	movl	120(%rbx), %edi
	movl	%r10d, %esi
	movl	$1, %r9d
	movzbl	97(%rbx), %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L18635
.L18785:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L18628:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movq	%r11, 32(%rsp)
	movl	(%rsp), %esi
	movl	%r10d, 8(%rsp)
	andl	%r12d, %edi
	call	s390_logical_to_main_l
	movq	32(%rsp), %r11
	movq	%rax, %r12
	movl	8(%rsp), %r10d
	jmp	.L18631
.L18797:
	movl	4(%rsp), %eax
	addl	%eax, %ebp
.L18623:
	andl	%r8d, %ebp
	movl	%r10d, %esi
	movzbl	%dil, %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L18626
.L18799:
	cmpb	%dil, 43192(%rbx,%rcx)
	je	.L18625
	jmp	.L18623
.L18798:
	movzbl	44216(%rbx,%rcx), %r9d
	testb	%r9b, 1976(%rbx,%rdx)
	jne	.L18624
	jmp	.L18623
.L18794:
	movl	4(%rsp), %eax
	addl	%eax, %r12d
.L18619:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movq	%r11, 16(%rsp)
	movl	(%rsp), %esi
	movl	%r10d, 8(%rsp)
	andl	%r12d, %edi
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %edi
	movq	%rax, %r12
	movl	120(%rbx), %r8d
	movq	16(%rsp), %r11
	movl	8(%rsp), %r10d
	jmp	.L18622
.L18796:
	cmpb	43192(%rbx,%rsi), %dil
	je	.L18621
	jmp	.L18619
.L18795:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L18620
	jmp	.L18619
.L18790:
	cmpb	43192(%rbx,%rcx), %al
	je	.L18634
	.p2align 4,,4
	jmp	.L18632
.L18787:
	cmpb	43192(%rbx,%rsi), %al
	je	.L18630
	.p2align 4,,4
	jmp	.L18628
.L18786:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L18629
	jmp	.L18628
.L18804:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L18641
	jmp	.L18640
.L18789:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L18633
	jmp	.L18632
.L18805:
	cmpb	43192(%rbx,%rcx), %al
	je	.L18642
	.p2align 4,,4
	jmp	.L18640
.L18802:
	cmpb	43192(%rbx,%rsi), %al
	je	.L18638
	.p2align 4,,4
	jmp	.L18636
.L18801:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L18637
	jmp	.L18636
.L18783:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L18616
	.p2align 4,,4
	jmp	.L18614
.L18782:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L18615
	jmp	.L18614
.L18793:
	cmpb	43192(%rbx,%rdi), %dl
	je	.L18610
	.p2align 4,,4
	jmp	.L18608
.L18792:
	movzbl	44216(%rbx,%rdi), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L18609
	jmp	.L18608
	.cfi_endproc
.LFE1821:
	.size	s390_D507, .-s390_D507
	.p2align 4,,15
	.globl	s390_compare_logical_characters_under_mask
	.type	s390_compare_logical_characters_under_mask, @function
s390_compare_logical_characters_under_mask:
.LFB1822:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %eax
	movl	%ebp, %edx
	shrl	$16, %eax
	movl	%ebp, %r15d
	shrl	$20, %edx
	movl	%eax, %ecx
	shrl	$12, %r15d
	andl	$15, %edx
	andl	$15, %ecx
	andl	$4095, %ebp
	andl	$15, %r15d
	je	.L18807
	movslq	%r15d, %rsi
	addl	192(%rbx,%rsi,8), %ebp
	andl	120(%rbx), %ebp
.L18807:
	addq	$4, 136(%rbx)
	testb	$8, %al
	movb	$4, 130(%rbx)
	je	.L18828
	movslq	%edx, %rsi
	movl	$1, %r13d
	movzbl	195(%rbx,%rsi,8), %esi
	movb	%sil, (%rsp)
	movl	$2, %esi
.L18808:
	testb	$4, %al
	je	.L18809
	movslq	%edx, %rdi
	movzwl	194(%rbx,%rdi,8), %edi
	movb	%dil, (%rsp,%r13)
	movl	%esi, %r13d
.L18809:
	testb	$2, %al
	je	.L18810
	movslq	%edx, %rsi
	movslq	%r13d, %rdi
	addl	$1, %r13d
	movl	192(%rbx,%rsi,8), %esi
	shrl	$8, %esi
	movb	%sil, (%rsp,%rdi)
.L18810:
	testb	$1, %al
	je	.L18811
	movslq	%edx, %rdx
	movslq	%r13d, %rax
	addl	$1, %r13d
	movl	192(%rbx,%rdx,8), %edx
	movb	%dl, (%rsp,%rax)
.L18811:
	testl	%ecx, %ecx
	je	.L18866
.L18812:
	testl	%r13d, %r13d
	je	.L18826
	leal	5(%r15), %r14d
	xorl	%r12d, %r12d
	movslq	%r14d, %r14
.L18827:
	movl	%ebp, %edi
	movl	1892(%rbx,%r14,4), %eax
	andl	120(%rbx), %edi
	testl	%eax, %eax
	leal	1(%rdi), %ebp
	je	.L18818
	leal	1(%rax), %edx
	movl	%edi, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L18867
.L18819:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L18868
.L18820:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L18831
	testb	$4, 46264(%rbx,%rcx)
	je	.L18831
	xorq	26808(%rax), %rdi
.L18822:
	movzbl	(%rdi), %eax
	cmpb	%al, (%rsp,%r12)
	je	.L18823
	sbbl	%eax, %eax
	addl	$2, %eax
.L18817:
	movb	%al, 100(%rbx)
	addq	$24, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L18823:
	.cfi_restore_state
	addq	$1, %r12
	cmpl	%r12d, %r13d
	jg	.L18827
	.p2align 4,,10
	.p2align 3
.L18826:
	xorl	%eax, %eax
	jmp	.L18817
	.p2align 4,,10
	.p2align 3
.L18828:
	movl	$1, %esi
	xorl	%r13d, %r13d
	jmp	.L18808
	.p2align 4,,10
	.p2align 3
.L18866:
	leal	5(%r15), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L18813
	movl	%ebp, %edx
	addl	$1, %eax
	shrl	$12, %edx
	cltq
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L18869
.L18814:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L18870
.L18815:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rcx), %eax
	jne	.L18813
	testb	$4, 46264(%rbx,%rdx)
	jne	.L18812
.L18813:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	call	s390_logical_to_main_l
	jmp	.L18812
.L18868:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L18820
.L18831:
	movzbl	%sil, %r8d
.L18821:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	call	s390_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L18822
.L18867:
	movzbl	1976(%rbx,%rdx), %edx
	testb	%dl, 44216(%rbx,%rcx)
	jne	.L18819
.L18818:
	movzbl	97(%rbx), %r8d
	jmp	.L18821
.L18869:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L18814
	jmp	.L18813
.L18870:
	cmpb	43192(%rbx,%rdx), %al
	je	.L18815
	.p2align 4,,4
	jmp	.L18813
	.cfi_endproc
.LFE1822:
	.size	s390_compare_logical_characters_under_mask, .-s390_compare_logical_characters_under_mask
	.p2align 4,,15
	.globl	s390_compare_logical_character_long
	.type	s390_compare_logical_character_long, @function
s390_compare_logical_character_long:
.LFB1823:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movzbl	1(%rdi), %eax
	movb	$2, 130(%rsi)
	addq	$2, 136(%rsi)
	movzbl	%al, %edi
	movl	%eax, %ebp
	movl	%edi, 44(%rsp)
	andl	$15, %ebp
	sarl	$4, 44(%rsp)
	movzbl	%bpl, %edi
	movl	%edi, 48(%rsp)
	testb	$1, 44(%rsp)
	jne	.L18872
	testb	$1, %al
	jne	.L18872
.L18873:
	movl	44(%rsp), %esi
	movzbl	%bpl, %ebp
	movl	120(%rbx), %r14d
	movl	48(%rsp), %edi
	leal	1(%rsi), %edx
	movslq	%esi, %rax
	leaq	(%rbx,%rax,8), %r11
	movslq	%edx, %rdx
	movl	192(%r11), %r13d
	leaq	(%rbx,%rbp,8), %rax
	movq	%rdx, 16(%rsp)
	movq	%rax, (%rsp)
	andl	%r14d, %r13d
	andl	192(%rax), %r14d
	movl	%edi, %eax
	addl	$1, %eax
	cltq
	movq	%rax, 8(%rsp)
	addq	$24, %rax
	movl	(%rbx,%rax,8), %ebp
	movzbl	3(%rbx,%rax,8), %r10d
	leal	5(%rsi), %eax
	movl	192(%rbx,%rdx,8), %r12d
	cltq
	movq	%rax, 24(%rsp)
	movl	%edi, %eax
	addl	$5, %eax
	andl	$16777215, %ebp
	cltq
	andl	$16777215, %r12d
	movq	%rax, 32(%rsp)
	.p2align 4,,10
	.p2align 3
.L18874:
	movl	%ebp, %eax
	orl	%r12d, %eax
	je	.L18943
	testl	%r12d, %r12d
	movl	%r10d, %r15d
	jne	.L18944
.L18875:
	testl	%ebp, %ebp
	movl	%r10d, %eax
	jne	.L18945
	cmpb	%al, %r15b
	jne	.L18946
.L18887:
	testl	%r12d, %r12d
	je	.L18890
	addl	$1, %r13d
	subl	$1, %r12d
	andl	120(%rbx), %r13d
.L18890:
	testl	%ebp, %ebp
	je	.L18891
	addl	$1, %r14d
	subl	$1, %ebp
	andl	120(%rbx), %r14d
.L18891:
	testl	$2047, %r13d
	je	.L18892
	testl	$2047, %r14d
	jne	.L18893
.L18892:
	movq	(%rsp), %rax
	movl	%r13d, 192(%r11)
	movl	%r12d, %ecx
	andl	$16777215, %ecx
	movl	%r14d, 192(%rax)
	movq	16(%rsp), %rax
	leaq	24(%rax), %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%ecx, %eax
	movl	%ebp, %ecx
	movl	%eax, (%rbx,%rdx,8)
	movq	8(%rsp), %rax
	andl	$16777215, %ecx
	leaq	24(%rax), %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%ecx, %eax
	movl	%eax, (%rbx,%rdx,8)
.L18893:
	leal	0(%rbp,%r12), %eax
	cmpl	$255, %eax
	jbe	.L18874
	movl	%r13d, %eax
	subl	%ebp, %eax
	testl	$4095, %eax
	jne	.L18874
	movl	168(%rbx), %ecx
	movl	136(%rbx), %eax
	movq	144(%rbx), %rdx
	movzbl	808(%rbx), %esi
	addl	%ecx, %eax
	subl	%edx, %eax
	testb	$1, %sil
	jne	.L18895
	movzbl	130(%rbx), %esi
.L18896:
	subl	%esi, %eax
	andl	120(%rbx), %eax
	cmpq	$0, 160(%rbx)
	movl	%eax, 112(%rbx)
	je	.L18942
	movl	%eax, %esi
	andl	$2147479553, %esi
	cmpl	%esi, %ecx
	jne	.L18898
	andl	$4095, %eax
	orq	%rdx, %rax
	movq	%rax, 136(%rbx)
.L18942:
	andl	$16777215, %r12d
	andl	$16777215, %ebp
	xorl	%ecx, %ecx
	jmp	.L18889
	.p2align 4,,10
	.p2align 3
.L18872:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L18873
	.p2align 4,,10
	.p2align 3
.L18945:
	movq	32(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L18882
	movl	%r14d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18947
.L18883:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L18948
.L18884:
	movl	%r14d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18907
	testb	$4, 46264(%rbx,%rcx)
	je	.L18907
	movl	%r14d, %eax
	xorq	26808(%rdx), %rax
.L18886:
	movzbl	(%rax), %eax
	cmpb	%al, %r15b
	je	.L18887
.L18946:
	andl	$16777215, %r12d
	andl	$16777215, %ebp
	cmpb	%r15b, %al
	movl	$1, %ecx
	ja	.L18889
	movl	$2, %ecx
	jmp	.L18889
	.p2align 4,,10
	.p2align 3
.L18944:
	movq	24(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L18876
	movl	%r13d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L18949
.L18877:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L18950
.L18878:
	movl	%r13d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18903
	testb	$4, 46264(%rbx,%rcx)
	je	.L18903
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L18880:
	movzbl	(%rax), %r15d
	jmp	.L18875
	.p2align 4,,10
	.p2align 3
.L18943:
	xorl	%ecx, %ecx
	xorl	%ebp, %ebp
	xorl	%r12d, %r12d
.L18889:
	movq	(%rsp), %rax
	movl	%r13d, 192(%r11)
	movq	16(%rsp), %rdx
	movl	%r14d, 192(%rax)
	addq	$24, %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%r12d, %eax
	movl	%eax, (%rbx,%rdx,8)
	movq	8(%rsp), %rdx
	addq	$24, %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%ebp, %eax
	movl	%eax, (%rbx,%rdx,8)
	movb	%cl, 100(%rbx)
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L18948:
	.cfi_restore_state
	cmpb	43192(%rbx,%rcx), %sil
	je	.L18884
.L18907:
	movzbl	%sil, %r8d
.L18885:
	movl	48(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %edi
	movq	%r11, 56(%rsp)
	movl	%r10d, 52(%rsp)
	call	s390_logical_to_main_l
	movq	56(%rsp), %r11
	movl	52(%rsp), %r10d
	jmp	.L18886
.L18950:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L18878
.L18903:
	movzbl	%sil, %r8d
.L18879:
	movl	44(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %edi
	movq	%r11, 56(%rsp)
	movl	%r10d, 52(%rsp)
	call	s390_logical_to_main_l
	movq	56(%rsp), %r11
	movl	52(%rsp), %r10d
	jmp	.L18880
.L18949:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L18877
.L18876:
	movzbl	97(%rbx), %r8d
	jmp	.L18879
.L18947:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L18883
.L18882:
	movzbl	97(%rbx), %r8d
	jmp	.L18885
.L18898:
	andl	$16777215, %r12d
	andl	$16777215, %ebp
	xorl	%ecx, %ecx
	movq	$0, 160(%rbx)
	jmp	.L18889
.L18895:
	andl	$2, %esi
	cmpb	$1, %sil
	sbbl	%esi, %esi
	andl	$-2, %esi
	addl	$6, %esi
	jmp	.L18896
	.cfi_endproc
.LFE1823:
	.size	s390_compare_logical_character_long, .-s390_compare_logical_character_long
	.p2align 4,,15
	.globl	s390_compare_logical_long_extended
	.type	s390_compare_logical_long_extended, @function
s390_compare_logical_long_extended:
.LFB1824:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movl	(%rdi), %r11d
	bswap	%r11d
	movl	%r11d, %eax
	movl	%r11d, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%r11d, %ecx
	movl	%eax, %esi
	movl	%edx, %edi
	shrl	$12, %ecx
	andl	$15, %esi
	andl	$15, %edi
	andl	$4095, %r11d
	andl	$15, %ecx
	movl	%esi, 16(%rsp)
	movl	%r11d, %ebp
	movl	%edi, 20(%rsp)
	je	.L18952
	movslq	%ecx, %rcx
	addl	192(%rbx,%rcx,8), %ebp
	andl	120(%rbx), %ebp
.L18952:
	orl	%edx, %eax
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %al
	je	.L18953
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L18953:
	movl	16(%rsp), %esi
	movl	%ebp, %r11d
	movl	20(%rsp), %edi
	movl	120(%rbx), %r13d
	movslq	%esi, %rax
	leaq	(%rbx,%rax,8), %rax
	movl	192(%rax), %r14d
	movq	%rax, 48(%rsp)
	movslq	%edi, %rax
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, 40(%rsp)
	andl	%r13d, %r14d
	andl	192(%rax), %r13d
	movl	%esi, %eax
	addl	$1, %eax
	cltq
	leaq	(%rbx,%rax,8), %rax
	movl	192(%rax), %r12d
	movq	%rax, 32(%rsp)
	movl	%edi, %eax
	addl	$1, %eax
	cltq
	leaq	(%rbx,%rax,8), %rax
	movl	192(%rax), %ebp
	movq	%rax, 24(%rsp)
	movl	%ebp, %eax
	orl	%r12d, %eax
	je	.L18972
	movl	%esi, %eax
	movl	$4096, %r15d
	addl	$5, %eax
	cltq
	movq	%rax, (%rsp)
	movl	%edi, %eax
	addl	$5, %eax
	cltq
	movq	%rax, 8(%rsp)
	jmp	.L18955
	.p2align 4,,10
	.p2align 3
.L18956:
	testl	%ebp, %ebp
	movl	%r11d, %eax
	jne	.L19016
.L18962:
	cmpb	%al, %r10b
	jne	.L19017
.L18968:
	testl	%r12d, %r12d
	je	.L18969
	addl	$1, %r14d
	subl	$1, %r12d
	andl	120(%rbx), %r14d
.L18969:
	testl	%ebp, %ebp
	je	.L18970
	addl	$1, %r13d
	subl	$1, %ebp
	andl	120(%rbx), %r13d
.L18970:
	movl	%ebp, %eax
	orl	%r12d, %eax
	je	.L18972
	subl	$1, %r15d
	je	.L18973
.L18955:
	testl	%r12d, %r12d
	movl	%r11d, %r10d
	je	.L18956
	movq	(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L18957
	movl	%r14d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19018
.L18958:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L19019
.L18959:
	movl	%r14d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18977
	testb	$4, 46264(%rbx,%rcx)
	je	.L18977
	movl	%r14d, %eax
	xorq	26808(%rdx), %rax
.L18961:
	testl	%ebp, %ebp
	movzbl	(%rax), %r10d
	movl	%r11d, %eax
	je	.L18962
.L19016:
	movq	8(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L18963
	movl	%r13d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19020
.L18964:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L19021
.L18965:
	movl	%r13d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L18981
	testb	$4, 46264(%rbx,%rcx)
	je	.L18981
	movl	%r13d, %eax
	xorq	26808(%rdx), %rax
.L18967:
	movzbl	(%rax), %eax
	cmpb	%al, %r10b
	je	.L18968
.L19017:
	sbbl	%eax, %eax
	addl	$2, %eax
	jmp	.L18954
	.p2align 4,,10
	.p2align 3
.L18972:
	xorl	%eax, %eax
	xorl	%ebp, %ebp
	xorl	%r12d, %r12d
.L18954:
	movq	48(%rsp), %rsi
	movq	32(%rsp), %rdi
	movl	%r14d, 192(%rsi)
	movq	40(%rsp), %rsi
	movl	%r12d, 192(%rdi)
	movq	24(%rsp), %rdi
	movl	%r13d, 192(%rsi)
	movl	%ebp, 192(%rdi)
	movb	%al, 100(%rbx)
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L18973:
	.cfi_restore_state
	movl	$3, %eax
	jmp	.L18954
.L19019:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L18959
.L18977:
	movzbl	%sil, %r8d
.L18960:
	movl	16(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %edi
	movl	%r11d, 56(%rsp)
	call	s390_logical_to_main_l
	movl	56(%rsp), %r11d
	jmp	.L18961
.L19021:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L18965
.L18981:
	movzbl	%sil, %r8d
.L18966:
	movl	20(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %edi
	movl	%r11d, 60(%rsp)
	movl	%r10d, 56(%rsp)
	call	s390_logical_to_main_l
	movl	60(%rsp), %r11d
	movl	56(%rsp), %r10d
	jmp	.L18967
.L19020:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L18964
.L18963:
	movzbl	97(%rbx), %r8d
	jmp	.L18966
.L19018:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L18958
.L18957:
	movzbl	97(%rbx), %r8d
	jmp	.L18960
	.cfi_endproc
.LFE1824:
	.size	s390_compare_logical_long_extended, .-s390_compare_logical_long_extended
	.p2align 4,,15
	.globl	s390_compare_logical_string
	.type	s390_compare_logical_string, @function
s390_compare_logical_string:
.LFB1825:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movzbl	3(%rdi), %r14d
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movzbl	%r14b, %eax
	andl	$15, %r14d
	movl	%eax, 8(%rsp)
	movzbl	%r14b, %eax
	sarl	$4, 8(%rsp)
	movl	%eax, 12(%rsp)
	testl	$-256, 192(%rsi)
	jne	.L19079
.L19023:
	movl	8(%rsp), %edi
	movzbl	%r14b, %r14d
	movl	$4096, %r15d
	movl	120(%rbx), %ebp
	movzbl	192(%rbx), %r13d
	leal	5(%rdi), %r11d
	movslq	%edi, %rax
	leaq	(%rbx,%rax,8), %rax
	movslq	%r11d, %r11
	movl	192(%rax), %r12d
	movq	%rax, 24(%rsp)
	leaq	(%rbx,%r14,8), %rax
	movq	%rax, 16(%rsp)
	andl	%ebp, %r12d
	andl	192(%rax), %ebp
	movl	12(%rsp), %eax
	leal	5(%rax), %r10d
	movslq	%r10d, %r10
	jmp	.L19037
	.p2align 4,,10
	.p2align 3
.L19033:
	testb	%dl, %dl
	jne	.L19042
.L19046:
	cmpb	%al, %r13b
	jne	.L19080
.L19045:
	cmpb	%al, %r14b
	.p2align 4,,3
	ja	.L19043
	testb	%cl, %cl
	.p2align 4,,3
	jne	.L19043
	movl	120(%rbx), %eax
	addl	$1, %r12d
	addl	$1, %ebp
	andl	%eax, %r12d
	andl	%eax, %ebp
	subl	$1, %r15d
	je	.L19081
.L19037:
	movl	1892(%rbx,%r11,4), %eax
	testl	%eax, %eax
	je	.L19024
	movl	%r12d, %esi
	addl	$1, %eax
	shrl	$12, %esi
	cltq
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19082
.L19025:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L19083
.L19026:
	movl	%r12d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L19040
	testb	$4, 46264(%rbx,%rsi)
	je	.L19040
	movl	%r12d, %eax
	movzbl	%cl, %r8d
	xorq	26808(%rdx), %rax
.L19028:
	movzbl	(%rax), %r14d
	movl	1892(%rbx,%r10,4), %eax
	testl	%eax, %eax
	je	.L19029
	movl	%ebp, %esi
	addl	$1, %eax
	shrl	$12, %esi
	cltq
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19084
.L19030:
	testb	%r8b, %r8b
	jne	.L19085
.L19031:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L19029
	testb	$4, 46264(%rbx,%rsi)
	je	.L19029
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L19032:
	movzbl	(%rax), %eax
	cmpb	%r14b, %r13b
	sete	%dl
	cmpb	%al, %r13b
	sete	%cl
	jne	.L19033
	testb	%dl, %dl
	je	.L19046
	movb	$0, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L19080:
	.cfi_restore_state
	cmpb	%al, %r14b
	jae	.L19045
	.p2align 4,,10
	.p2align 3
.L19042:
	movl	$1, %eax
.L19035:
	movq	24(%rsp), %rdi
	movl	%r12d, 192(%rdi)
	movq	16(%rsp), %rdi
	movl	%ebp, 192(%rdi)
	movb	%al, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L19079:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L19023
	.p2align 4,,10
	.p2align 3
.L19043:
	movl	$2, %eax
	jmp	.L19035
	.p2align 4,,10
	.p2align 3
.L19081:
	movl	$3, %eax
	jmp	.L19035
.L19084:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L19030
.L19029:
	movl	12(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r11, 40(%rsp)
	movq	%r10, 32(%rsp)
	call	s390_logical_to_main_l
	movq	40(%rsp), %r11
	movq	32(%rsp), %r10
	jmp	.L19032
.L19083:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L19026
.L19040:
	movzbl	%cl, %r8d
.L19027:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movq	%r11, 40(%rsp)
	movq	%r10, 32(%rsp)
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	40(%rsp), %r11
	movq	32(%rsp), %r10
	jmp	.L19028
.L19082:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rax)
	jne	.L19025
.L19024:
	movzbl	97(%rbx), %r8d
	jmp	.L19027
.L19085:
	cmpb	43192(%rbx,%rsi), %r8b
	je	.L19031
	jmp	.L19029
	.cfi_endproc
.LFE1825:
	.size	s390_compare_logical_string, .-s390_compare_logical_string
	.p2align 4,,15
	.globl	s390_compare_until_substring_equal
	.type	s390_compare_until_substring_equal, @function
s390_compare_until_substring_equal:
.LFB1826:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$104, %rsp
	.cfi_def_cfa_offset 160
	movzbl	3(%rdi), %eax
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movzbl	%al, %edx
	movl	%eax, %r13d
	movl	%edx, 8(%rsp)
	andl	$15, %r13d
	sarl	$4, 8(%rsp)
	movzbl	%r13b, %edx
	movl	%edx, 52(%rsp)
	testb	$1, 8(%rsp)
	jne	.L19087
	testb	$1, %al
	jne	.L19087
.L19088:
	movzbl	192(%rbx), %eax
	movzbl	%r13b, %r13d
	movl	8(%rsp), %edx
	leaq	(%rbx,%r13,8), %rdi
	movl	120(%rbx), %r12d
	movq	%rdi, 40(%rsp)
	movzbl	200(%rbx), %r11d
	movl	%eax, %esi
	movb	%al, 15(%rsp)
	movslq	%edx, %rax
	leaq	(%rbx,%rax,8), %rax
	movl	192(%rax), %ebp
	movq	%rax, 32(%rsp)
	andl	%r12d, %ebp
	andl	192(%rdi), %r12d
	movl	%ebp, 192(%rax)
	movl	%edx, %eax
	addl	$1, %eax
	cltq
	leaq	(%rbx,%rax,8), %rax
	movl	%r12d, 192(%rdi)
	movq	%rax, 16(%rsp)
	movl	192(%rax), %edx
	movl	52(%rsp), %eax
	addl	$1, %eax
	testb	%sil, %sil
	cltq
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, 24(%rsp)
	movl	192(%rax), %eax
	je	.L19168
	testl	%eax, %eax
	movl	%edx, %r14d
	movl	%eax, %r13d
	jle	.L19169
.L19091:
	movl	52(%rsp), %edi
	cmpl	%edi, 8(%rsp)
	je	.L19092
	testl	%eax, %eax
	movl	%eax, 68(%rsp)
	movl	%edx, 64(%rsp)
	movl	%r12d, 60(%rsp)
	movl	%ebp, 56(%rsp)
	jle	.L19170
.L19131:
	movl	8(%rsp), %eax
	xorl	%r15d, %r15d
	movl	$0, 48(%rsp)
	addl	$5, %eax
	cltq
	movq	%rax, 72(%rsp)
	movl	52(%rsp), %eax
	addl	$5, %eax
	cltq
	movq	%rax, 80(%rsp)
	jmp	.L19095
	.p2align 4,,10
	.p2align 3
.L19128:
	movl	$2, %eax
	xorl	%r15d, %r15d
	movl	$2, %edx
.L19110:
	testl	%r14d, %r14d
	jle	.L19112
	addl	$1, %ebp
	subl	$1, %r14d
	andl	120(%rbx), %ebp
.L19112:
	testl	%r13d, %r13d
	jle	.L19113
	addl	$1, %r12d
	subl	$1, %r13d
	andl	120(%rbx), %r12d
.L19113:
	testl	$2047, %ebp
	je	.L19114
	testl	$2047, %r12d
	jne	.L19115
.L19114:
	movq	32(%rsp), %rdi
	movq	40(%rsp), %rsi
	movl	%ebp, 192(%rdi)
	movq	16(%rsp), %rdi
	movl	%r12d, 192(%rsi)
	movq	24(%rsp), %rsi
	movl	%r14d, 192(%rdi)
	movl	%r13d, 192(%rsi)
.L19115:
	cmpb	15(%rsp), %r15b
	je	.L19130
	addl	$1, 48(%rsp)
	testl	%r13d, %r13d
	jle	.L19171
.L19116:
	testb	%r15b, %r15b
	je	.L19172
.L19095:
	testl	%r14d, %r14d
	movl	%r11d, %r10d
	jle	.L19098
	movq	72(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L19099
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L19173
.L19100:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L19174
.L19101:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L19123
	testb	$4, 46264(%rbx,%rcx)
	je	.L19123
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L19103:
	movzbl	(%rax), %r10d
.L19098:
	testl	%r13d, %r13d
	movl	%r11d, %eax
	jle	.L19104
	movq	80(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L19105
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L19175
.L19106:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L19176
.L19107:
	movl	%r12d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L19127
	testb	$4, 46264(%rbx,%rcx)
	je	.L19127
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L19109:
	movzbl	(%rax), %eax
.L19104:
	cmpb	%al, %r10b
	jne	.L19128
	movl	68(%rsp), %eax
	testb	%r15b, %r15b
	movl	$1, %edx
	cmove	%r13d, %eax
	movl	%eax, 68(%rsp)
	movl	64(%rsp), %eax
	cmove	%r14d, %eax
	movl	%eax, 64(%rsp)
	movl	60(%rsp), %eax
	cmove	%r12d, %eax
	movl	%eax, 60(%rsp)
	movl	56(%rsp), %eax
	cmove	%ebp, %eax
	addl	$1, %r15d
	movl	%eax, 56(%rsp)
	movl	$1, %eax
	jmp	.L19110
	.p2align 4,,10
	.p2align 3
.L19087:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L19088
	.p2align 4,,10
	.p2align 3
.L19169:
	testl	%edx, %edx
	jg	.L19091
	movb	$2, 100(%rbx)
.L19086:
	addq	$104, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L19168:
	.cfi_restore_state
	movb	$0, 100(%rbx)
	addq	$104, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L19130:
	.cfi_restore_state
	xorl	%eax, %eax
.L19167:
	movl	56(%rsp), %ecx
.L19093:
	movq	32(%rsp), %rdi
	movq	40(%rsp), %rdx
	movl	%ecx, 192(%rdi)
	movl	60(%rsp), %edi
	movq	16(%rsp), %rcx
	movl	%edi, 192(%rdx)
	movl	64(%rsp), %edx
	movq	24(%rsp), %rdi
	movl	%edx, 192(%rcx)
	movl	68(%rsp), %ecx
	movl	%ecx, 192(%rdi)
.L19117:
	movb	%al, 100(%rbx)
	addq	$104, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L19171:
	.cfi_restore_state
	testl	%r14d, %r14d
	jg	.L19116
	cmpl	$1, %edx
	je	.L19167
.L19096:
	movq	32(%rsp), %rdi
	movq	40(%rsp), %rdx
	movl	%ebp, 192(%rdi)
	movq	16(%rsp), %rdi
	movl	%r12d, 192(%rdx)
	movq	24(%rsp), %rdx
	movl	%r14d, 192(%rdi)
	movl	%r13d, 192(%rdx)
	jmp	.L19117
	.p2align 4,,10
	.p2align 3
.L19172:
	cmpl	$4095, 48(%rsp)
	jle	.L19095
	movl	$3, %eax
	jmp	.L19096
	.p2align 4,,10
	.p2align 3
.L19092:
	movzbl	15(%rsp), %eax
	cmpl	%edx, %eax
	setg	100(%rbx)
	jmp	.L19086
.L19170:
	testl	%edx, %edx
	jg	.L19131
	xorl	%eax, %eax
	movl	%ebp, %ecx
	jmp	.L19093
.L19174:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L19101
.L19123:
	movzbl	%sil, %r8d
.L19102:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r11d, 88(%rsp)
	call	s390_logical_to_main_l
	movl	88(%rsp), %r11d
	jmp	.L19103
.L19176:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L19107
.L19127:
	movzbl	%sil, %r8d
.L19108:
	movl	52(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r11d, 92(%rsp)
	movl	%r10d, 88(%rsp)
	call	s390_logical_to_main_l
	movl	92(%rsp), %r11d
	movl	88(%rsp), %r10d
	jmp	.L19109
.L19175:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L19106
.L19105:
	movzbl	97(%rbx), %r8d
	jmp	.L19108
.L19173:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L19100
.L19099:
	movzbl	97(%rbx), %r8d
	jmp	.L19102
	.cfi_endproc
.LFE1826:
	.size	s390_compare_until_substring_equal, .-s390_compare_until_substring_equal
	.p2align 4,,15
	.globl	s390_convert_utf16_to_utf8
	.type	s390_convert_utf16_to_utf8, @function
s390_convert_utf16_to_utf8:
.LFB1827:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movq	%rdi, %r12
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$136, %rsp
	.cfi_def_cfa_offset 192
	movzbl	3(%rdi), %eax
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movzbl	%al, %edi
	movl	%eax, %ebp
	movl	%edi, 64(%rsp)
	andl	$15, %ebp
	sarl	$4, 64(%rsp)
	movzbl	%bpl, %edi
	movl	%edi, 8(%rsp)
	testb	$1, 64(%rsp)
	jne	.L19178
	testb	$1, %al
	jne	.L19178
.L19179:
	movl	64(%rsp), %edi
	movzbl	%bpl, %ebp
	movzbl	2(%r12), %edx
	movl	120(%rbx), %esi
	movslq	%edi, %rax
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, 24(%rsp)
	movl	192(%rax), %r12d
	leaq	(%rbx,%rbp,8), %rax
	movq	%rax, 32(%rsp)
	movl	192(%rax), %ebp
	movl	%edi, %eax
	addl	$1, %eax
	cltq
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, 16(%rsp)
	movl	192(%rax), %r10d
	movl	8(%rsp), %eax
	addl	$1, %eax
	cltq
	leaq	(%rbx,%rax,8), %rax
	movl	192(%rax), %r14d
	movq	%rax, 40(%rsp)
	cmpl	$1, %r14d
	seta	%al
	jbe	.L19180
	testl	%r10d, %r10d
	je	.L19207
.L19180:
	testl	%r10d, %r10d
	je	.L19246
	testb	%al, %al
	.p2align 4,,3
	je	.L19246
	movl	64(%rsp), %eax
	andl	$16, %edx
	andl	%esi, %r12d
	andl	%esi, %ebp
	movb	%dl, 71(%rsp)
	movl	$4096, %r11d
	movl	$0, 12(%rsp)
	addl	$5, %eax
	cltq
	movq	%rax, 48(%rsp)
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 72(%rsp)
	jmp	.L19182
	.p2align 4,,10
	.p2align 3
.L19372:
	movb	%r13b, 112(%rsp)
	movl	%eax, %r14d
	movl	$1, %r15d
	movl	$1, 56(%rsp)
	movl	$2047, %eax
	xorl	%r13d, %r13d
.L19193:
	cmpl	%r10d, %r13d
	jae	.L19207
.L19373:
	movl	%r12d, %edx
	andl	$2047, %edx
	cmpl	%edx, %eax
	jl	.L19208
	movq	48(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L19209
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19367
.L19210:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L19368
.L19211:
	movl	%r12d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L19256
	testb	$2, 46264(%rbx,%rcx)
	je	.L19256
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L19213:
	movq	%rax, %rdx
	xorl	%eax, %eax
	leaq	112(%rsp), %rcx
	testb	$4, %r15b
	je	.L19217
	movl	(%rcx), %eax
	movl	%eax, (%rdx)
	movl	$4, %eax
.L19217:
	testb	$2, %r15b
	je	.L19218
	movzwl	(%rcx,%rax), %esi
	movw	%si, (%rdx,%rax)
	addq	$2, %rax
.L19218:
	andl	$1, %r15d
	je	.L19220
	movzbl	(%rcx,%rax), %ecx
	movb	%cl, (%rdx,%rax)
.L19220:
	movl	120(%rbx), %esi
	leal	1(%r13,%r12), %r12d
	subl	%r13d, %r10d
	movq	24(%rsp), %rax
	subl	$1, %r10d
	andl	%esi, %r12d
	testl	%r14d, %r14d
	movl	%r12d, 192(%rax)
	movq	16(%rsp), %rax
	movl	%r10d, 192(%rax)
	movq	32(%rsp), %rax
	movl	%ebp, 192(%rax)
	movq	40(%rsp), %rax
	movl	%r14d, 192(%rax)
	setne	%al
	testl	%r10d, %r10d
	jne	.L19243
	testb	%al, %al
	movl	$1, %edx
	cmove	12(%rsp), %edx
	movl	%edx, 12(%rsp)
.L19243:
	testl	%r10d, %r10d
	je	.L19260
	testb	%al, %al
	je	.L19260
	subl	$1, %r11d
	je	.L19247
	cmpl	$1, %r14d
	jbe	.L19260
.L19182:
	testb	$1, %bpl
	jne	.L19369
.L19184:
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L19186
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19370
.L19187:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L19371
.L19188:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L19250
	testb	$4, 46264(%rbx,%rcx)
	je	.L19250
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L19190:
	movzwl	(%rax), %r13d
#APP
# 477 "vstore.h" 1
	rorw $8, %r13w
# 0 "" 2
#NO_APP
.L19191:
	leal	-2(%r14), %eax
	addl	$2, %ebp
	andl	%esi, %ebp
	cmpw	$127, %r13w
	jbe	.L19372
	cmpw	$2047, %r13w
	ja	.L19194
	movl	%r13d, %edx
	andl	$63, %r13d
	movl	%eax, %r14d
	orl	$-128, %r13d
	shrw	$6, %dx
	movl	$2, 56(%rsp)
	movb	%r13b, 113(%rsp)
	movl	$1, %r13d
	orl	$-64, %edx
	cmpl	%r10d, %r13d
	movb	%dl, 112(%rsp)
	movl	$2, %r15d
	movl	$2046, %eax
	jb	.L19373
	.p2align 4,,10
	.p2align 3
.L19207:
	movl	$1, %eax
.L19181:
	movb	%al, 100(%rbx)
.L19177:
	addq	$136, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L19178:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L19179
	.p2align 4,,10
	.p2align 3
.L19194:
	leal	10240(%r13), %edx
	cmpw	$1023, %dx
	jbe	.L19195
	movl	%r13d, %edx
	movl	%eax, %r14d
	movl	$3, 56(%rsp)
	shrw	$12, %dx
	movl	$3, %r15d
	movl	$2045, %eax
	orl	$-32, %edx
	movb	%dl, 112(%rsp)
	movl	%r13d, %edx
	andl	$63, %r13d
	andl	$4032, %edx
	orl	$-128, %r13d
	sarl	$6, %edx
	movb	%r13b, 114(%rsp)
	movl	$2, %r13d
	orl	$-128, %edx
	movb	%dl, 113(%rsp)
	jmp	.L19193
	.p2align 4,,10
	.p2align 3
.L19195:
	cmpl	$1, %eax
	jbe	.L19260
	testb	$1, %bpl
	jne	.L19374
.L19197:
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L19199
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19375
.L19200:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L19376
.L19201:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L19253
	testb	$4, 46264(%rbx,%rcx)
	je	.L19253
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L19203:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L19204:
	addl	$2, %ebp
	subl	$4, %r14d
	andl	%esi, %ebp
	cmpb	$0, 71(%rsp)
	je	.L19205
	leal	9216(%rax), %edx
	cmpw	$768, %dx
	ja	.L19377
.L19205:
	movl	%r13d, %ecx
	movl	$4, 56(%rsp)
	movl	$4, %r15d
	andl	$960, %ecx
	sarl	$6, %ecx
	addl	$1, %ecx
	movl	%ecx, %edx
	andl	$3, %ecx
	shrw	$2, %dx
	sall	$4, %ecx
	orl	$-16, %edx
	movb	%dl, 112(%rsp)
	movl	%r13d, %edx
	andl	$3, %r13d
	andl	$60, %edx
	sall	$4, %r13d
	sarl	$2, %edx
	orl	$-128, %r13d
	orl	$-128, %edx
	orl	%ecx, %edx
	movb	%dl, 113(%rsp)
	movl	%eax, %edx
	andl	$63, %eax
	andl	$960, %edx
	orl	$-128, %eax
	sarl	$6, %edx
	movb	%al, 115(%rsp)
	movl	$2044, %eax
	orl	%edx, %r13d
	movb	%r13b, 114(%rsp)
	movl	$3, %r13d
	jmp	.L19193
	.p2align 4,,10
	.p2align 3
.L19260:
	movzbl	12(%rsp), %eax
	jmp	.L19181
.L19247:
	movl	$3, %eax
	jmp	.L19181
.L19377:
	movb	$2, 100(%rbx)
	jmp	.L19177
.L19371:
	cmpb	43192(%rbx,%rcx), %dil
	je	.L19188
.L19250:
	movzbl	%dil, %r8d
.L19189:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 80(%rsp)
	movl	%r11d, 56(%rsp)
	call	s390_logical_to_main_l
	movl	120(%rbx), %esi
	movl	80(%rsp), %r10d
	movl	56(%rsp), %r11d
	jmp	.L19190
.L19368:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L19211
.L19256:
	movzbl	%sil, %r8d
.L19212:
	movl	64(%rsp), %esi
	movq	%r15, %r9
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r10d, 80(%rsp)
	movl	%r11d, 56(%rsp)
	call	s390_logical_to_main_l
	movl	80(%rsp), %r10d
	movl	56(%rsp), %r11d
	jmp	.L19213
.L19369:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	jne	.L19184
	movl	8(%rsp), %esi
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 80(%rsp)
	movl	%r11d, 56(%rsp)
	call	s390_vfetch2_full
	movl	120(%rbx), %esi
	movl	%eax, %r13d
	movl	80(%rsp), %r10d
	movl	56(%rsp), %r11d
	jmp	.L19191
.L19208:
	movq	72(%rsp), %rax
	movl	$2048, 80(%rsp)
	subl	%edx, 80(%rsp)
	movl	1892(%rax), %edx
	testl	%edx, %edx
	je	.L19221
	movl	%r12d, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rax
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19378
.L19222:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L19379
.L19223:
	movl	%r12d, %edi
	andl	$2143289344, %edi
	orl	2224(%rbx), %edi
	cmpl	10424(%rcx), %edi
	jne	.L19259
	testb	$1, 46264(%rbx,%rsi)
	je	.L19259
	movq	35000(%rcx), %rdi
	movzbl	%al, %r8d
	movl	80(%rsp), %r15d
	movq	%rdi, 984(%rbx)
	movq	%rdi, 96(%rsp)
	movl	%r12d, %edi
	movq	%rdi, 88(%rsp)
	movq	26808(%rcx), %rdi
	xorq	%rdi, 88(%rsp)
.L19225:
	movl	80(%rsp), %eax
	movslq	%edx, %rdx
	leal	(%rax,%r12), %edi
	andl	120(%rbx), %edi
	movl	%edi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rsi
	movl	2232(%rsi), %eax
	cmpl	%eax, 320(%rbx,%rdx,8)
	jne	.L19380
.L19227:
	testb	%r8b, %r8b
	jne	.L19381
.L19229:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rsi), %edx
	jne	.L19228
	testb	$2, 46264(%rbx,%rcx)
	je	.L19228
	movl	56(%rsp), %eax
	movl	%edi, %r8d
	xorq	26808(%rsi), %r8
	subl	80(%rsp), %eax
	cltq
	movq	%rax, 56(%rsp)
.L19230:
	movq	96(%rsp), %rax
	leaq	112(%rsp), %r9
	movq	88(%rsp), %rdi
	movq	%r9, %rsi
	orb	$6, (%rax)
	cmpq	$8, %r15
	jae	.L19382
.L19231:
	xorl	%eax, %eax
	testb	$4, %r15b
	je	.L19234
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L19234:
	testb	$2, %r15b
	je	.L19235
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L19235:
	testb	$1, %r15b
	je	.L19233
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L19233:
	cmpq	$8, 56(%rsp)
	leaq	(%r9,%r15), %rsi
	movq	%r8, %rdi
	movq	%rsi, %rdx
	jae	.L19383
.L19237:
	xorl	%eax, %eax
	testb	$4, 56(%rsp)
	je	.L19240
	movl	(%rdx), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L19240:
	testb	$2, 56(%rsp)
	je	.L19241
	movzwl	(%rdx,%rax), %ecx
	movw	%cx, (%rdi,%rax)
	addq	$2, %rax
.L19241:
	testb	$1, 56(%rsp)
	je	.L19220
	movzbl	(%rdx,%rax), %edx
	movb	%dl, (%rdi,%rax)
	jmp	.L19220
.L19370:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L19187
.L19186:
	movzbl	97(%rbx), %r8d
	jmp	.L19189
.L19367:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L19210
.L19209:
	movzbl	97(%rbx), %r8d
	jmp	.L19212
.L19383:
	cmpq	$127, 56(%rsp)
	ja	.L19384
	movq	56(%rsp), %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rsi, %rdx
	jmp	.L19237
.L19382:
	cmpq	$127, %r15
	ja	.L19385
	movq	%r15, %rcx
	movq	%r9, %rsi
	shrq	$3, %rcx
	rep movsq
	jmp	.L19231
.L19246:
	xorl	%eax, %eax
	jmp	.L19181
.L19374:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	jne	.L19197
	movl	8(%rsp), %esi
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 80(%rsp)
	movl	%r11d, 56(%rsp)
	call	s390_vfetch2_full
	movl	120(%rbx), %esi
	movl	80(%rsp), %r10d
	movl	56(%rsp), %r11d
	jmp	.L19204
.L19385:
	movq	%r15, %rdx
	movl	%r10d, 108(%rsp)
	movl	%r11d, 104(%rsp)
	movq	%r8, 96(%rsp)
	movq	%r9, 80(%rsp)
	call	memcpy
	movq	80(%rsp), %r9
	movq	96(%rsp), %r8
	movl	104(%rsp), %r11d
	movl	108(%rsp), %r10d
	jmp	.L19233
.L19376:
	cmpb	43192(%rbx,%rcx), %dil
	je	.L19201
.L19253:
	movzbl	%dil, %r8d
.L19202:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 80(%rsp)
	movl	%r11d, 56(%rsp)
	call	s390_logical_to_main_l
	movl	120(%rbx), %esi
	movl	80(%rsp), %r10d
	movl	56(%rsp), %r11d
	jmp	.L19203
.L19375:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L19200
.L19199:
	movzbl	97(%rbx), %r8d
	jmp	.L19202
.L19380:
	movzbl	1976(%rbx,%rdx), %edx
	testb	%dl, 44216(%rbx,%rcx)
	jne	.L19227
.L19228:
	movl	56(%rsp), %eax
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	64(%rsp), %esi
	movl	%r10d, 108(%rsp)
	movl	%r11d, 104(%rsp)
	subl	80(%rsp), %eax
	cltq
	movq	%rax, %r9
	movq	%rax, 56(%rsp)
	call	s390_logical_to_main_l
	movl	108(%rsp), %r10d
	movq	%rax, %r8
	movl	104(%rsp), %r11d
	jmp	.L19230
.L19379:
	cmpb	43192(%rbx,%rsi), %al
	je	.L19223
.L19259:
	movzbl	%al, %r8d
.L19224:
	movl	80(%rsp), %r15d
	movq	%rbx, %rdx
	movl	$1, %ecx
	movl	64(%rsp), %esi
	movl	%r12d, %edi
	movl	%r10d, 108(%rsp)
	movl	%r11d, 104(%rsp)
	movq	%r15, %r9
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, 88(%rsp)
	movq	984(%rbx), %rax
	movl	104(%rsp), %r11d
	movl	108(%rsp), %r10d
	movq	%rax, 96(%rsp)
	movq	72(%rsp), %rax
	movl	1892(%rax), %edx
	testl	%edx, %edx
	jne	.L19386
	movl	80(%rsp), %eax
	leal	(%rax,%r12), %edi
	andl	120(%rbx), %edi
	jmp	.L19228
.L19378:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L19222
.L19221:
	movzbl	97(%rbx), %r8d
	jmp	.L19224
.L19384:
	movq	56(%rsp), %rdx
	movl	%r10d, 88(%rsp)
	movl	%r11d, 80(%rsp)
	call	memcpy
	movl	80(%rsp), %r11d
	movl	88(%rsp), %r10d
	jmp	.L19220
.L19381:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L19229
	jmp	.L19228
.L19386:
	addl	$1, %edx
	jmp	.L19225
	.cfi_endproc
.LFE1827:
	.size	s390_convert_utf16_to_utf8, .-s390_convert_utf16_to_utf8
	.p2align 4,,15
	.globl	s390_convert_utf8_to_utf16
	.type	s390_convert_utf8_to_utf16, @function
s390_convert_utf8_to_utf16:
.LFB1828:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rdi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	movzbl	3(%rdi), %eax
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movzbl	%al, %edi
	movl	%edi, 56(%rsp)
	movl	%eax, %edi
	sarl	$4, 56(%rsp)
	andl	$15, %edi
	movl	%edi, 60(%rsp)
	testb	$1, 56(%rsp)
	jne	.L19388
	testb	$1, %al
	jne	.L19388
.L19389:
	movl	56(%rsp), %esi
	movl	60(%rsp), %r9d
	movzbl	2(%rbp), %ecx
	leal	1(%rsi), %edx
	movslq	%esi, %rax
	leaq	(%rbx,%rax,8), %rax
	movslq	%r9d, %rdi
	movq	%rdi, 16(%rsp)
	movl	192(%rbx,%rdi,8), %ebp
	movslq	%edx, %rdi
	leal	1(%r9), %edx
	movq	%rax, 8(%rsp)
	movl	192(%rax), %r12d
	movslq	%edx, %rsi
	movl	120(%rbx), %eax
	movq	%rdi, 24(%rsp)
	movl	192(%rbx,%rsi,8), %r11d
	movq	%rsi, 32(%rsp)
	movl	192(%rbx,%rdi,8), %r13d
	testl	%r11d, %r11d
	setne	%dl
	je	.L19390
	testl	%r13d, %r13d
	je	.L19493
.L19390:
	testl	%r13d, %r13d
	je	.L19524
	testb	%dl, %dl
	.p2align 4,,3
	je	.L19524
	andl	%eax, %r12d
	andl	%eax, %ebp
	movl	60(%rsp), %eax
	shrb	$4, %cl
	movl	$4096, %r10d
	movl	%r11d, %r14d
	movl	%ecx, %edi
	movl	$0, 48(%rsp)
	andl	$1, %edi
	addl	$5, %eax
	movl	%edi, 52(%rsp)
	cltq
	movq	%rax, (%rsp)
	movl	56(%rsp), %eax
	addl	$5, %eax
	cltq
	movq	%rax, 40(%rsp)
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 64(%rsp)
	.p2align 4,,10
	.p2align 3
.L19392:
	movq	(%rsp), %rax
	leaq	(%rbx,%rax,4), %r15
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L19393
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19743
.L19394:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L19744
.L19395:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L19528
	testb	$4, 46264(%rbx,%rcx)
	je	.L19528
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L19397:
	movzbl	(%rax), %r11d
	testb	%r11b, %r11b
	movb	%r11b, 96(%rsp)
	js	.L19398
	xorl	%r15d, %r15d
.L19399:
	cmpl	$1, %r13d
	jbe	.L19493
	movl	%r12d, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	je	.L19503
	movq	40(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L19504
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19745
.L19505:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L19746
.L19506:
	movl	%r12d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L19553
	testb	$2, 46264(%rbx,%rcx)
	je	.L19553
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L19508:
#APP
# 248 "vstore.h" 1
	rorw $8, %r11w
# 0 "" 2
#NO_APP
	movw	%r11w, (%rax)
.L19509:
	movl	120(%rbx), %eax
	addl	$2, %r12d
	subl	$2, %r13d
	andl	%eax, %r12d
.L19502:
	leal	1(%rbp,%r15), %ebp
	subl	%r15d, %r14d
	andl	%eax, %ebp
	movq	8(%rsp), %rax
	subl	$1, %r14d
	testl	%r14d, %r14d
	movl	%r12d, 192(%rax)
	movq	24(%rsp), %rax
	movl	%r13d, 192(%rbx,%rax,8)
	movq	16(%rsp), %rax
	movl	%ebp, 192(%rbx,%rax,8)
	movq	32(%rsp), %rax
	movl	%r14d, 192(%rbx,%rax,8)
	jne	.L19747
.L19557:
	movzbl	48(%rsp), %eax
	jmp	.L19391
	.p2align 4,,10
	.p2align 3
.L19388:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L19389
	.p2align 4,,10
	.p2align 3
.L19493:
	movl	$1, %eax
.L19391:
	movb	%al, 100(%rbx)
	addq	$120, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L19747:
	.cfi_restore_state
	testl	%r13d, %r13d
	movl	$1, %eax
	cmovne	48(%rsp), %eax
	movl	%eax, 48(%rsp)
	je	.L19557
	subl	$1, %r10d
	jne	.L19392
	movl	$3, %eax
	jmp	.L19391
	.p2align 4,,10
	.p2align 3
.L19398:
	movl	%r11d, %eax
	andl	$-32, %eax
	cmpb	$-64, %al
	je	.L19748
	movl	%r11d, %eax
	andl	$-16, %eax
	cmpb	$-32, %al
	je	.L19749
	andl	$-8, %r11d
	cmpb	$-16, %r11b
	jne	.L19541
	cmpl	$3, %r14d
	jbe	.L19557
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L19465
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L19750
.L19466:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L19751
.L19467:
	movl	%ebp, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L19544
	testb	$4, 46264(%rbx,%rcx)
	je	.L19544
	movl	%ebp, %r11d
	xorq	26808(%rax), %r11
.L19469:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jg	.L19470
	movl	(%r11), %eax
	movl	%eax, 96(%rsp)
.L19471:
	movl	52(%rsp), %eax
	movzbl	96(%rsp), %r11d
	testl	%eax, %eax
	je	.L19489
	cmpb	$-16, %r11b
	je	.L19752
	leal	15(%r11), %eax
	cmpb	$2, %al
	jbe	.L19753
	cmpb	$-12, %r11b
	jne	.L19489
	movzbl	97(%rsp), %ecx
	leal	-128(%rcx), %eax
	cmpb	$15, %al
	ja	.L19429
.L19739:
	movzbl	98(%rsp), %edx
	leal	-128(%rdx), %eax
	cmpb	$63, %al
	ja	.L19429
	movzbl	99(%rsp), %eax
	leal	-128(%rax), %esi
	cmpb	$63, %sil
	jbe	.L19491
.L19429:
	movb	$2, 100(%rbx)
	addq	$120, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L19489:
	.cfi_restore_state
	movzbl	97(%rsp), %ecx
	movzbl	98(%rsp), %edx
	movzbl	99(%rsp), %eax
.L19491:
	movl	%ecx, %r15d
	andl	$7, %r11d
	andl	$48, %ecx
	movl	%edx, %esi
	sarl	$4, %ecx
	andl	$15, %r15d
	sall	$2, %r11d
	andl	$48, %esi
	sall	$2, %r15d
	orl	%r11d, %ecx
	sarl	$4, %esi
	andl	$63, %eax
	subl	$1, %ecx
	orl	%esi, %r15d
	andl	$15, %edx
	andl	$15, %ecx
	orw	$-10240, %r15w
	orw	$-9216, %ax
	sall	$6, %ecx
	sall	$6, %edx
	orl	%ecx, %r15d
	orl	%edx, %eax
	cmpl	$3, %r13d
	jbe	.L19493
	sall	$16, %r15d
	movzwl	%ax, %eax
	orl	%eax, %r15d
	testb	$3, %r12b
	jne	.L19754
.L19494:
	movq	40(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L19496
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19755
.L19497:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L19756
.L19498:
	movl	%r12d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L19550
	testb	$2, 46264(%rbx,%rcx)
	je	.L19550
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L19500:
	bswap	%r15d
	movl	%r15d, (%rax)
.L19501:
	movl	120(%rbx), %eax
	addl	$4, %r12d
	subl	$4, %r13d
	movl	$3, %r15d
	andl	%eax, %r12d
	jmp	.L19502
	.p2align 4,,10
	.p2align 3
.L19748:
	movl	52(%rsp), %esi
	testl	%esi, %esi
	je	.L19401
	cmpb	$-63, %r11b
	jbe	.L19429
.L19401:
	cmpl	$1, %r14d
	jbe	.L19557
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L19404
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L19757
.L19405:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L19758
.L19406:
	movl	%ebp, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L19531
	testb	$4, 46264(%rbx,%rcx)
	je	.L19531
	movl	%ebp, %r11d
	xorq	26808(%rax), %r11
.L19408:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	je	.L19409
	movzwl	(%r11), %eax
	movw	%ax, 96(%rsp)
.L19410:
	movl	52(%rsp), %ecx
	movzbl	97(%rsp), %r11d
	testl	%ecx, %ecx
	je	.L19430
	leal	-128(%r11), %eax
	cmpb	$63, %al
	ja	.L19429
.L19430:
	movzbl	96(%rsp), %eax
	andl	$63, %r11d
	movl	$1, %r15d
	andl	$31, %eax
	sall	$6, %eax
	orl	%eax, %r11d
	jmp	.L19399
	.p2align 4,,10
	.p2align 3
.L19749:
	cmpl	$2, %r14d
	jbe	.L19557
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L19433
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L19759
.L19434:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L19760
.L19435:
	movl	%ebp, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L19537
	testb	$4, 46264(%rbx,%rcx)
	je	.L19537
	movl	%ebp, %r11d
	xorq	26808(%rax), %r11
.L19437:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2045, %eax
	jg	.L19438
	movzwl	(%r11), %eax
	movw	%ax, 96(%rsp)
	movzbl	2(%r11), %eax
	movb	%al, 98(%rsp)
.L19439:
	movl	52(%rsp), %edx
	testl	%edx, %edx
	je	.L19761
	movzbl	96(%rsp), %r11d
	cmpb	$-32, %r11b
	je	.L19762
	leal	31(%r11), %eax
	cmpb	$11, %al
	movzbl	97(%rsp), %eax
	ja	.L19763
.L19461:
	leal	-128(%rax), %edx
	cmpb	$63, %dl
	ja	.L19429
	movzbl	98(%rsp), %edx
	addl	$-128, %edx
	cmpb	$63, %dl
	ja	.L19429
.L19462:
	cmpb	$-19, %r11b
	je	.L19716
	movzbl	98(%rsp), %edx
	jmp	.L19463
	.p2align 4,,10
	.p2align 3
.L19753:
	movzbl	97(%rsp), %ecx
	leal	-128(%rcx), %eax
	cmpb	$63, %al
	jbe	.L19739
	jmp	.L19429
	.p2align 4,,10
	.p2align 3
.L19761:
	movzbl	97(%rsp), %eax
	movzbl	96(%rsp), %r11d
	movzbl	98(%rsp), %edx
.L19463:
	sall	$12, %r11d
	andl	$63, %edx
	andl	$63, %eax
	orl	%edx, %r11d
	sall	$6, %eax
	movl	$2, %r15d
	orl	%eax, %r11d
	jmp	.L19399
	.p2align 4,,10
	.p2align 3
.L19752:
	movzbl	97(%rsp), %ecx
	leal	112(%rcx), %eax
	cmpb	$47, %al
	jbe	.L19739
	jmp	.L19429
	.p2align 4,,10
	.p2align 3
.L19763:
	cmpb	$-18, %r11b
	je	.L19461
	.p2align 4,,7
	jmp	.L19462
.L19762:
	movzbl	97(%rsp), %eax
	leal	96(%rax), %edx
	cmpb	$31, %dl
	ja	.L19429
.L19737:
	movzbl	98(%rsp), %edx
	leal	-128(%rdx), %ecx
	cmpb	$63, %cl
	jbe	.L19463
	jmp	.L19429
	.p2align 4,,10
	.p2align 3
.L19716:
	leal	-128(%rax), %edx
	cmpb	$31, %dl
	jbe	.L19737
	.p2align 4,,5
	jmp	.L19429
	.p2align 4,,10
	.p2align 3
.L19541:
	movl	$2, %eax
	jmp	.L19391
.L19744:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L19395
.L19528:
	movzbl	%sil, %r8d
.L19396:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 72(%rsp)
	call	s390_logical_to_main_l
	movl	72(%rsp), %r10d
	jmp	.L19397
.L19743:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L19394
.L19393:
	movzbl	97(%rbx), %r8d
	jmp	.L19396
.L19746:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L19506
.L19553:
	movzbl	%sil, %r8d
.L19507:
	movl	56(%rsp), %esi
	movl	$2, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r10d, 80(%rsp)
	movl	%r11d, 72(%rsp)
	call	s390_logical_to_main_l
	movl	80(%rsp), %r10d
	movl	72(%rsp), %r11d
	jmp	.L19508
.L19756:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L19498
.L19550:
	movzbl	%sil, %r8d
.L19499:
	movl	56(%rsp), %esi
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movl	%r10d, 72(%rsp)
	call	s390_logical_to_main_l
	movl	72(%rsp), %r10d
	jmp	.L19500
.L19751:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L19467
.L19544:
	movzbl	%sil, %r8d
.L19468:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 72(%rsp)
	call	s390_logical_to_main_l
	movl	72(%rsp), %r10d
	movq	%rax, %r11
	jmp	.L19469
.L19745:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L19505
.L19504:
	movzbl	97(%rbx), %r8d
	jmp	.L19507
.L19503:
	movq	64(%rsp), %rax
	movl	1892(%rax), %edx
	testl	%edx, %edx
	je	.L19510
	movl	%r12d, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rax
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19764
.L19511:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L19765
.L19512:
	movl	%r12d, %edi
	andl	$2143289344, %edi
	orl	2224(%rbx), %edi
	cmpl	10424(%rcx), %edi
	jne	.L19556
	testb	$1, 46264(%rbx,%rsi)
	je	.L19556
	movq	35000(%rcx), %rsi
	movzbl	%al, %r8d
	movq	%rsi, 984(%rbx)
	movq	%rsi, 80(%rsp)
	movl	%r12d, %esi
	movq	%rsi, 72(%rsp)
	movq	26808(%rcx), %rsi
	xorq	%rsi, 72(%rsp)
.L19514:
	movslq	%edx, %rdx
	leal	1(%r12), %edi
	andl	120(%rbx), %edi
	movl	%edi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rsi
	movl	2232(%rsi), %eax
	cmpl	%eax, 320(%rbx,%rdx,8)
	jne	.L19766
.L19516:
	testb	%r8b, %r8b
	jne	.L19767
.L19518:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rsi), %edx
	jne	.L19517
	testb	$2, 46264(%rbx,%rcx)
	je	.L19517
	movl	%edi, %eax
	xorq	26808(%rsi), %rax
.L19519:
	movq	80(%rsp), %rsi
	movl	%r11d, %edx
	shrw	$8, %dx
	orb	$6, (%rsi)
	movq	72(%rsp), %rsi
	movb	%dl, (%rsi)
	movb	%r11b, (%rax)
	jmp	.L19509
.L19755:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L19497
.L19496:
	movzbl	97(%rbx), %r8d
	jmp	.L19499
.L19754:
	movl	%r12d, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L19494
	movl	56(%rsp), %edx
	movq	%rbx, %rcx
	movl	%r12d, %esi
	movl	%r15d, %edi
	movl	%r10d, 72(%rsp)
	call	s390_vstore4_full
	movl	72(%rsp), %r10d
	jmp	.L19501
.L19750:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L19466
.L19465:
	movzbl	97(%rbx), %r8d
	jmp	.L19468
.L19470:
	movl	$2048, 72(%rsp)
	subl	%eax, 72(%rsp)
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L19472
	leal	1(%rax), %ecx
	movl	72(%rsp), %eax
	movslq	%ecx, %rcx
	leal	(%rax,%rbp), %edi
	andl	120(%rbx), %edi
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L19768
.L19473:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L19769
.L19475:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L19474
	testb	$4, 46264(%rbx,%rax)
	je	.L19474
	movl	%edi, %r9d
	xorq	26808(%rdx), %r9
.L19476:
	movl	72(%rsp), %r15d
	movq	%r11, %rsi
	leaq	96(%rsp), %r8
	movq	%r8, %rdi
	cmpq	$8, %r15
	jae	.L19770
.L19477:
	xorl	%eax, %eax
	testb	$4, %r15b
	je	.L19480
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L19480:
	testb	$2, %r15b
	je	.L19481
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L19481:
	testb	$1, %r15b
	je	.L19479
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L19479:
	leaq	(%r8,%r15), %rdi
	movl	$4, %edx
	movq	%r9, %rsi
	subl	72(%rsp), %edx
	movq	%rdi, %r11
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L19771
.L19483:
	xorl	%eax, %eax
	testb	$4, %dl
	je	.L19486
	movl	(%rsi), %eax
	movl	%eax, (%r11)
	movl	$4, %eax
.L19486:
	testb	$2, %dl
	je	.L19487
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%r11,%rax)
	addq	$2, %rax
.L19487:
	andl	$1, %edx
	je	.L19471
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%r11,%rax)
	jmp	.L19471
.L19771:
	cmpq	$127, %rdx
	ja	.L19772
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rdi, %r11
	jmp	.L19483
.L19770:
	cmpq	$127, %r15
	ja	.L19773
	movq	%r15, %rcx
	movq	%r8, %rdi
	shrq	$3, %rcx
	rep movsq
	jmp	.L19477
.L19772:
	movl	%r10d, 72(%rsp)
	call	memcpy
	movl	72(%rsp), %r10d
	jmp	.L19471
.L19773:
	movq	%r15, %rdx
	movl	%r10d, 88(%rsp)
	movq	%r9, 80(%rsp)
	call	memcpy
	movq	80(%rsp), %r9
	movq	%rax, %r8
	movl	88(%rsp), %r10d
	jmp	.L19479
.L19768:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L19473
.L19742:
	movzbl	97(%rbx), %r8d
.L19474:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 88(%rsp)
	movq	%r11, 80(%rsp)
	call	s390_logical_to_main_l
	movl	88(%rsp), %r10d
	movq	%rax, %r9
	movq	80(%rsp), %r11
	jmp	.L19476
.L19769:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L19475
	jmp	.L19474
.L19472:
	movl	72(%rsp), %eax
	leal	(%rax,%rbp), %edi
	andl	120(%rbx), %edi
	jmp	.L19742
.L19757:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L19405
.L19404:
	movzbl	97(%rbx), %r8d
.L19407:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 72(%rsp)
	call	s390_logical_to_main_l
	movl	72(%rsp), %r10d
	movq	%rax, %r11
	jmp	.L19408
.L19524:
	xorl	%eax, %eax
	jmp	.L19391
.L19765:
	cmpb	43192(%rbx,%rsi), %al
	je	.L19512
.L19556:
	movzbl	%al, %r8d
.L19513:
	movl	56(%rsp), %esi
	movq	%rbx, %rdx
	movl	$1, %r9d
	movl	$1, %ecx
	movl	%r12d, %edi
	movl	%r10d, 92(%rsp)
	movl	%r11d, 88(%rsp)
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, 72(%rsp)
	movq	984(%rbx), %rax
	movl	88(%rsp), %r11d
	movl	92(%rsp), %r10d
	movq	%rax, 80(%rsp)
	movq	64(%rsp), %rax
	movl	1892(%rax), %edx
	testl	%edx, %edx
	jne	.L19774
	leal	1(%r12), %edi
	andl	120(%rbx), %edi
.L19517:
	movl	56(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 92(%rsp)
	movl	%r11d, 88(%rsp)
	call	s390_logical_to_main_l
	movl	92(%rsp), %r10d
	movl	88(%rsp), %r11d
	jmp	.L19519
.L19767:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L19518
	jmp	.L19517
.L19766:
	movzbl	1976(%rbx,%rdx), %edx
	testb	%dl, 44216(%rbx,%rcx)
	jne	.L19516
	jmp	.L19517
.L19774:
	addl	$1, %edx
	jmp	.L19514
.L19764:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L19511
.L19510:
	movzbl	97(%rbx), %r8d
	jmp	.L19513
.L19438:
	movl	$2048, 72(%rsp)
	subl	%eax, 72(%rsp)
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L19440
	leal	1(%rax), %ecx
	movl	72(%rsp), %eax
	movslq	%ecx, %rcx
	leal	(%rax,%rbp), %edi
	andl	120(%rbx), %edi
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L19775
.L19441:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L19776
.L19443:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L19442
	testb	$4, 46264(%rbx,%rax)
	je	.L19442
	movl	%edi, %r9d
	xorq	26808(%rdx), %r9
.L19444:
	movl	72(%rsp), %r15d
	movq	%r11, %rsi
	leaq	96(%rsp), %r8
	movq	%r8, %rdi
	cmpq	$8, %r15
	jae	.L19777
.L19445:
	xorl	%eax, %eax
	testb	$4, %r15b
	je	.L19448
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L19448:
	testb	$2, %r15b
	je	.L19449
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L19449:
	testb	$1, %r15b
	je	.L19447
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L19447:
	leaq	(%r8,%r15), %rdi
	movl	$3, %edx
	movq	%r9, %rsi
	subl	72(%rsp), %edx
	movq	%rdi, %r11
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L19778
.L19451:
	xorl	%eax, %eax
	testb	$4, %dl
	je	.L19454
	movl	(%rsi), %eax
	movl	%eax, (%r11)
	movl	$4, %eax
.L19454:
	testb	$2, %dl
	je	.L19455
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%r11,%rax)
	addq	$2, %rax
.L19455:
	andl	$1, %edx
	je	.L19439
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%r11,%rax)
	jmp	.L19439
.L19778:
	cmpq	$127, %rdx
	ja	.L19779
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rdi, %r11
	jmp	.L19451
.L19777:
	cmpq	$127, %r15
	ja	.L19780
	movq	%r15, %rcx
	movq	%r8, %rdi
	shrq	$3, %rcx
	rep movsq
	jmp	.L19445
.L19776:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L19443
.L19442:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 88(%rsp)
	movq	%r11, 80(%rsp)
	call	s390_logical_to_main_l
	movl	88(%rsp), %r10d
	movq	%rax, %r9
	movq	80(%rsp), %r11
	jmp	.L19444
.L19779:
	movl	%r10d, 72(%rsp)
	call	memcpy
	movl	72(%rsp), %r10d
	jmp	.L19439
.L19775:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L19441
.L19741:
	movzbl	97(%rbx), %r8d
	jmp	.L19442
.L19780:
	movq	%r15, %rdx
	movl	%r10d, 88(%rsp)
	movq	%r9, 80(%rsp)
	call	memcpy
	movq	80(%rsp), %r9
	movq	%rax, %r8
	movl	88(%rsp), %r10d
	jmp	.L19447
.L19440:
	movl	72(%rsp), %eax
	leal	(%rax,%rbp), %edi
	andl	120(%rbx), %edi
	jmp	.L19741
.L19760:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L19435
.L19537:
	movzbl	%sil, %r8d
.L19436:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 72(%rsp)
	call	s390_logical_to_main_l
	movl	72(%rsp), %r10d
	movq	%rax, %r11
	jmp	.L19437
.L19759:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L19434
.L19433:
	movzbl	97(%rbx), %r8d
	jmp	.L19436
.L19409:
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L19411
	leal	1(%rbp), %edi
	andl	120(%rbx), %edi
	leal	1(%rax), %ecx
	movslq	%ecx, %rcx
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L19781
.L19412:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L19782
.L19414:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L19413
	testb	$4, 46264(%rbx,%rax)
	je	.L19413
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L19415:
	movzbl	(%r11), %edx
	movb	%dl, 96(%rsp)
	movzbl	(%rax), %eax
	movb	%al, 97(%rsp)
	jmp	.L19410
.L19758:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L19406
.L19531:
	movzbl	%sil, %r8d
	jmp	.L19407
.L19781:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L19412
.L19740:
	movzbl	97(%rbx), %r8d
.L19413:
	movl	60(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 80(%rsp)
	movq	%r11, 72(%rsp)
	call	s390_logical_to_main_l
	movl	80(%rsp), %r10d
	movq	72(%rsp), %r11
	jmp	.L19415
.L19782:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L19414
	jmp	.L19413
.L19411:
	leal	1(%rbp), %edi
	andl	120(%rbx), %edi
	jmp	.L19740
	.cfi_endproc
.LFE1828:
	.size	s390_convert_utf8_to_utf16, .-s390_convert_utf8_to_utf16
	.p2align 4,,15
	.globl	s390_convert_to_binary
	.type	s390_convert_to_binary, @function
s390_convert_to_binary:
.LFB1829:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %edx
	shrl	$20, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L19836
.L19784:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L19785
	cltq
	addl	192(%rbx,%rax,8), %ebp
.L19785:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	andl	120(%rbx), %ebp
	leal	5(%r14), %eax
	cltq
	leaq	(%rbx,%rax,4), %r15
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L19786
	leal	1(%rax), %edx
	movl	%ebp, %eax
	shrl	$12, %eax
	movslq	%edx, %rdx
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movl	2232(%rcx), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L19837
.L19787:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L19838
.L19788:
	movl	%ebp, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L19786
	testb	$4, 46264(%rbx,%rax)
	je	.L19786
	movl	%ebp, %r13d
	xorq	26808(%rcx), %r13
.L19789:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2040, %eax
	jg	.L19790
	movq	0(%r13), %rax
	leaq	64(%rsp), %rbp
	movq	%rax, 64(%rsp)
.L19791:
	leaq	48(%rsp), %rdx
	movl	$7, %esi
	movq	%rbp, %rdi
	leaq	32(%rsp), %r8
	leaq	16(%rsp), %rcx
	call	packed_to_binary
	movl	32(%rsp), %edx
	testl	%edx, %edx
	jne	.L19839
.L19800:
	movq	48(%rsp), %rax
	cmpq	$-2147483648, %rax
	jl	.L19801
	cmpq	$2147483647, %rax
	jle	.L19840
.L19801:
	movslq	%r12d, %r12
	movl	$1, 16(%rsp)
	movl	%eax, 192(%rbx,%r12,8)
.L19802:
	movq	%rbx, %rdi
	movl	$9, %esi
	call	*2032(%rbx)
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L19840:
	.cfi_restore_state
	movslq	%r12d, %r12
	movl	%eax, 192(%rbx,%r12,8)
	movl	16(%rsp), %eax
	testl	%eax, %eax
	jne	.L19802
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L19839:
	.cfi_restore_state
	movl	$0, 780(%rbx)
	movl	$7, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L19800
.L19837:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L19787
.L19786:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %r13
	jmp	.L19789
.L19790:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L19841
	movl	120(%rbx), %ecx
	leal	1(%rax), %esi
	addl	%r10d, %ebp
	movslq	%esi, %rsi
	andl	%ebp, %ecx
	movl	%ecx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rsi,8)
	jne	.L19842
.L19793:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L19843
.L19794:
	movl	%ecx, %esi
	andl	$2143289344, %esi
	orl	2224(%rbx), %esi
	cmpl	10424(%rdx), %esi
	jne	.L19792
	testb	$4, 46264(%rbx,%rax)
	je	.L19792
	movl	%ecx, %r14d
	xorq	26808(%rdx), %r14
.L19795:
	movl	%r10d, %r15d
	leaq	64(%rsp), %rbp
	cmpq	$127, %r15
	ja	.L19844
	movq	%rbp, %rdi
	movq	%r13, %rsi
	movq	%r15, %rcx
	rep movsb
.L19797:
	movl	$8, %edx
	addq	%rbp, %r15
	subl	%r10d, %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L19845
	movq	%r15, %rdi
	movq	%r14, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L19791
.L19836:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	jmp	.L19784
.L19838:
	cmpb	43192(%rbx,%rax), %dl
	je	.L19788
	jmp	.L19786
.L19842:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L19793
.L19792:
	movl	120(%rbx), %edi
	movl	%r14d, %esi
	movl	$1, %r9d
	movzbl	97(%rbx), %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 12(%rsp)
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movl	12(%rsp), %r10d
	movq	%rax, %r14
	jmp	.L19795
.L19845:
	movq	%r14, %rsi
	movq	%r15, %rdi
	call	memcpy
	jmp	.L19791
.L19844:
	movq	%r15, %rdx
	movq	%r13, %rsi
	movq	%rbp, %rdi
	movl	%r10d, 12(%rsp)
	call	memcpy
	movl	12(%rsp), %r10d
	jmp	.L19797
.L19841:
	addl	%r10d, %ebp
	jmp	.L19792
.L19843:
	cmpb	43192(%rbx,%rax), %sil
	je	.L19794
	jmp	.L19792
	.cfi_endproc
.LFE1829:
	.size	s390_convert_to_binary, .-s390_convert_to_binary
	.p2align 4,,15
	.globl	s390_convert_to_decimal
	.type	s390_convert_to_decimal, @function
s390_convert_to_decimal:
.LFB1830:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	(%rdi), %esi
	bswap	%esi
	movl	%esi, %eax
	movl	%esi, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%esi, %ebp
	andl	$15, %eax
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L19910
.L19847:
	shrl	$12, %esi
	andl	$15, %esi
	movl	%esi, %r12d
	je	.L19848
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L19848:
	cltq
	movb	$4, 130(%rbx)
	andl	120(%rbx), %ebp
	addq	$4, 136(%rbx)
	leaq	16(%rsp), %rsi
	movslq	192(%rbx,%rax,8), %rdi
	call	binary_to_packed
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2040, %eax
	jg	.L19849
	leal	5(%r12), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L19850
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19911
.L19851:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L19912
.L19852:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L19850
	testb	$2, 46264(%rbx,%rcx)
	je	.L19850
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L19853:
	movq	24(%rsp), %rdx
	movq	%rdx, (%rax)
.L19846:
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L19911:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L19851
.L19850:
	movzbl	97(%rbx), %r8d
	movl	$8, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %esi
	movl	%ebp, %edi
	call	s390_logical_to_main_l
	jmp	.L19853
.L19849:
	movl	$2048, %r14d
	subl	%eax, %r14d
	leal	5(%r12), %eax
	cltq
	leaq	(%rbx,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L19855
	leal	1(%rax), %ecx
	movl	%ebp, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L19913
.L19856:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L19914
.L19857:
	movl	%ebp, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L19855
	testb	$1, 46264(%rbx,%rdx)
	je	.L19855
	movq	35000(%rax), %rdx
	movl	%ebp, %r15d
	movl	%r14d, %r13d
	movq	%rdx, 984(%rbx)
	xorq	26808(%rax), %r15
.L19858:
	movl	1892(%r11), %eax
	movq	984(%rbx), %r10
	testl	%eax, %eax
	je	.L19915
	movl	120(%rbx), %ecx
	leal	1(%rax), %esi
	addl	%r14d, %ebp
	movslq	%esi, %rsi
	andl	%ebp, %ecx
	movl	%ecx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rsi,8)
	jne	.L19916
.L19860:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L19917
.L19861:
	movl	%ecx, %esi
	andl	$2143289344, %esi
	orl	2224(%rbx), %esi
	cmpl	10424(%rdx), %esi
	jne	.L19859
	testb	$2, 46264(%rbx,%rax)
	je	.L19859
	movl	%ecx, %ebx
	xorq	26808(%rdx), %rbx
.L19862:
	orb	$6, (%r10)
	cmpq	$127, %r13
	leaq	24(%rsp), %rsi
	ja	.L19918
	movq	%r15, %rdi
	movq	%r13, %rcx
	rep movsb
.L19864:
	leaq	24(%rsp,%r13), %rsi
	movl	$8, %edx
	movq	%rbx, %rdi
	subl	%r14d, %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L19919
	movq	%rdx, %rcx
	rep movsb
	jmp	.L19846
.L19910:
	movslq	%edx, %rdx
	addl	192(%rbx,%rdx,8), %ebp
	jmp	.L19847
.L19912:
	cmpb	43192(%rbx,%rcx), %al
	je	.L19852
	jmp	.L19850
.L19919:
	call	memcpy
	.p2align 4,,8
	jmp	.L19846
.L19918:
	movq	%r13, %rdx
	movq	%r15, %rdi
	call	memcpy
	.p2align 4,,2
	jmp	.L19864
.L19915:
	addl	%r14d, %ebp
.L19859:
	movl	120(%rbx), %edi
	movl	$8, %r9d
	movq	%rbx, %rdx
	movzbl	97(%rbx), %r8d
	subl	%r14d, %r9d
	movl	$2, %ecx
	movslq	%r9d, %r9
	movl	%r12d, %esi
	movq	%r10, 8(%rsp)
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	8(%rsp), %r10
	movq	%rax, %rbx
	jmp	.L19862
.L19913:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L19856
.L19855:
	movzbl	97(%rbx), %r8d
	movl	%r14d, %r13d
	movl	$1, %ecx
	movq	%r13, %r9
	movq	%rbx, %rdx
	movl	%r12d, %esi
	movl	%ebp, %edi
	movq	%r11, 8(%rsp)
	call	s390_logical_to_main_l
	movq	8(%rsp), %r11
	movq	%rax, %r15
	jmp	.L19858
.L19917:
	cmpb	43192(%rbx,%rax), %sil
	je	.L19861
	jmp	.L19859
.L19916:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L19860
	jmp	.L19859
.L19914:
	cmpb	43192(%rbx,%rdx), %cl
	je	.L19857
	.p2align 4,,4
	jmp	.L19855
	.cfi_endproc
.LFE1830:
	.size	s390_convert_to_decimal, .-s390_convert_to_decimal
	.p2align 4,,15
	.globl	s390_copy_access
	.type	s390_copy_access, @function
s390_copy_access:
.LFB1831:
	.cfi_startproc
	movzbl	3(%rdi), %edx
	addq	$4, 136(%rsi)
	movzbl	%dl, %eax
	andl	$15, %edx
	sarl	$4, %eax
	movl	584(%rsi,%rdx,4), %edx
	cmpb	$64, 99(%rsi)
	movslq	%eax, %rcx
	movl	%edx, 584(%rsi,%rcx,4)
	je	.L19927
.L19920:
	rep ret
	.p2align 4,,10
	.p2align 3
.L19927:
	testl	%eax, %eax
	je	.L19920
	addl	$5, %eax
	testl	%edx, %edx
	cltq
	.p2align 4,,2
	je	.L19928
	cmpl	$1, %edx
	je	.L19929
	movl	$0, 1892(%rsi,%rax,4)
	ret
	.p2align 4,,10
	.p2align 3
.L19928:
	movl	$1, 1892(%rsi,%rax,4)
	ret
	.p2align 4,,10
	.p2align 3
.L19929:
	movl	$7, 1892(%rsi,%rax,4)
	ret
	.cfi_endproc
.LFE1831:
	.size	s390_copy_access, .-s390_copy_access
	.p2align 4,,15
	.globl	s390_divide_register
	.type	s390_divide_register, @function
s390_divide_register:
.LFB1832:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movzbl	1(%rdi), %eax
	movb	$2, 130(%rsi)
	addq	$2, 136(%rsi)
	movzbl	%al, %ebp
	movl	%eax, %r12d
	sarl	$4, %ebp
	andl	$15, %r12d
	testb	$1, %bpl
	jne	.L19942
.L19931:
	leal	1(%rbp), %eax
	movslq	%r12d, %r12
	movslq	%ebp, %rbp
	movslq	192(%rbx,%r12,8), %rcx
	leaq	(%rbx,%rbp,8), %rsi
	cltq
	leaq	(%rbx,%rax,8), %rdi
	movl	192(%rsi), %eax
	movl	192(%rdi), %edx
	testl	%ecx, %ecx
	jne	.L19943
.L19932:
	movq	2032(%rbx), %rax
	movq	%rbx, %rdi
	movl	$9, %esi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L19942:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L19931
	.p2align 4,,10
	.p2align 3
.L19943:
	salq	$32, %rax
	movl	$2147483648, %r8d
	orq	%rdx, %rax
	cqto
	idivq	%rcx
	movl	$4294967295, %ecx
	addq	%rax, %r8
	cmpq	%rcx, %r8
	ja	.L19932
	movl	%eax, 192(%rdi)
	movl	%edx, 192(%rsi)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE1832:
	.size	s390_divide_register, .-s390_divide_register
	.p2align 4,,15
	.globl	s390_divide
	.type	s390_divide, @function
s390_divide:
.LFB1833:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %esi
	bswap	%esi
	movl	%esi, %eax
	movl	%esi, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%esi, %ebp
	movl	%eax, %r12d
	andl	$4095, %ebp
	andl	$15, %r12d
	andl	$15, %edx
	jne	.L19986
.L19945:
	shrl	$12, %esi
	andl	$15, %esi
	movl	%esi, %r13d
	je	.L19946
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L19946:
	andl	120(%rbx), %ebp
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %al
	jne	.L19987
.L19947:
	testb	$3, %bpl
	jne	.L19988
.L19948:
	leal	5(%r13), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L19950
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L19989
.L19951:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L19990
.L19952:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L19950
	testb	$4, 46264(%rbx,%rcx)
	je	.L19950
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L19953:
	movl	(%rax), %ecx
	bswap	%ecx
.L19954:
	leal	1(%r12), %eax
	movslq	%r12d, %r12
	testl	%ecx, %ecx
	leaq	(%rbx,%r12,8), %rsi
	cltq
	leaq	(%rbx,%rax,8), %rdi
	movl	192(%rsi), %eax
	movl	192(%rdi), %edx
	jne	.L19991
.L19955:
	movq	2032(%rbx), %rax
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 32
	movl	$9, %esi
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L19987:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L19947
	.p2align 4,,10
	.p2align 3
.L19991:
	salq	$32, %rax
	movslq	%ecx, %rcx
	movl	$2147483648, %r8d
	orq	%rdx, %rax
	cqto
	idivq	%rcx
	movl	$4294967295, %ecx
	addq	%rax, %r8
	cmpq	%rcx, %r8
	ja	.L19955
	movl	%eax, 192(%rdi)
	movl	%edx, 192(%rsi)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L19989:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L19951
.L19950:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%ebp, %edi
	call	s390_logical_to_main_l
	jmp	.L19953
.L19988:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L19948
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%ebp, %edi
	call	s390_vfetch4_full
	movl	%eax, %ecx
	jmp	.L19954
.L19990:
	cmpb	43192(%rbx,%rcx), %al
	je	.L19952
	.p2align 4,,2
	jmp	.L19950
.L19986:
	movslq	%edx, %rdx
	addl	192(%rbx,%rdx,8), %ebp
	jmp	.L19945
	.cfi_endproc
.LFE1833:
	.size	s390_divide, .-s390_divide
	.p2align 4,,15
	.globl	s390_exclusive_or_register
	.type	s390_exclusive_or_register, @function
s390_exclusive_or_register:
.LFB1834:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	addq	$2, 136(%rsi)
	movq	%rcx, %rax
	andl	$15, %ecx
	shrq	%rax
	andl	$120, %eax
	leaq	(%rsi,%rax), %rdx
	movl	192(%rsi,%rcx,8), %eax
	xorl	%eax, 192(%rdx)
	setne	100(%rsi)
	ret
	.cfi_endproc
.LFE1834:
	.size	s390_exclusive_or_register, .-s390_exclusive_or_register
	.p2align 4,,15
	.globl	s390_exclusive_or
	.type	s390_exclusive_or, @function
s390_exclusive_or:
.LFB1835:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L20025
.L19994:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L19995
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %edi
.L19995:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L20026
.L19996:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L19998
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L20027
.L19999:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L20028
.L20000:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L19998
	testb	$4, 46264(%rbx,%rsi)
	je	.L19998
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L20001:
	movl	(%rax), %eax
	bswap	%eax
.L20002:
	movslq	%ebp, %rbp
	leaq	(%rbx,%rbp,8), %rdx
	xorl	%eax, 192(%rdx)
	setne	100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L20027:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L19999
.L19998:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L20001
.L20026:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L19996
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L20002
.L20025:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %edi
	jmp	.L19994
.L20028:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L20000
	jmp	.L19998
	.cfi_endproc
.LFE1835:
	.size	s390_exclusive_or, .-s390_exclusive_or
	.p2align 4,,15
	.globl	s390_exclusive_or_immediate
	.type	s390_exclusive_or_immediate, @function
s390_exclusive_or_immediate:
.LFB1836:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %ebp
	shrl	$12, %ecx
	shrl	$16, %ebp
	andl	$4095, %eax
	movl	%ecx, %esi
	andl	$15, %esi
	je	.L20030
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
	andl	120(%rbx), %eax
.L20030:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L20031
	movl	%eax, %edi
	addl	$1, %edx
	shrl	$12, %edi
	movslq	%edx, %rdx
	andl	$1023, %edi
	leaq	(%rbx,%rdi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L20051
.L20032:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L20052
.L20033:
	movl	%eax, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L20031
	testb	$2, 46264(%rbx,%rdi)
	je	.L20031
	xorq	26808(%rcx), %rax
.L20034:
	xorb	%bpl, (%rax)
	setne	100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L20051:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L20032
.L20031:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%eax, %edi
	call	s390_logical_to_main_l
	jmp	.L20034
.L20052:
	cmpb	43192(%rbx,%rdi), %dl
	je	.L20033
	.p2align 4,,4
	jmp	.L20031
	.cfi_endproc
.LFE1836:
	.size	s390_exclusive_or_immediate, .-s390_exclusive_or_immediate
	.p2align 4,,15
	.globl	s390_exclusive_or_character
	.type	s390_exclusive_or_character, @function
s390_exclusive_or_character:
.LFB1837:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rsi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r14d
	movl	%eax, %ecx
	shrl	$16, %r14d
	shrl	$28, %ecx
	andl	$4095, %r14d
	testl	%ecx, %ecx
	movl	%ecx, 8(%rsp)
	je	.L20054
	movslq	%ecx, %rdx
	addl	192(%rsi,%rdx,8), %r14d
	andl	120(%rsi), %r14d
.L20054:
	movl	%eax, %r15d
	shrl	$12, %eax
	andl	$4095, %r15d
	andl	$15, %eax
	movl	%eax, 40(%rsp)
	je	.L20055
	cltq
	addl	192(%rbp,%rax,8), %r15d
	andl	120(%rbp), %r15d
.L20055:
	movzbl	1(%rdi), %r9d
	movb	$6, 130(%rbp)
	addq	$6, 136(%rbp)
	movzbl	%r9b, %r13d
	testl	%r13d, %r13d
	je	.L20219
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	0(%rbp,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L20067
	leal	1(%rax), %edx
	movl	%r14d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	0(%rbp,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbp,%rdx,8)
	jne	.L20220
.L20068:
	movzbl	97(%rbp), %ecx
	testb	%cl, %cl
	jne	.L20221
.L20069:
	movl	%r14d, %edx
	andl	$2143289344, %edx
	orl	2224(%rbp), %edx
	cmpl	10424(%rax), %edx
	jne	.L20136
	testb	$1, 46264(%rbp,%rsi)
	je	.L20136
	movq	35000(%rax), %r11
	movl	%r14d, %ebx
	movzbl	%cl, %r8d
	movq	%r11, 984(%rbp)
	xorq	26808(%rax), %rbx
.L20071:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	0(%rbp,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L20072
	leal	1(%rax), %edx
	movl	%r15d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	0(%rbp,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbp,%rdx,8)
	jne	.L20222
.L20073:
	testb	%r8b, %r8b
	jne	.L20223
.L20074:
	movl	%r15d, %edx
	andl	$2143289344, %edx
	orl	2224(%rbp), %edx
	cmpl	10424(%rax), %edx
	jne	.L20072
	testb	$4, 46264(%rbp,%rsi)
	je	.L20072
	movl	%r15d, %r12d
	xorq	26808(%rax), %r12
.L20075:
	movl	$2047, %r10d
	movl	%r14d, %eax
	subl	%r13d, %r10d
	andl	$2047, %eax
	cmpl	%r10d, %eax
	jg	.L20076
	movl	%r15d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L20077
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	cmpq	%r12, %rbx
	movl	$1, %esi
	je	.L20224
	.p2align 4,,10
	.p2align 3
.L20190:
	movzbl	(%r12,%rax), %edx
	xorb	%dl, (%rbx,%rax)
	cmovne	%esi, %ecx
	addq	$1, %rax
	cmpl	%eax, %r13d
	jge	.L20190
.L20085:
	orb	$6, (%r11)
.L20098:
	movb	%cl, 100(%rbp)
.L20053:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L20224:
	.cfi_restore_state
	leal	1(%r13), %edx
	movq	%rbx, %rdi
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L20225
.L20079:
	testb	$4, %dl
	jne	.L20226
.L20082:
	testb	$2, %dl
	jne	.L20227
.L20083:
	andl	$1, %edx
	.p2align 4,,2
	jne	.L20228
	xorl	%ecx, %ecx
	.p2align 4,,3
	jmp	.L20085
.L20228:
	movb	$0, (%rdi)
	xorl	%ecx, %ecx
	jmp	.L20085
.L20227:
	xorl	%eax, %eax
	addq	$2, %rdi
	movw	%ax, -2(%rdi)
	jmp	.L20083
.L20226:
	movl	$0, (%rdi)
	addq	$4, %rdi
	jmp	.L20082
.L20225:
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep stosq
	jmp	.L20079
.L20222:
	movzbl	44216(%rbp,%rsi), %edi
	testb	%dil, 1976(%rbp,%rdx)
	jne	.L20073
.L20072:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r15d, %edi
	movq	%r11, 32(%rsp)
	call	s390_logical_to_main_l
	movq	32(%rsp), %r11
	movq	%rax, %r12
	jmp	.L20075
.L20221:
	cmpb	43192(%rbp,%rsi), %cl
	je	.L20069
.L20136:
	movzbl	%cl, %r8d
.L20070:
	movl	8(%rsp), %esi
	movl	$1, %ecx
	movq	%rbp, %rdx
	movl	%r14d, %edi
	call	s390_logical_to_main_l
	movq	984(%rbp), %r11
	movq	%rax, %rbx
	movzbl	97(%rbp), %r8d
	jmp	.L20071
.L20223:
	cmpb	43192(%rbp,%rsi), %r8b
	je	.L20074
	jmp	.L20072
.L20220:
	movzbl	44216(%rbp,%rsi), %ecx
	testb	%cl, 1976(%rbp,%rdx)
	jne	.L20068
.L20067:
	movzbl	97(%rbp), %r8d
	jmp	.L20070
.L20219:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbp,%rax,4), %eax
	testl	%eax, %eax
	je	.L20057
	leal	1(%rax), %edx
	movl	%r15d, %eax
	shrl	$12, %eax
	movslq	%edx, %rdx
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbp,%rdx,8)
	jne	.L20229
.L20058:
	movzbl	97(%rbp), %edx
	testb	%dl, %dl
	jne	.L20230
.L20059:
	movl	%r15d, %esi
	andl	$2143289344, %esi
	orl	2224(%rbp), %esi
	cmpl	10424(%rcx), %esi
	jne	.L20133
	testb	$4, 46264(%rbp,%rax)
	je	.L20133
	xorq	26808(%rcx), %r15
	movzbl	%dl, %r8d
.L20061:
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbp,%rax,4), %eax
	testl	%eax, %eax
	je	.L20062
	leal	1(%rax), %esi
	movl	%r14d, %eax
	shrl	$12, %eax
	movslq	%esi, %rsi
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbp,%rsi,8)
	jne	.L20231
.L20063:
	testb	%r8b, %r8b
	jne	.L20232
.L20064:
	movl	%r14d, %esi
	andl	$2143289344, %esi
	orl	2224(%rbp), %esi
	cmpl	10424(%rcx), %esi
	jne	.L20062
	testb	$2, 46264(%rbp,%rax)
	je	.L20062
	xorq	26808(%rcx), %r14
.L20065:
	movzbl	(%r14), %eax
	xorb	(%r15), %al
	testb	%al, %al
	movb	%al, (%r14)
	setne	100(%rbp)
	jmp	.L20053
.L20077:
	movl	$2048, %r14d
	subl	%eax, %r14d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L20088
	leal	(%r14,%r15), %edi
	andl	120(%rbp), %edi
	leal	1(%rax), %ecx
	movslq	%ecx, %rcx
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbp,%rcx,8)
	jne	.L20233
.L20089:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L20234
.L20091:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbp), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L20090
	testb	$4, 46264(%rbp,%rax)
	je	.L20090
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L20092:
	movq	%rbx, %rdx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L20094:
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	addq	$1, %rdx
	xorb	%sil, -1(%rdx)
	movl	%edx, %esi
	cmovne	%edi, %ecx
	subl	%ebx, %esi
	cmpl	%esi, %r14d
	jg	.L20094
	xorl	%esi, %esi
	subl	%r14d, %r13d
	movl	$1, %r8d
	js	.L20085
.L20213:
	movzbl	(%rax,%rsi), %edi
	xorb	%dil, (%rdx,%rsi)
	cmovne	%r8d, %ecx
	addq	$1, %rsi
	cmpl	%esi, %r13d
	jge	.L20213
	jmp	.L20085
.L20076:
	movl	$2048, 32(%rsp)
	subl	%eax, 32(%rsp)
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L20099
	leal	1(%rax), %ecx
	movl	32(%rsp), %eax
	movslq	%ecx, %rcx
	leal	(%rax,%r14), %edi
	andl	120(%rbp), %edi
	movl	%edi, %edx
	shrl	$12, %edx
	andl	$1023, %edx
	leaq	0(%rbp,%rdx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbp,%rcx,8)
	jne	.L20235
.L20100:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L20236
.L20102:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbp), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L20101
	testb	$1, 46264(%rbp,%rdx)
	je	.L20101
	movq	35000(%rax), %rcx
	movl	%edi, %r14d
	movq	%rcx, 984(%rbp)
	xorq	26808(%rax), %r14
	movq	%rcx, 8(%rsp)
.L20103:
	movl	%r15d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L20104
	movq	%rbx, %rax
	xorl	%ecx, %ecx
	movl	$1, %esi
.L20106:
	addq	$1, %r12
	movzbl	-1(%r12), %edx
	addq	$1, %rax
	xorb	%dl, -1(%rax)
	movl	%eax, %edx
	cmovne	%esi, %ecx
	subl	%ebx, %edx
	cmpl	%edx, 32(%rsp)
	jg	.L20106
	subl	32(%rsp), %r13d
	js	.L20107
	xorl	%eax, %eax
	movl	$1, %esi
.L20108:
	movzbl	(%r12,%rax), %edx
	xorb	%dl, (%r14,%rax)
	cmovne	%esi, %ecx
	addq	$1, %rax
	cmpl	%eax, %r13d
	jge	.L20108
.L20107:
	orb	$6, (%r11)
	movq	8(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L20098
.L20104:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L20109
	leal	(%r10,%r15), %edi
	andl	120(%rbp), %edi
	leal	1(%rax), %ecx
	movslq	%ecx, %rcx
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbp,%rcx,8)
	jne	.L20237
.L20110:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L20238
.L20112:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbp), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L20111
	testb	$4, 46264(%rbp,%rax)
	je	.L20111
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L20113:
	cmpl	%r10d, 32(%rsp)
	je	.L20239
	jge	.L20118
	movq	%r12, %rsi
	xorl	%ecx, %ecx
	movl	$1, %edi
.L20120:
	addq	$1, %rsi
	movzbl	-1(%rsi), %edx
	addq	$1, %rbx
	xorb	%dl, -1(%rbx)
	movl	%esi, %edx
	cmovne	%edi, %ecx
	subl	%r12d, %edx
	cmpl	32(%rsp), %edx
	jl	.L20120
	movl	%r10d, %r8d
	subl	32(%rsp), %r8d
	testl	%r8d, %r8d
	jle	.L20121
	xorl	%edx, %edx
	movl	$1, %r9d
.L20123:
	movzbl	(%rsi,%rdx), %edi
	xorb	%dil, (%r14,%rdx)
	cmovne	%r9d, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r8d
	jg	.L20123
	subl	$1, %r8d
	leaq	1(%r14,%r8), %r14
.L20121:
	subl	%r10d, %r13d
	js	.L20107
	xorl	%edx, %edx
	movl	$1, %edi
.L20124:
	movzbl	(%rax,%rdx), %esi
	xorb	%sil, (%r14,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r13d
	jge	.L20124
	jmp	.L20107
.L20118:
	movq	%rbx, %rdx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L20126:
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	addq	$1, %rdx
	xorb	%sil, -1(%rdx)
	movl	%edx, %esi
	cmovne	%edi, %ecx
	subl	%ebx, %esi
	cmpl	%esi, %r10d
	jg	.L20126
	movl	32(%rsp), %r8d
	subl	%r10d, %r8d
	testl	%r8d, %r8d
	jle	.L20127
	xorl	%esi, %esi
	movl	$1, %r9d
.L20129:
	movzbl	(%rax,%rsi), %edi
	xorb	%dil, (%rdx,%rsi)
	cmovne	%r9d, %ecx
	addq	$1, %rsi
	cmpl	%esi, %r8d
	jg	.L20129
	subl	$1, %r8d
	leaq	1(%rax,%r8), %rax
.L20127:
	subl	32(%rsp), %r13d
	js	.L20107
	xorl	%edx, %edx
	movl	$1, %edi
.L20130:
	movzbl	(%rax,%rdx), %esi
	xorb	%sil, (%r14,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r13d
	jge	.L20130
	jmp	.L20107
.L20239:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L20116:
	movzbl	(%r12,%rdx), %esi
	xorb	%sil, (%rbx,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, 32(%rsp)
	jg	.L20116
	subl	32(%rsp), %r13d
	js	.L20107
	xorl	%edx, %edx
	movl	$1, %edi
.L20117:
	movzbl	(%rax,%rdx), %esi
	xorb	%sil, (%r14,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r13d
	jge	.L20117
	jmp	.L20107
.L20237:
	movzbl	44216(%rbp,%rax), %esi
	testb	%sil, 1976(%rbp,%rcx)
	jne	.L20110
.L20218:
	movzbl	97(%rbp), %r8d
.L20111:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	s390_logical_to_main_l
	movl	24(%rsp), %r10d
	movq	16(%rsp), %r11
	jmp	.L20113
.L20238:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L20112
	jmp	.L20111
.L20109:
	leal	(%r10,%r15), %edi
	andl	120(%rbp), %edi
	jmp	.L20218
.L20235:
	movzbl	44216(%rbp,%rdx), %esi
	testb	%sil, 1976(%rbp,%rcx)
	jne	.L20100
	movzbl	97(%rbp), %r8d
.L20101:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 44(%rsp)
	movq	%r11, 24(%rsp)
	call	s390_logical_to_main_l
	movl	44(%rsp), %r10d
	movq	%rax, %r14
	movq	984(%rbp), %rax
	movq	24(%rsp), %r11
	movq	%rax, 8(%rsp)
	jmp	.L20103
.L20236:
	cmpb	43192(%rbp,%rdx), %r8b
	je	.L20102
	jmp	.L20101
.L20099:
	movl	32(%rsp), %eax
	movzbl	97(%rbp), %r8d
	leal	(%rax,%r14), %edi
	andl	120(%rbp), %edi
	jmp	.L20101
.L20233:
	movzbl	44216(%rbp,%rax), %esi
	testb	%sil, 1976(%rbp,%rcx)
	jne	.L20089
.L20217:
	movzbl	97(%rbp), %r8d
.L20090:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movq	%r11, 8(%rsp)
	call	s390_logical_to_main_l
	movq	8(%rsp), %r11
	jmp	.L20092
.L20234:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L20091
	jmp	.L20090
.L20088:
	leal	(%r14,%r15), %edi
	andl	120(%rbp), %edi
	jmp	.L20217
.L20232:
	cmpb	%r8b, 43192(%rbp,%rax)
	je	.L20064
.L20062:
	movl	8(%rsp), %esi
	movl	%r14d, %edi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbp, %rdx
	call	s390_logical_to_main_l
	movq	%rax, %r14
	jmp	.L20065
.L20231:
	movzbl	44216(%rbp,%rax), %edi
	testb	%dil, 1976(%rbp,%rsi)
	jne	.L20063
	jmp	.L20062
.L20230:
	cmpb	43192(%rbp,%rax), %dl
	je	.L20059
.L20133:
	movzbl	%dl, %r8d
.L20060:
	movl	40(%rsp), %esi
	movl	%r15d, %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	call	s390_logical_to_main_l
	movzbl	97(%rbp), %r8d
	movq	%rax, %r15
	jmp	.L20061
.L20229:
	movzbl	44216(%rbp,%rax), %esi
	testb	%sil, 1976(%rbp,%rdx)
	jne	.L20058
.L20057:
	movzbl	97(%rbp), %r8d
	jmp	.L20060
	.cfi_endproc
.LFE1837:
	.size	s390_exclusive_or_character, .-s390_exclusive_or_character
	.p2align 4,,15
	.globl	s390_execute
	.type	s390_execute, @function
s390_execute:
.LFB1838:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 64
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %ecx
	shrl	$20, %ebp
	shrl	$16, %ecx
	movl	%eax, %edx
	andl	$4095, %edx
	andl	$15, %ebp
	andl	$15, %ecx
	movl	%edx, 800(%rsi)
	jne	.L20329
.L20241:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L20242
	cltq
	addl	192(%rbx,%rax,8), %edx
.L20242:
	andl	120(%rbx), %edx
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	movl	%edx, 800(%rbx)
	andl	$1, %edx
	jne	.L20330
.L20243:
	movl	800(%rbx), %r12d
	leaq	1014(%rbx), %r13
	movq	$0, 1014(%rbx)
	movl	%r12d, %eax
	andl	$2147479553, %eax
	cmpl	168(%rbx), %eax
	jne	.L20244
	movl	%r12d, %eax
	andl	$4095, %eax
	orq	144(%rbx), %rax
	cmpq	160(%rbx), %rax
	jae	.L20244
.L20245:
	cmpq	%r13, %rax
	je	.L20268
	movq	(%rax), %rax
	movq	%rax, 1014(%rbx)
.L20268:
	movzbl	1014(%rbx), %edx
	cmpb	$68, %dl
	je	.L20331
.L20269:
	xorl	%eax, %eax
	testl	%ebp, %ebp
	movzbl	1015(%rbx), %ecx
	je	.L20270
	movslq	%ebp, %rbp
	movzbl	192(%rbx,%rbp,8), %eax
.L20270:
	orl	%ecx, %eax
	movb	%al, 1015(%rbx)
	movzbl	808(%rbx), %eax
	orl	$1, %eax
	andl	$-3, %eax
	cmpb	$63, %dl
	movb	%al, 808(%rbx)
	movq	136(%rbx), %rax
	jbe	.L20271
	cmpb	$-64, %dl
	sbbq	%rdx, %rdx
	andl	$2, %edx
	leaq	-6(%rax,%rdx), %rax
	movq	2120(%rbx), %rdx
	movq	%rax, 136(%rbx)
	movzwl	1014(%rbx), %eax
.L20274:
#APP
# 4413 "general1.c" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
	movq	%rbx, %rsi
	movzwl	%ax, %eax
	movq	%r13, %rdi
	call	*(%rdx,%rax,8)
	movl	52(%rbx), %eax
	addl	$1, 880(%rbx)
	andl	56(%rbx), %eax
	testl	$16318464, %eax
	jne	.L20240
	andb	$-2, 808(%rbx)
.L20240:
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L20271:
	.cfi_restore_state
	subq	$2, %rax
	movq	2120(%rbx), %rdx
	movq	%rax, 136(%rbx)
	movzwl	1014(%rbx), %eax
	jmp	.L20274
	.p2align 4,,10
	.p2align 3
.L20330:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L20243
	.p2align 4,,10
	.p2align 3
.L20331:
	movl	$3, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movzbl	1014(%rbx), %edx
	jmp	.L20269
.L20244:
	movl	%r12d, %r14d
	andl	$4095, %r14d
	testb	$1, %r12b
	jne	.L20332
.L20246:
	cmpl	$2048, %r12d
	sbbl	%r15d, %r15d
	andl	$-2048, %r15d
	addl	$4096, %r15d
	testb	$4, 808(%rbx)
	jne	.L20333
.L20249:
	movl	1908(%rbx), %eax
	testl	%eax, %eax
	je	.L20258
	leal	1(%rax), %ecx
	movl	%r12d, %eax
	shrl	$12, %eax
	movslq	%ecx, %rcx
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L20334
.L20259:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L20335
.L20260:
	movl	%r12d, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L20258
	testb	$4, 46264(%rbx,%rax)
	je	.L20258
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L20261:
	movzbl	(%rax), %ecx
	movl	$2, %edx
	cmpb	$63, %cl
	jbe	.L20262
	cmpb	$-64, %cl
	sbbl	%edx, %edx
	andl	$-2, %edx
	addl	$6, %edx
.L20262:
	addl	%r14d, %edx
	cmpl	%edx, %r15d
	jge	.L20245
	movl	(%rax), %eax
	subl	%r14d, %r15d
	leal	(%r15,%r12), %edi
	andl	120(%rbx), %edi
	movl	%eax, 1014(%rbx)
	movl	1908(%rbx), %eax
	testl	%eax, %eax
	je	.L20264
	leal	1(%rax), %ecx
	movl	%edi, %eax
	shrl	$12, %eax
	movslq	%ecx, %rcx
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L20336
.L20265:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L20337
.L20266:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L20264
	testb	$4, 46264(%rbx,%rax)
	je	.L20264
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L20267:
	movl	(%rax), %eax
	movslq	%r15d, %r15
	movl	%eax, 0(%r13,%r15)
	movq	%r13, %rax
	jmp	.L20245
.L20329:
	movslq	%ecx, %rcx
	addl	192(%rsi,%rcx,8), %edx
	movl	%edx, 800(%rsi)
	jmp	.L20241
.L20335:
	cmpb	43192(%rbx,%rax), %cl
	je	.L20260
.L20258:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	orl	$-1, %esi
	movl	%r12d, %edi
	call	s390_logical_to_main_l
	jmp	.L20261
.L20334:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L20259
	jmp	.L20258
.L20333:
	movzbl	103(%rbx), %eax
	movzbl	99(%rbx), %ecx
	movl	%eax, %edx
	shrb	%al
	andl	$1, %edx
	andl	$1, %eax
	sall	$7, %edx
	sall	$5, %eax
	orl	%edx, %eax
	movzbl	96(%rbx), %edx
	orl	$64, %eax
	andl	$4, %edx
	cmpb	$1, %dl
	sbbl	%edx, %edx
	notl	%edx
	andl	$16, %edx
	orl	%edx, %eax
	movl	%ecx, %edx
	andl	$64, %ecx
	shrw	$4, %dx
	andl	$8, %edx
	orl	%edx, %eax
	cmpb	$1, %cl
	sbbl	%edx, %edx
	notl	%edx
	andl	$4, %edx
	orl	%edx, %eax
	testb	$64, 54(%rbx)
	movw	%ax, 1146(%rbx)
	je	.L20249
	movl	416(%rbx), %eax
	movl	408(%rbx), %edx
	andl	$2147483647, %eax
	andl	$2147483647, %edx
	cmpl	%edx, %eax
	jb	.L20254
	xorl	%ecx, %ecx
	cmpl	%edx, %r12d
	jb	.L20257
.L20328:
	xorl	%ecx, %ecx
	cmpl	%eax, %r12d
	setbe	%cl
.L20257:
	movl	%ecx, %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L20249
	orl	$4194304, 56(%rbx)
	jmp	.L20249
.L20254:
	cmpl	%edx, %r12d
	movl	$1, %ecx
	jae	.L20257
	jmp	.L20328
.L20332:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L20246
.L20337:
	cmpb	43192(%rbx,%rax), %cl
	je	.L20266
.L20264:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	orl	$-1, %esi
	call	s390_logical_to_main_l
	jmp	.L20267
.L20336:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L20265
	jmp	.L20264
	.cfi_endproc
.LFE1838:
	.size	s390_execute, .-s390_execute
	.p2align 4,,15
	.globl	s390_extract_access_register
	.type	s390_extract_access_register, @function
s390_extract_access_register:
.LFB1839:
	.cfi_startproc
	movzbl	3(%rdi), %edx
	addq	$4, 136(%rsi)
	movq	%rdx, %rax
	andl	$15, %edx
	movl	584(%rsi,%rdx,4), %edx
	shrq	$4, %rax
	andl	$15, %eax
	movl	%edx, 192(%rsi,%rax,8)
	ret
	.cfi_endproc
.LFE1839:
	.size	s390_extract_access_register, .-s390_extract_access_register
	.p2align 4,,15
	.globl	s390_insert_characters_under_mask
	.type	s390_insert_characters_under_mask, @function
s390_insert_characters_under_mask:
.LFB1840:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %r13d
	movl	%ebp, %r12d
	shrl	$16, %r13d
	movl	%ebp, %r15d
	shrl	$20, %r12d
	movl	%r13d, %r14d
	shrl	$12, %r15d
	andl	$15, %r12d
	andl	$15, %r14d
	andl	$4095, %ebp
	andl	$15, %r15d
	je	.L20340
	movslq	%r15d, %rax
	addl	192(%rsi,%rax,8), %ebp
	andl	120(%rsi), %ebp
.L20340:
	addq	$4, 136(%rbx)
	cmpl	$7, %r14d
	movb	$4, 130(%rbx)
	je	.L20342
	cmpl	$15, %r14d
	jne	.L20489
	testb	$3, %bpl
	jne	.L20490
.L20360:
	leal	5(%r15), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L20362
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L20491
.L20363:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L20492
.L20364:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L20362
	testb	$4, 46264(%rbx,%rcx)
	je	.L20362
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L20365:
	movl	(%rax), %eax
	bswap	%eax
.L20366:
	movslq	%r12d, %r12
	xorl	%edx, %edx
	testl	%eax, %eax
	movl	%eax, 192(%rbx,%r12,8)
	je	.L20367
	sarl	$31, %eax
	leal	2(%rax), %edx
.L20367:
	movb	%dl, 100(%rbx)
.L20339:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L20489:
	.cfi_restore_state
	movslq	%r14d, %r11
	movl	$0, 32(%rsp)
	movzbl	icmlen.48916(,%r11,4), %eax
	movl	%eax, (%rsp)
	leal	5(%r15), %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 8(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L20368
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L20493
.L20369:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L20494
.L20370:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L20368
	testb	$4, 46264(%rbx,%rcx)
	je	.L20368
	movl	%ebp, %r10d
	xorq	26808(%rdx), %r10
.L20371:
	movl	(%rsp), %esi
	movl	%ebp, %edx
	movl	$2047, %eax
	andl	$2047, %edx
	subl	%esi, %eax
	cmpl	%eax, %edx
	jg	.L20372
	leaq	32(%rsp), %rdi
	movl	%esi, %edx
	movq	%r10, %rsi
	addl	$1, %edx
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L20495
	xorl	%eax, %eax
	testb	$4, %dl
	jne	.L20496
.L20376:
	testb	$2, %dl
	jne	.L20497
.L20377:
	andl	$1, %edx
	jne	.L20498
.L20379:
	testl	%r14d, %r14d
	.p2align 4,,2
	jne	.L20388
.L20502:
	movb	$0, 32(%rsp)
.L20388:
	movl	32(%rsp), %eax
	xorl	%edx, %edx
	bswap	%eax
	testl	%eax, %eax
	je	.L20389
	sarl	$31, %eax
	leal	2(%rax), %edx
.L20389:
	movb	%dl, 100(%rbx)
	movl	icmmask.48917(,%r11,4), %edx
	movslq	%r12d, %r12
	leaq	(%rbx,%r12,8), %rax
	andl	192(%rax), %edx
	testb	$8, %r13b
	movl	%edx, 192(%rax)
	jne	.L20499
	movl	$2, %edi
	movl	$1, %esi
	xorl	%ecx, %ecx
.L20390:
	testb	$4, %r13b
	je	.L20391
	movzbl	32(%rsp,%rcx), %ecx
	sall	$16, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movslq	%esi, %rcx
	movl	%edi, %esi
.L20391:
	testb	$2, %r13b
	je	.L20392
	movzbl	32(%rsp,%rcx), %ecx
	sall	$8, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movslq	%esi, %rcx
.L20392:
	andl	$1, %r13d
	je	.L20339
	movzbl	32(%rsp,%rcx), %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L20342:
	.cfi_restore_state
	leal	5(%r15), %eax
	movb	$0, 32(%rsp)
	cltq
	leaq	(%rbx,%rax,4), %r14
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L20344
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L20500
.L20345:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L20501
.L20346:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L20344
	testb	$4, 46264(%rbx,%rcx)
	je	.L20344
	movl	%ebp, %r13d
	xorq	26808(%rdx), %r13
.L20347:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2045, %eax
	jg	.L20348
	movzwl	0(%r13), %eax
	movw	%ax, 33(%rsp)
	movzbl	2(%r13), %eax
	movb	%al, 35(%rsp)
.L20349:
	movslq	%r12d, %r12
	movl	32(%rsp), %edx
	leaq	(%rbx,%r12,8), %rcx
	movl	192(%rcx), %eax
	bswap	%edx
	andl	$-16777216, %eax
	orl	%edx, %eax
	movl	%eax, 192(%rcx)
	xorl	%eax, %eax
	testl	%edx, %edx
	je	.L20358
	andl	$8388608, %edx
	cmpl	$1, %edx
	sbbl	%eax, %eax
	notl	%eax
	addl	$2, %eax
.L20358:
	movb	%al, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L20499:
	.cfi_restore_state
	movzbl	32(%rsp), %ecx
	movl	$3, %edi
	movl	$2, %esi
	sall	$24, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movl	$1, %ecx
	jmp	.L20390
	.p2align 4,,10
	.p2align 3
.L20498:
	movzbl	(%rsi,%rax), %edx
	testl	%r14d, %r14d
	movb	%dl, (%rdi,%rax)
	jne	.L20388
	jmp	.L20502
	.p2align 4,,10
	.p2align 3
.L20497:
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%rdi,%rax)
	addq	$2, %rax
	andl	$1, %edx
	je	.L20379
	jmp	.L20498
	.p2align 4,,10
	.p2align 3
.L20496:
	movl	(%rsi), %eax
	testb	$2, %dl
	movl	%eax, (%rdi)
	movl	$4, %eax
	je	.L20377
	jmp	.L20497
	.p2align 4,,10
	.p2align 3
.L20495:
	cmpq	$127, %rdx
	ja	.L20503
	movq	%rdx, %rcx
	xorl	%eax, %eax
	shrq	$3, %rcx
	testb	$4, %dl
	rep movsq
	je	.L20376
	jmp	.L20496
	.p2align 4,,10
	.p2align 3
.L20503:
	movq	%r11, (%rsp)
	call	memcpy
	movq	(%rsp), %r11
	jmp	.L20379
.L20500:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L20345
.L20344:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %r13
	jmp	.L20347
.L20493:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L20369
.L20368:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	movq	%r11, 16(%rsp)
	call	s390_logical_to_main_l
	movq	16(%rsp), %r11
	movq	%rax, %r10
	jmp	.L20371
.L20491:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L20363
.L20362:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	call	s390_logical_to_main_l
	jmp	.L20365
.L20494:
	cmpb	43192(%rbx,%rcx), %al
	je	.L20370
	.p2align 4,,4
	jmp	.L20368
.L20372:
	movq	8(%rsp), %rax
	movl	$2048, 16(%rsp)
	subl	%edx, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L20504
	addl	16(%rsp), %ebp
	leal	1(%rax), %esi
	movl	120(%rbx), %ecx
	movslq	%esi, %rsi
	andl	%ebp, %ecx
	movl	%ecx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rsi,8)
	jne	.L20505
.L20381:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L20506
.L20382:
	movl	%ecx, %esi
	andl	$2143289344, %esi
	orl	2224(%rbx), %esi
	cmpl	10424(%rdx), %esi
	jne	.L20380
	testb	$4, 46264(%rbx,%rax)
	je	.L20380
	movl	%ecx, %r15d
	xorq	26808(%rdx), %r15
.L20383:
	movl	16(%rsp), %r8d
	leaq	32(%rsp), %rbp
	cmpq	$127, %r8
	ja	.L20507
	movq	%rbp, %rdi
	movq	%r10, %rsi
	movq	%r8, %rcx
	rep movsb
.L20385:
	movl	(%rsp), %edx
	addq	%rbp, %r8
	addl	$1, %edx
	subl	16(%rsp), %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L20508
	movq	%r8, %rdi
	movq	%r15, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L20379
.L20501:
	cmpb	43192(%rbx,%rcx), %al
	je	.L20346
	jmp	.L20344
.L20348:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L20509
	leal	1(%rax), %ecx
	addl	%r10d, %ebp
	movl	%ebp, %r14d
	movslq	%ecx, %rcx
	andl	120(%rbx), %r14d
	movl	%r14d, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L20510
.L20351:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L20511
.L20352:
	movl	%r14d, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L20350
	testb	$4, 46264(%rbx,%rax)
	je	.L20350
	xorq	26808(%rdx), %r14
.L20353:
	movl	%r10d, %r15d
	leaq	32(%rsp), %rbp
	cmpq	$127, %r15
	leaq	1(%rbp), %rax
	ja	.L20512
	movq	%rax, %rdi
	movq	%r13, %rsi
	movq	%r15, %rcx
	rep movsb
.L20355:
	leaq	1(%rbp,%r15), %rax
	movl	$3, %edx
	subl	%r10d, %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L20513
	movq	%rax, %rdi
	movq	%r14, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L20349
.L20490:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L20360
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%ebp, %edi
	call	s390_vfetch4_full
	jmp	.L20366
.L20492:
	cmpb	43192(%rbx,%rcx), %al
	je	.L20364
	.p2align 4,,4
	jmp	.L20362
.L20504:
	movl	16(%rsp), %eax
	addl	%eax, %ebp
.L20380:
	movl	120(%rbx), %edi
	movl	%r15d, %esi
	movl	$1, %r9d
	movzbl	97(%rbx), %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r11, 24(%rsp)
	movq	%r10, 8(%rsp)
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	24(%rsp), %r11
	movq	%rax, %r15
	movq	8(%rsp), %r10
	jmp	.L20383
.L20506:
	cmpb	43192(%rbx,%rax), %sil
	je	.L20382
	jmp	.L20380
.L20505:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L20381
	jmp	.L20380
.L20508:
	movq	%r15, %rsi
	movq	%r8, %rdi
	movq	%r11, (%rsp)
	call	memcpy
	movq	(%rsp), %r11
	jmp	.L20379
.L20507:
	movq	%r8, %rdx
	movq	%r10, %rsi
	movq	%rbp, %rdi
	movq	%r11, 24(%rsp)
	movq	%r8, 8(%rsp)
	call	memcpy
	movq	8(%rsp), %r8
	movq	24(%rsp), %r11
	jmp	.L20385
.L20513:
	movq	%r14, %rsi
	movq	%rax, %rdi
	call	memcpy
	jmp	.L20349
.L20512:
	movq	%r15, %rdx
	movq	%r13, %rsi
	movq	%rax, %rdi
	movl	%r10d, (%rsp)
	call	memcpy
	movl	(%rsp), %r10d
	jmp	.L20355
.L20509:
	addl	%r10d, %ebp
.L20350:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movl	%r10d, (%rsp)
	andl	%ebp, %edi
	call	s390_logical_to_main_l
	movl	(%rsp), %r10d
	movq	%rax, %r14
	jmp	.L20353
.L20511:
	cmpb	43192(%rbx,%rax), %cl
	je	.L20352
	jmp	.L20350
.L20510:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L20351
	jmp	.L20350
	.cfi_endproc
.LFE1840:
	.size	s390_insert_characters_under_mask, .-s390_insert_characters_under_mask
	.p2align 4,,15
	.globl	s390_BF_7
	.type	s390_BF_7, @function
s390_BF_7:
.LFB1841:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %r13d
	movl	%ebp, %esi
	shrl	$20, %r13d
	shrl	$12, %esi
	andl	$4095, %ebp
	andl	$15, %r13d
	andl	$15, %esi
	movl	%esi, %r14d
	je	.L20515
	movslq	%esi, %rax
	addl	192(%rbx,%rax,8), %ebp
	andl	120(%rbx), %ebp
.L20515:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	movb	$0, 16(%rsp)
	leal	5(%r14), %eax
	cltq
	leaq	(%rbx,%rax,4), %r15
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L20516
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L20562
.L20517:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L20563
.L20518:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L20516
	testb	$4, 46264(%rbx,%rcx)
	je	.L20516
	movl	%ebp, %r12d
	xorq	26808(%rdx), %r12
.L20519:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2045, %eax
	jg	.L20520
	movzwl	(%r12), %eax
	movw	%ax, 17(%rsp)
	movzbl	2(%r12), %eax
	movb	%al, 19(%rsp)
.L20521:
	movslq	%r13d, %r13
	movl	16(%rsp), %edx
	leaq	(%rbx,%r13,8), %rcx
	movl	192(%rcx), %eax
	bswap	%edx
	andl	$-16777216, %eax
	orl	%edx, %eax
	movl	%eax, 192(%rcx)
	xorl	%eax, %eax
	testl	%edx, %edx
	je	.L20530
	andl	$8388608, %edx
	cmpl	$1, %edx
	sbbl	%eax, %eax
	notl	%eax
	addl	$2, %eax
.L20530:
	movb	%al, 100(%rbx)
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L20562:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L20517
.L20516:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%ebp, %edi
	call	s390_logical_to_main_l
	movq	%rax, %r12
	jmp	.L20519
.L20520:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movl	1892(%r15), %eax
	leal	(%r10,%rbp), %edx
	testl	%eax, %eax
	je	.L20522
	leal	(%r10,%rbp), %edx
	leal	1(%rax), %esi
	movl	%edx, %ebp
	andl	120(%rbx), %ebp
	movslq	%esi, %rsi
	movl	%ebp, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbx,%rsi,8)
	jne	.L20564
.L20523:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L20565
.L20524:
	movl	%ebp, %esi
	andl	$2143289344, %esi
	orl	2224(%rbx), %esi
	cmpl	10424(%rcx), %esi
	jne	.L20522
	testb	$4, 46264(%rbx,%rax)
	je	.L20522
	xorq	26808(%rcx), %rbp
.L20525:
	movl	%r10d, %r14d
	leaq	17(%rsp), %rax
	cmpq	$127, %r14
	ja	.L20566
	movq	%rax, %rdi
	movq	%r12, %rsi
	movq	%r14, %rcx
	rep movsb
.L20527:
	leaq	17(%rsp,%r14), %rax
	movl	$3, %edx
	subl	%r10d, %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L20567
	movq	%rax, %rdi
	movq	%rbp, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L20521
.L20563:
	cmpb	43192(%rbx,%rcx), %al
	je	.L20518
	jmp	.L20516
.L20567:
	movq	%rbp, %rsi
	movq	%rax, %rdi
	call	memcpy
	.p2align 4,,2
	jmp	.L20521
.L20566:
	movq	%r14, %rdx
	movq	%r12, %rsi
	movq	%rax, %rdi
	movl	%r10d, 12(%rsp)
	call	memcpy
	movl	12(%rsp), %r10d
	jmp	.L20527
.L20565:
	cmpb	43192(%rbx,%rax), %sil
	je	.L20524
.L20522:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movl	%r14d, %esi
	movl	%r10d, 12(%rsp)
	andl	%edx, %edi
	movq	%rbx, %rdx
	call	s390_logical_to_main_l
	movl	12(%rsp), %r10d
	movq	%rax, %rbp
	jmp	.L20525
.L20564:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L20523
	jmp	.L20522
	.cfi_endproc
.LFE1841:
	.size	s390_BF_7, .-s390_BF_7
	.p2align 4,,15
	.globl	s390_BF_F
	.type	s390_BF_F, @function
s390_BF_F:
.LFB1842:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %edi
	bswap	%edi
	movl	%edi, %ebp
	movl	%edi, %eax
	shrl	$20, %ebp
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %ebp
	andl	$15, %eax
	movl	%eax, %esi
	je	.L20569
	cltq
	addl	192(%rbx,%rax,8), %edi
	andl	120(%rbx), %edi
.L20569:
	addq	$4, 136(%rbx)
	testb	$3, %dil
	movb	$4, 130(%rbx)
	jne	.L20600
.L20570:
	leal	5(%rsi), %eax
	cltq
	movl	1892(%rbx,%rax,4), %edx
	testl	%edx, %edx
	je	.L20572
	leal	1(%rdx), %eax
	movl	%edi, %ecx
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %r10d
	cmpl	%r10d, 320(%rbx,%rax,8)
	jne	.L20601
.L20573:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L20602
.L20574:
	movl	%edi, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L20572
	testb	$4, 46264(%rbx,%rcx)
	je	.L20572
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L20575:
	movl	(%rax), %eax
	bswap	%eax
.L20576:
	movslq	%ebp, %rbp
	xorl	%edx, %edx
	testl	%eax, %eax
	movl	%eax, 192(%rbx,%rbp,8)
	je	.L20577
	sarl	$31, %eax
	leal	2(%rax), %edx
.L20577:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L20601:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %r8d
	testb	%r8b, 1976(%rbx,%rax)
	jne	.L20573
.L20572:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	s390_logical_to_main_l
	jmp	.L20575
.L20600:
	movl	%edi, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L20570
	movq	%rbx, %rdx
	call	s390_vfetch4_full
	jmp	.L20576
.L20602:
	cmpb	43192(%rbx,%rcx), %al
	je	.L20574
	.p2align 4,,4
	jmp	.L20572
	.cfi_endproc
.LFE1842:
	.size	s390_BF_F, .-s390_BF_F
	.p2align 4,,15
	.globl	s390_BF_x
	.type	s390_BF_x, @function
s390_BF_x:
.LFB1843:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %r12d
	movl	%ebp, %r14d
	shrl	$16, %r12d
	movl	%ebp, %eax
	shrl	$20, %r14d
	movl	%r12d, %r10d
	shrl	$12, %eax
	andl	$15, %r14d
	andl	$15, %r10d
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, 8(%rsp)
	je	.L20604
	cltq
	addl	192(%rsi,%rax,8), %ebp
	movl	8(%rsp), %eax
	andl	120(%rsi), %ebp
.L20604:
	addq	$4, 136(%rbx)
	addl	$5, %eax
	movslq	%r10d, %r15
	cltq
	movb	$4, 130(%rbx)
	movzbl	icmlen.48952(,%r15,4), %r11d
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	movl	$0, 32(%rsp)
	testl	%eax, %eax
	je	.L20605
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L20681
.L20606:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L20682
.L20607:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L20605
	testb	$4, 46264(%rbx,%rcx)
	je	.L20605
	movl	%ebp, %r13d
	xorq	26808(%rdx), %r13
.L20608:
	movl	%ebp, %edx
	movl	$2047, %eax
	andl	$2047, %edx
	subl	%r11d, %eax
	cmpl	%eax, %edx
	jg	.L20609
	leaq	32(%rsp), %rdi
	addl	$1, %r11d
	movq	%r13, %rsi
	movslq	%r11d, %rdx
	cmpq	$8, %rdx
	jae	.L20683
.L20610:
	xorl	%eax, %eax
	testb	$4, %dl
	jne	.L20684
	testb	$2, %dl
	jne	.L20685
.L20614:
	andl	$1, %edx
	jne	.L20686
.L20616:
	testl	%r10d, %r10d
	.p2align 4,,2
	jne	.L20625
	movb	$0, 32(%rsp)
.L20625:
	movl	32(%rsp), %eax
	xorl	%edx, %edx
	bswap	%eax
	testl	%eax, %eax
	je	.L20626
	sarl	$31, %eax
	leal	2(%rax), %edx
.L20626:
	movb	%dl, 100(%rbx)
	movl	icmmask.48953(,%r15,4), %edx
	movslq	%r14d, %r14
	leaq	(%rbx,%r14,8), %rax
	andl	192(%rax), %edx
	testb	$8, %r12b
	movl	%edx, 192(%rax)
	je	.L20633
	movzbl	32(%rsp), %ecx
	movl	$3, %edi
	movl	$2, %esi
	sall	$24, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movl	$1, %ecx
.L20627:
	testb	$4, %r12b
	je	.L20628
	movzbl	32(%rsp,%rcx), %ecx
	sall	$16, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movslq	%esi, %rcx
	movl	%edi, %esi
.L20628:
	testb	$2, %r12b
	je	.L20629
	movzbl	32(%rsp,%rcx), %ecx
	sall	$8, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movslq	%esi, %rcx
.L20629:
	andl	$1, %r12d
	je	.L20603
	movzbl	32(%rsp,%rcx), %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
.L20603:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L20633:
	.cfi_restore_state
	movl	$2, %edi
	movl	$1, %esi
	xorl	%ecx, %ecx
	jmp	.L20627
	.p2align 4,,10
	.p2align 3
.L20686:
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
	jmp	.L20616
	.p2align 4,,10
	.p2align 3
.L20685:
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%rdi,%rax)
	addq	$2, %rax
	andl	$1, %edx
	je	.L20616
	jmp	.L20686
	.p2align 4,,10
	.p2align 3
.L20684:
	movl	(%rsi), %eax
	testb	$2, %dl
	movl	%eax, (%rdi)
	movl	$4, %eax
	je	.L20614
	jmp	.L20685
	.p2align 4,,10
	.p2align 3
.L20683:
	cmpq	$127, %rdx
	ja	.L20687
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	jmp	.L20610
	.p2align 4,,10
	.p2align 3
.L20687:
	movl	%r10d, 8(%rsp)
	call	memcpy
	movl	8(%rsp), %r10d
	jmp	.L20616
.L20681:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L20606
.L20605:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movl	8(%rsp), %esi
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r11d, 28(%rsp)
	movl	%r10d, 24(%rsp)
	call	s390_logical_to_main_l
	movl	28(%rsp), %r11d
	movq	%rax, %r13
	movl	24(%rsp), %r10d
	jmp	.L20608
.L20609:
	movq	16(%rsp), %rax
	movl	$2048, 24(%rsp)
	subl	%edx, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L20688
	leal	1(%rax), %esi
	movl	24(%rsp), %eax
	movslq	%esi, %rsi
	leal	(%rax,%rbp), %edx
	movl	%edx, %ebp
	andl	120(%rbx), %ebp
	movl	%ebp, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movl	2232(%rcx), %edi
	cmpl	%edi, 320(%rbx,%rsi,8)
	jne	.L20689
.L20618:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L20690
.L20619:
	movl	%ebp, %esi
	andl	$2143289344, %esi
	orl	2224(%rbx), %esi
	cmpl	10424(%rcx), %esi
	jne	.L20617
	testb	$4, 46264(%rbx,%rax)
	je	.L20617
	xorq	26808(%rcx), %rbp
.L20620:
	movl	24(%rsp), %r9d
	leaq	32(%rsp), %r8
	cmpq	$127, %r9
	ja	.L20691
	movq	%r8, %rdi
	movq	%r13, %rsi
	movq	%r9, %rcx
	rep movsb
.L20622:
	leal	1(%r11), %edx
	addq	%r9, %r8
	subl	24(%rsp), %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L20692
	movq	%r8, %rdi
	movq	%rbp, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L20616
.L20682:
	cmpb	43192(%rbx,%rcx), %al
	je	.L20607
	jmp	.L20605
.L20692:
	movq	%rbp, %rsi
	movq	%r8, %rdi
	movl	%r10d, 8(%rsp)
	call	memcpy
	movl	8(%rsp), %r10d
	jmp	.L20616
.L20691:
	movq	%r9, %rdx
	movq	%r8, %rdi
	movq	%r13, %rsi
	movl	%r11d, 28(%rsp)
	movl	%r10d, 16(%rsp)
	movq	%r9, 8(%rsp)
	call	memcpy
	movq	8(%rsp), %r9
	movq	%rax, %r8
	movl	16(%rsp), %r10d
	movl	28(%rsp), %r11d
	jmp	.L20622
.L20688:
	movl	24(%rsp), %eax
	leal	(%rax,%rbp), %edx
.L20617:
	movl	120(%rbx), %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movl	%r11d, 28(%rsp)
	movl	8(%rsp), %esi
	movl	%r10d, 16(%rsp)
	andl	%edx, %edi
	movq	%rbx, %rdx
	call	s390_logical_to_main_l
	movl	28(%rsp), %r11d
	movq	%rax, %rbp
	movl	16(%rsp), %r10d
	jmp	.L20620
.L20690:
	cmpb	43192(%rbx,%rax), %sil
	je	.L20619
	jmp	.L20617
.L20689:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L20618
	jmp	.L20617
	.cfi_endproc
.LFE1843:
	.size	s390_BF_x, .-s390_BF_x
	.p2align 4,,15
	.globl	s390_insert_program_mask
	.type	s390_insert_program_mask, @function
s390_insert_program_mask:
.LFB1844:
	.cfi_startproc
	movzbl	3(%rdi), %eax
	addq	$4, 136(%rsi)
	sarl	$4, %eax
	movslq	%eax, %rdx
	movzbl	100(%rsi), %eax
	sall	$4, %eax
	orb	101(%rsi), %al
	movb	%al, 195(%rsi,%rdx,8)
	ret
	.cfi_endproc
.LFE1844:
	.size	s390_insert_program_mask, .-s390_insert_program_mask
	.p2align 4,,15
	.globl	s390_load_register
	.type	s390_load_register, @function
s390_load_register:
.LFB1845:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	addq	$2, 136(%rsi)
	movq	%rax, %rdx
	shrq	$4, %rax
	andl	$15, %edx
	andl	$15, %eax
	movl	192(%rsi,%rdx,8), %edx
	movl	%edx, 192(%rsi,%rax,8)
	ret
	.cfi_endproc
.LFE1845:
	.size	s390_load_register, .-s390_load_register
	.p2align 4,,15
	.globl	s390_1800
	.type	s390_1800, @function
s390_1800:
.LFB1846:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1846:
	.size	s390_1800, .-s390_1800
	.p2align 4,,15
	.globl	s390_1801
	.type	s390_1801, @function
s390_1801:
.LFB1847:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1847:
	.size	s390_1801, .-s390_1801
	.p2align 4,,15
	.globl	s390_1802
	.type	s390_1802, @function
s390_1802:
.LFB1848:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1848:
	.size	s390_1802, .-s390_1802
	.p2align 4,,15
	.globl	s390_1803
	.type	s390_1803, @function
s390_1803:
.LFB1849:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1849:
	.size	s390_1803, .-s390_1803
	.p2align 4,,15
	.globl	s390_1804
	.type	s390_1804, @function
s390_1804:
.LFB1850:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1850:
	.size	s390_1804, .-s390_1804
	.p2align 4,,15
	.globl	s390_1805
	.type	s390_1805, @function
s390_1805:
.LFB1851:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1851:
	.size	s390_1805, .-s390_1805
	.p2align 4,,15
	.globl	s390_1806
	.type	s390_1806, @function
s390_1806:
.LFB1852:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1852:
	.size	s390_1806, .-s390_1806
	.p2align 4,,15
	.globl	s390_1807
	.type	s390_1807, @function
s390_1807:
.LFB1853:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1853:
	.size	s390_1807, .-s390_1807
	.p2align 4,,15
	.globl	s390_1808
	.type	s390_1808, @function
s390_1808:
.LFB1854:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1854:
	.size	s390_1808, .-s390_1808
	.p2align 4,,15
	.globl	s390_1809
	.type	s390_1809, @function
s390_1809:
.LFB1855:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1855:
	.size	s390_1809, .-s390_1809
	.p2align 4,,15
	.globl	s390_180A
	.type	s390_180A, @function
s390_180A:
.LFB1856:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1856:
	.size	s390_180A, .-s390_180A
	.p2align 4,,15
	.globl	s390_180B
	.type	s390_180B, @function
s390_180B:
.LFB1857:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1857:
	.size	s390_180B, .-s390_180B
	.p2align 4,,15
	.globl	s390_180C
	.type	s390_180C, @function
s390_180C:
.LFB1858:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1858:
	.size	s390_180C, .-s390_180C
	.p2align 4,,15
	.globl	s390_180D
	.type	s390_180D, @function
s390_180D:
.LFB1859:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1859:
	.size	s390_180D, .-s390_180D
	.p2align 4,,15
	.globl	s390_180E
	.type	s390_180E, @function
s390_180E:
.LFB1860:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1860:
	.size	s390_180E, .-s390_180E
	.p2align 4,,15
	.globl	s390_180F
	.type	s390_180F, @function
s390_180F:
.LFB1861:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE1861:
	.size	s390_180F, .-s390_180F
	.p2align 4,,15
	.globl	s390_1810
	.type	s390_1810, @function
s390_1810:
.LFB1862:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1862:
	.size	s390_1810, .-s390_1810
	.p2align 4,,15
	.globl	s390_1811
	.type	s390_1811, @function
s390_1811:
.LFB1863:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1863:
	.size	s390_1811, .-s390_1811
	.p2align 4,,15
	.globl	s390_1812
	.type	s390_1812, @function
s390_1812:
.LFB1864:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1864:
	.size	s390_1812, .-s390_1812
	.p2align 4,,15
	.globl	s390_1813
	.type	s390_1813, @function
s390_1813:
.LFB1865:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1865:
	.size	s390_1813, .-s390_1813
	.p2align 4,,15
	.globl	s390_1814
	.type	s390_1814, @function
s390_1814:
.LFB1866:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1866:
	.size	s390_1814, .-s390_1814
	.p2align 4,,15
	.globl	s390_1815
	.type	s390_1815, @function
s390_1815:
.LFB1867:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1867:
	.size	s390_1815, .-s390_1815
	.p2align 4,,15
	.globl	s390_1816
	.type	s390_1816, @function
s390_1816:
.LFB1868:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1868:
	.size	s390_1816, .-s390_1816
	.p2align 4,,15
	.globl	s390_1817
	.type	s390_1817, @function
s390_1817:
.LFB1869:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1869:
	.size	s390_1817, .-s390_1817
	.p2align 4,,15
	.globl	s390_1818
	.type	s390_1818, @function
s390_1818:
.LFB1870:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1870:
	.size	s390_1818, .-s390_1818
	.p2align 4,,15
	.globl	s390_1819
	.type	s390_1819, @function
s390_1819:
.LFB1871:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1871:
	.size	s390_1819, .-s390_1819
	.p2align 4,,15
	.globl	s390_181A
	.type	s390_181A, @function
s390_181A:
.LFB1872:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1872:
	.size	s390_181A, .-s390_181A
	.p2align 4,,15
	.globl	s390_181B
	.type	s390_181B, @function
s390_181B:
.LFB1873:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1873:
	.size	s390_181B, .-s390_181B
	.p2align 4,,15
	.globl	s390_181C
	.type	s390_181C, @function
s390_181C:
.LFB1874:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1874:
	.size	s390_181C, .-s390_181C
	.p2align 4,,15
	.globl	s390_181D
	.type	s390_181D, @function
s390_181D:
.LFB1875:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1875:
	.size	s390_181D, .-s390_181D
	.p2align 4,,15
	.globl	s390_181E
	.type	s390_181E, @function
s390_181E:
.LFB1876:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1876:
	.size	s390_181E, .-s390_181E
	.p2align 4,,15
	.globl	s390_181F
	.type	s390_181F, @function
s390_181F:
.LFB1877:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE1877:
	.size	s390_181F, .-s390_181F
	.p2align 4,,15
	.globl	s390_1820
	.type	s390_1820, @function
s390_1820:
.LFB1878:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1878:
	.size	s390_1820, .-s390_1820
	.p2align 4,,15
	.globl	s390_1821
	.type	s390_1821, @function
s390_1821:
.LFB1879:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1879:
	.size	s390_1821, .-s390_1821
	.p2align 4,,15
	.globl	s390_1822
	.type	s390_1822, @function
s390_1822:
.LFB1880:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1880:
	.size	s390_1822, .-s390_1822
	.p2align 4,,15
	.globl	s390_1823
	.type	s390_1823, @function
s390_1823:
.LFB1881:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1881:
	.size	s390_1823, .-s390_1823
	.p2align 4,,15
	.globl	s390_1824
	.type	s390_1824, @function
s390_1824:
.LFB1882:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1882:
	.size	s390_1824, .-s390_1824
	.p2align 4,,15
	.globl	s390_1825
	.type	s390_1825, @function
s390_1825:
.LFB1883:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1883:
	.size	s390_1825, .-s390_1825
	.p2align 4,,15
	.globl	s390_1826
	.type	s390_1826, @function
s390_1826:
.LFB1884:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1884:
	.size	s390_1826, .-s390_1826
	.p2align 4,,15
	.globl	s390_1827
	.type	s390_1827, @function
s390_1827:
.LFB1885:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1885:
	.size	s390_1827, .-s390_1827
	.p2align 4,,15
	.globl	s390_1828
	.type	s390_1828, @function
s390_1828:
.LFB1886:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1886:
	.size	s390_1828, .-s390_1828
	.p2align 4,,15
	.globl	s390_1829
	.type	s390_1829, @function
s390_1829:
.LFB1887:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1887:
	.size	s390_1829, .-s390_1829
	.p2align 4,,15
	.globl	s390_182A
	.type	s390_182A, @function
s390_182A:
.LFB1888:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1888:
	.size	s390_182A, .-s390_182A
	.p2align 4,,15
	.globl	s390_182B
	.type	s390_182B, @function
s390_182B:
.LFB1889:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1889:
	.size	s390_182B, .-s390_182B
	.p2align 4,,15
	.globl	s390_182C
	.type	s390_182C, @function
s390_182C:
.LFB1890:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1890:
	.size	s390_182C, .-s390_182C
	.p2align 4,,15
	.globl	s390_182D
	.type	s390_182D, @function
s390_182D:
.LFB1891:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1891:
	.size	s390_182D, .-s390_182D
	.p2align 4,,15
	.globl	s390_182E
	.type	s390_182E, @function
s390_182E:
.LFB1892:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1892:
	.size	s390_182E, .-s390_182E
	.p2align 4,,15
	.globl	s390_182F
	.type	s390_182F, @function
s390_182F:
.LFB1893:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE1893:
	.size	s390_182F, .-s390_182F
	.p2align 4,,15
	.globl	s390_1830
	.type	s390_1830, @function
s390_1830:
.LFB1894:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1894:
	.size	s390_1830, .-s390_1830
	.p2align 4,,15
	.globl	s390_1831
	.type	s390_1831, @function
s390_1831:
.LFB1895:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1895:
	.size	s390_1831, .-s390_1831
	.p2align 4,,15
	.globl	s390_1832
	.type	s390_1832, @function
s390_1832:
.LFB1896:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1896:
	.size	s390_1832, .-s390_1832
	.p2align 4,,15
	.globl	s390_1833
	.type	s390_1833, @function
s390_1833:
.LFB1897:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1897:
	.size	s390_1833, .-s390_1833
	.p2align 4,,15
	.globl	s390_1834
	.type	s390_1834, @function
s390_1834:
.LFB1898:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1898:
	.size	s390_1834, .-s390_1834
	.p2align 4,,15
	.globl	s390_1835
	.type	s390_1835, @function
s390_1835:
.LFB1899:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1899:
	.size	s390_1835, .-s390_1835
	.p2align 4,,15
	.globl	s390_1836
	.type	s390_1836, @function
s390_1836:
.LFB1900:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1900:
	.size	s390_1836, .-s390_1836
	.p2align 4,,15
	.globl	s390_1837
	.type	s390_1837, @function
s390_1837:
.LFB1901:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1901:
	.size	s390_1837, .-s390_1837
	.p2align 4,,15
	.globl	s390_1838
	.type	s390_1838, @function
s390_1838:
.LFB1902:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1902:
	.size	s390_1838, .-s390_1838
	.p2align 4,,15
	.globl	s390_1839
	.type	s390_1839, @function
s390_1839:
.LFB1903:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1903:
	.size	s390_1839, .-s390_1839
	.p2align 4,,15
	.globl	s390_183A
	.type	s390_183A, @function
s390_183A:
.LFB1904:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1904:
	.size	s390_183A, .-s390_183A
	.p2align 4,,15
	.globl	s390_183B
	.type	s390_183B, @function
s390_183B:
.LFB1905:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1905:
	.size	s390_183B, .-s390_183B
	.p2align 4,,15
	.globl	s390_183C
	.type	s390_183C, @function
s390_183C:
.LFB1906:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1906:
	.size	s390_183C, .-s390_183C
	.p2align 4,,15
	.globl	s390_183D
	.type	s390_183D, @function
s390_183D:
.LFB1907:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1907:
	.size	s390_183D, .-s390_183D
	.p2align 4,,15
	.globl	s390_183E
	.type	s390_183E, @function
s390_183E:
.LFB1908:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1908:
	.size	s390_183E, .-s390_183E
	.p2align 4,,15
	.globl	s390_183F
	.type	s390_183F, @function
s390_183F:
.LFB1909:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE1909:
	.size	s390_183F, .-s390_183F
	.p2align 4,,15
	.globl	s390_1840
	.type	s390_1840, @function
s390_1840:
.LFB1910:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1910:
	.size	s390_1840, .-s390_1840
	.p2align 4,,15
	.globl	s390_1841
	.type	s390_1841, @function
s390_1841:
.LFB1911:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1911:
	.size	s390_1841, .-s390_1841
	.p2align 4,,15
	.globl	s390_1842
	.type	s390_1842, @function
s390_1842:
.LFB1912:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1912:
	.size	s390_1842, .-s390_1842
	.p2align 4,,15
	.globl	s390_1843
	.type	s390_1843, @function
s390_1843:
.LFB1913:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1913:
	.size	s390_1843, .-s390_1843
	.p2align 4,,15
	.globl	s390_1844
	.type	s390_1844, @function
s390_1844:
.LFB1914:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1914:
	.size	s390_1844, .-s390_1844
	.p2align 4,,15
	.globl	s390_1845
	.type	s390_1845, @function
s390_1845:
.LFB1915:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1915:
	.size	s390_1845, .-s390_1845
	.p2align 4,,15
	.globl	s390_1846
	.type	s390_1846, @function
s390_1846:
.LFB1916:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1916:
	.size	s390_1846, .-s390_1846
	.p2align 4,,15
	.globl	s390_1847
	.type	s390_1847, @function
s390_1847:
.LFB1917:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1917:
	.size	s390_1847, .-s390_1847
	.p2align 4,,15
	.globl	s390_1848
	.type	s390_1848, @function
s390_1848:
.LFB1918:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1918:
	.size	s390_1848, .-s390_1848
	.p2align 4,,15
	.globl	s390_1849
	.type	s390_1849, @function
s390_1849:
.LFB1919:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1919:
	.size	s390_1849, .-s390_1849
	.p2align 4,,15
	.globl	s390_184A
	.type	s390_184A, @function
s390_184A:
.LFB1920:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1920:
	.size	s390_184A, .-s390_184A
	.p2align 4,,15
	.globl	s390_184B
	.type	s390_184B, @function
s390_184B:
.LFB1921:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1921:
	.size	s390_184B, .-s390_184B
	.p2align 4,,15
	.globl	s390_184C
	.type	s390_184C, @function
s390_184C:
.LFB1922:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1922:
	.size	s390_184C, .-s390_184C
	.p2align 4,,15
	.globl	s390_184D
	.type	s390_184D, @function
s390_184D:
.LFB1923:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1923:
	.size	s390_184D, .-s390_184D
	.p2align 4,,15
	.globl	s390_184E
	.type	s390_184E, @function
s390_184E:
.LFB1924:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1924:
	.size	s390_184E, .-s390_184E
	.p2align 4,,15
	.globl	s390_184F
	.type	s390_184F, @function
s390_184F:
.LFB1925:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE1925:
	.size	s390_184F, .-s390_184F
	.p2align 4,,15
	.globl	s390_1850
	.type	s390_1850, @function
s390_1850:
.LFB1926:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1926:
	.size	s390_1850, .-s390_1850
	.p2align 4,,15
	.globl	s390_1851
	.type	s390_1851, @function
s390_1851:
.LFB1927:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1927:
	.size	s390_1851, .-s390_1851
	.p2align 4,,15
	.globl	s390_1852
	.type	s390_1852, @function
s390_1852:
.LFB1928:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1928:
	.size	s390_1852, .-s390_1852
	.p2align 4,,15
	.globl	s390_1853
	.type	s390_1853, @function
s390_1853:
.LFB1929:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1929:
	.size	s390_1853, .-s390_1853
	.p2align 4,,15
	.globl	s390_1854
	.type	s390_1854, @function
s390_1854:
.LFB1930:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1930:
	.size	s390_1854, .-s390_1854
	.p2align 4,,15
	.globl	s390_1855
	.type	s390_1855, @function
s390_1855:
.LFB1931:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1931:
	.size	s390_1855, .-s390_1855
	.p2align 4,,15
	.globl	s390_1856
	.type	s390_1856, @function
s390_1856:
.LFB1932:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1932:
	.size	s390_1856, .-s390_1856
	.p2align 4,,15
	.globl	s390_1857
	.type	s390_1857, @function
s390_1857:
.LFB1933:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1933:
	.size	s390_1857, .-s390_1857
	.p2align 4,,15
	.globl	s390_1858
	.type	s390_1858, @function
s390_1858:
.LFB1934:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1934:
	.size	s390_1858, .-s390_1858
	.p2align 4,,15
	.globl	s390_1859
	.type	s390_1859, @function
s390_1859:
.LFB1935:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1935:
	.size	s390_1859, .-s390_1859
	.p2align 4,,15
	.globl	s390_185A
	.type	s390_185A, @function
s390_185A:
.LFB1936:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1936:
	.size	s390_185A, .-s390_185A
	.p2align 4,,15
	.globl	s390_185B
	.type	s390_185B, @function
s390_185B:
.LFB1937:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1937:
	.size	s390_185B, .-s390_185B
	.p2align 4,,15
	.globl	s390_185C
	.type	s390_185C, @function
s390_185C:
.LFB1938:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1938:
	.size	s390_185C, .-s390_185C
	.p2align 4,,15
	.globl	s390_185D
	.type	s390_185D, @function
s390_185D:
.LFB1939:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1939:
	.size	s390_185D, .-s390_185D
	.p2align 4,,15
	.globl	s390_185E
	.type	s390_185E, @function
s390_185E:
.LFB1940:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1940:
	.size	s390_185E, .-s390_185E
	.p2align 4,,15
	.globl	s390_185F
	.type	s390_185F, @function
s390_185F:
.LFB1941:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE1941:
	.size	s390_185F, .-s390_185F
	.p2align 4,,15
	.globl	s390_1860
	.type	s390_1860, @function
s390_1860:
.LFB1942:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1942:
	.size	s390_1860, .-s390_1860
	.p2align 4,,15
	.globl	s390_1861
	.type	s390_1861, @function
s390_1861:
.LFB1943:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1943:
	.size	s390_1861, .-s390_1861
	.p2align 4,,15
	.globl	s390_1862
	.type	s390_1862, @function
s390_1862:
.LFB1944:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1944:
	.size	s390_1862, .-s390_1862
	.p2align 4,,15
	.globl	s390_1863
	.type	s390_1863, @function
s390_1863:
.LFB1945:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1945:
	.size	s390_1863, .-s390_1863
	.p2align 4,,15
	.globl	s390_1864
	.type	s390_1864, @function
s390_1864:
.LFB1946:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1946:
	.size	s390_1864, .-s390_1864
	.p2align 4,,15
	.globl	s390_1865
	.type	s390_1865, @function
s390_1865:
.LFB1947:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1947:
	.size	s390_1865, .-s390_1865
	.p2align 4,,15
	.globl	s390_1866
	.type	s390_1866, @function
s390_1866:
.LFB1948:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1948:
	.size	s390_1866, .-s390_1866
	.p2align 4,,15
	.globl	s390_1867
	.type	s390_1867, @function
s390_1867:
.LFB1949:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1949:
	.size	s390_1867, .-s390_1867
	.p2align 4,,15
	.globl	s390_1868
	.type	s390_1868, @function
s390_1868:
.LFB1950:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1950:
	.size	s390_1868, .-s390_1868
	.p2align 4,,15
	.globl	s390_1869
	.type	s390_1869, @function
s390_1869:
.LFB1951:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1951:
	.size	s390_1869, .-s390_1869
	.p2align 4,,15
	.globl	s390_186A
	.type	s390_186A, @function
s390_186A:
.LFB1952:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1952:
	.size	s390_186A, .-s390_186A
	.p2align 4,,15
	.globl	s390_186B
	.type	s390_186B, @function
s390_186B:
.LFB1953:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1953:
	.size	s390_186B, .-s390_186B
	.p2align 4,,15
	.globl	s390_186C
	.type	s390_186C, @function
s390_186C:
.LFB1954:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1954:
	.size	s390_186C, .-s390_186C
	.p2align 4,,15
	.globl	s390_186D
	.type	s390_186D, @function
s390_186D:
.LFB1955:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1955:
	.size	s390_186D, .-s390_186D
	.p2align 4,,15
	.globl	s390_186E
	.type	s390_186E, @function
s390_186E:
.LFB1956:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1956:
	.size	s390_186E, .-s390_186E
	.p2align 4,,15
	.globl	s390_186F
	.type	s390_186F, @function
s390_186F:
.LFB1957:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE1957:
	.size	s390_186F, .-s390_186F
	.p2align 4,,15
	.globl	s390_1870
	.type	s390_1870, @function
s390_1870:
.LFB1958:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1958:
	.size	s390_1870, .-s390_1870
	.p2align 4,,15
	.globl	s390_1871
	.type	s390_1871, @function
s390_1871:
.LFB1959:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1959:
	.size	s390_1871, .-s390_1871
	.p2align 4,,15
	.globl	s390_1872
	.type	s390_1872, @function
s390_1872:
.LFB1960:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1960:
	.size	s390_1872, .-s390_1872
	.p2align 4,,15
	.globl	s390_1873
	.type	s390_1873, @function
s390_1873:
.LFB1961:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1961:
	.size	s390_1873, .-s390_1873
	.p2align 4,,15
	.globl	s390_1874
	.type	s390_1874, @function
s390_1874:
.LFB1962:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1962:
	.size	s390_1874, .-s390_1874
	.p2align 4,,15
	.globl	s390_1875
	.type	s390_1875, @function
s390_1875:
.LFB1963:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1963:
	.size	s390_1875, .-s390_1875
	.p2align 4,,15
	.globl	s390_1876
	.type	s390_1876, @function
s390_1876:
.LFB1964:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1964:
	.size	s390_1876, .-s390_1876
	.p2align 4,,15
	.globl	s390_1877
	.type	s390_1877, @function
s390_1877:
.LFB1965:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1965:
	.size	s390_1877, .-s390_1877
	.p2align 4,,15
	.globl	s390_1878
	.type	s390_1878, @function
s390_1878:
.LFB1966:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1966:
	.size	s390_1878, .-s390_1878
	.p2align 4,,15
	.globl	s390_1879
	.type	s390_1879, @function
s390_1879:
.LFB1967:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1967:
	.size	s390_1879, .-s390_1879
	.p2align 4,,15
	.globl	s390_187A
	.type	s390_187A, @function
s390_187A:
.LFB1968:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1968:
	.size	s390_187A, .-s390_187A
	.p2align 4,,15
	.globl	s390_187B
	.type	s390_187B, @function
s390_187B:
.LFB1969:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1969:
	.size	s390_187B, .-s390_187B
	.p2align 4,,15
	.globl	s390_187C
	.type	s390_187C, @function
s390_187C:
.LFB1970:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1970:
	.size	s390_187C, .-s390_187C
	.p2align 4,,15
	.globl	s390_187D
	.type	s390_187D, @function
s390_187D:
.LFB1971:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1971:
	.size	s390_187D, .-s390_187D
	.p2align 4,,15
	.globl	s390_187E
	.type	s390_187E, @function
s390_187E:
.LFB1972:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1972:
	.size	s390_187E, .-s390_187E
	.p2align 4,,15
	.globl	s390_187F
	.type	s390_187F, @function
s390_187F:
.LFB1973:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE1973:
	.size	s390_187F, .-s390_187F
	.p2align 4,,15
	.globl	s390_1880
	.type	s390_1880, @function
s390_1880:
.LFB1974:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1974:
	.size	s390_1880, .-s390_1880
	.p2align 4,,15
	.globl	s390_1881
	.type	s390_1881, @function
s390_1881:
.LFB1975:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1975:
	.size	s390_1881, .-s390_1881
	.p2align 4,,15
	.globl	s390_1882
	.type	s390_1882, @function
s390_1882:
.LFB1976:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1976:
	.size	s390_1882, .-s390_1882
	.p2align 4,,15
	.globl	s390_1883
	.type	s390_1883, @function
s390_1883:
.LFB1977:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1977:
	.size	s390_1883, .-s390_1883
	.p2align 4,,15
	.globl	s390_1884
	.type	s390_1884, @function
s390_1884:
.LFB1978:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1978:
	.size	s390_1884, .-s390_1884
	.p2align 4,,15
	.globl	s390_1885
	.type	s390_1885, @function
s390_1885:
.LFB1979:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1979:
	.size	s390_1885, .-s390_1885
	.p2align 4,,15
	.globl	s390_1886
	.type	s390_1886, @function
s390_1886:
.LFB1980:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1980:
	.size	s390_1886, .-s390_1886
	.p2align 4,,15
	.globl	s390_1887
	.type	s390_1887, @function
s390_1887:
.LFB1981:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1981:
	.size	s390_1887, .-s390_1887
	.p2align 4,,15
	.globl	s390_1888
	.type	s390_1888, @function
s390_1888:
.LFB1982:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1982:
	.size	s390_1888, .-s390_1888
	.p2align 4,,15
	.globl	s390_1889
	.type	s390_1889, @function
s390_1889:
.LFB1983:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1983:
	.size	s390_1889, .-s390_1889
	.p2align 4,,15
	.globl	s390_188A
	.type	s390_188A, @function
s390_188A:
.LFB1984:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1984:
	.size	s390_188A, .-s390_188A
	.p2align 4,,15
	.globl	s390_188B
	.type	s390_188B, @function
s390_188B:
.LFB1985:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1985:
	.size	s390_188B, .-s390_188B
	.p2align 4,,15
	.globl	s390_188C
	.type	s390_188C, @function
s390_188C:
.LFB1986:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1986:
	.size	s390_188C, .-s390_188C
	.p2align 4,,15
	.globl	s390_188D
	.type	s390_188D, @function
s390_188D:
.LFB1987:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1987:
	.size	s390_188D, .-s390_188D
	.p2align 4,,15
	.globl	s390_188E
	.type	s390_188E, @function
s390_188E:
.LFB1988:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1988:
	.size	s390_188E, .-s390_188E
	.p2align 4,,15
	.globl	s390_188F
	.type	s390_188F, @function
s390_188F:
.LFB1989:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE1989:
	.size	s390_188F, .-s390_188F
	.p2align 4,,15
	.globl	s390_1890
	.type	s390_1890, @function
s390_1890:
.LFB1990:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE1990:
	.size	s390_1890, .-s390_1890
	.p2align 4,,15
	.globl	s390_1891
	.type	s390_1891, @function
s390_1891:
.LFB1991:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE1991:
	.size	s390_1891, .-s390_1891
	.p2align 4,,15
	.globl	s390_1892
	.type	s390_1892, @function
s390_1892:
.LFB1992:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE1992:
	.size	s390_1892, .-s390_1892
	.p2align 4,,15
	.globl	s390_1893
	.type	s390_1893, @function
s390_1893:
.LFB1993:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE1993:
	.size	s390_1893, .-s390_1893
	.p2align 4,,15
	.globl	s390_1894
	.type	s390_1894, @function
s390_1894:
.LFB1994:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE1994:
	.size	s390_1894, .-s390_1894
	.p2align 4,,15
	.globl	s390_1895
	.type	s390_1895, @function
s390_1895:
.LFB1995:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE1995:
	.size	s390_1895, .-s390_1895
	.p2align 4,,15
	.globl	s390_1896
	.type	s390_1896, @function
s390_1896:
.LFB1996:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE1996:
	.size	s390_1896, .-s390_1896
	.p2align 4,,15
	.globl	s390_1897
	.type	s390_1897, @function
s390_1897:
.LFB1997:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE1997:
	.size	s390_1897, .-s390_1897
	.p2align 4,,15
	.globl	s390_1898
	.type	s390_1898, @function
s390_1898:
.LFB1998:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE1998:
	.size	s390_1898, .-s390_1898
	.p2align 4,,15
	.globl	s390_1899
	.type	s390_1899, @function
s390_1899:
.LFB1999:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE1999:
	.size	s390_1899, .-s390_1899
	.p2align 4,,15
	.globl	s390_189A
	.type	s390_189A, @function
s390_189A:
.LFB2000:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE2000:
	.size	s390_189A, .-s390_189A
	.p2align 4,,15
	.globl	s390_189B
	.type	s390_189B, @function
s390_189B:
.LFB2001:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE2001:
	.size	s390_189B, .-s390_189B
	.p2align 4,,15
	.globl	s390_189C
	.type	s390_189C, @function
s390_189C:
.LFB2002:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE2002:
	.size	s390_189C, .-s390_189C
	.p2align 4,,15
	.globl	s390_189D
	.type	s390_189D, @function
s390_189D:
.LFB2003:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE2003:
	.size	s390_189D, .-s390_189D
	.p2align 4,,15
	.globl	s390_189E
	.type	s390_189E, @function
s390_189E:
.LFB2004:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE2004:
	.size	s390_189E, .-s390_189E
	.p2align 4,,15
	.globl	s390_189F
	.type	s390_189F, @function
s390_189F:
.LFB2005:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE2005:
	.size	s390_189F, .-s390_189F
	.p2align 4,,15
	.globl	s390_18A0
	.type	s390_18A0, @function
s390_18A0:
.LFB2006:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2006:
	.size	s390_18A0, .-s390_18A0
	.p2align 4,,15
	.globl	s390_18A1
	.type	s390_18A1, @function
s390_18A1:
.LFB2007:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2007:
	.size	s390_18A1, .-s390_18A1
	.p2align 4,,15
	.globl	s390_18A2
	.type	s390_18A2, @function
s390_18A2:
.LFB2008:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2008:
	.size	s390_18A2, .-s390_18A2
	.p2align 4,,15
	.globl	s390_18A3
	.type	s390_18A3, @function
s390_18A3:
.LFB2009:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2009:
	.size	s390_18A3, .-s390_18A3
	.p2align 4,,15
	.globl	s390_18A4
	.type	s390_18A4, @function
s390_18A4:
.LFB2010:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2010:
	.size	s390_18A4, .-s390_18A4
	.p2align 4,,15
	.globl	s390_18A5
	.type	s390_18A5, @function
s390_18A5:
.LFB2011:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2011:
	.size	s390_18A5, .-s390_18A5
	.p2align 4,,15
	.globl	s390_18A6
	.type	s390_18A6, @function
s390_18A6:
.LFB2012:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2012:
	.size	s390_18A6, .-s390_18A6
	.p2align 4,,15
	.globl	s390_18A7
	.type	s390_18A7, @function
s390_18A7:
.LFB2013:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2013:
	.size	s390_18A7, .-s390_18A7
	.p2align 4,,15
	.globl	s390_18A8
	.type	s390_18A8, @function
s390_18A8:
.LFB2014:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2014:
	.size	s390_18A8, .-s390_18A8
	.p2align 4,,15
	.globl	s390_18A9
	.type	s390_18A9, @function
s390_18A9:
.LFB2015:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2015:
	.size	s390_18A9, .-s390_18A9
	.p2align 4,,15
	.globl	s390_18AA
	.type	s390_18AA, @function
s390_18AA:
.LFB2016:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2016:
	.size	s390_18AA, .-s390_18AA
	.p2align 4,,15
	.globl	s390_18AB
	.type	s390_18AB, @function
s390_18AB:
.LFB2017:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2017:
	.size	s390_18AB, .-s390_18AB
	.p2align 4,,15
	.globl	s390_18AC
	.type	s390_18AC, @function
s390_18AC:
.LFB2018:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2018:
	.size	s390_18AC, .-s390_18AC
	.p2align 4,,15
	.globl	s390_18AD
	.type	s390_18AD, @function
s390_18AD:
.LFB2019:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2019:
	.size	s390_18AD, .-s390_18AD
	.p2align 4,,15
	.globl	s390_18AE
	.type	s390_18AE, @function
s390_18AE:
.LFB2020:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2020:
	.size	s390_18AE, .-s390_18AE
	.p2align 4,,15
	.globl	s390_18AF
	.type	s390_18AF, @function
s390_18AF:
.LFB2021:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE2021:
	.size	s390_18AF, .-s390_18AF
	.p2align 4,,15
	.globl	s390_18B0
	.type	s390_18B0, @function
s390_18B0:
.LFB2022:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2022:
	.size	s390_18B0, .-s390_18B0
	.p2align 4,,15
	.globl	s390_18B1
	.type	s390_18B1, @function
s390_18B1:
.LFB2023:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2023:
	.size	s390_18B1, .-s390_18B1
	.p2align 4,,15
	.globl	s390_18B2
	.type	s390_18B2, @function
s390_18B2:
.LFB2024:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2024:
	.size	s390_18B2, .-s390_18B2
	.p2align 4,,15
	.globl	s390_18B3
	.type	s390_18B3, @function
s390_18B3:
.LFB2025:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2025:
	.size	s390_18B3, .-s390_18B3
	.p2align 4,,15
	.globl	s390_18B4
	.type	s390_18B4, @function
s390_18B4:
.LFB2026:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2026:
	.size	s390_18B4, .-s390_18B4
	.p2align 4,,15
	.globl	s390_18B5
	.type	s390_18B5, @function
s390_18B5:
.LFB2027:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2027:
	.size	s390_18B5, .-s390_18B5
	.p2align 4,,15
	.globl	s390_18B6
	.type	s390_18B6, @function
s390_18B6:
.LFB2028:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2028:
	.size	s390_18B6, .-s390_18B6
	.p2align 4,,15
	.globl	s390_18B7
	.type	s390_18B7, @function
s390_18B7:
.LFB2029:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2029:
	.size	s390_18B7, .-s390_18B7
	.p2align 4,,15
	.globl	s390_18B8
	.type	s390_18B8, @function
s390_18B8:
.LFB2030:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2030:
	.size	s390_18B8, .-s390_18B8
	.p2align 4,,15
	.globl	s390_18B9
	.type	s390_18B9, @function
s390_18B9:
.LFB2031:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2031:
	.size	s390_18B9, .-s390_18B9
	.p2align 4,,15
	.globl	s390_18BA
	.type	s390_18BA, @function
s390_18BA:
.LFB2032:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2032:
	.size	s390_18BA, .-s390_18BA
	.p2align 4,,15
	.globl	s390_18BB
	.type	s390_18BB, @function
s390_18BB:
.LFB2033:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2033:
	.size	s390_18BB, .-s390_18BB
	.p2align 4,,15
	.globl	s390_18BC
	.type	s390_18BC, @function
s390_18BC:
.LFB2034:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2034:
	.size	s390_18BC, .-s390_18BC
	.p2align 4,,15
	.globl	s390_18BD
	.type	s390_18BD, @function
s390_18BD:
.LFB2035:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2035:
	.size	s390_18BD, .-s390_18BD
	.p2align 4,,15
	.globl	s390_18BE
	.type	s390_18BE, @function
s390_18BE:
.LFB2036:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2036:
	.size	s390_18BE, .-s390_18BE
	.p2align 4,,15
	.globl	s390_18BF
	.type	s390_18BF, @function
s390_18BF:
.LFB2037:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE2037:
	.size	s390_18BF, .-s390_18BF
	.p2align 4,,15
	.globl	s390_18C0
	.type	s390_18C0, @function
s390_18C0:
.LFB2038:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2038:
	.size	s390_18C0, .-s390_18C0
	.p2align 4,,15
	.globl	s390_18C1
	.type	s390_18C1, @function
s390_18C1:
.LFB2039:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2039:
	.size	s390_18C1, .-s390_18C1
	.p2align 4,,15
	.globl	s390_18C2
	.type	s390_18C2, @function
s390_18C2:
.LFB2040:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2040:
	.size	s390_18C2, .-s390_18C2
	.p2align 4,,15
	.globl	s390_18C3
	.type	s390_18C3, @function
s390_18C3:
.LFB2041:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2041:
	.size	s390_18C3, .-s390_18C3
	.p2align 4,,15
	.globl	s390_18C4
	.type	s390_18C4, @function
s390_18C4:
.LFB2042:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2042:
	.size	s390_18C4, .-s390_18C4
	.p2align 4,,15
	.globl	s390_18C5
	.type	s390_18C5, @function
s390_18C5:
.LFB2043:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2043:
	.size	s390_18C5, .-s390_18C5
	.p2align 4,,15
	.globl	s390_18C6
	.type	s390_18C6, @function
s390_18C6:
.LFB2044:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2044:
	.size	s390_18C6, .-s390_18C6
	.p2align 4,,15
	.globl	s390_18C7
	.type	s390_18C7, @function
s390_18C7:
.LFB2045:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2045:
	.size	s390_18C7, .-s390_18C7
	.p2align 4,,15
	.globl	s390_18C8
	.type	s390_18C8, @function
s390_18C8:
.LFB2046:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2046:
	.size	s390_18C8, .-s390_18C8
	.p2align 4,,15
	.globl	s390_18C9
	.type	s390_18C9, @function
s390_18C9:
.LFB2047:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2047:
	.size	s390_18C9, .-s390_18C9
	.p2align 4,,15
	.globl	s390_18CA
	.type	s390_18CA, @function
s390_18CA:
.LFB2048:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2048:
	.size	s390_18CA, .-s390_18CA
	.p2align 4,,15
	.globl	s390_18CB
	.type	s390_18CB, @function
s390_18CB:
.LFB2049:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2049:
	.size	s390_18CB, .-s390_18CB
	.p2align 4,,15
	.globl	s390_18CC
	.type	s390_18CC, @function
s390_18CC:
.LFB2050:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2050:
	.size	s390_18CC, .-s390_18CC
	.p2align 4,,15
	.globl	s390_18CD
	.type	s390_18CD, @function
s390_18CD:
.LFB2051:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2051:
	.size	s390_18CD, .-s390_18CD
	.p2align 4,,15
	.globl	s390_18CE
	.type	s390_18CE, @function
s390_18CE:
.LFB2052:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2052:
	.size	s390_18CE, .-s390_18CE
	.p2align 4,,15
	.globl	s390_18CF
	.type	s390_18CF, @function
s390_18CF:
.LFB2053:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE2053:
	.size	s390_18CF, .-s390_18CF
	.p2align 4,,15
	.globl	s390_18D0
	.type	s390_18D0, @function
s390_18D0:
.LFB2054:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2054:
	.size	s390_18D0, .-s390_18D0
	.p2align 4,,15
	.globl	s390_18D1
	.type	s390_18D1, @function
s390_18D1:
.LFB2055:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2055:
	.size	s390_18D1, .-s390_18D1
	.p2align 4,,15
	.globl	s390_18D2
	.type	s390_18D2, @function
s390_18D2:
.LFB2056:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2056:
	.size	s390_18D2, .-s390_18D2
	.p2align 4,,15
	.globl	s390_18D3
	.type	s390_18D3, @function
s390_18D3:
.LFB2057:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2057:
	.size	s390_18D3, .-s390_18D3
	.p2align 4,,15
	.globl	s390_18D4
	.type	s390_18D4, @function
s390_18D4:
.LFB2058:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2058:
	.size	s390_18D4, .-s390_18D4
	.p2align 4,,15
	.globl	s390_18D5
	.type	s390_18D5, @function
s390_18D5:
.LFB2059:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2059:
	.size	s390_18D5, .-s390_18D5
	.p2align 4,,15
	.globl	s390_18D6
	.type	s390_18D6, @function
s390_18D6:
.LFB2060:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2060:
	.size	s390_18D6, .-s390_18D6
	.p2align 4,,15
	.globl	s390_18D7
	.type	s390_18D7, @function
s390_18D7:
.LFB2061:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2061:
	.size	s390_18D7, .-s390_18D7
	.p2align 4,,15
	.globl	s390_18D8
	.type	s390_18D8, @function
s390_18D8:
.LFB2062:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2062:
	.size	s390_18D8, .-s390_18D8
	.p2align 4,,15
	.globl	s390_18D9
	.type	s390_18D9, @function
s390_18D9:
.LFB2063:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2063:
	.size	s390_18D9, .-s390_18D9
	.p2align 4,,15
	.globl	s390_18DA
	.type	s390_18DA, @function
s390_18DA:
.LFB2064:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2064:
	.size	s390_18DA, .-s390_18DA
	.p2align 4,,15
	.globl	s390_18DB
	.type	s390_18DB, @function
s390_18DB:
.LFB2065:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2065:
	.size	s390_18DB, .-s390_18DB
	.p2align 4,,15
	.globl	s390_18DC
	.type	s390_18DC, @function
s390_18DC:
.LFB2066:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2066:
	.size	s390_18DC, .-s390_18DC
	.p2align 4,,15
	.globl	s390_18DD
	.type	s390_18DD, @function
s390_18DD:
.LFB2067:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2067:
	.size	s390_18DD, .-s390_18DD
	.p2align 4,,15
	.globl	s390_18DE
	.type	s390_18DE, @function
s390_18DE:
.LFB2068:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2068:
	.size	s390_18DE, .-s390_18DE
	.p2align 4,,15
	.globl	s390_18DF
	.type	s390_18DF, @function
s390_18DF:
.LFB2069:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE2069:
	.size	s390_18DF, .-s390_18DF
	.p2align 4,,15
	.globl	s390_18E0
	.type	s390_18E0, @function
s390_18E0:
.LFB2070:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2070:
	.size	s390_18E0, .-s390_18E0
	.p2align 4,,15
	.globl	s390_18E1
	.type	s390_18E1, @function
s390_18E1:
.LFB2071:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2071:
	.size	s390_18E1, .-s390_18E1
	.p2align 4,,15
	.globl	s390_18E2
	.type	s390_18E2, @function
s390_18E2:
.LFB2072:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2072:
	.size	s390_18E2, .-s390_18E2
	.p2align 4,,15
	.globl	s390_18E3
	.type	s390_18E3, @function
s390_18E3:
.LFB2073:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2073:
	.size	s390_18E3, .-s390_18E3
	.p2align 4,,15
	.globl	s390_18E4
	.type	s390_18E4, @function
s390_18E4:
.LFB2074:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2074:
	.size	s390_18E4, .-s390_18E4
	.p2align 4,,15
	.globl	s390_18E5
	.type	s390_18E5, @function
s390_18E5:
.LFB2075:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2075:
	.size	s390_18E5, .-s390_18E5
	.p2align 4,,15
	.globl	s390_18E6
	.type	s390_18E6, @function
s390_18E6:
.LFB2076:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2076:
	.size	s390_18E6, .-s390_18E6
	.p2align 4,,15
	.globl	s390_18E7
	.type	s390_18E7, @function
s390_18E7:
.LFB2077:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2077:
	.size	s390_18E7, .-s390_18E7
	.p2align 4,,15
	.globl	s390_18E8
	.type	s390_18E8, @function
s390_18E8:
.LFB2078:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2078:
	.size	s390_18E8, .-s390_18E8
	.p2align 4,,15
	.globl	s390_18E9
	.type	s390_18E9, @function
s390_18E9:
.LFB2079:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2079:
	.size	s390_18E9, .-s390_18E9
	.p2align 4,,15
	.globl	s390_18EA
	.type	s390_18EA, @function
s390_18EA:
.LFB2080:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2080:
	.size	s390_18EA, .-s390_18EA
	.p2align 4,,15
	.globl	s390_18EB
	.type	s390_18EB, @function
s390_18EB:
.LFB2081:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2081:
	.size	s390_18EB, .-s390_18EB
	.p2align 4,,15
	.globl	s390_18EC
	.type	s390_18EC, @function
s390_18EC:
.LFB2082:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2082:
	.size	s390_18EC, .-s390_18EC
	.p2align 4,,15
	.globl	s390_18ED
	.type	s390_18ED, @function
s390_18ED:
.LFB2083:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2083:
	.size	s390_18ED, .-s390_18ED
	.p2align 4,,15
	.globl	s390_18EE
	.type	s390_18EE, @function
s390_18EE:
.LFB2084:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2084:
	.size	s390_18EE, .-s390_18EE
	.p2align 4,,15
	.globl	s390_18EF
	.type	s390_18EF, @function
s390_18EF:
.LFB2085:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE2085:
	.size	s390_18EF, .-s390_18EF
	.p2align 4,,15
	.globl	s390_18F0
	.type	s390_18F0, @function
s390_18F0:
.LFB2086:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2086:
	.size	s390_18F0, .-s390_18F0
	.p2align 4,,15
	.globl	s390_18F1
	.type	s390_18F1, @function
s390_18F1:
.LFB2087:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2087:
	.size	s390_18F1, .-s390_18F1
	.p2align 4,,15
	.globl	s390_18F2
	.type	s390_18F2, @function
s390_18F2:
.LFB2088:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2088:
	.size	s390_18F2, .-s390_18F2
	.p2align 4,,15
	.globl	s390_18F3
	.type	s390_18F3, @function
s390_18F3:
.LFB2089:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2089:
	.size	s390_18F3, .-s390_18F3
	.p2align 4,,15
	.globl	s390_18F4
	.type	s390_18F4, @function
s390_18F4:
.LFB2090:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2090:
	.size	s390_18F4, .-s390_18F4
	.p2align 4,,15
	.globl	s390_18F5
	.type	s390_18F5, @function
s390_18F5:
.LFB2091:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2091:
	.size	s390_18F5, .-s390_18F5
	.p2align 4,,15
	.globl	s390_18F6
	.type	s390_18F6, @function
s390_18F6:
.LFB2092:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2092:
	.size	s390_18F6, .-s390_18F6
	.p2align 4,,15
	.globl	s390_18F7
	.type	s390_18F7, @function
s390_18F7:
.LFB2093:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2093:
	.size	s390_18F7, .-s390_18F7
	.p2align 4,,15
	.globl	s390_18F8
	.type	s390_18F8, @function
s390_18F8:
.LFB2094:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2094:
	.size	s390_18F8, .-s390_18F8
	.p2align 4,,15
	.globl	s390_18F9
	.type	s390_18F9, @function
s390_18F9:
.LFB2095:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2095:
	.size	s390_18F9, .-s390_18F9
	.p2align 4,,15
	.globl	s390_18FA
	.type	s390_18FA, @function
s390_18FA:
.LFB2096:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2096:
	.size	s390_18FA, .-s390_18FA
	.p2align 4,,15
	.globl	s390_18FB
	.type	s390_18FB, @function
s390_18FB:
.LFB2097:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2097:
	.size	s390_18FB, .-s390_18FB
	.p2align 4,,15
	.globl	s390_18FC
	.type	s390_18FC, @function
s390_18FC:
.LFB2098:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2098:
	.size	s390_18FC, .-s390_18FC
	.p2align 4,,15
	.globl	s390_18FD
	.type	s390_18FD, @function
s390_18FD:
.LFB2099:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2099:
	.size	s390_18FD, .-s390_18FD
	.p2align 4,,15
	.globl	s390_18FE
	.type	s390_18FE, @function
s390_18FE:
.LFB2100:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE2100:
	.size	s390_18FE, .-s390_18FE
	.p2align 4,,15
	.globl	s390_18FF
	.type	s390_18FF, @function
s390_18FF:
.LFB2101:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2101:
	.size	s390_18FF, .-s390_18FF
	.p2align 4,,15
	.globl	s390_load_access_multiple
	.type	s390_load_access_multiple, @function
s390_load_access_multiple:
.LFB2102:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rsi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	movl	(%rdi), %r15d
	bswap	%r15d
	movl	%r15d, %r13d
	movl	%r15d, %r14d
	shrl	$20, %r13d
	movl	%r15d, %r10d
	shrl	$16, %r14d
	shrl	$12, %r10d
	andl	$15, %r13d
	andl	$15, %r14d
	andl	$4095, %r15d
	andl	$15, %r10d
	je	.L20952
	movslq	%r10d, %rax
	addl	192(%rsi,%rax,8), %r15d
	andl	120(%rsi), %r15d
.L20952:
	addq	$4, 136(%rbp)
	testb	$3, %r15b
	movb	$4, 130(%rbp)
	jne	.L21014
.L20953:
	movl	%r15d, %eax
	movl	$2048, %ebx
	subl	%r13d, %r14d
	andl	$2047, %eax
	andl	$15, %r14d
	subl	%eax, %ebx
	addl	$1, %r14d
	leal	5(%r10), %eax
	shrl	$2, %ebx
	cltq
	leaq	0(%rbp,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L20954
	movl	%r15d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	0(%rbp,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbp,%rax,8)
	jne	.L21015
.L20955:
	movzbl	97(%rbp), %esi
	testb	%sil, %sil
	jne	.L21016
.L20956:
	movl	%r15d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbp), %eax
	cmpl	10424(%rdx), %eax
	jne	.L20982
	testb	$4, 46264(%rbp,%rcx)
	je	.L20982
	movl	%r15d, %r12d
	xorq	26808(%rdx), %r12
.L20958:
	cmpl	%ebx, %r14d
	jg	.L21017
	movl	%r14d, %ebx
	xorl	%eax, %eax
.L20959:
	cmpb	$64, 99(%rbp)
	je	.L20966
	leal	(%rbx,%r13), %edx
	movl	%r13d, %ecx
	.p2align 4,,10
	.p2align 3
.L20968:
	movl	(%r12), %esi
	movl	%ecx, %edi
	addl	$1, %ecx
	andl	$15, %edi
	addq	$4, %r12
	cmpl	%edx, %ecx
	bswap	%esi
	movl	%esi, 584(%rbp,%rdi,4)
	jne	.L20968
.L20967:
	cmpl	%ebx, %r14d
	jle	.L20951
.L20965:
	cmpb	$64, 99(%rbp)
	jne	.L20975
	.p2align 4,,4
	jmp	.L20979
	.p2align 4,,10
	.p2align 3
.L21018:
	leal	(%rbx,%r13), %edx
.L20975:
	movl	(%rax), %ecx
	addl	$1, %ebx
	andl	$15, %edx
	addq	$4, %rax
	cmpl	%r14d, %ebx
	bswap	%ecx
	movl	%ecx, 584(%rbp,%rdx,4)
	jne	.L21018
.L20951:
	addq	$24, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L20977:
	.cfi_restore_state
	cmpl	$1, %ecx
	je	.L21019
	movl	$0, 1892(%rbp,%rdx,4)
	.p2align 4,,10
	.p2align 3
.L20976:
	addl	$1, %ebx
	addq	$4, %rax
	cmpl	%r14d, %ebx
	je	.L20951
	leal	(%rbx,%r13), %edx
.L20979:
	movl	(%rax), %ecx
	andl	$15, %edx
	movslq	%edx, %rsi
	testl	%edx, %edx
	bswap	%ecx
	movl	%ecx, 584(%rbp,%rsi,4)
	je	.L20976
	addl	$5, %edx
	testl	%ecx, %ecx
	movslq	%edx, %rdx
	jne	.L20977
	movl	$1, 1892(%rbp,%rdx,4)
	jmp	.L20976
	.p2align 4,,10
	.p2align 3
.L21014:
	movl	$6, %esi
	movq	%rbp, %rdi
	movl	%r10d, 4(%rsp)
	call	*2032(%rbp)
	movl	4(%rsp), %r10d
	jmp	.L20953
	.p2align 4,,10
	.p2align 3
.L20966:
	leal	(%rbx,%r13), %edx
	movl	%r13d, %esi
	jmp	.L20972
	.p2align 4,,10
	.p2align 3
.L21020:
	addl	$5, %edi
	movslq	%edi, %rdi
	movl	$1, 1892(%rbp,%rdi,4)
.L20969:
	addl	$1, %esi
	addq	$4, %r12
	cmpl	%edx, %esi
	je	.L20967
.L20972:
	movl	(%r12), %ecx
	movl	%esi, %edi
	andl	$15, %edi
	movslq	%edi, %r8
	testl	%edi, %edi
	bswap	%ecx
	movl	%ecx, 584(%rbp,%r8,4)
	je	.L20969
	testl	%ecx, %ecx
	je	.L21020
	cmpl	$1, %ecx
	je	.L21021
	addl	$5, %edi
	movslq	%edi, %rdi
	movl	$0, 1892(%rbp,%rdi,4)
	jmp	.L20969
	.p2align 4,,10
	.p2align 3
.L21019:
	movl	$7, 1892(%rbp,%rdx,4)
	jmp	.L20976
	.p2align 4,,10
	.p2align 3
.L21021:
	leal	5(%rdi), %ecx
	movslq	%ecx, %rcx
	movl	$7, 1892(%rbp,%rcx,4)
	jmp	.L20969
.L21015:
	movzbl	44216(%rbp,%rcx), %esi
	testb	%sil, 1976(%rbp,%rax)
	jne	.L20955
.L20954:
	movzbl	97(%rbp), %r8d
.L20957:
	movl	%r10d, %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r15d, %edi
	movq	%r11, 8(%rsp)
	movl	%r10d, 4(%rsp)
	call	s390_logical_to_main_l
	movq	8(%rsp), %r11
	movq	%rax, %r12
	movl	4(%rsp), %r10d
	jmp	.L20958
.L21017:
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L20960
	leal	(%r15,%rbx,4), %edi
	leal	1(%rax), %ecx
	movl	%edi, %eax
	shrl	$12, %eax
	movslq	%ecx, %rcx
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbp,%rcx,8)
	jne	.L21022
.L20961:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L21023
.L20963:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbp), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L20962
	testb	$4, 46264(%rbp,%rax)
	je	.L20962
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L20964:
	testl	%ebx, %ebx
	jne	.L20959
	movl	%r13d, %edx
	jmp	.L20965
.L21016:
	cmpb	43192(%rbp,%rcx), %sil
	je	.L20956
.L20982:
	movzbl	%sil, %r8d
	jmp	.L20957
.L21022:
	movzbl	44216(%rbp,%rax), %esi
	testb	%sil, 1976(%rbp,%rcx)
	jne	.L20961
	movzbl	97(%rbp), %r8d
.L20962:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r10d, %esi
	call	s390_logical_to_main_l
	jmp	.L20964
.L21023:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L20963
	.p2align 4,,3
	jmp	.L20962
.L20960:
	movzbl	97(%rbp), %r8d
	leal	(%r15,%rbx,4), %edi
	jmp	.L20962
	.cfi_endproc
.LFE2102:
	.size	s390_load_access_multiple, .-s390_load_access_multiple
	.p2align 4,,15
	.globl	s390_load_address_extended
	.type	s390_load_address_extended, @function
s390_load_address_extended:
.LFB2103:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %edi
	shrl	$20, %edx
	shrl	$16, %edi
	movl	%eax, %ecx
	andl	$15, %edx
	andl	$4095, %ecx
	andl	$15, %edi
	jne	.L21046
.L21025:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L21026
	movslq	%eax, %rdi
	addl	192(%rsi,%rdi,8), %ecx
.L21026:
	andl	120(%rsi), %ecx
	movslq	%edx, %rdi
	addq	$4, 136(%rsi)
	movl	%ecx, 192(%rsi,%rdi,8)
	movzbl	99(%rsi), %ecx
	testb	%cl, %cl
	jne	.L21027
	movl	$0, 584(%rsi,%rdi,4)
	ret
	.p2align 4,,10
	.p2align 3
.L21027:
	cmpb	$-128, %cl
	je	.L21047
	cmpb	$-64, %cl
	je	.L21048
	xorl	%r8d, %r8d
	testl	%eax, %eax
	jne	.L21049
.L21032:
	cmpb	$64, %cl
	movl	%r8d, 584(%rsi,%rdi,4)
	jne	.L21024
	testl	%edx, %edx
	je	.L21024
	addl	$5, %edx
	testl	%r8d, %r8d
	movslq	%edx, %rdx
	je	.L21050
	cmpl	$1, %r8d
	je	.L21051
	movl	$0, 1892(%rsi,%rdx,4)
.L21024:
	rep ret
	.p2align 4,,10
	.p2align 3
.L21047:
	movl	$1, 584(%rsi,%rdi,4)
	ret
	.p2align 4,,10
	.p2align 3
.L21049:
	cltq
	movl	584(%rsi,%rax,4), %r8d
	jmp	.L21032
	.p2align 4,,10
	.p2align 3
.L21050:
	movl	$1, 1892(%rsi,%rdx,4)
	ret
	.p2align 4,,10
	.p2align 3
.L21048:
	movl	$2, 584(%rsi,%rdi,4)
	ret
	.p2align 4,,10
	.p2align 3
.L21051:
	movl	$7, 1892(%rsi,%rdx,4)
	ret
.L21046:
	movslq	%edi, %rdi
	addl	192(%rsi,%rdi,8), %ecx
	jmp	.L21025
	.cfi_endproc
.LFE2103:
	.size	s390_load_address_extended, .-s390_load_address_extended
	.p2align 4,,15
	.globl	s390_load_and_test_register
	.type	s390_load_and_test_register, @function
s390_load_and_test_register:
.LFB2104:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	addq	$2, 136(%rsi)
	movq	%rax, %rdx
	shrq	$4, %rax
	andl	$15, %edx
	andl	$15, %eax
	movl	192(%rsi,%rdx,8), %edx
	testl	%edx, %edx
	movl	%edx, 192(%rsi,%rax,8)
	js	.L21054
	cmpl	$1, %edx
	sbbl	%eax, %eax
	notl	%eax
	andl	$2, %eax
	movb	%al, 100(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L21054:
	movl	$1, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2104:
	.size	s390_load_and_test_register, .-s390_load_and_test_register
	.p2align 4,,15
	.globl	s390_load_complement_register
	.type	s390_load_complement_register, @function
s390_load_complement_register:
.LFB2105:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	movb	$2, 130(%rsi)
	movq	%rsi, %rax
	addq	$2, 136(%rsi)
	movzbl	%cl, %edx
	andl	$15, %ecx
	movl	192(%rsi,%rcx,8), %ecx
	sarl	$4, %edx
	cmpl	$-2147483648, %ecx
	je	.L21065
	negl	%ecx
	movslq	%edx, %rdx
	testl	%ecx, %ecx
	movl	%ecx, 192(%rsi,%rdx,8)
	movl	$1, %edx
	js	.L21059
	cmpl	$1, %ecx
	sbbl	%edx, %edx
	notl	%edx
	andl	$2, %edx
.L21059:
	movb	%dl, 100(%rax)
.L21056:
	rep ret
	.p2align 4,,10
	.p2align 3
.L21065:
	movslq	%edx, %rdx
	movl	%ecx, 192(%rsi,%rdx,8)
	testb	$8, 101(%rsi)
	movb	$3, 100(%rsi)
	je	.L21056
	movq	2032(%rsi), %rdx
	movq	%rax, %rdi
	movl	$8, %esi
	jmp	*%rdx
	.cfi_endproc
.LFE2105:
	.size	s390_load_complement_register, .-s390_load_complement_register
	.p2align 4,,15
	.globl	s390_load_halfword_immediate
	.type	s390_load_halfword_immediate, @function
s390_load_halfword_immediate:
.LFB2106:
	.cfi_startproc
	movl	(%rdi), %eax
	addq	$4, 136(%rsi)
	bswap	%eax
	movl	%eax, %edx
	cwtl
	shrl	$20, %edx
	andl	$15, %edx
	movl	%eax, 192(%rsi,%rdx,8)
	ret
	.cfi_endproc
.LFE2106:
	.size	s390_load_halfword_immediate, .-s390_load_halfword_immediate
	.p2align 4,,15
	.globl	s390_load_multiple
	.type	s390_load_multiple, @function
s390_load_multiple:
.LFB2107:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	movl	(%rdi), %r13d
	bswap	%r13d
	movl	%r13d, %ebp
	movl	%r13d, %eax
	shrl	$20, %ebp
	movl	%r13d, %r10d
	shrl	$16, %eax
	shrl	$12, %r10d
	andl	$15, %ebp
	andl	$15, %eax
	andl	$4095, %r13d
	andl	$15, %r10d
	je	.L21068
	movslq	%r10d, %rdx
	addl	192(%rsi,%rdx,8), %r13d
	andl	120(%rsi), %r13d
.L21068:
	subl	%ebp, %eax
	movl	$2048, %r14d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$15, %eax
	leal	4(,%rax,4), %r15d
	movl	%r13d, %eax
	andl	$2047, %eax
	subl	%eax, %r14d
	leal	5(%r10), %eax
	cltq
	leaq	(%rbx,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L21069
	movl	%r13d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L21143
.L21070:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L21144
.L21071:
	movl	%r13d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L21107
	testb	$4, 46264(%rbx,%rcx)
	je	.L21107
	movl	%r13d, %r12d
	xorq	26808(%rdx), %r12
.L21073:
	cmpl	%r14d, %r15d
	jg	.L21074
	movl	%r15d, %eax
	xorl	%ecx, %ecx
	sarl	$2, %eax
	.p2align 4,,10
	.p2align 3
.L21077:
	movl	(%r12,%rcx,4), %edi
	leal	0(%rbp,%rcx), %edx
	addq	$1, %rcx
	andl	$15, %edx
	cmpl	%ecx, %eax
	bswap	%edi
	movl	%edi, 192(%rbx,%rdx,8)
	jg	.L21077
.L21067:
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L21143:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L21070
.L21069:
	movzbl	97(%rbx), %r8d
.L21072:
	movl	%r10d, %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %edi
	movq	%r11, 8(%rsp)
	movl	%r10d, 4(%rsp)
	call	s390_logical_to_main_l
	movq	8(%rsp), %r11
	movq	%rax, %r12
	movl	4(%rsp), %r10d
	jmp	.L21073
.L21074:
	movl	1892(%r11), %eax
	leal	(%r14,%r13), %edi
	andl	120(%rbx), %edi
	testl	%eax, %eax
	je	.L21078
	movl	%edi, %edx
	addl	$1, %eax
	shrl	$12, %edx
	cltq
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movl	2232(%rcx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L21145
.L21079:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L21146
.L21080:
	movl	%edi, %esi
	andl	$2143289344, %esi
	orl	2224(%rbx), %esi
	cmpl	10424(%rcx), %esi
	jne	.L21110
	testb	$4, 46264(%rbx,%rdx)
	je	.L21110
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L21082:
	testb	$3, %r14b
	jne	.L21083
	sarl	$2, %r14d
	testl	%r14d, %r14d
	je	.L21084
	xorl	%edx, %edx
.L21086:
	movl	(%r12,%rdx,4), %ecx
	leal	0(%rbp,%rdx), %esi
	addq	$1, %rdx
	andl	$15, %esi
	cmpl	%edx, %r14d
	bswap	%ecx
	movl	%ecx, 192(%rbx,%rsi,8)
	jg	.L21086
	sarl	$2, %r15d
	cmpl	%r15d, %r14d
	jge	.L21067
.L21104:
	addl	%ebp, %r14d
	addl	%r15d, %ebp
.L21088:
	movl	(%rax), %edx
	movl	%r14d, %ecx
	addl	$1, %r14d
	andl	$15, %ecx
	addq	$4, %rax
	cmpl	%ebp, %r14d
	bswap	%edx
	movl	%edx, 192(%rbx,%rcx,8)
	jne	.L21088
	jmp	.L21067
.L21144:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L21071
.L21107:
	movzbl	%sil, %r8d
	jmp	.L21072
.L21084:
	sarl	$2, %r15d
	jmp	.L21104
.L21083:
	leaq	16(%rsp), %rdx
	xorl	%ecx, %ecx
.L21090:
	movzbl	(%r12,%rcx), %esi
	addq	$1, %rcx
	addq	$1, %rdx
	cmpl	%ecx, %r14d
	movb	%sil, -1(%rdx)
	jg	.L21090
	testl	%r14d, %r14d
	movl	$1, %ecx
	cmovg	%r14d, %ecx
	cmpl	%ecx, %r15d
	jle	.L21100
	leaq	16(%rdx), %rsi
	movl	%r15d, %r8d
	subl	%ecx, %r8d
	cmpq	%rsi, %rax
	leaq	16(%rax), %rsi
	setae	%dil
	cmpq	%rsi, %rdx
	setae	%sil
	orb	%sil, %dil
	je	.L21094
	cmpl	$15, %r8d
	jbe	.L21094
	movl	%r8d, %r10d
	shrl	$4, %r10d
	movl	%r10d, %esi
	sall	$4, %esi
	testl	%esi, %esi
	je	.L21095
	xorl	%edi, %edi
	xorl	%r9d, %r9d
.L21101:
	movdqu	(%rax,%rdi), %xmm0
	addl	$1, %r9d
	movdqu	%xmm0, (%rdx,%rdi)
	addq	$16, %rdi
	cmpl	%r9d, %r10d
	ja	.L21101
	movl	%esi, %edi
	addl	%esi, %ecx
	addq	%rdi, %rdx
	addq	%rdi, %rax
	cmpl	%r8d, %esi
	je	.L21100
.L21095:
	movzbl	(%rax), %esi
	movb	%sil, (%rdx)
	leal	1(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L21100
	movzbl	1(%rax), %esi
	movb	%sil, 1(%rdx)
	leal	2(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L21100
	movzbl	2(%rax), %esi
	movb	%sil, 2(%rdx)
	leal	3(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L21100
	movzbl	3(%rax), %esi
	movb	%sil, 3(%rdx)
	leal	4(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L21100
	movzbl	4(%rax), %esi
	movb	%sil, 4(%rdx)
	leal	5(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L21100
	movzbl	5(%rax), %esi
	movb	%sil, 5(%rdx)
	leal	6(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L21100
	movzbl	6(%rax), %esi
	movb	%sil, 6(%rdx)
	leal	7(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L21100
	movzbl	7(%rax), %esi
	movb	%sil, 7(%rdx)
	leal	8(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L21100
	movzbl	8(%rax), %esi
	movb	%sil, 8(%rdx)
	leal	9(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L21100
	movzbl	9(%rax), %esi
	movb	%sil, 9(%rdx)
	leal	10(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L21100
	movzbl	10(%rax), %esi
	movb	%sil, 10(%rdx)
	leal	11(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L21100
	movzbl	11(%rax), %esi
	movb	%sil, 11(%rdx)
	leal	12(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L21100
	movzbl	12(%rax), %esi
	movb	%sil, 12(%rdx)
	leal	13(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L21100
	movzbl	13(%rax), %esi
	addl	$14, %ecx
	cmpl	%ecx, %r15d
	movb	%sil, 13(%rdx)
	jle	.L21100
	movzbl	14(%rax), %eax
	movb	%al, 14(%rdx)
.L21100:
	movl	16(%rsp), %eax
	sarl	$2, %r15d
	movslq	%ebp, %rdx
	cmpl	$1, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	20(%rsp), %eax
	leal	1(%rbp), %edx
	andl	$15, %edx
	cmpl	$2, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	24(%rsp), %eax
	leal	2(%rbp), %edx
	andl	$15, %edx
	cmpl	$3, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	28(%rsp), %eax
	leal	3(%rbp), %edx
	andl	$15, %edx
	cmpl	$4, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	32(%rsp), %eax
	leal	4(%rbp), %edx
	andl	$15, %edx
	cmpl	$5, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	36(%rsp), %eax
	leal	5(%rbp), %edx
	andl	$15, %edx
	cmpl	$6, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	40(%rsp), %eax
	leal	6(%rbp), %edx
	andl	$15, %edx
	cmpl	$7, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	44(%rsp), %eax
	leal	7(%rbp), %edx
	andl	$15, %edx
	cmpl	$8, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	48(%rsp), %eax
	leal	8(%rbp), %edx
	andl	$15, %edx
	cmpl	$9, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	52(%rsp), %eax
	leal	9(%rbp), %edx
	andl	$15, %edx
	cmpl	$10, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	56(%rsp), %eax
	leal	10(%rbp), %edx
	andl	$15, %edx
	cmpl	$11, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	60(%rsp), %eax
	leal	11(%rbp), %edx
	andl	$15, %edx
	cmpl	$12, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	64(%rsp), %eax
	leal	12(%rbp), %edx
	andl	$15, %edx
	cmpl	$13, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	68(%rsp), %eax
	leal	13(%rbp), %edx
	andl	$15, %edx
	cmpl	$14, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	72(%rsp), %eax
	leal	14(%rbp), %edx
	andl	$15, %edx
	cmpl	$15, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L21067
	movl	76(%rsp), %eax
	leal	15(%rbp), %edx
	andl	$15, %edx
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jmp	.L21067
.L21146:
	cmpb	43192(%rbx,%rdx), %al
	je	.L21080
.L21110:
	movzbl	%al, %r8d
.L21081:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, %esi
	call	s390_logical_to_main_l
	jmp	.L21082
.L21145:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L21079
.L21078:
	movzbl	97(%rbx), %r8d
	jmp	.L21081
.L21094:
	leal	-1(%r15), %esi
	movl	%esi, %edi
	subl	%ecx, %edi
	leaq	1(%rax,%rdi), %rcx
.L21103:
	addq	$1, %rax
	movzbl	-1(%rax), %esi
	addq	$1, %rdx
	cmpq	%rcx, %rax
	movb	%sil, -1(%rdx)
	jne	.L21103
	jmp	.L21100
	.cfi_endproc
.LFE2107:
	.size	s390_load_multiple, .-s390_load_multiple
	.p2align 4,,15
	.globl	s390_load_negative_register
	.type	s390_load_negative_register, @function
s390_load_negative_register:
.LFB2108:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	addq	$2, 136(%rsi)
	movzbl	%al, %edx
	andl	$15, %eax
	movl	192(%rsi,%rax,8), %eax
	sarl	$4, %edx
	movslq	%edx, %rdx
	movl	%eax, %ecx
	sarl	$31, %ecx
	xorl	%ecx, %eax
	subl	%eax, %ecx
	testl	%ecx, %ecx
	movl	%ecx, 192(%rsi,%rdx,8)
	setne	100(%rsi)
	ret
	.cfi_endproc
.LFE2108:
	.size	s390_load_negative_register, .-s390_load_negative_register
	.p2align 4,,15
	.globl	s390_load_positive_register
	.type	s390_load_positive_register, @function
s390_load_positive_register:
.LFB2109:
	.cfi_startproc
	movzbl	1(%rdi), %edx
	movb	$2, 130(%rsi)
	movq	%rsi, %rax
	addq	$2, 136(%rsi)
	movzbl	%dl, %ecx
	andl	$15, %edx
	movl	192(%rsi,%rdx,8), %edx
	sarl	$4, %ecx
	movslq	%ecx, %rcx
	cmpl	$-2147483648, %edx
	je	.L21161
	testl	%edx, %edx
	js	.L21162
	movl	%edx, 192(%rsi,%rcx,8)
	xorl	%ecx, %ecx
	testl	%edx, %edx
	jne	.L21154
	movb	%cl, 100(%rax)
.L21150:
	rep ret
	.p2align 4,,10
	.p2align 3
.L21162:
	negl	%edx
	movl	%edx, 192(%rsi,%rcx,8)
.L21154:
	movl	$2, %ecx
	movb	%cl, 100(%rax)
	jmp	.L21150
	.p2align 4,,10
	.p2align 3
.L21161:
	movl	%edx, 192(%rsi,%rcx,8)
	testb	$8, 101(%rsi)
	movb	$3, 100(%rsi)
	je	.L21150
	movq	2032(%rsi), %rdx
	movq	%rax, %rdi
	movl	$8, %esi
	jmp	*%rdx
	.cfi_endproc
.LFE2109:
	.size	s390_load_positive_register, .-s390_load_positive_register
	.p2align 4,,15
	.globl	s390_monitor_call
	.type	s390_monitor_call, @function
s390_monitor_call:
.LFB2110:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %r12d
	shrl	$12, %edx
	andl	$4095, %eax
	shrl	$16, %r12d
	andl	$15, %edx
	movl	%eax, %ebp
	je	.L21164
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %ebp
	andl	120(%rsi), %ebp
.L21164:
	addq	$4, 136(%rbx)
	cmpb	$15, %r12b
	movb	$4, 130(%rbx)
	ja	.L21171
.L21165:
	movzwl	392(%rbx), %edx
	movl	%r12d, %ecx
	sall	%cl, %edx
	andb	$128, %dh
	jne	.L21172
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L21172:
	.cfi_restore_state
	movzbl	%r12b, %r12d
	movl	%ebp, 784(%rbx)
	movq	%rbx, %rdi
	movw	%r12w, 1008(%rbx)
	movq	2032(%rbx), %rax
	movl	$64, %esi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L21171:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L21165
	.cfi_endproc
.LFE2110:
	.size	s390_monitor_call, .-s390_monitor_call
	.p2align 4,,15
	.globl	s390_move_immediate
	.type	s390_move_immediate, @function
s390_move_immediate:
.LFB2111:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %edi
	bswap	%edi
	movl	%edi, %eax
	movl	%edi, %ebx
	shrl	$12, %eax
	shrl	$16, %ebx
	andl	$4095, %edi
	andl	$15, %eax
	movl	%eax, %r10d
	je	.L21174
	cltq
	addl	192(%rsi,%rax,8), %edi
	andl	120(%rsi), %edi
.L21174:
	addq	$4, 136(%rsi)
	movb	$4, 130(%rsi)
	movzbl	%bl, %ebx
	leal	5(%r10), %eax
	cltq
	movl	1892(%rsi,%rax,4), %edx
	testl	%edx, %edx
	je	.L21175
	leal	1(%rdx), %eax
	movl	%edi, %ecx
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rsi,%rcx,8), %rdx
	movl	2232(%rdx), %r11d
	cmpl	%r11d, 320(%rsi,%rax,8)
	jne	.L21195
.L21176:
	movzbl	97(%rsi), %eax
	testb	%al, %al
	jne	.L21196
.L21177:
	movl	%edi, %eax
	andl	$2143289344, %eax
	orl	2224(%rsi), %eax
	cmpl	10424(%rdx), %eax
	jne	.L21175
	testb	$2, 46264(%rsi,%rcx)
	je	.L21175
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L21178:
	movb	%bl, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L21195:
	.cfi_restore_state
	movzbl	44216(%rsi,%rcx), %r8d
	testb	%r8b, 1976(%rsi,%rax)
	jne	.L21176
.L21175:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$1, %r9d
	movl	$2, %ecx
	movl	%r10d, %esi
	call	s390_logical_to_main_l
	jmp	.L21178
.L21196:
	cmpb	43192(%rsi,%rcx), %al
	je	.L21177
	.p2align 4,,4
	jmp	.L21175
	.cfi_endproc
.LFE2111:
	.size	s390_move_immediate, .-s390_move_immediate
	.p2align 4,,15
	.globl	s390_move_character
	.type	s390_move_character, @function
s390_move_character:
.LFB2112:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movq	%rsi, %r12
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r13d
	movl	%eax, %r11d
	shrl	$16, %r13d
	shrl	$28, %r11d
	andl	$4095, %r13d
	testl	%r11d, %r11d
	je	.L21198
	movslq	%r11d, %rdx
	addl	192(%rsi,%rdx,8), %r13d
	andl	120(%rsi), %r13d
.L21198:
	movl	%eax, %r14d
	shrl	$12, %eax
	andl	$4095, %r14d
	andl	$15, %eax
	movl	%eax, 40(%rsp)
	je	.L21199
	cltq
	addl	192(%r12,%rax,8), %r14d
	andl	120(%r12), %r14d
.L21199:
	movzbl	1(%rdi), %eax
	movb	$6, 130(%r12)
	addq	$6, 136(%r12)
	movl	%eax, 20(%rsp)
	movzbl	97(%r12), %eax
	movb	%al, 8(%rsp)
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%r12,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L21200
	movl	%r14d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%r12,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%r12,%rax,8)
	jne	.L21362
.L21201:
	cmpb	$0, 8(%rsp)
	jne	.L21363
.L21202:
	movl	%r14d, %eax
	andl	$2143289344, %eax
	orl	2224(%r12), %eax
	cmpl	10424(%rdx), %eax
	jne	.L21200
	testb	$4, 46264(%r12,%rcx)
	je	.L21200
	movl	%r14d, %ebp
	xorq	26808(%rdx), %rbp
.L21203:
	leal	5(%r11), %eax
	cltq
	leaq	(%r12,%rax,4), %rax
	movq	%rax, 32(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L21204
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%r12,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%r12,%rdx,8)
	jne	.L21364
.L21205:
	cmpb	$0, 8(%rsp)
	jne	.L21365
.L21206:
	movl	%r13d, %edx
	andl	$2143289344, %edx
	orl	2224(%r12), %edx
	cmpl	10424(%rax), %edx
	jne	.L21204
	testb	$1, 46264(%r12,%rcx)
	je	.L21204
	movq	35000(%rax), %r10
	movl	%r13d, %ebx
	movq	%r10, 984(%r12)
	xorq	26808(%rax), %rbx
.L21207:
	movl	20(%rsp), %esi
	movl	$2047, %r15d
	movl	%r13d, %eax
	andl	$2047, %eax
	subl	%esi, %r15d
	cmpl	%r15d, %eax
	jg	.L21208
	movl	%r14d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r15d
	jl	.L21209
	movl	%esi, %eax
	addl	$1, %eax
	.p2align 4,,10
	.p2align 3
.L21210:
	testb	$7, %bl
	je	.L21366
	addq	$1, %rbp
	movzbl	-1(%rbp), %edx
	addq	$1, %rbx
	subl	$1, %eax
	movb	%dl, -1(%rbx)
	jne	.L21210
.L21212:
	orb	$6, (%r10)
.L21197:
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L21366:
	.cfi_restore_state
	movq	%rbx, %rdx
	subq	%rbp, %rdx
	movl	%edx, %ecx
	sarl	$31, %ecx
	xorl	%ecx, %edx
	subl	%ecx, %edx
	cmpl	$7, %edx
	jle	.L21248
	cmpl	$7, %eax
	jle	.L21248
	subl	$8, %eax
	movl	%eax, %edi
	shrl	$3, %edi
	movl	%edi, %edx
	leaq	8(,%rdx,8), %rsi
	xorl	%edx, %edx
	.p2align 4,,10
	.p2align 3
.L21249:
	movq	0(%rbp,%rdx), %rcx
	movq	%rcx, (%rbx,%rdx)
	addq	$8, %rdx
	cmpq	%rsi, %rdx
	jne	.L21249
	negl	%edi
	addq	%rdx, %rbx
	addq	%rdx, %rbp
	leal	(%rax,%rdi,8), %eax
.L21248:
	testl	%eax, %eax
	je	.L21212
	leaq	16(%rbp), %rdx
	movl	%eax, %r8d
	cmpq	%rdx, %rbx
	leaq	16(%rbx), %rdx
	setae	%cl
	cmpq	%rdx, %rbp
	setae	%dl
	orb	%dl, %cl
	je	.L21219
	cmpl	$15, %eax
	jbe	.L21219
	movl	%eax, %edi
	shrl	$4, %edi
	movl	%edi, %edx
	sall	$4, %edx
	testl	%edx, %edx
	je	.L21220
	xorl	%ecx, %ecx
	xorl	%esi, %esi
.L21225:
	movdqu	0(%rbp,%rcx), %xmm0
	addl	$1, %esi
	movdqu	%xmm0, (%rbx,%rcx)
	addq	$16, %rcx
	cmpl	%esi, %edi
	ja	.L21225
	movl	%edx, %ecx
	subl	%edx, %eax
	addq	%rcx, %rbx
	addq	%rcx, %rbp
	cmpl	%r8d, %edx
	je	.L21212
	.p2align 4,,10
	.p2align 3
.L21220:
	movzbl	0(%rbp), %edx
	cmpl	$1, %eax
	movb	%dl, (%rbx)
	je	.L21212
	movzbl	1(%rbp), %edx
	cmpl	$2, %eax
	movb	%dl, 1(%rbx)
	je	.L21212
	movzbl	2(%rbp), %edx
	cmpl	$3, %eax
	movb	%dl, 2(%rbx)
	je	.L21212
	movzbl	3(%rbp), %edx
	cmpl	$4, %eax
	movb	%dl, 3(%rbx)
	je	.L21212
	movzbl	4(%rbp), %edx
	cmpl	$5, %eax
	movb	%dl, 4(%rbx)
	je	.L21212
	movzbl	5(%rbp), %edx
	cmpl	$6, %eax
	movb	%dl, 5(%rbx)
	je	.L21212
	movzbl	6(%rbp), %edx
	cmpl	$7, %eax
	movb	%dl, 6(%rbx)
	je	.L21212
	movzbl	7(%rbp), %edx
	cmpl	$8, %eax
	movb	%dl, 7(%rbx)
	je	.L21212
	movzbl	8(%rbp), %edx
	cmpl	$9, %eax
	movb	%dl, 8(%rbx)
	je	.L21212
	movzbl	9(%rbp), %edx
	cmpl	$10, %eax
	movb	%dl, 9(%rbx)
	je	.L21212
	movzbl	10(%rbp), %edx
	cmpl	$11, %eax
	movb	%dl, 10(%rbx)
	je	.L21212
	movzbl	11(%rbp), %edx
	cmpl	$12, %eax
	movb	%dl, 11(%rbx)
	je	.L21212
	movzbl	12(%rbp), %edx
	cmpl	$13, %eax
	movb	%dl, 12(%rbx)
	je	.L21212
	movzbl	13(%rbp), %edx
	cmpl	$14, %eax
	movb	%dl, 13(%rbx)
	je	.L21212
	movzbl	14(%rbp), %eax
	movb	%al, 14(%rbx)
	jmp	.L21212
	.p2align 4,,10
	.p2align 3
.L21219:
	subl	$1, %eax
	leaq	1(%rbp,%rax), %rdx
	.p2align 4,,10
	.p2align 3
.L21227:
	addq	$1, %rbp
	movzbl	-1(%rbp), %eax
	addq	$1, %rbx
	cmpq	%rdx, %rbp
	movb	%al, -1(%rbx)
	jne	.L21227
	jmp	.L21212
.L21364:
	movzbl	44216(%r12,%rcx), %esi
	testb	%sil, 1976(%r12,%rdx)
	jne	.L21205
.L21204:
	movl	20(%rsp), %eax
	movl	%r11d, %esi
	movl	$1, %ecx
	movzbl	8(%rsp), %r8d
	movq	%r12, %rdx
	movl	%r13d, %edi
	movl	%r11d, 44(%rsp)
	leal	1(%rax), %r9d
	andl	$511, %r9d
	call	s390_logical_to_main_l
	movq	984(%r12), %r10
	movq	%rax, %rbx
	movl	44(%rsp), %r11d
	jmp	.L21207
.L21362:
	movzbl	44216(%r12,%rcx), %esi
	testb	%sil, 1976(%r12,%rax)
	jne	.L21201
.L21200:
	movzbl	8(%rsp), %r8d
	movl	$1, %r9d
	movq	%r12, %rdx
	movl	40(%rsp), %esi
	movl	$4, %ecx
	movl	%r14d, %edi
	movl	%r11d, 32(%rsp)
	call	s390_logical_to_main_l
	movl	32(%rsp), %r11d
	movq	%rax, %rbp
	jmp	.L21203
.L21363:
	movzbl	8(%rsp), %eax
	cmpb	43192(%r12,%rcx), %al
	je	.L21202
	jmp	.L21200
.L21209:
	movl	$2048, %r13d
	subl	%eax, %r13d
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L21228
	leal	0(%r13,%r14), %edi
	andl	120(%r12), %edi
	leal	1(%rax), %ecx
	movslq	%ecx, %rcx
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%r12,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%r12,%rcx,8)
	jne	.L21367
.L21229:
	cmpb	$0, 8(%rsp)
	jne	.L21368
.L21231:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%r12), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L21230
	testb	$4, 46264(%r12,%rax)
	je	.L21230
	movl	%edi, %r14d
	xorq	26808(%rdx), %r14
.L21232:
	movl	%r13d, %edx
	movq	%rbp, %rsi
	movq	%r10, 8(%rsp)
	movq	%rbx, %rdi
	call	concpy.isra.2
	movl	20(%rsp), %edx
	movl	%r13d, %edi
	addq	%rbx, %rdi
	movq	%r14, %rsi
	subl	%r13d, %edx
	addl	$1, %edx
	call	concpy.isra.2
	movq	8(%rsp), %r10
	jmp	.L21212
.L21208:
	movl	$2048, 44(%rsp)
	subl	%eax, 44(%rsp)
	movq	32(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L21234
	leal	1(%rax), %ecx
	movl	44(%rsp), %eax
	movslq	%ecx, %rcx
	leal	(%rax,%r13), %edi
	andl	120(%r12), %edi
	movl	%edi, %edx
	shrl	$12, %edx
	andl	$1023, %edx
	leaq	(%r12,%rdx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%r12,%rcx,8)
	jne	.L21369
.L21235:
	cmpb	$0, 8(%rsp)
	jne	.L21370
.L21237:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%r12), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L21236
	testb	$1, 46264(%r12,%rdx)
	je	.L21236
	movq	35000(%rax), %rsi
	movq	%rsi, 984(%r12)
	movq	26808(%rax), %rax
	movq	%rsi, 48(%rsp)
	movl	%edi, %esi
	movq	%rsi, 32(%rsp)
	xorq	%rax, 32(%rsp)
.L21238:
	movl	%r14d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r15d
	jl	.L21239
	movl	44(%rsp), %r15d
	movq	%rbp, %rsi
	movq	%rbx, %rdi
	movq	%r10, 8(%rsp)
	movl	%r15d, %edx
	call	concpy.isra.2
	movl	20(%rsp), %edx
	movl	%r15d, %esi
	movq	32(%rsp), %rdi
	addq	%rbp, %rsi
	subl	%r15d, %edx
	addl	$1, %edx
	call	concpy.isra.2
	movq	8(%rsp), %r10
.L21240:
	orb	$6, (%r10)
	movq	48(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L21197
.L21228:
	leal	0(%r13,%r14), %edi
	andl	120(%r12), %edi
.L21230:
	movzbl	8(%rsp), %r8d
	movl	$1, %r9d
	movq	%r12, %rdx
	movl	40(%rsp), %esi
	movl	$4, %ecx
	movq	%r10, 24(%rsp)
	call	s390_logical_to_main_l
	movq	24(%rsp), %r10
	movq	%rax, %r14
	jmp	.L21232
.L21368:
	movzbl	8(%rsp), %esi
	cmpb	43192(%r12,%rax), %sil
	je	.L21231
	jmp	.L21230
.L21239:
	movl	$2048, %r13d
	subl	%eax, %r13d
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L21241
	leal	0(%r13,%r14), %edi
	andl	120(%r12), %edi
	leal	1(%rax), %ecx
	movslq	%ecx, %rcx
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%r12,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%r12,%rcx,8)
	jne	.L21371
.L21242:
	cmpb	$0, 8(%rsp)
	jne	.L21372
.L21244:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%r12), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L21243
	testb	$4, 46264(%r12,%rax)
	je	.L21243
	movl	%edi, %r12d
	xorq	26808(%rdx), %r12
.L21245:
	cmpl	%r13d, 44(%rsp)
	movq	%r10, 8(%rsp)
	je	.L21373
	jge	.L21247
	movl	44(%rsp), %r15d
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	movl	%r15d, %edx
	movslq	%r15d, %rbx
	call	concpy.isra.2
	leaq	0(%rbp,%rbx), %rsi
	movl	%r13d, %edx
	subl	%r15d, %edx
	movq	32(%rsp), %r15
	movq	%r15, %rdi
	call	concpy.isra.2
	movl	20(%rsp), %edx
	movq	%r15, %rdi
	movq	%r12, %rsi
	subl	%r13d, %edx
	movslq	%r13d, %r13
	subq	%rbx, %r13
	addl	$1, %edx
	addq	%r13, %rdi
	call	concpy.isra.2
	movq	8(%rsp), %r10
	jmp	.L21240
.L21234:
	movl	44(%rsp), %eax
	leal	(%rax,%r13), %edi
	andl	120(%r12), %edi
.L21236:
	movzbl	8(%rsp), %r8d
	movl	$1, %r9d
	movq	%r12, %rdx
	movl	$1, %ecx
	movl	%r11d, %esi
	movq	%r10, 56(%rsp)
	call	s390_logical_to_main_l
	movq	56(%rsp), %r10
	movq	%rax, 32(%rsp)
	movq	984(%r12), %rax
	movq	%rax, 48(%rsp)
	jmp	.L21238
.L21370:
	movzbl	8(%rsp), %esi
	cmpb	43192(%r12,%rdx), %sil
	je	.L21237
	jmp	.L21236
.L21367:
	movzbl	44216(%r12,%rax), %esi
	testb	%sil, 1976(%r12,%rcx)
	jne	.L21229
	jmp	.L21230
.L21365:
	movzbl	8(%rsp), %esi
	cmpb	43192(%r12,%rcx), %sil
	je	.L21206
	jmp	.L21204
.L21369:
	movzbl	44216(%r12,%rdx), %esi
	testb	%sil, 1976(%r12,%rcx)
	jne	.L21235
	jmp	.L21236
.L21247:
	movq	%rbp, %rsi
	movl	%r13d, %edx
	movq	%rbx, %rdi
	call	concpy.isra.2
	movl	44(%rsp), %r15d
	movslq	%r13d, %rbp
	leaq	(%rbx,%rbp), %rdi
	movq	%r12, %rsi
	movl	%r15d, %edx
	subl	%r13d, %edx
	call	concpy.isra.2
	movl	20(%rsp), %edx
	movslq	%r15d, %rax
	movq	32(%rsp), %rdi
	subq	%rbp, %rax
	leaq	(%r12,%rax), %rsi
	subl	%r15d, %edx
	addl	$1, %edx
	call	concpy.isra.2
	movq	8(%rsp), %r10
	jmp	.L21240
.L21373:
	movl	44(%rsp), %r15d
	movq	%rbp, %rsi
	movq	%rbx, %rdi
	movl	%r15d, %edx
	call	concpy.isra.2
	movl	20(%rsp), %edx
	movq	%r12, %rsi
	movq	32(%rsp), %rdi
	subl	%r15d, %edx
	addl	$1, %edx
	call	concpy.isra.2
	movq	8(%rsp), %r10
	jmp	.L21240
.L21241:
	leal	0(%r13,%r14), %edi
	andl	120(%r12), %edi
.L21243:
	movzbl	8(%rsp), %r8d
	movq	%r12, %rdx
	movl	$1, %r9d
	movl	40(%rsp), %esi
	movl	$4, %ecx
	movq	%r10, 24(%rsp)
	call	s390_logical_to_main_l
	movq	24(%rsp), %r10
	movq	%rax, %r12
	jmp	.L21245
.L21372:
	movzbl	8(%rsp), %esi
	cmpb	43192(%r12,%rax), %sil
	je	.L21244
	jmp	.L21243
.L21371:
	movzbl	44216(%r12,%rax), %esi
	testb	%sil, 1976(%r12,%rcx)
	jne	.L21242
	jmp	.L21243
	.cfi_endproc
.LFE2112:
	.size	s390_move_character, .-s390_move_character
	.p2align 4,,15
	.globl	s390_D200
	.type	s390_D200, @function
s390_D200:
.LFB2113:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L21375
	cltq
	addl	192(%rsi,%rax,8), %ebp
	andl	120(%rsi), %ebp
.L21375:
	movzbl	4(%rdi), %esi
	movzbl	5(%rdi), %edx
	movl	%esi, %eax
	shrb	$4, %sil
	andl	$15, %eax
	movzbl	%sil, %esi
	sall	$8, %eax
	orl	%edx, %eax
	testl	%esi, %esi
	je	.L21376
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %eax
	andl	120(%rbx), %eax
.L21376:
	addq	$6, 136(%rbx)
	movb	$6, 130(%rbx)
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L21377
	movl	%eax, %edi
	addl	$1, %edx
	shrl	$12, %edi
	movslq	%edx, %rdx
	andl	$1023, %edi
	leaq	(%rbx,%rdi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L21416
.L21378:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L21417
.L21379:
	movl	%eax, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L21377
	testb	$4, 46264(%rbx,%rdi)
	je	.L21377
	movl	%eax, %r12d
	xorq	26808(%rcx), %r12
.L21380:
	leal	5(%r13), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L21381
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rdx,8)
	jne	.L21418
.L21382:
	testb	%r8b, %r8b
	jne	.L21419
.L21383:
	movl	%ebp, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L21381
	testb	$2, 46264(%rbx,%rcx)
	je	.L21381
	xorq	26808(%rax), %rbp
.L21384:
	movzbl	(%r12), %eax
	movb	%al, 0(%rbp)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L21416:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L21378
.L21377:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %edi
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r12
	jmp	.L21380
.L21418:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L21382
.L21381:
	movl	%ebp, %edi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	call	s390_logical_to_main_l
	movq	%rax, %rbp
	jmp	.L21384
.L21417:
	cmpb	43192(%rbx,%rdi), %r8b
	je	.L21379
	jmp	.L21377
.L21419:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L21383
	.p2align 4,,3
	jmp	.L21381
	.cfi_endproc
.LFE2113:
	.size	s390_D200, .-s390_D200
	.p2align 4,,15
	.globl	s390_move_inverse
	.type	s390_move_inverse, @function
s390_move_inverse:
.LFB2114:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %esi
	shrl	$16, %ebp
	shrl	$28, %esi
	andl	$4095, %ebp
	testl	%esi, %esi
	movl	%esi, (%rsp)
	je	.L21421
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %ebp
	andl	120(%rbx), %ebp
.L21421:
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, 4(%rsp)
	je	.L21422
	cltq
	addl	192(%rbx,%rax,8), %r12d
	andl	120(%rbx), %r12d
.L21422:
	movzbl	1(%rdi), %r15d
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	cmpb	$0, 2064(%rbx)
	js	.L21423
	movl	$1, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L21423:
	leal	0(%rbp,%r15), %r13d
	movl	%r13d, %eax
	xorl	%ebp, %eax
	testl	$2147479552, %eax
	jne	.L21424
	movl	(%rsp), %edi
	movzbl	97(%rbx), %edx
	movl	120(%rbx), %eax
	leal	5(%rdi), %r10d
	movzbl	%dl, %r8d
	movslq	%r10d, %r10
.L21425:
	movl	%r12d, %r13d
	subl	%r15d, %r13d
	andl	%eax, %r13d
	leal	0(%r13,%r15), %r14d
	movl	%r14d, %eax
	xorl	%r13d, %eax
	testl	$2147479552, %eax
	movl	4(%rsp), %eax
	leal	5(%rax), %r11d
	movslq	%r11d, %r11
	jne	.L21435
	movl	1892(%rbx,%r11,4), %eax
.L21436:
	xorl	%r13d, %r13d
	jmp	.L21454
	.p2align 4,,10
	.p2align 3
.L21535:
	movl	1892(%rbx,%r11,4), %eax
	movzbl	97(%rbx), %r8d
.L21454:
	testl	%eax, %eax
	je	.L21445
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L21531
.L21446:
	testb	%r8b, %r8b
	jne	.L21532
.L21447:
	movl	%r12d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L21445
	testb	$4, 46264(%rbx,%rcx)
	je	.L21445
	movl	%r12d, %eax
	xorq	26808(%rdx), %rax
.L21448:
	movzbl	(%rax), %r14d
	movl	1892(%rbx,%r10,4), %eax
	testl	%eax, %eax
	je	.L21449
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L21533
.L21450:
	testb	%r8b, %r8b
	jne	.L21534
.L21451:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L21449
	testb	$2, 46264(%rbx,%rcx)
	je	.L21449
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L21452:
	movb	%r14b, (%rax)
	addl	$1, %ebp
	subl	$1, %r12d
	movl	120(%rbx), %eax
	addl	$1, %r13d
	andl	%eax, %ebp
	andl	%eax, %r12d
	cmpl	%r15d, %r13d
	jle	.L21535
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L21424:
	.cfi_restore_state
	movl	(%rsp), %eax
	leal	5(%rax), %r10d
	movslq	%r10d, %r10
	leaq	(%rbx,%r10,4), %r14
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L21426
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L21536
.L21427:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L21537
.L21428:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L21459
	testb	$1, 46264(%rbx,%rcx)
	je	.L21459
	movq	35000(%rdx), %rax
	movq	%rax, 984(%rbx)
.L21430:
	movl	%ebp, %edx
	movl	$2047, %eax
	andl	$2047, %edx
	subl	%r15d, %eax
	cmpl	%eax, %edx
	jg	.L21431
	movzbl	97(%rbx), %edx
	movl	120(%rbx), %eax
	movzbl	%dl, %r8d
	jmp	.L21425
	.p2align 4,,10
	.p2align 3
.L21435:
	leaq	(%rbx,%r11,4), %rax
	movq	%rax, 8(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L21437
	leal	1(%rax), %r8d
	movl	%r13d, %esi
	shrl	$12, %esi
	movslq	%r8d, %rcx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdi
	movl	2232(%rdi), %r9d
	cmpl	%r9d, 320(%rbx,%rcx,8)
	jne	.L21538
.L21438:
	testb	%dl, %dl
	jne	.L21539
.L21439:
	movl	%r13d, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdi), %ecx
	jne	.L21437
	testb	$4, 46264(%rbx,%rsi)
	je	.L21437
	movl	%r13d, %esi
	movl	$2047, %ecx
	andl	$2047, %esi
	subl	%r15d, %ecx
	cmpl	%ecx, %esi
	jg	.L21455
.L21456:
	movzbl	%dl, %r8d
	jmp	.L21436
.L21533:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L21450
.L21449:
	movl	(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r10, 16(%rsp)
	movq	%r11, 8(%rsp)
	call	s390_logical_to_main_l
	movq	16(%rsp), %r10
	movq	8(%rsp), %r11
	jmp	.L21452
.L21531:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L21446
.L21445:
	movl	4(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movq	%r10, 16(%rsp)
	movq	%r11, 8(%rsp)
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	16(%rsp), %r10
	movq	8(%rsp), %r11
	jmp	.L21448
.L21534:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L21451
	jmp	.L21449
	.p2align 4,,10
	.p2align 3
.L21532:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L21447
	.p2align 4,,3
	jmp	.L21445
.L21536:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L21427
.L21426:
	movzbl	97(%rbx), %r8d
.L21429:
	movl	(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r10, 8(%rsp)
	call	s390_logical_to_main_l
	movq	8(%rsp), %r10
	jmp	.L21430
.L21537:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L21428
.L21459:
	movzbl	%sil, %r8d
	jmp	.L21429
.L21431:
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L21432
	leal	1(%rax), %edx
	movl	120(%rbx), %eax
	movl	%r13d, %edi
	movslq	%edx, %rdx
	andl	%eax, %edi
	movl	%edi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rsi
	movl	2232(%rsi), %r9d
	cmpl	%r9d, 320(%rbx,%rdx,8)
	jne	.L21540
.L21433:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L21541
.L21434:
	andl	$2143289344, %edi
	orl	2224(%rbx), %edi
	cmpl	10424(%rsi), %edi
	jne	.L21432
	testb	$1, 46264(%rbx,%rcx)
	je	.L21432
	movq	35000(%rsi), %rcx
	movzbl	%dl, %r8d
	movq	%rcx, 984(%rbx)
	jmp	.L21425
.L21539:
	cmpb	%dl, 43192(%rbx,%rsi)
	je	.L21439
.L21437:
	movl	4(%rsp), %esi
	movzbl	%dl, %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %r9d
	movl	%r13d, %edi
	movq	%r10, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	s390_logical_to_main_l
	movq	8(%rsp), %rax
	movl	%r13d, %ecx
	movl	$2047, %edx
	andl	$2047, %ecx
	movq	16(%rsp), %r11
	subl	%r15d, %edx
	movq	24(%rsp), %r10
	cmpl	%edx, %ecx
	movl	1892(%rax), %eax
	jg	.L21441
	movzbl	97(%rbx), %edx
	jmp	.L21456
.L21538:
	movzbl	44216(%rbx,%rsi), %r9d
	testb	%r9b, 1976(%rbx,%rcx)
	jne	.L21438
	jmp	.L21437
.L21441:
	testl	%eax, %eax
	je	.L21442
	leal	1(%rax), %r8d
.L21455:
	movl	120(%rbx), %ecx
	movslq	%r8d, %r8
	andl	%r14d, %ecx
	movl	%ecx, %edx
	shrl	$12, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rsi
	movl	2232(%rsi), %edi
	cmpl	%edi, 320(%rbx,%r8,8)
	jne	.L21542
.L21443:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L21543
.L21444:
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rsi), %ecx
	jne	.L21442
	testb	$4, 46264(%rbx,%rdx)
	jne	.L21436
.L21442:
	movl	4(%rsp), %esi
	movq	%rbx, %r8
	movl	$4, %ecx
	movl	%r15d, %edx
	movl	%r13d, %edi
	movq	%r10, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	s390_validate_operand.part.8
	movq	8(%rsp), %rax
	movzbl	97(%rbx), %r8d
	movq	16(%rsp), %r11
	movq	24(%rsp), %r10
	movl	1892(%rax), %eax
	jmp	.L21436
.L21543:
	cmpb	43192(%rbx,%rdx), %r8b
	je	.L21444
	jmp	.L21442
.L21542:
	movzbl	1976(%rbx,%r8), %edi
	testb	%dil, 44216(%rbx,%rdx)
	jne	.L21443
	jmp	.L21442
.L21540:
	movzbl	44216(%rbx,%rcx), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L21433
.L21432:
	movl	(%rsp), %esi
	movq	%rbx, %r8
	movl	%r15d, %edx
	movl	$1, %ecx
	movl	%ebp, %edi
	movq	%r10, 8(%rsp)
	call	s390_validate_operand.part.8
	movzbl	97(%rbx), %edx
	movl	120(%rbx), %eax
	movq	8(%rsp), %r10
	movzbl	%dl, %r8d
	jmp	.L21425
.L21541:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L21434
	jmp	.L21432
	.cfi_endproc
.LFE2114:
	.size	s390_move_inverse, .-s390_move_inverse
	.p2align 4,,15
	.globl	s390_move_long
	.type	s390_move_long, @function
s390_move_long:
.LFB2115:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	movzbl	1(%rdi), %eax
	movb	$2, 130(%rsi)
	addq	$2, 136(%rsi)
	movzbl	%al, %edi
	movl	%eax, %r12d
	movl	%edi, 52(%rsp)
	andl	$15, %r12d
	sarl	$4, 52(%rsp)
	movzbl	%r12b, %edi
	movl	%edi, 56(%rsp)
	testb	$1, 52(%rsp)
	jne	.L21545
	testb	$1, %al
	jne	.L21545
.L21546:
	movl	52(%rsp), %esi
	movzbl	%r12b, %r12d
	movslq	%esi, %rcx
	leaq	(%rbx,%rcx,8), %rax
	leal	1(%rsi), %esi
	movq	%rax, %rdi
	movq	%rax, 8(%rsp)
	movl	192(%rdi), %ebp
	leaq	(%rbx,%r12,8), %rdi
	movq	%rdi, 16(%rsp)
	movl	192(%rdi), %r13d
	movl	56(%rsp), %edi
	movl	120(%rbx), %eax
	leal	1(%rdi), %edx
	movslq	%edx, %rdi
	andl	%eax, %ebp
	andl	%eax, %r13d
	leaq	24(%rdi), %rdx
	movq	%rdi, 24(%rsp)
	movslq	%esi, %rdi
	movq	%rdi, 32(%rsp)
	movl	(%rbx,%rdx,8), %r12d
	movl	192(%rbx,%rdi,8), %r11d
	movzbl	3(%rbx,%rdx,8), %r10d
	andl	$16777215, %r12d
	andl	$16777215, %r11d
	cmpl	$1, %r11d
	movslq	%r11d, %r14
	jle	.L21547
	cmpl	$1, %r12d
	jle	.L21547
	cmpb	$64, 99(%rbx)
	je	.L21771
.L21548:
	cmpl	%r11d, %r12d
	movl	%r11d, %edx
	cmovle	%r12d, %edx
	leal	-1(%r13,%rdx), %edx
	andl	%eax, %edx
	cmpl	%edx, %r13d
	jb	.L21772
	cmpl	%edx, %ebp
	jbe	.L21553
.L21770:
	cmpl	%r13d, %ebp
	jbe	.L21551
.L21553:
	movq	8(%rsp), %rax
	movl	%ebp, 192(%rax)
	movq	16(%rsp), %rax
	movl	%r13d, 192(%rax)
	movb	$3, 100(%rbx)
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L21545:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L21546
	.p2align 4,,10
	.p2align 3
.L21547:
	movq	$0, 40(%rsp)
	xorl	%r15d, %r15d
	testl	%r11d, %r11d
	jne	.L21773
.L21557:
	cmpl	%r12d, %r11d
	movl	$1, %eax
	jge	.L21774
.L21566:
	movb	%al, 100(%rbx)
	movq	8(%rsp), %rax
	testl	%r11d, %r11d
	movl	%ebp, 192(%rax)
	movq	16(%rsp), %rax
	movl	%r13d, 192(%rax)
	je	.L21544
	movzbl	%r10b, %eax
	movzbl	%r10b, %r10d
	movl	%eax, 48(%rsp)
	movabsq	$72340172838076673, %rax
	imulq	%rax, %r10
	testl	%r12d, %r12d
	jne	.L21568
.L21780:
	movl	$2048, %edx
	movl	%ebp, %eax
	movl	%edx, %ecx
	andl	$2047, %eax
	subl	%r14d, %ecx
	cmpl	%ecx, %eax
	jg	.L21775
	xorl	%r8d, %r8d
	xorl	%r11d, %r11d
.L21569:
	movslq	%r14d, %rdx
	movq	%r15, %rdi
	cmpq	$8, %rdx
	jae	.L21776
.L21570:
	andl	$7, %edx
	je	.L21572
	xorl	%eax, %eax
.L21573:
	movzbl	48(%rsp), %esi
	movb	%sil, (%rdi,%rax)
	addq	$1, %rax
	cmpq	%rdx, %rax
	jb	.L21573
.L21572:
	movl	120(%rbx), %ecx
	addl	%r14d, %ebp
	xorl	%esi, %esi
	andl	%ecx, %ebp
.L21575:
	movq	8(%rsp), %rax
	movl	%ebp, 192(%rax)
	movq	16(%rsp), %rax
	movl	%r13d, 192(%rax)
	movq	32(%rsp), %rax
	leaq	24(%rax), %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%r8d, %eax
	movl	%eax, (%rbx,%rdx,8)
	movq	24(%rsp), %rax
	leaq	24(%rax), %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%esi, %eax
	cmpl	$256, %r11d
	movl	%eax, (%rbx,%rdx,8)
	jle	.L21594
	movl	52(%rbx), %eax
	andl	56(%rbx), %eax
	testl	$1073807344, %eax
	jne	.L21777
.L21595:
	testl	%r12d, %r12d
	je	.L21601
	testl	$2047, %r13d
	je	.L21602
	movslq	%r14d, %rax
	addq	%rax, 40(%rsp)
.L21601:
	addq	%r14, %r15
	testl	$2047, %ebp
	jne	.L21608
	movl	52(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L21609
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L21778
.L21610:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L21779
.L21611:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L21634
	testb	$2, 46264(%rbx,%rcx)
	je	.L21634
	movl	%ebp, %r15d
	xorq	26808(%rdx), %r15
.L21608:
	testl	%r11d, %r11d
	je	.L21544
	testl	%r12d, %r12d
	movslq	%r11d, %r14
	je	.L21780
.L21568:
	movl	$2048, %eax
	movl	%ebp, %edx
	movl	%eax, %ecx
	andl	$2047, %edx
	subl	%r14d, %ecx
	cmpl	%ecx, %edx
	jg	.L21781
	movl	%r14d, %eax
.L21576:
	movl	$2048, %edi
	movl	%r13d, %edx
	movl	%edi, %ecx
	andl	$2047, %edx
	subl	%r12d, %ecx
	cmpl	%ecx, %edx
	jg	.L21782
	movl	%r12d, %edi
.L21577:
	cmpl	%eax, %edi
	cmovg	%eax, %edi
	testl	%edi, %edi
	je	.L21582
	testb	$7, %r15b
	movl	%edi, %edx
	movq	40(%rsp), %rax
	movq	%r15, %rcx
	jne	.L21580
	jmp	.L21579
	.p2align 4,,10
	.p2align 3
.L21783:
	testb	$7, %cl
	je	.L21579
.L21580:
	addq	$1, %rax
	movzbl	-1(%rax), %esi
	addq	$1, %rcx
	subl	$1, %edx
	movb	%sil, -1(%rcx)
	jne	.L21783
.L21582:
	movl	120(%rbx), %ecx
	movl	%r14d, %r11d
	subl	%edi, %r12d
	subl	%edi, %r11d
	addl	%edi, %ebp
	addl	%edi, %r13d
	movl	%r12d, %esi
	movl	%r11d, %r8d
	movslq	%edi, %r14
	andl	$16777215, %esi
	andl	$16777215, %r8d
	andl	%ecx, %ebp
	andl	%ecx, %r13d
	jmp	.L21575
	.p2align 4,,10
	.p2align 3
.L21594:
	testl	%r11d, %r11d
	jne	.L21595
.L21544:
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L21579:
	.cfi_restore_state
	movq	%rcx, %rsi
	subq	%rax, %rsi
	movl	%esi, %r8d
	sarl	$31, %r8d
	xorl	%r8d, %esi
	subl	%r8d, %esi
	cmpl	$7, %esi
	jle	.L21614
	cmpl	$7, %edx
	jle	.L21614
	subl	$8, %edx
	movl	%edx, %r11d
	shrl	$3, %r11d
	movl	%r11d, %esi
	leaq	8(,%rsi,8), %r9
	xorl	%esi, %esi
	.p2align 4,,10
	.p2align 3
.L21615:
	movq	(%rax,%rsi), %r8
	movq	%r8, (%rcx,%rsi)
	addq	$8, %rsi
	cmpq	%r9, %rsi
	jne	.L21615
	negl	%r11d
	addq	%rsi, %rcx
	addq	%rsi, %rax
	leal	(%rdx,%r11,8), %edx
.L21614:
	testl	%edx, %edx
	je	.L21582
	leaq	16(%rax), %rsi
	cmpq	%rsi, %rcx
	leaq	16(%rcx), %rsi
	setae	%r8b
	cmpq	%rsi, %rax
	setae	%sil
	orb	%sil, %r8b
	je	.L21585
	cmpl	$15, %edx
	jbe	.L21585
	movl	%edx, %r11d
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	shrl	$4, %r11d
	movl	%r11d, %esi
	sall	$4, %esi
.L21591:
	movdqu	(%rax,%r8), %xmm0
	addl	$1, %r9d
	movdqu	%xmm0, (%rcx,%r8)
	addq	$16, %r8
	cmpl	%r9d, %r11d
	ja	.L21591
	movl	%esi, %r8d
	addq	%r8, %rcx
	addq	%r8, %rax
	movl	%edx, %r8d
	subl	%esi, %r8d
	cmpl	%edx, %esi
	je	.L21582
	movzbl	(%rax), %edx
	cmpl	$1, %r8d
	movb	%dl, (%rcx)
	je	.L21582
	movzbl	1(%rax), %edx
	cmpl	$2, %r8d
	movb	%dl, 1(%rcx)
	je	.L21582
	movzbl	2(%rax), %edx
	cmpl	$3, %r8d
	movb	%dl, 2(%rcx)
	je	.L21582
	movzbl	3(%rax), %edx
	cmpl	$4, %r8d
	movb	%dl, 3(%rcx)
	je	.L21582
	movzbl	4(%rax), %edx
	cmpl	$5, %r8d
	movb	%dl, 4(%rcx)
	je	.L21582
	movzbl	5(%rax), %edx
	cmpl	$6, %r8d
	movb	%dl, 5(%rcx)
	je	.L21582
	movzbl	6(%rax), %edx
	cmpl	$7, %r8d
	movb	%dl, 6(%rcx)
	je	.L21582
	movzbl	7(%rax), %edx
	cmpl	$8, %r8d
	movb	%dl, 7(%rcx)
	je	.L21582
	movzbl	8(%rax), %edx
	cmpl	$9, %r8d
	movb	%dl, 8(%rcx)
	je	.L21582
	movzbl	9(%rax), %edx
	cmpl	$10, %r8d
	movb	%dl, 9(%rcx)
	je	.L21582
	movzbl	10(%rax), %edx
	cmpl	$11, %r8d
	movb	%dl, 10(%rcx)
	je	.L21582
	movzbl	11(%rax), %edx
	cmpl	$12, %r8d
	movb	%dl, 11(%rcx)
	je	.L21582
	movzbl	12(%rax), %edx
	cmpl	$13, %r8d
	movb	%dl, 12(%rcx)
	je	.L21582
	movzbl	13(%rax), %edx
	cmpl	$14, %r8d
	movb	%dl, 13(%rcx)
	je	.L21582
	movzbl	14(%rax), %eax
	movb	%al, 14(%rcx)
	jmp	.L21582
	.p2align 4,,10
	.p2align 3
.L21776:
	cmpq	$511, %rdx
	ja	.L21784
	movq	%rdx, %rcx
	movq	%r15, %rdi
	movq	%r10, %rax
	shrq	$3, %rcx
	rep stosq
	jmp	.L21570
	.p2align 4,,10
	.p2align 3
.L21602:
	movl	56(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L21603
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L21785
.L21604:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L21786
.L21605:
	movl	%r13d, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L21631
	testb	$4, 46264(%rbx,%rcx)
	je	.L21631
	movq	26808(%rax), %rax
	movl	%r13d, %edi
	movq	%rdi, 40(%rsp)
	xorq	%rax, 40(%rsp)
	jmp	.L21601
	.p2align 4,,10
	.p2align 3
.L21585:
	subl	$1, %edx
	leaq	1(%rax,%rdx), %rsi
	.p2align 4,,10
	.p2align 3
.L21593:
	addq	$1, %rax
	movzbl	-1(%rax), %edx
	addq	$1, %rcx
	cmpq	%rsi, %rax
	movb	%dl, -1(%rcx)
	jne	.L21593
	jmp	.L21582
.L21774:
	setg	%al
	addl	%eax, %eax
	jmp	.L21566
.L21777:
	movl	168(%rbx), %edi
	movl	136(%rbx), %eax
	movq	144(%rbx), %rsi
	movzbl	808(%rbx), %edx
	addl	%edi, %eax
	subl	%esi, %eax
	testb	$1, %dl
	jne	.L21596
	movzbl	130(%rbx), %edx
.L21597:
	subl	%edx, %eax
	andl	%ecx, %eax
	cmpq	$0, 160(%rbx)
	movl	%eax, 112(%rbx)
	je	.L21598
	movl	%eax, %edx
	andl	$2147479553, %edx
	cmpl	%edx, %edi
	jne	.L21599
	andl	$4095, %eax
	orq	%rsi, %rax
	movq	%rax, 136(%rbx)
.L21598:
	leaq	1232(%rbx), %rdi
	movl	$-1, %esi
	call	longjmp
.L21784:
	movl	48(%rsp), %esi
	movq	%r10, 72(%rsp)
	movl	%r8d, 64(%rsp)
	movl	%r11d, 60(%rsp)
	call	memset
	movl	60(%rsp), %r11d
	movl	64(%rsp), %r8d
	movq	72(%rsp), %r10
	jmp	.L21572
.L21772:
	cmpl	%edx, %ebp
	jbe	.L21770
.L21551:
	movl	56(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L21559
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L21787
.L21560:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L21788
.L21561:
	movl	%r13d, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L21562
	testb	$4, 46264(%rbx,%rcx)
	je	.L21562
	movq	26808(%rax), %rax
	movl	%r13d, %edi
	movq	%rdi, 40(%rsp)
	xorq	%rax, 40(%rsp)
.L21558:
	movl	52(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L21563
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L21789
.L21564:
	testb	%r8b, %r8b
	jne	.L21790
.L21565:
	movl	%ebp, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L21563
	testb	$2, 46264(%rbx,%rcx)
	je	.L21563
	movl	%ebp, %r15d
	xorq	26808(%rax), %r15
	cmpl	%r12d, %r11d
	movl	$1, %eax
	jl	.L21566
	jmp	.L21774
.L21771:
	movl	52(%rsp), %edi
	xorl	%esi, %esi
	testl	%edi, %edi
	je	.L21549
	movl	584(%rbx,%rcx,4), %esi
.L21549:
	movl	56(%rsp), %ecx
	xorl	%edx, %edx
	testl	%ecx, %ecx
	je	.L21550
	movslq	56(%rsp), %rdx
	movl	584(%rbx,%rdx,4), %edx
.L21550:
	cmpl	%edx, %esi
	jne	.L21551
	jmp	.L21548
.L21773:
	testl	%r12d, %r12d
	jne	.L21551
	movzbl	97(%rbx), %r8d
	.p2align 4,,3
	jmp	.L21558
.L21787:
	movzbl	1976(%rbx,%rdx), %edx
	testb	%dl, 44216(%rbx,%rcx)
	jne	.L21560
.L21559:
	movzbl	97(%rbx), %r8d
.L21562:
	movl	56(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %edi
	movl	%r11d, 60(%rsp)
	movl	%r10d, 48(%rsp)
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, 40(%rsp)
	movl	60(%rsp), %r11d
	movl	48(%rsp), %r10d
	jmp	.L21558
.L21789:
	movzbl	1976(%rbx,%rdx), %edx
	testb	%dl, 44216(%rbx,%rcx)
	jne	.L21564
.L21563:
	movl	52(%rsp), %esi
	movl	%r11d, %r9d
	movl	$2, %ecx
	andl	$16777215, %r9d
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 60(%rsp)
	movl	%r11d, 48(%rsp)
	call	s390_logical_to_main_l
	movl	60(%rsp), %r10d
	movq	%rax, %r15
	movl	48(%rsp), %r11d
	jmp	.L21557
.L21790:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L21565
	jmp	.L21563
.L21775:
	subl	%eax, %edx
	subl	%edx, %r14d
	movl	%r14d, %r8d
	movl	%r14d, %r11d
	movslq	%edx, %r14
	andl	$16777215, %r8d
	jmp	.L21569
.L21785:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L21604
.L21603:
	movzbl	97(%rbx), %r8d
.L21606:
	movl	56(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %edi
	movq	%r10, 64(%rsp)
	movl	%r11d, 60(%rsp)
	call	s390_logical_to_main_l
	movq	64(%rsp), %r10
	movq	%rax, 40(%rsp)
	movl	60(%rsp), %r11d
	jmp	.L21601
.L21786:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L21605
.L21631:
	movzbl	%sil, %r8d
	jmp	.L21606
.L21778:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L21610
.L21609:
	movzbl	97(%rbx), %r8d
.L21612:
	movl	52(%rsp), %esi
	movslq	%r11d, %r9
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r10, 64(%rsp)
	movl	%r11d, 60(%rsp)
	call	s390_logical_to_main_l
	movq	64(%rsp), %r10
	movq	%rax, %r15
	movl	60(%rsp), %r11d
	jmp	.L21608
.L21782:
	subl	%edx, %edi
	jmp	.L21577
.L21781:
	subl	%edx, %eax
	jmp	.L21576
.L21779:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L21611
.L21634:
	movzbl	%sil, %r8d
	jmp	.L21612
.L21596:
	andl	$2, %edx
	cmpb	$1, %dl
	sbbl	%edx, %edx
	andl	$-2, %edx
	addl	$6, %edx
	jmp	.L21597
.L21599:
	movq	$0, 160(%rbx)
	jmp	.L21598
.L21788:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L21561
	jmp	.L21562
	.cfi_endproc
.LFE2115:
	.size	s390_move_long, .-s390_move_long
	.p2align 4,,15
	.globl	s390_move_long_extended
	.type	s390_move_long_extended, @function
s390_move_long_extended:
.LFB2116:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %esi
	movl	%edx, %ecx
	shrl	$16, %esi
	shrl	$20, %ecx
	movl	%esi, %edi
	movl	%ecx, %eax
	andl	$15, %edi
	andl	$15, %eax
	movl	%edi, 8(%rsp)
	movl	%edx, %edi
	andl	$4095, %edx
	shrl	$12, %edi
	movl	%edx, 20(%rsp)
	andl	$15, %edi
	je	.L21792
	movslq	%edi, %rdi
	movl	192(%rbx,%rdi,8), %edi
	addl	%edi, 20(%rsp)
	movl	120(%rbx), %edi
	andl	%edi, 20(%rsp)
.L21792:
	orl	%esi, %ecx
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$1, %ecx
	je	.L21793
	movl	$6, %esi
	movq	%rbx, %rdi
	movl	%eax, 24(%rsp)
	call	*2032(%rbx)
	movl	24(%rsp), %eax
.L21793:
	movslq	%eax, %rdx
	movl	8(%rsp), %r9d
	movl	$4096, %r15d
	leaq	(%rbx,%rdx,8), %rdi
	movl	120(%rbx), %edx
	movl	192(%rdi), %r12d
	movq	%rdi, 32(%rsp)
	movslq	%r9d, %rcx
	leaq	(%rbx,%rcx,8), %rdi
	andl	%edx, %r12d
	andl	192(%rdi), %edx
	movq	%rdi, 56(%rsp)
	movl	%edx, %r10d
	leal	1(%rax), %edx
	movslq	%edx, %rdx
	leaq	(%rbx,%rdx,8), %rsi
	leal	1(%r9), %edx
	movq	%rsi, 48(%rsp)
	movl	192(%rsi), %ebp
	movslq	%edx, %rdx
	leaq	(%rbx,%rdx,8), %rcx
	movl	%r10d, %edx
	movq	%rcx, 40(%rsp)
	movl	192(%rcx), %r14d
	movl	%r12d, %ecx
	andl	$4095, %ecx
	andl	$4095, %edx
	cmpl	%edx, %ecx
	jbe	.L21794
	subl	%ecx, %r15d
.L21795:
	cmpl	%r14d, %ebp
	movl	$1, %r13d
	jb	.L21796
	cmpl	%ebp, %r14d
	sbbl	%r13d, %r13d
	andl	$2, %r13d
.L21796:
	testl	%ebp, %ebp
	je	.L21934
	leal	5(%rax), %edx
	movl	%ebp, %r11d
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L21799
	leal	1(%rdx), %ecx
	movl	%r12d, %esi
	shrl	$12, %esi
	movslq	%ecx, %rcx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rcx,8)
	jne	.L21935
.L21800:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L21936
.L21801:
	movl	%r12d, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L21799
	testb	$2, 46264(%rbx,%rsi)
	je	.L21799
	movl	%r12d, %eax
	movq	%rax, 24(%rsp)
	movq	26808(%rdx), %rax
	xorq	%rax, 24(%rsp)
.L21802:
	cmpq	%r11, %r15
	movl	%r14d, %eax
	cmovbe	%r15, %r11
	cmpq	%rax, %r15
	cmovbe	%r15, %rax
	cmpq	%r11, %rax
	movq	%rax, %r15
	movq	%rax, 64(%rsp)
	cmova	%r11, %r15
	testq	%r15, %r15
	je	.L21803
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L21804
	movl	%r10d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L21937
.L21805:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L21938
.L21806:
	movl	%r10d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L21804
	testb	$4, 46264(%rbx,%rcx)
	je	.L21804
	movl	%r10d, %eax
	xorq	26808(%rdx), %rax
.L21807:
	movq	24(%rsp), %rdx
	movl	%r15d, %ecx
	.p2align 4,,10
	.p2align 3
.L21808:
	testb	$7, %dl
	je	.L21939
	addq	$1, %rax
	movzbl	-1(%rax), %esi
	addq	$1, %rdx
	subl	$1, %ecx
	movb	%sil, -1(%rdx)
	jne	.L21808
.L21813:
	addq	%r15, 24(%rsp)
	addl	%r15d, %r10d
	subl	%r15d, %r14d
	subq	%r15, 64(%rsp)
	addl	%r15d, %r12d
	subl	%r15d, %ebp
	subq	%r15, %r11
.L21803:
	testq	%r11, %r11
	jne	.L21940
.L21825:
	movq	32(%rsp), %rax
	testl	%ebp, %ebp
	movl	%r12d, 192(%rax)
	movq	48(%rsp), %rax
	movl	%ebp, 192(%rax)
	movq	56(%rsp), %rax
	movl	%r10d, 192(%rax)
	movq	40(%rsp), %rax
	movl	%r14d, 192(%rax)
	movl	$3, %eax
	cmovne	%eax, %r13d
.L21934:
	movb	%r13b, 100(%rbx)
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L21794:
	.cfi_restore_state
	subl	%edx, %r15d
	jmp	.L21795
	.p2align 4,,10
	.p2align 3
.L21940:
	cmpq	$0, 64(%rsp)
	jne	.L21825
	cmpq	$8, %r11
	movzbl	20(%rsp), %edx
	movq	24(%rsp), %rdi
	jae	.L21941
.L21826:
	movq	%r11, %rcx
	andl	$7, %ecx
	je	.L21828
	xorl	%eax, %eax
.L21829:
	movb	%dl, (%rdi,%rax)
	addq	$1, %rax
	cmpq	%rcx, %rax
	jb	.L21829
.L21828:
	addl	%r11d, %r12d
	subl	%r11d, %ebp
	jmp	.L21825
	.p2align 4,,10
	.p2align 3
.L21939:
	movq	%rdx, %rsi
	subq	%rax, %rsi
	movl	%esi, %edi
	sarl	$31, %edi
	xorl	%edi, %esi
	subl	%edi, %esi
	cmpl	$7, %esi
	jle	.L21832
	cmpl	$7, %ecx
	jle	.L21832
	subl	$8, %ecx
	movl	%ecx, %r9d
	shrl	$3, %r9d
	movl	%r9d, %esi
	leaq	8(,%rsi,8), %r8
	xorl	%esi, %esi
	.p2align 4,,10
	.p2align 3
.L21833:
	movq	(%rax,%rsi), %rdi
	movq	%rdi, (%rdx,%rsi)
	addq	$8, %rsi
	cmpq	%r8, %rsi
	jne	.L21833
	negl	%r9d
	addq	%rsi, %rdx
	addq	%rsi, %rax
	leal	(%rcx,%r9,8), %ecx
.L21832:
	testl	%ecx, %ecx
	je	.L21813
	leaq	16(%rax), %rsi
	movl	%ecx, %r9d
	cmpq	%rsi, %rdx
	leaq	16(%rdx), %rsi
	setae	%dil
	cmpq	%rsi, %rax
	setae	%sil
	orb	%sil, %dil
	je	.L21816
	cmpl	$15, %ecx
	jbe	.L21816
	movl	%ecx, %esi
	shrl	$4, %esi
	movl	%esi, 8(%rsp)
	sall	$4, %esi
	testl	%esi, %esi
	je	.L21817
	xorl	%edi, %edi
	xorl	%r8d, %r8d
.L21822:
	movdqu	(%rax,%rdi), %xmm0
	addl	$1, %r8d
	movdqu	%xmm0, (%rdx,%rdi)
	addq	$16, %rdi
	cmpl	%r8d, 8(%rsp)
	ja	.L21822
	movl	%esi, %edi
	subl	%esi, %ecx
	addq	%rdi, %rdx
	addq	%rdi, %rax
	cmpl	%r9d, %esi
	je	.L21813
	.p2align 4,,10
	.p2align 3
.L21817:
	movzbl	(%rax), %esi
	cmpl	$1, %ecx
	movb	%sil, (%rdx)
	je	.L21813
	movzbl	1(%rax), %esi
	cmpl	$2, %ecx
	movb	%sil, 1(%rdx)
	je	.L21813
	movzbl	2(%rax), %esi
	cmpl	$3, %ecx
	movb	%sil, 2(%rdx)
	je	.L21813
	movzbl	3(%rax), %esi
	cmpl	$4, %ecx
	movb	%sil, 3(%rdx)
	je	.L21813
	movzbl	4(%rax), %esi
	cmpl	$5, %ecx
	movb	%sil, 4(%rdx)
	je	.L21813
	movzbl	5(%rax), %esi
	cmpl	$6, %ecx
	movb	%sil, 5(%rdx)
	je	.L21813
	movzbl	6(%rax), %esi
	cmpl	$7, %ecx
	movb	%sil, 6(%rdx)
	je	.L21813
	movzbl	7(%rax), %esi
	cmpl	$8, %ecx
	movb	%sil, 7(%rdx)
	je	.L21813
	movzbl	8(%rax), %esi
	cmpl	$9, %ecx
	movb	%sil, 8(%rdx)
	je	.L21813
	movzbl	9(%rax), %esi
	cmpl	$10, %ecx
	movb	%sil, 9(%rdx)
	je	.L21813
	movzbl	10(%rax), %esi
	cmpl	$11, %ecx
	movb	%sil, 10(%rdx)
	je	.L21813
	movzbl	11(%rax), %esi
	cmpl	$12, %ecx
	movb	%sil, 11(%rdx)
	je	.L21813
	movzbl	12(%rax), %esi
	cmpl	$13, %ecx
	movb	%sil, 12(%rdx)
	je	.L21813
	movzbl	13(%rax), %esi
	cmpl	$14, %ecx
	movb	%sil, 13(%rdx)
	je	.L21813
	movzbl	14(%rax), %eax
	movb	%al, 14(%rdx)
	jmp	.L21813
	.p2align 4,,10
	.p2align 3
.L21941:
	cmpq	$511, %r11
	ja	.L21942
	movabsq	$72340172838076673, %rcx
	movzbl	%dl, %eax
	imulq	%rcx, %rax
	movq	%r11, %rcx
	shrq	$3, %rcx
	rep stosq
	jmp	.L21826
	.p2align 4,,10
	.p2align 3
.L21816:
	subl	$1, %ecx
	leaq	1(%rax,%rcx), %rsi
	.p2align 4,,10
	.p2align 3
.L21824:
	addq	$1, %rax
	movzbl	-1(%rax), %ecx
	addq	$1, %rdx
	cmpq	%rsi, %rax
	movb	%cl, -1(%rdx)
	jne	.L21824
	jmp	.L21813
.L21942:
	movzbl	%dl, %esi
	movq	%r11, %rdx
	movl	%r10d, 20(%rsp)
	movq	%r11, 8(%rsp)
	call	memset
	movq	8(%rsp), %r11
	movl	20(%rsp), %r10d
	jmp	.L21828
.L21935:
	movzbl	1976(%rbx,%rcx), %ecx
	testb	%cl, 44216(%rbx,%rsi)
	jne	.L21800
.L21799:
	movzbl	97(%rbx), %r8d
	movq	%r11, %r9
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	movl	%r12d, %edi
	movl	%r10d, 72(%rsp)
	movq	%r11, 64(%rsp)
	call	s390_logical_to_main_l
	movl	72(%rsp), %r10d
	movq	%rax, 24(%rsp)
	movq	64(%rsp), %r11
	jmp	.L21802
.L21937:
	movzbl	1976(%rbx,%rax), %eax
	testb	%al, 44216(%rbx,%rcx)
	jne	.L21805
.L21804:
	movl	8(%rsp), %esi
	movl	%r10d, %edi
	movl	$1, %r9d
	movzbl	97(%rbx), %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r11, 72(%rsp)
	movl	%r10d, 8(%rsp)
	call	s390_logical_to_main_l
	movq	72(%rsp), %r11
	movl	8(%rsp), %r10d
	jmp	.L21807
.L21936:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L21801
	jmp	.L21799
.L21938:
	cmpb	43192(%rbx,%rcx), %al
	je	.L21806
	.p2align 4,,4
	jmp	.L21804
	.cfi_endproc
.LFE2116:
	.size	s390_move_long_extended, .-s390_move_long_extended
	.p2align 4,,15
	.globl	s390_move_numerics
	.type	s390_move_numerics, @function
s390_move_numerics:
.LFB2117:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r13d
	movl	%eax, %esi
	shrl	$16, %r13d
	shrl	$28, %esi
	andl	$4095, %r13d
	testl	%esi, %esi
	movl	%esi, 8(%rsp)
	je	.L21944
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %r13d
	andl	120(%rbx), %r13d
.L21944:
	movl	%eax, %r15d
	shrl	$12, %eax
	andl	$4095, %r15d
	andl	$15, %eax
	movl	%eax, 40(%rsp)
	je	.L21945
	cltq
	addl	192(%rbx,%rax,8), %r15d
	andl	120(%rbx), %r15d
.L21945:
	movl	8(%rsp), %eax
	movzbl	1(%rdi), %ebp
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L21946
	leal	1(%rax), %edx
	movl	%r13d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L22193
.L21947:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L22194
.L21948:
	movl	%r13d, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L22063
	testb	$1, 46264(%rbx,%rsi)
	je	.L22063
	movq	35000(%rax), %r11
	movl	%r13d, %r12d
	movzbl	%cl, %r8d
	movq	%r11, 984(%rbx)
	xorq	26808(%rax), %r12
.L21950:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L21951
	leal	1(%rax), %edx
	movl	%r15d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L22195
.L21952:
	testb	%r8b, %r8b
	jne	.L22196
.L21953:
	movl	%r15d, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L21951
	testb	$4, 46264(%rbx,%rsi)
	je	.L21951
	movl	%r15d, %r14d
	xorq	26808(%rax), %r14
.L21954:
	movl	$2047, %r10d
	movl	%r13d, %eax
	subl	%ebp, %r10d
	andl	$2047, %eax
	cmpl	%r10d, %eax
	jg	.L21955
	movl	%r15d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L21956
	leaq	16(%r14), %rdx
	leal	1(%rbp), %eax
	cmpq	%rdx, %r12
	leaq	16(%r12), %rdx
	setae	%cl
	cmpq	%rdx, %r14
	setae	%dl
	orb	%dl, %cl
	je	.L21957
	cmpl	$15, %eax
	jbe	.L21957
	movl	%eax, %esi
	movdqa	.LC8(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %esi
	movdqa	.LC9(%rip), %xmm2
	xorl	%edi, %edi
	movl	%esi, %ecx
	sall	$4, %ecx
.L21963:
	movdqu	(%r12,%rdx), %xmm0
	addl	$1, %edi
	movdqu	(%r14,%rdx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rdx)
	addq	$16, %rdx
	cmpl	%edi, %esi
	ja	.L21963
	movl	%ecx, %edx
	addq	%rdx, %r12
	addq	%rdx, %r14
	cmpl	%ecx, %eax
	je	.L21973
	.p2align 4,,10
	.p2align 3
.L21961:
	movzbl	(%r12), %eax
	addl	$1, %ecx
	addq	$1, %r12
	movzbl	(%r14), %edx
	addq	$1, %r14
	andl	$-16, %eax
	andl	$15, %edx
	orl	%edx, %eax
	movb	%al, -1(%r12)
	cmpl	%ecx, %ebp
	jge	.L21961
.L21973:
	orb	$6, (%r11)
.L21943:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L21957:
	.cfi_restore_state
	xorl	%eax, %eax
	.p2align 4,,10
	.p2align 3
.L21965:
	movzbl	(%r12,%rax), %edx
	movzbl	(%r14,%rax), %ecx
	andl	$-16, %edx
	andl	$15, %ecx
	orl	%ecx, %edx
	movb	%dl, (%r12,%rax)
	addq	$1, %rax
	cmpl	%eax, %ebp
	jge	.L21965
	jmp	.L21973
.L22195:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L21952
.L21951:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %edi
	movq	%r11, 32(%rsp)
	call	s390_logical_to_main_l
	movq	32(%rsp), %r11
	movq	%rax, %r14
	jmp	.L21954
.L22196:
	cmpb	%r8b, 43192(%rbx,%rsi)
	je	.L21953
	jmp	.L21951
.L22193:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L21947
.L21946:
	movzbl	97(%rbx), %r8d
.L21949:
	movl	8(%rsp), %esi
	leal	1(%rbp), %r9d
	movl	$1, %ecx
	andl	$511, %r9d
	movq	%rbx, %rdx
	movl	%r13d, %edi
	call	s390_logical_to_main_l
	movq	984(%rbx), %r11
	movq	%rax, %r12
	movzbl	97(%rbx), %r8d
	jmp	.L21950
.L21955:
	movl	$2048, 32(%rsp)
	subl	%eax, 32(%rsp)
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L21982
	leal	1(%rax), %ecx
	movl	32(%rsp), %eax
	movslq	%ecx, %rcx
	leal	(%rax,%r13), %edi
	andl	120(%rbx), %edi
	movl	%edi, %edx
	shrl	$12, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L22197
.L21983:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L22198
.L21985:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L21984
	testb	$1, 46264(%rbx,%rdx)
	je	.L21984
	movq	35000(%rax), %rsi
	movl	%edi, %r13d
	movq	%rsi, 984(%rbx)
	xorq	26808(%rax), %r13
	movq	%rsi, 8(%rsp)
.L21986:
	movl	%r15d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L21987
	movq	%r12, %rax
.L21989:
	movzbl	(%rax), %ecx
	addq	$1, %rax
	addq	$1, %r14
	movzbl	-1(%r14), %edx
	andl	$-16, %ecx
	andl	$15, %edx
	orl	%ecx, %edx
	movb	%dl, -1(%rax)
	movl	%eax, %edx
	subl	%r12d, %edx
	cmpl	%edx, 32(%rsp)
	jg	.L21989
	subl	32(%rsp), %ebp
	js	.L21996
	leaq	16(%r14), %rax
	leal	1(%rbp), %ecx
	cmpq	%rax, %r13
	leaq	16(%r13), %rax
	setae	%dl
	cmpq	%rax, %r14
	setae	%al
	orb	%al, %dl
	je	.L21991
	cmpl	$15, %ecx
	jbe	.L21991
	movl	%ecx, %edi
	movdqa	.LC8(%rip), %xmm3
	xorl	%eax, %eax
	shrl	$4, %edi
	movdqa	.LC9(%rip), %xmm2
	xorl	%esi, %esi
	movl	%edi, %edx
	sall	$4, %edx
.L21997:
	movdqu	0(%r13,%rax), %xmm0
	addl	$1, %esi
	movdqu	(%r14,%rax), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, 0(%r13,%rax)
	addq	$16, %rax
	cmpl	%esi, %edi
	ja	.L21997
	movl	%edx, %eax
	addq	%rax, %r13
	addq	%rax, %r14
	cmpl	%ecx, %edx
	je	.L21996
.L21995:
	movzbl	0(%r13), %eax
	addl	$1, %edx
	addq	$1, %r13
	movzbl	(%r14), %ecx
	addq	$1, %r14
	andl	$-16, %eax
	andl	$15, %ecx
	orl	%ecx, %eax
	movb	%al, -1(%r13)
	cmpl	%ebp, %edx
	jle	.L21995
.L21996:
	orb	$6, (%r11)
	movq	8(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L21943
.L21956:
	movl	$2048, %r13d
	subl	%eax, %r13d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L21966
	leal	0(%r13,%r15), %edi
	andl	120(%rbx), %edi
	leal	1(%rax), %ecx
	movslq	%ecx, %rcx
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L22199
.L21967:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L22200
.L21969:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L21968
	testb	$4, 46264(%rbx,%rax)
	je	.L21968
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L21970:
	movq	%r12, %rdx
.L21972:
	movzbl	(%rdx), %esi
	addq	$1, %rdx
	addq	$1, %r14
	movzbl	-1(%r14), %ecx
	andl	$-16, %esi
	andl	$15, %ecx
	orl	%esi, %ecx
	movb	%cl, -1(%rdx)
	movl	%edx, %ecx
	subl	%r12d, %ecx
	cmpl	%ecx, %r13d
	jg	.L21972
	subl	%r13d, %ebp
	js	.L21973
	leaq	16(%rdx), %rcx
	leal	1(%rbp), %edi
	cmpq	%rcx, %rax
	leaq	16(%rax), %rcx
	setae	%sil
	cmpq	%rcx, %rdx
	setae	%cl
	orb	%cl, %sil
	je	.L21974
	cmpl	$15, %edi
	jbe	.L21974
	movl	%edi, %r9d
	movdqa	.LC8(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r9d
	movdqa	.LC9(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %esi
	sall	$4, %esi
.L21979:
	movdqu	(%rdx,%rcx), %xmm0
	addl	$1, %r8d
	movdqu	(%rax,%rcx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%rdx,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %r9d
	ja	.L21979
	movl	%esi, %ecx
	addq	%rcx, %rdx
	addq	%rcx, %rax
	cmpl	%edi, %esi
	je	.L21973
.L21978:
	movzbl	(%rdx), %ecx
	addl	$1, %esi
	addq	$1, %rdx
	movzbl	(%rax), %edi
	addq	$1, %rax
	andl	$-16, %ecx
	andl	$15, %edi
	orl	%edi, %ecx
	movb	%cl, -1(%rdx)
	cmpl	%esi, %ebp
	jge	.L21978
	jmp	.L21973
.L21987:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L22000
	leal	(%r10,%r15), %edi
	andl	120(%rbx), %edi
	leal	1(%rax), %ecx
	movslq	%ecx, %rcx
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L22201
.L22001:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L22202
.L22003:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L22002
	testb	$4, 46264(%rbx,%rax)
	je	.L22002
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L22004:
	cmpl	%r10d, 32(%rsp)
	je	.L22203
	jge	.L22022
	movq	%r14, %rdx
.L22024:
	movzbl	(%rdx), %ecx
	addq	$1, %rdx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	andl	$15, %ecx
	andl	$-16, %esi
	orl	%esi, %ecx
	movb	%cl, -1(%r12)
	movl	%edx, %ecx
	subl	%r14d, %ecx
	cmpl	%ecx, 32(%rsp)
	jg	.L22024
	movl	%r10d, %ecx
	subl	32(%rsp), %ecx
	testl	%ecx, %ecx
	jle	.L22025
	leaq	16(%rdx), %rsi
	cmpq	%rsi, %r13
	leaq	16(%r13), %rsi
	setae	%dil
	cmpq	%rsi, %rdx
	setae	%sil
	orb	%sil, %dil
	je	.L22026
	cmpl	$15, %ecx
	jbe	.L22026
	movl	%ecx, %r9d
	movdqa	.LC8(%rip), %xmm3
	xorl	%esi, %esi
	shrl	$4, %r9d
	movdqa	.LC9(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %edi
	sall	$4, %edi
.L22031:
	movdqu	(%rdx,%rsi), %xmm0
	addl	$1, %r8d
	movdqu	0(%r13,%rsi), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, 0(%r13,%rsi)
	addq	$16, %rsi
	cmpl	%r9d, %r8d
	jb	.L22031
	movl	%edi, %esi
	leaq	0(%r13,%rsi), %r8
	addq	%rsi, %rdx
	cmpl	%edi, %ecx
	je	.L22032
.L22030:
	movzbl	(%rdx), %esi
	addl	$1, %edi
	addq	$1, %r8
	movzbl	-1(%r8), %r9d
	addq	$1, %rdx
	andl	$15, %esi
	andl	$-16, %r9d
	orl	%r9d, %esi
	movb	%sil, -1(%r8)
	cmpl	%edi, %ecx
	jg	.L22030
.L22032:
	subl	$1, %ecx
	leaq	1(%r13,%rcx), %r13
.L22025:
	subl	%r10d, %ebp
	js	.L21996
	leaq	16(%r13), %rdx
	leal	1(%rbp), %esi
	cmpq	%rdx, %rax
	leaq	16(%rax), %rdx
	setae	%cl
	cmpq	%rdx, %r13
	setae	%dl
	orb	%dl, %cl
	je	.L22034
	cmpl	$15, %esi
	jbe	.L22034
	movl	%esi, %r8d
	movdqa	.LC8(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r8d
	movdqa	.LC9(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %ecx
	sall	$4, %ecx
.L22039:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %edi
	movdqu	0(%r13,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, 0(%r13,%rdx)
	addq	$16, %rdx
	cmpl	%r8d, %edi
	jb	.L22039
	movl	%ecx, %edx
	addq	%rdx, %r13
	addq	%rdx, %rax
	cmpl	%ecx, %esi
	je	.L21996
.L22038:
	movzbl	(%rax), %edx
	addl	$1, %ecx
	addq	$1, %r13
	movzbl	-1(%r13), %esi
	addq	$1, %rax
	andl	$15, %edx
	andl	$-16, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r13)
	cmpl	%ecx, %ebp
	jge	.L22038
	jmp	.L21996
.L21991:
	xorl	%eax, %eax
.L21999:
	movzbl	0(%r13,%rax), %edx
	movzbl	(%r14,%rax), %ecx
	andl	$-16, %edx
	andl	$15, %ecx
	orl	%ecx, %edx
	movb	%dl, 0(%r13,%rax)
	addq	$1, %rax
	cmpl	%eax, %ebp
	jge	.L21999
	jmp	.L21996
.L21974:
	xorl	%ecx, %ecx
.L21981:
	movzbl	(%rdx,%rcx), %esi
	movzbl	(%rax,%rcx), %edi
	andl	$-16, %esi
	andl	$15, %edi
	orl	%edi, %esi
	movb	%sil, (%rdx,%rcx)
	addq	$1, %rcx
	cmpl	%ecx, %ebp
	jge	.L21981
	jmp	.L21973
.L22199:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L21967
.L22191:
	movzbl	97(%rbx), %r8d
.L21968:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r11, 8(%rsp)
	call	s390_logical_to_main_l
	movq	8(%rsp), %r11
	jmp	.L21970
.L22200:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L21969
	jmp	.L21968
.L21966:
	leal	0(%r13,%r15), %edi
	andl	120(%rbx), %edi
	jmp	.L22191
.L22197:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L21983
	movzbl	97(%rbx), %r8d
.L21984:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 44(%rsp)
	movq	%r11, 24(%rsp)
	call	s390_logical_to_main_l
	movl	44(%rsp), %r10d
	movq	%rax, %r13
	movq	984(%rbx), %rax
	movq	24(%rsp), %r11
	movq	%rax, 8(%rsp)
	jmp	.L21986
.L22198:
	cmpb	43192(%rbx,%rdx), %r8b
	je	.L21985
	jmp	.L21984
.L21982:
	movl	32(%rsp), %eax
	movzbl	97(%rbx), %r8d
	leal	(%rax,%r13), %edi
	andl	120(%rbx), %edi
	jmp	.L21984
.L22194:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L21948
.L22063:
	movzbl	%cl, %r8d
	jmp	.L21949
.L22022:
	movq	%r14, %rcx
.L22043:
	movzbl	(%rcx), %edx
	addq	$1, %rcx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	andl	$15, %edx
	andl	$-16, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r12)
	movl	%ecx, %edx
	subl	%r14d, %edx
	cmpl	%edx, %r10d
	jg	.L22043
	movl	32(%rsp), %edx
	subl	%r10d, %edx
	testl	%edx, %edx
	jle	.L22044
	leaq	16(%r12), %rcx
	cmpq	%rcx, %rax
	leaq	16(%rax), %rcx
	setae	%sil
	cmpq	%rcx, %r12
	setae	%cl
	orb	%cl, %sil
	je	.L22045
	cmpl	$15, %edx
	jbe	.L22045
	movl	%edx, %r8d
	movdqa	.LC8(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r8d
	movdqa	.LC9(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %esi
	sall	$4, %esi
.L22050:
	movdqu	(%rax,%rcx), %xmm0
	addl	$1, %edi
	movdqu	(%r12,%rcx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %edi
	jb	.L22050
	movl	%esi, %edi
	addq	%rdi, %r12
	addq	%rax, %rdi
	cmpl	%esi, %edx
	je	.L22051
.L22049:
	movzbl	(%rdi), %ecx
	addl	$1, %esi
	addq	$1, %r12
	movzbl	-1(%r12), %r8d
	addq	$1, %rdi
	andl	$15, %ecx
	andl	$-16, %r8d
	orl	%r8d, %ecx
	movb	%cl, -1(%r12)
	cmpl	%esi, %edx
	jg	.L22049
.L22051:
	subl	$1, %edx
	leaq	1(%rax,%rdx), %rax
.L22044:
	subl	32(%rsp), %ebp
	js	.L21996
	leaq	16(%rax), %rdx
	leal	1(%rbp), %esi
	cmpq	%rdx, %r13
	leaq	16(%r13), %rdx
	setae	%cl
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L22053
	cmpl	$15, %esi
	jbe	.L22053
	movl	%esi, %r8d
	movdqa	.LC8(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r8d
	movdqa	.LC9(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %ecx
	sall	$4, %ecx
.L22058:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %edi
	movdqu	0(%r13,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, 0(%r13,%rdx)
	addq	$16, %rdx
	cmpl	%r8d, %edi
	jb	.L22058
	movl	%ecx, %edx
	addq	%rdx, %r13
	addq	%rdx, %rax
	cmpl	%ecx, %esi
	je	.L21996
.L22057:
	movzbl	(%rax), %edx
	addl	$1, %ecx
	addq	$1, %r13
	movzbl	-1(%r13), %esi
	addq	$1, %rax
	andl	$15, %edx
	andl	$-16, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r13)
	cmpl	%ecx, %ebp
	jge	.L22057
	jmp	.L21996
.L22203:
	movl	32(%rsp), %edi
	leaq	16(%r14), %rcx
	movl	$1, %edx
	testl	%edi, %edi
	cmovg	%edi, %edx
	cmpq	%rcx, %r12
	setae	%sil
	leaq	16(%r12), %rcx
	cmpq	%rcx, %r14
	setae	%cl
	orb	%cl, %sil
	je	.L22006
	cmpl	$15, %edx
	jbe	.L22006
	movl	%edx, %r8d
	movdqa	.LC8(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r8d
	movdqa	.LC9(%rip), %xmm2
	xorl	%esi, %esi
	movl	%r8d, %edi
	sall	$4, %edi
.L22011:
	movdqu	(%r14,%rcx), %xmm0
	addl	$1, %esi
	movdqu	(%r12,%rcx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %esi
	jb	.L22011
	movl	%edi, %ecx
	addq	%rcx, %r12
	addq	%rcx, %r14
	cmpl	%edi, %edx
	movl	%edi, %ecx
	je	.L22012
.L22010:
	movzbl	(%r14), %edx
	addl	$1, %ecx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	addq	$1, %r14
	andl	$15, %edx
	andl	$-16, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r12)
	cmpl	%ecx, 32(%rsp)
	jg	.L22010
.L22012:
	subl	32(%rsp), %ebp
	js	.L21996
	leaq	16(%rax), %rdx
	leal	1(%rbp), %esi
	cmpq	%rdx, %r13
	leaq	16(%r13), %rdx
	setae	%cl
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L22014
	cmpl	$15, %esi
	jbe	.L22014
	movl	%esi, %r8d
	movdqa	.LC8(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r8d
	movdqa	.LC9(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %ecx
	sall	$4, %ecx
.L22019:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %edi
	movdqu	0(%r13,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, 0(%r13,%rdx)
	addq	$16, %rdx
	cmpl	%edi, %r8d
	ja	.L22019
	movl	%ecx, %edx
	addq	%rdx, %r13
	addq	%rdx, %rax
	cmpl	%esi, %ecx
	je	.L21996
.L22018:
	movzbl	0(%r13), %edx
	addl	$1, %ecx
	addq	$1, %r13
	movzbl	(%rax), %esi
	addq	$1, %rax
	andl	$-16, %edx
	andl	$15, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r13)
	cmpl	%ecx, %ebp
	jge	.L22018
	jmp	.L21996
.L22201:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L22001
.L22192:
	movzbl	97(%rbx), %r8d
.L22002:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	s390_logical_to_main_l
	movl	24(%rsp), %r10d
	movq	16(%rsp), %r11
	jmp	.L22004
.L22202:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L22003
	jmp	.L22002
.L22026:
	xorl	%esi, %esi
.L22033:
	movzbl	(%rdx,%rsi), %edi
	movzbl	0(%r13,%rsi), %r8d
	andl	$15, %edi
	andl	$-16, %r8d
	orl	%r8d, %edi
	movb	%dil, 0(%r13,%rsi)
	addq	$1, %rsi
	cmpl	%esi, %ecx
	jg	.L22033
	jmp	.L22032
.L22034:
	xorl	%edx, %edx
.L22041:
	movzbl	(%rax,%rdx), %ecx
	movzbl	0(%r13,%rdx), %esi
	andl	$15, %ecx
	andl	$-16, %esi
	orl	%esi, %ecx
	movb	%cl, 0(%r13,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %ebp
	jge	.L22041
	jmp	.L21996
.L22006:
	xorl	%edx, %edx
.L22013:
	movzbl	(%r14,%rdx), %ecx
	movzbl	(%r12,%rdx), %esi
	andl	$15, %ecx
	andl	$-16, %esi
	orl	%esi, %ecx
	movb	%cl, (%r12,%rdx)
	addq	$1, %rdx
	cmpl	%edx, 32(%rsp)
	jg	.L22013
	jmp	.L22012
.L22000:
	leal	(%r10,%r15), %edi
	andl	120(%rbx), %edi
	jmp	.L22192
.L22045:
	xorl	%ecx, %ecx
.L22052:
	movzbl	(%rax,%rcx), %esi
	movzbl	(%r12,%rcx), %edi
	andl	$15, %esi
	andl	$-16, %edi
	orl	%edi, %esi
	movb	%sil, (%r12,%rcx)
	addq	$1, %rcx
	cmpl	%ecx, %edx
	jg	.L22052
	jmp	.L22051
.L22014:
	xorl	%edx, %edx
.L22021:
	movzbl	0(%r13,%rdx), %ecx
	movzbl	(%rax,%rdx), %esi
	andl	$-16, %ecx
	andl	$15, %esi
	orl	%esi, %ecx
	movb	%cl, 0(%r13,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %ebp
	jge	.L22021
	jmp	.L21996
.L22053:
	xorl	%edx, %edx
.L22060:
	movzbl	(%rax,%rdx), %ecx
	movzbl	0(%r13,%rdx), %esi
	andl	$15, %ecx
	andl	$-16, %esi
	orl	%esi, %ecx
	movb	%cl, 0(%r13,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %ebp
	jge	.L22060
	jmp	.L21996
	.cfi_endproc
.LFE2117:
	.size	s390_move_numerics, .-s390_move_numerics
	.p2align 4,,15
	.globl	s390_move_string
	.type	s390_move_string, @function
s390_move_string:
.LFB2118:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movzbl	3(%rdi), %r13d
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movzbl	%r13b, %eax
	andl	$15, %r13d
	movl	%eax, 8(%rsp)
	movzbl	%r13b, %eax
	sarl	$4, 8(%rsp)
	movl	%eax, 12(%rsp)
	testl	$-256, 192(%rsi)
	jne	.L22249
.L22205:
	movl	120(%rbx), %r12d
	movzbl	%r13b, %r13d
	movl	$4096, %r15d
	movzbl	192(%rbx), %eax
	movb	%al, 7(%rsp)
	movslq	8(%rsp), %rax
	leaq	(%rbx,%rax,8), %rax
	movl	192(%rax), %ebp
	movq	%rax, 16(%rsp)
	leaq	(%rbx,%r13,8), %rax
	movq	%rax, 24(%rsp)
	andl	%r12d, %ebp
	andl	192(%rax), %r12d
	movl	%ebp, %edx
	andl	$4095, %edx
	movl	%r12d, %eax
	andl	$4095, %eax
	cmpl	%eax, %edx
	jbe	.L22206
	subl	%edx, %r15d
.L22207:
	movl	12(%rsp), %eax
	xorl	%r14d, %r14d
	leal	5(%rax), %r11d
	movl	8(%rsp), %eax
	movslq	%r11d, %r11
	leal	5(%rax), %r10d
	movslq	%r10d, %r10
	.p2align 4,,10
	.p2align 3
.L22220:
	movl	1892(%rbx,%r11,4), %eax
	testl	%eax, %eax
	je	.L22208
	movl	%r12d, %esi
	addl	$1, %eax
	shrl	$12, %esi
	cltq
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L22250
.L22209:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L22251
.L22210:
	movl	%r12d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L22223
	testb	$4, 46264(%rbx,%rsi)
	je	.L22223
	movl	%r12d, %eax
	movzbl	%cl, %r8d
	xorq	26808(%rdx), %rax
.L22212:
	movzbl	(%rax), %r13d
	movl	1892(%rbx,%r10,4), %eax
	testl	%eax, %eax
	je	.L22213
	movl	%ebp, %esi
	addl	$1, %eax
	shrl	$12, %esi
	cltq
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L22252
.L22214:
	testb	%r8b, %r8b
	jne	.L22253
.L22215:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L22213
	testb	$2, 46264(%rbx,%rsi)
	je	.L22213
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L22216:
	cmpb	%r13b, 7(%rsp)
	movb	%r13b, (%rax)
	je	.L22254
	movl	120(%rbx), %eax
	addl	$1, %ebp
	addl	$1, %r12d
	addl	$1, %r14d
	andl	%eax, %ebp
	andl	%eax, %r12d
	cmpl	%r14d, %r15d
	jg	.L22220
	movq	16(%rsp), %rax
	movl	%ebp, 192(%rax)
	movq	24(%rsp), %rax
	movl	%r12d, 192(%rax)
	movb	$3, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L22206:
	.cfi_restore_state
	subl	%eax, %r15d
	jmp	.L22207
	.p2align 4,,10
	.p2align 3
.L22254:
	movq	16(%rsp), %rax
	movl	%ebp, 192(%rax)
	movb	$1, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L22249:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L22205
.L22252:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L22214
.L22213:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movq	%r10, 40(%rsp)
	movq	%r11, 32(%rsp)
	call	s390_logical_to_main_l
	movq	40(%rsp), %r10
	movq	32(%rsp), %r11
	jmp	.L22216
.L22251:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L22210
.L22223:
	movzbl	%cl, %r8d
.L22211:
	movl	12(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %edi
	movq	%r10, 40(%rsp)
	movq	%r11, 32(%rsp)
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	40(%rsp), %r10
	movq	32(%rsp), %r11
	jmp	.L22212
.L22250:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rax)
	jne	.L22209
.L22208:
	movzbl	97(%rbx), %r8d
	jmp	.L22211
.L22253:
	cmpb	43192(%rbx,%rsi), %r8b
	je	.L22215
	jmp	.L22213
	.cfi_endproc
.LFE2118:
	.size	s390_move_string, .-s390_move_string
	.p2align 4,,15
	.globl	s390_move_with_offset
	.type	s390_move_with_offset, @function
s390_move_with_offset:
.LFB2119:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %esi
	shrl	$16, %ebp
	shrl	$28, %esi
	andl	$4095, %ebp
	testl	%esi, %esi
	movl	%esi, 12(%rsp)
	je	.L22256
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %ebp
	andl	120(%rbx), %ebp
.L22256:
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, 24(%rsp)
	je	.L22257
	cltq
	addl	192(%rbx,%rax,8), %r12d
	andl	120(%rbx), %r12d
.L22257:
	movzbl	1(%rdi), %r11d
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	movl	%r11d, %r10d
	shrb	$4, %r11b
	movzbl	%r11b, %r11d
	andl	$15, %r10d
	leal	0(%rbp,%r11), %r14d
	movl	%r14d, %eax
	xorl	%ebp, %eax
	testl	$2147479552, %eax
	movl	12(%rsp), %eax
	leal	5(%rax), %r13d
	jne	.L22258
	movzbl	97(%rbx), %r8d
	movslq	%r13d, %r13
	movl	%r8d, %ecx
.L22259:
	leal	(%r12,%r10), %r15d
	movl	%r15d, %eax
	xorl	%r12d, %eax
	testl	$2147479552, %eax
	movl	24(%rsp), %eax
	jne	.L22269
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %edx
	movq	%rax, (%rsp)
.L22270:
	movl	120(%rbx), %ebp
	movl	%r15d, %edi
	andl	%ebp, %edi
	testl	%edx, %edx
	leal	-1(%rdi), %eax
	movl	%eax, 8(%rsp)
	je	.L22280
	movl	%edi, %eax
	addl	$1, %edx
	shrl	$12, %eax
	movslq	%edx, %rdx
	andl	$1023, %eax
	movl	320(%rbx,%rdx,8), %r9d
	movl	2232(%rbx,%rax,8), %esi
.L22307:
	cmpl	%esi, %r9d
	jne	.L22416
.L22281:
	testb	%cl, %cl
	jne	.L22417
.L22282:
	leaq	(%rbx,%rax,8), %rsi
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rsi), %edx
	jne	.L22280
	testb	$4, 46264(%rbx,%rax)
	je	.L22280
	movl	%edi, %eax
	xorq	26808(%rsi), %rax
.L22283:
	andl	%r14d, %ebp
	movzbl	(%rax), %r12d
	leaq	(%rbx,%r13,4), %r15
	movl	1892(%r15), %r9d
	testl	%r9d, %r9d
	je	.L22284
	movl	%ebp, %eax
	addl	$1, %r9d
	shrl	$12, %eax
	movslq	%r9d, %r9
	andl	$1023, %eax
	movl	320(%rbx,%r9,8), %edi
	leaq	(%rbx,%rax,8), %rsi
	movl	2232(%rsi), %r8d
	cmpl	%r8d, %edi
	jne	.L22418
.L22285:
	testb	%cl, %cl
	jne	.L22419
.L22286:
	movl	%ebp, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rsi), %edx
	jne	.L22284
	testb	$4, 46264(%rbx,%rax)
	je	.L22284
	leal	-1(%rbp), %r13d
	movl	%ebp, %edx
	movl	%r12d, %r14d
	xorq	26808(%rsi), %rdx
	sall	$4, %r14d
	movzbl	(%rdx), %edx
	andl	$15, %edx
	orl	%edx, %r14d
.L22287:
	cmpl	%edi, %r8d
	jne	.L22420
.L22289:
	testb	%cl, %cl
	jne	.L22421
.L22291:
	leaq	(%rbx,%rax,8), %rsi
	movl	%ebp, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rsi), %edx
	jne	.L22290
	testb	$2, 46264(%rbx,%rax)
	je	.L22290
	movl	%ebp, %eax
	xorq	26808(%rsi), %rax
.L22292:
	testl	%r11d, %r11d
	movb	%r14b, (%rax)
	je	.L22255
	subl	$1, %r11d
	xorl	%ebp, %ebp
	addq	$1, %r11
	jmp	.L22306
	.p2align 4,,10
	.p2align 3
.L22424:
	movzbl	97(%rbx), %r8d
	xorl	%eax, %eax
	xorl	%r12d, %r12d
.L22295:
	orl	%eax, %r14d
	movl	1892(%r15), %eax
	andl	%r13d, %edi
	leal	-1(%rdi), %r13d
	testl	%eax, %eax
	je	.L22301
	movl	%edi, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rax,8)
	jne	.L22422
.L22302:
	testb	%r8b, %r8b
	jne	.L22423
.L22303:
	movl	%edi, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L22301
	testb	$2, 46264(%rbx,%rcx)
	je	.L22301
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L22304:
	addq	$1, %rbp
	movb	%r14b, (%rax)
	cmpq	%r11, %rbp
	je	.L22255
.L22306:
	movl	%r10d, %eax
	movl	%r12d, %r14d
	movl	120(%rbx), %edi
	subl	%ebp, %eax
	shrb	$4, %r14b
	testl	%eax, %eax
	jle	.L22424
	movl	8(%rsp), %eax
	andl	%edi, %eax
	leal	-1(%rax), %esi
	movl	%esi, 8(%rsp)
	movq	(%rsp), %rsi
	movl	1892(%rbx,%rsi,4), %edx
	testl	%edx, %edx
	je	.L22296
	leal	1(%rdx), %ecx
	movl	%eax, %esi
	shrl	$12, %esi
	movslq	%ecx, %rcx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movl	2232(%rdx), %r9d
	cmpl	%r9d, 320(%rbx,%rcx,8)
	jne	.L22425
.L22297:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L22426
.L22298:
	movl	%eax, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L22299
	testb	$4, 46264(%rbx,%rsi)
	je	.L22299
	xorq	26808(%rdx), %rax
.L22300:
	movzbl	(%rax), %r12d
	movl	%r12d, %eax
	sall	$4, %eax
	jmp	.L22295
	.p2align 4,,10
	.p2align 3
.L22255:
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L22258:
	.cfi_restore_state
	movslq	%r13d, %r13
	leaq	(%rbx,%r13,4), %r15
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L22260
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L22427
.L22261:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L22428
.L22262:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L22312
	testb	$1, 46264(%rbx,%rcx)
	je	.L22312
	movq	35000(%rdx), %rax
	movq	%rax, 984(%rbx)
.L22264:
	movl	%ebp, %edx
	movl	$2047, %eax
	andl	$2047, %edx
	subl	%r11d, %eax
	cmpl	%eax, %edx
	jg	.L22265
	movzbl	97(%rbx), %r8d
	movl	%r8d, %ecx
	jmp	.L22259
	.p2align 4,,10
	.p2align 3
.L22269:
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rbp
	movq	%rax, (%rsp)
	movl	1892(%rbp), %edx
	testl	%edx, %edx
	je	.L22271
	leal	1(%rdx), %edi
	movl	%r12d, %ecx
	shrl	$12, %ecx
	movslq	%edi, %rax
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rsi
	movl	2232(%rsi), %r9d
	cmpl	%r9d, 320(%rbx,%rax,8)
	jne	.L22429
.L22272:
	testb	%r8b, %r8b
	jne	.L22430
.L22273:
	movl	%r12d, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rsi), %eax
	jne	.L22271
	testb	$4, 46264(%rbx,%rcx)
	je	.L22271
	movl	%r12d, %ecx
	movl	$2047, %eax
	andl	$2047, %ecx
	subl	%r10d, %eax
	cmpl	%eax, %ecx
	jg	.L22308
.L22309:
	movl	%r8d, %ecx
	jmp	.L22270
.L22422:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L22302
.L22301:
	movl	12(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 28(%rsp)
	movq	%r11, 16(%rsp)
	call	s390_logical_to_main_l
	movl	28(%rsp), %r10d
	movq	16(%rsp), %r11
	jmp	.L22304
.L22425:
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rcx)
	jne	.L22297
.L22296:
	movzbl	97(%rbx), %r8d
.L22299:
	movl	24(%rsp), %esi
	movl	%eax, %edi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 28(%rsp)
	movq	%r11, 16(%rsp)
	call	s390_logical_to_main_l
	movl	120(%rbx), %edi
	movzbl	97(%rbx), %r8d
	movl	28(%rsp), %r10d
	movq	16(%rsp), %r11
	jmp	.L22300
.L22423:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L22303
	jmp	.L22301
	.p2align 4,,10
	.p2align 3
.L22426:
	cmpb	43192(%rbx,%rsi), %r8b
	je	.L22298
	.p2align 4,,3
	jmp	.L22299
.L22416:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L22281
.L22280:
	movl	24(%rsp), %esi
	movzbl	%cl, %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 28(%rsp)
	movl	%r11d, 16(%rsp)
	call	s390_logical_to_main_l
	movzbl	97(%rbx), %ecx
	movl	120(%rbx), %ebp
	movl	28(%rsp), %r10d
	movl	16(%rsp), %r11d
	jmp	.L22283
.L22288:
	movzbl	97(%rbx), %ecx
.L22290:
	movl	12(%rsp), %esi
	movzbl	%cl, %r8d
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, 28(%rsp)
	movl	%r11d, 16(%rsp)
	call	s390_logical_to_main_l
	movl	28(%rsp), %r10d
	movl	16(%rsp), %r11d
	jmp	.L22292
.L22418:
	movzbl	44216(%rbx,%rax), %edx
	testb	%dl, 1976(%rbx,%r9)
	jne	.L22285
.L22284:
	movl	12(%rsp), %esi
	movl	$1, %r9d
	movzbl	%cl, %r8d
	movq	%rbx, %rdx
	movl	$4, %ecx
	movl	%ebp, %edi
	movl	%r10d, 28(%rsp)
	leal	-1(%rbp), %r13d
	movl	%r12d, %r14d
	movl	%r11d, 16(%rsp)
	sall	$4, %r14d
	call	s390_logical_to_main_l
	movl	1892(%r15), %r9d
	movzbl	(%rax), %eax
	movl	16(%rsp), %r11d
	movl	28(%rsp), %r10d
	andl	$15, %eax
	orl	%eax, %r14d
	testl	%r9d, %r9d
	je	.L22288
	movl	%ebp, %eax
	addl	$1, %r9d
	movzbl	97(%rbx), %ecx
	shrl	$12, %eax
	movslq	%r9d, %r9
	andl	$1023, %eax
	movl	320(%rbx,%r9,8), %edi
	movl	2232(%rbx,%rax,8), %r8d
	jmp	.L22287
.L22417:
	cmpb	%cl, 43192(%rbx,%rax)
	je	.L22282
	jmp	.L22280
.L22421:
	cmpb	43192(%rbx,%rax), %cl
	je	.L22291
	.p2align 4,,4
	jmp	.L22290
.L22420:
	movzbl	44216(%rbx,%rax), %edx
	testb	%dl, 1976(%rbx,%r9)
	jne	.L22289
	jmp	.L22290
.L22419:
	cmpb	43192(%rbx,%rax), %cl
	je	.L22286
	.p2align 4,,4
	jmp	.L22284
.L22427:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L22261
.L22260:
	movzbl	97(%rbx), %r8d
.L22263:
	movl	12(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movl	%ebp, %edi
	movl	%r10d, (%rsp)
	movl	%r11d, 8(%rsp)
	call	s390_logical_to_main_l
	movl	(%rsp), %r10d
	movl	8(%rsp), %r11d
	jmp	.L22264
.L22428:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L22262
.L22312:
	movzbl	%sil, %r8d
	jmp	.L22263
.L22265:
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L22266
	movl	120(%rbx), %ecx
	leal	1(%rax), %esi
	movslq	%esi, %rsi
	andl	%r14d, %ecx
	movl	%ecx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rsi,8)
	jne	.L22431
.L22267:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L22432
.L22268:
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L22266
	testb	$1, 46264(%rbx,%rax)
	je	.L22266
	movq	35000(%rdx), %rax
	movl	%r8d, %ecx
	movq	%rax, 984(%rbx)
	jmp	.L22259
.L22429:
	movzbl	44216(%rbx,%rcx), %r9d
	testb	%r9b, 1976(%rbx,%rax)
	jne	.L22272
.L22271:
	movl	24(%rsp), %esi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %r9d
	movl	%r12d, %edi
	movl	%r10d, 16(%rsp)
	movl	%r11d, 8(%rsp)
	call	s390_logical_to_main_l
	movl	16(%rsp), %r10d
	movl	%r12d, %ecx
	movl	$2047, %eax
	andl	$2047, %ecx
	movl	8(%rsp), %r11d
	movl	1892(%rbp), %edx
	subl	%r10d, %eax
	cmpl	%eax, %ecx
	jg	.L22275
	movzbl	97(%rbx), %r8d
	jmp	.L22309
.L22430:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L22273
	jmp	.L22271
.L22275:
	testl	%edx, %edx
	je	.L22276
	leal	1(%rdx), %edi
.L22308:
	movslq	%edi, %rdx
	movl	120(%rbx), %r8d
	movl	%r15d, %edi
	movl	320(%rbx,%rdx,8), %eax
	andl	%r8d, %edi
	movl	%eax, %esi
	movl	%eax, 16(%rsp)
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %r9
	movl	2232(%r9), %ecx
	cmpl	%ecx, %esi
	movl	%ecx, 28(%rsp)
	jne	.L22433
.L22277:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L22434
.L22278:
	movl	%edi, %esi
	andl	$2143289344, %esi
	orl	2224(%rbx), %esi
	cmpl	10424(%r9), %esi
	jne	.L22276
	testb	$4, 46264(%rbx,%rax)
	je	.L22276
	leal	-1(%rdi), %esi
	movl	%r8d, %ebp
	movl	16(%rsp), %r9d
	movl	%esi, 8(%rsp)
	movl	28(%rsp), %esi
	jmp	.L22307
.L22433:
	movzbl	1976(%rbx,%rdx), %ecx
	testb	%cl, 44216(%rbx,%rax)
	jne	.L22277
.L22276:
	movl	24(%rsp), %esi
	movl	%r10d, %edx
	movl	$4, %ecx
	movq	%rbx, %r8
	movl	%r12d, %edi
	movl	%r11d, 16(%rsp)
	movl	%r10d, 8(%rsp)
	call	s390_validate_operand.part.8
	movl	1892(%rbp), %edx
	movzbl	97(%rbx), %ecx
	movl	16(%rsp), %r11d
	movl	8(%rsp), %r10d
	jmp	.L22270
.L22434:
	cmpb	43192(%rbx,%rax), %cl
	je	.L22278
	jmp	.L22276
.L22432:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L22268
.L22266:
	movl	12(%rsp), %esi
	movq	%rbx, %r8
	movl	$1, %ecx
	movl	%r11d, %edx
	movl	%ebp, %edi
	movl	%r10d, (%rsp)
	movl	%r11d, 8(%rsp)
	call	s390_validate_operand.part.8
	movzbl	97(%rbx), %r8d
	movl	(%rsp), %r10d
	movl	8(%rsp), %r11d
	movl	%r8d, %ecx
	jmp	.L22259
.L22431:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L22267
	jmp	.L22266
	.cfi_endproc
.LFE2119:
	.size	s390_move_with_offset, .-s390_move_with_offset
	.p2align 4,,15
	.globl	s390_move_zones
	.type	s390_move_zones, @function
s390_move_zones:
.LFB2120:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r13d
	movl	%eax, %esi
	shrl	$16, %r13d
	shrl	$28, %esi
	andl	$4095, %r13d
	testl	%esi, %esi
	movl	%esi, 8(%rsp)
	je	.L22436
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %r13d
	andl	120(%rbx), %r13d
.L22436:
	movl	%eax, %r15d
	shrl	$12, %eax
	andl	$4095, %r15d
	andl	$15, %eax
	movl	%eax, 40(%rsp)
	je	.L22437
	cltq
	addl	192(%rbx,%rax,8), %r15d
	andl	120(%rbx), %r15d
.L22437:
	movl	8(%rsp), %eax
	movzbl	1(%rdi), %ebp
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L22438
	leal	1(%rax), %edx
	movl	%r13d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L22685
.L22439:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L22686
.L22440:
	movl	%r13d, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L22555
	testb	$1, 46264(%rbx,%rsi)
	je	.L22555
	movq	35000(%rax), %r11
	movl	%r13d, %r12d
	movzbl	%cl, %r8d
	movq	%r11, 984(%rbx)
	xorq	26808(%rax), %r12
.L22442:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L22443
	leal	1(%rax), %edx
	movl	%r15d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movl	2232(%rax), %edi
	cmpl	%edi, 320(%rbx,%rdx,8)
	jne	.L22687
.L22444:
	testb	%r8b, %r8b
	jne	.L22688
.L22445:
	movl	%r15d, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rax), %edx
	jne	.L22443
	testb	$4, 46264(%rbx,%rsi)
	je	.L22443
	movl	%r15d, %r14d
	xorq	26808(%rax), %r14
.L22446:
	movl	$2047, %r10d
	movl	%r13d, %eax
	subl	%ebp, %r10d
	andl	$2047, %eax
	cmpl	%r10d, %eax
	jg	.L22447
	movl	%r15d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L22448
	leaq	16(%r14), %rdx
	leal	1(%rbp), %eax
	cmpq	%rdx, %r12
	leaq	16(%r12), %rdx
	setae	%cl
	cmpq	%rdx, %r14
	setae	%dl
	orb	%dl, %cl
	je	.L22449
	cmpl	$15, %eax
	jbe	.L22449
	movl	%eax, %esi
	movdqa	.LC9(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %esi
	movdqa	.LC8(%rip), %xmm2
	xorl	%edi, %edi
	movl	%esi, %ecx
	sall	$4, %ecx
.L22455:
	movdqu	(%r12,%rdx), %xmm0
	addl	$1, %edi
	movdqu	(%r14,%rdx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rdx)
	addq	$16, %rdx
	cmpl	%edi, %esi
	ja	.L22455
	movl	%ecx, %edx
	addq	%rdx, %r12
	addq	%rdx, %r14
	cmpl	%ecx, %eax
	je	.L22465
	.p2align 4,,10
	.p2align 3
.L22453:
	movzbl	(%r12), %eax
	addl	$1, %ecx
	addq	$1, %r12
	movzbl	(%r14), %edx
	addq	$1, %r14
	andl	$15, %eax
	andl	$-16, %edx
	orl	%edx, %eax
	movb	%al, -1(%r12)
	cmpl	%ecx, %ebp
	jge	.L22453
.L22465:
	orb	$6, (%r11)
.L22435:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L22449:
	.cfi_restore_state
	xorl	%eax, %eax
	.p2align 4,,10
	.p2align 3
.L22457:
	movzbl	(%r12,%rax), %edx
	movzbl	(%r14,%rax), %ecx
	andl	$15, %edx
	andl	$-16, %ecx
	orl	%ecx, %edx
	movb	%dl, (%r12,%rax)
	addq	$1, %rax
	cmpl	%eax, %ebp
	jge	.L22457
	jmp	.L22465
.L22687:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L22444
.L22443:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %edi
	movq	%r11, 32(%rsp)
	call	s390_logical_to_main_l
	movq	32(%rsp), %r11
	movq	%rax, %r14
	jmp	.L22446
.L22688:
	cmpb	%r8b, 43192(%rbx,%rsi)
	je	.L22445
	jmp	.L22443
.L22685:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L22439
.L22438:
	movzbl	97(%rbx), %r8d
.L22441:
	movl	8(%rsp), %esi
	leal	1(%rbp), %r9d
	movl	$1, %ecx
	andl	$511, %r9d
	movq	%rbx, %rdx
	movl	%r13d, %edi
	call	s390_logical_to_main_l
	movq	984(%rbx), %r11
	movq	%rax, %r12
	movzbl	97(%rbx), %r8d
	jmp	.L22442
.L22447:
	movl	$2048, 32(%rsp)
	subl	%eax, 32(%rsp)
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L22474
	leal	1(%rax), %ecx
	movl	32(%rsp), %eax
	movslq	%ecx, %rcx
	leal	(%rax,%r13), %edi
	andl	120(%rbx), %edi
	movl	%edi, %edx
	shrl	$12, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rax
	movl	2232(%rax), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L22689
.L22475:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L22690
.L22477:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rax), %ecx
	jne	.L22476
	testb	$1, 46264(%rbx,%rdx)
	je	.L22476
	movq	35000(%rax), %rsi
	movl	%edi, %r13d
	movq	%rsi, 984(%rbx)
	xorq	26808(%rax), %r13
	movq	%rsi, 8(%rsp)
.L22478:
	movl	%r15d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L22479
	movq	%r12, %rax
.L22481:
	movzbl	(%rax), %ecx
	addq	$1, %rax
	addq	$1, %r14
	movzbl	-1(%r14), %edx
	andl	$15, %ecx
	andl	$-16, %edx
	orl	%ecx, %edx
	movb	%dl, -1(%rax)
	movl	%eax, %edx
	subl	%r12d, %edx
	cmpl	%edx, 32(%rsp)
	jg	.L22481
	subl	32(%rsp), %ebp
	js	.L22488
	leaq	16(%r14), %rax
	leal	1(%rbp), %ecx
	cmpq	%rax, %r13
	leaq	16(%r13), %rax
	setae	%dl
	cmpq	%rax, %r14
	setae	%al
	orb	%al, %dl
	je	.L22483
	cmpl	$15, %ecx
	jbe	.L22483
	movl	%ecx, %edi
	movdqa	.LC9(%rip), %xmm3
	xorl	%eax, %eax
	shrl	$4, %edi
	movdqa	.LC8(%rip), %xmm2
	xorl	%esi, %esi
	movl	%edi, %edx
	sall	$4, %edx
.L22489:
	movdqu	0(%r13,%rax), %xmm0
	addl	$1, %esi
	movdqu	(%r14,%rax), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, 0(%r13,%rax)
	addq	$16, %rax
	cmpl	%esi, %edi
	ja	.L22489
	movl	%edx, %eax
	addq	%rax, %r13
	addq	%rax, %r14
	cmpl	%ecx, %edx
	je	.L22488
.L22487:
	movzbl	0(%r13), %eax
	addl	$1, %edx
	addq	$1, %r13
	movzbl	(%r14), %ecx
	addq	$1, %r14
	andl	$15, %eax
	andl	$-16, %ecx
	orl	%ecx, %eax
	movb	%al, -1(%r13)
	cmpl	%ebp, %edx
	jle	.L22487
.L22488:
	orb	$6, (%r11)
	movq	8(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L22435
.L22448:
	movl	$2048, %r13d
	subl	%eax, %r13d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L22458
	leal	0(%r13,%r15), %edi
	andl	120(%rbx), %edi
	leal	1(%rax), %ecx
	movslq	%ecx, %rcx
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L22691
.L22459:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L22692
.L22461:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L22460
	testb	$4, 46264(%rbx,%rax)
	je	.L22460
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L22462:
	movq	%r12, %rdx
.L22464:
	movzbl	(%rdx), %esi
	addq	$1, %rdx
	addq	$1, %r14
	movzbl	-1(%r14), %ecx
	andl	$15, %esi
	andl	$-16, %ecx
	orl	%esi, %ecx
	movb	%cl, -1(%rdx)
	movl	%edx, %ecx
	subl	%r12d, %ecx
	cmpl	%ecx, %r13d
	jg	.L22464
	subl	%r13d, %ebp
	js	.L22465
	leaq	16(%rdx), %rcx
	leal	1(%rbp), %edi
	cmpq	%rcx, %rax
	leaq	16(%rax), %rcx
	setae	%sil
	cmpq	%rcx, %rdx
	setae	%cl
	orb	%cl, %sil
	je	.L22466
	cmpl	$15, %edi
	jbe	.L22466
	movl	%edi, %r9d
	movdqa	.LC9(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r9d
	movdqa	.LC8(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %esi
	sall	$4, %esi
.L22471:
	movdqu	(%rdx,%rcx), %xmm0
	addl	$1, %r8d
	movdqu	(%rax,%rcx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%rdx,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %r9d
	ja	.L22471
	movl	%esi, %ecx
	addq	%rcx, %rdx
	addq	%rcx, %rax
	cmpl	%edi, %esi
	je	.L22465
.L22470:
	movzbl	(%rdx), %ecx
	addl	$1, %esi
	addq	$1, %rdx
	movzbl	(%rax), %edi
	addq	$1, %rax
	andl	$15, %ecx
	andl	$-16, %edi
	orl	%edi, %ecx
	movb	%cl, -1(%rdx)
	cmpl	%esi, %ebp
	jge	.L22470
	jmp	.L22465
.L22479:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L22492
	leal	(%r10,%r15), %edi
	andl	120(%rbx), %edi
	leal	1(%rax), %ecx
	movslq	%ecx, %rcx
	movl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movl	2232(%rdx), %esi
	cmpl	%esi, 320(%rbx,%rcx,8)
	jne	.L22693
.L22493:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L22694
.L22495:
	movl	%edi, %ecx
	andl	$2143289344, %ecx
	orl	2224(%rbx), %ecx
	cmpl	10424(%rdx), %ecx
	jne	.L22494
	testb	$4, 46264(%rbx,%rax)
	je	.L22494
	movl	%edi, %eax
	xorq	26808(%rdx), %rax
.L22496:
	cmpl	%r10d, 32(%rsp)
	je	.L22695
	jge	.L22514
	movq	%r14, %rdx
.L22516:
	movzbl	(%rdx), %ecx
	addq	$1, %rdx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	andl	$-16, %ecx
	andl	$15, %esi
	orl	%esi, %ecx
	movb	%cl, -1(%r12)
	movl	%edx, %ecx
	subl	%r14d, %ecx
	cmpl	%ecx, 32(%rsp)
	jg	.L22516
	movl	%r10d, %ecx
	subl	32(%rsp), %ecx
	testl	%ecx, %ecx
	jle	.L22517
	leaq	16(%rdx), %rsi
	cmpq	%rsi, %r13
	leaq	16(%r13), %rsi
	setae	%dil
	cmpq	%rsi, %rdx
	setae	%sil
	orb	%sil, %dil
	je	.L22518
	cmpl	$15, %ecx
	jbe	.L22518
	movl	%ecx, %r9d
	movdqa	.LC9(%rip), %xmm3
	xorl	%esi, %esi
	shrl	$4, %r9d
	movdqa	.LC8(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %edi
	sall	$4, %edi
.L22523:
	movdqu	(%rdx,%rsi), %xmm0
	addl	$1, %r8d
	movdqu	0(%r13,%rsi), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, 0(%r13,%rsi)
	addq	$16, %rsi
	cmpl	%r9d, %r8d
	jb	.L22523
	movl	%edi, %esi
	leaq	0(%r13,%rsi), %r8
	addq	%rsi, %rdx
	cmpl	%edi, %ecx
	je	.L22524
.L22522:
	movzbl	(%rdx), %esi
	addl	$1, %edi
	addq	$1, %r8
	movzbl	-1(%r8), %r9d
	addq	$1, %rdx
	andl	$-16, %esi
	andl	$15, %r9d
	orl	%r9d, %esi
	movb	%sil, -1(%r8)
	cmpl	%edi, %ecx
	jg	.L22522
.L22524:
	subl	$1, %ecx
	leaq	1(%r13,%rcx), %r13
.L22517:
	subl	%r10d, %ebp
	js	.L22488
	leaq	16(%r13), %rdx
	leal	1(%rbp), %esi
	cmpq	%rdx, %rax
	leaq	16(%rax), %rdx
	setae	%cl
	cmpq	%rdx, %r13
	setae	%dl
	orb	%dl, %cl
	je	.L22526
	cmpl	$15, %esi
	jbe	.L22526
	movl	%esi, %r8d
	movdqa	.LC9(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r8d
	movdqa	.LC8(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %ecx
	sall	$4, %ecx
.L22531:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %edi
	movdqu	0(%r13,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, 0(%r13,%rdx)
	addq	$16, %rdx
	cmpl	%r8d, %edi
	jb	.L22531
	movl	%ecx, %edx
	addq	%rdx, %r13
	addq	%rdx, %rax
	cmpl	%ecx, %esi
	je	.L22488
.L22530:
	movzbl	(%rax), %edx
	addl	$1, %ecx
	addq	$1, %r13
	movzbl	-1(%r13), %esi
	addq	$1, %rax
	andl	$-16, %edx
	andl	$15, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r13)
	cmpl	%ecx, %ebp
	jge	.L22530
	jmp	.L22488
.L22483:
	xorl	%eax, %eax
.L22491:
	movzbl	0(%r13,%rax), %edx
	movzbl	(%r14,%rax), %ecx
	andl	$15, %edx
	andl	$-16, %ecx
	orl	%ecx, %edx
	movb	%dl, 0(%r13,%rax)
	addq	$1, %rax
	cmpl	%eax, %ebp
	jge	.L22491
	jmp	.L22488
.L22466:
	xorl	%ecx, %ecx
.L22473:
	movzbl	(%rdx,%rcx), %esi
	movzbl	(%rax,%rcx), %edi
	andl	$15, %esi
	andl	$-16, %edi
	orl	%edi, %esi
	movb	%sil, (%rdx,%rcx)
	addq	$1, %rcx
	cmpl	%ecx, %ebp
	jge	.L22473
	jmp	.L22465
.L22691:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L22459
.L22683:
	movzbl	97(%rbx), %r8d
.L22460:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r11, 8(%rsp)
	call	s390_logical_to_main_l
	movq	8(%rsp), %r11
	jmp	.L22462
.L22692:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L22461
	jmp	.L22460
.L22458:
	leal	0(%r13,%r15), %edi
	andl	120(%rbx), %edi
	jmp	.L22683
.L22689:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L22475
	movzbl	97(%rbx), %r8d
.L22476:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 44(%rsp)
	movq	%r11, 24(%rsp)
	call	s390_logical_to_main_l
	movl	44(%rsp), %r10d
	movq	%rax, %r13
	movq	984(%rbx), %rax
	movq	24(%rsp), %r11
	movq	%rax, 8(%rsp)
	jmp	.L22478
.L22690:
	cmpb	43192(%rbx,%rdx), %r8b
	je	.L22477
	jmp	.L22476
.L22474:
	movl	32(%rsp), %eax
	movzbl	97(%rbx), %r8d
	leal	(%rax,%r13), %edi
	andl	120(%rbx), %edi
	jmp	.L22476
.L22686:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L22440
.L22555:
	movzbl	%cl, %r8d
	jmp	.L22441
.L22514:
	movq	%r14, %rcx
.L22535:
	movzbl	(%rcx), %edx
	addq	$1, %rcx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	andl	$-16, %edx
	andl	$15, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r12)
	movl	%ecx, %edx
	subl	%r14d, %edx
	cmpl	%edx, %r10d
	jg	.L22535
	movl	32(%rsp), %edx
	subl	%r10d, %edx
	testl	%edx, %edx
	jle	.L22536
	leaq	16(%r12), %rcx
	cmpq	%rcx, %rax
	leaq	16(%rax), %rcx
	setae	%sil
	cmpq	%rcx, %r12
	setae	%cl
	orb	%cl, %sil
	je	.L22537
	cmpl	$15, %edx
	jbe	.L22537
	movl	%edx, %r8d
	movdqa	.LC9(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r8d
	movdqa	.LC8(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %esi
	sall	$4, %esi
.L22542:
	movdqu	(%rax,%rcx), %xmm0
	addl	$1, %edi
	movdqu	(%r12,%rcx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %edi
	jb	.L22542
	movl	%esi, %edi
	addq	%rdi, %r12
	addq	%rax, %rdi
	cmpl	%esi, %edx
	je	.L22543
.L22541:
	movzbl	(%rdi), %ecx
	addl	$1, %esi
	addq	$1, %r12
	movzbl	-1(%r12), %r8d
	addq	$1, %rdi
	andl	$-16, %ecx
	andl	$15, %r8d
	orl	%r8d, %ecx
	movb	%cl, -1(%r12)
	cmpl	%esi, %edx
	jg	.L22541
.L22543:
	subl	$1, %edx
	leaq	1(%rax,%rdx), %rax
.L22536:
	subl	32(%rsp), %ebp
	js	.L22488
	leaq	16(%rax), %rdx
	leal	1(%rbp), %esi
	cmpq	%rdx, %r13
	leaq	16(%r13), %rdx
	setae	%cl
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L22545
	cmpl	$15, %esi
	jbe	.L22545
	movl	%esi, %r8d
	movdqa	.LC9(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r8d
	movdqa	.LC8(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %ecx
	sall	$4, %ecx
.L22550:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %edi
	movdqu	0(%r13,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, 0(%r13,%rdx)
	addq	$16, %rdx
	cmpl	%r8d, %edi
	jb	.L22550
	movl	%ecx, %edx
	addq	%rdx, %r13
	addq	%rdx, %rax
	cmpl	%ecx, %esi
	je	.L22488
.L22549:
	movzbl	(%rax), %edx
	addl	$1, %ecx
	addq	$1, %r13
	movzbl	-1(%r13), %esi
	addq	$1, %rax
	andl	$-16, %edx
	andl	$15, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r13)
	cmpl	%ecx, %ebp
	jge	.L22549
	jmp	.L22488
.L22695:
	movl	32(%rsp), %edi
	leaq	16(%r14), %rcx
	movl	$1, %edx
	testl	%edi, %edi
	cmovg	%edi, %edx
	cmpq	%rcx, %r12
	setae	%sil
	leaq	16(%r12), %rcx
	cmpq	%rcx, %r14
	setae	%cl
	orb	%cl, %sil
	je	.L22498
	cmpl	$15, %edx
	jbe	.L22498
	movl	%edx, %r8d
	movdqa	.LC9(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r8d
	movdqa	.LC8(%rip), %xmm2
	xorl	%esi, %esi
	movl	%r8d, %edi
	sall	$4, %edi
.L22503:
	movdqu	(%r14,%rcx), %xmm0
	addl	$1, %esi
	movdqu	(%r12,%rcx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %esi
	jb	.L22503
	movl	%edi, %ecx
	addq	%rcx, %r12
	addq	%rcx, %r14
	cmpl	%edi, %edx
	movl	%edi, %ecx
	je	.L22504
.L22502:
	movzbl	(%r14), %edx
	addl	$1, %ecx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	addq	$1, %r14
	andl	$-16, %edx
	andl	$15, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r12)
	cmpl	%ecx, 32(%rsp)
	jg	.L22502
.L22504:
	subl	32(%rsp), %ebp
	js	.L22488
	leaq	16(%rax), %rdx
	leal	1(%rbp), %esi
	cmpq	%rdx, %r13
	leaq	16(%r13), %rdx
	setae	%cl
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L22506
	cmpl	$15, %esi
	jbe	.L22506
	movl	%esi, %r8d
	movdqa	.LC9(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r8d
	movdqa	.LC8(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %ecx
	sall	$4, %ecx
.L22511:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %edi
	movdqu	0(%r13,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, 0(%r13,%rdx)
	addq	$16, %rdx
	cmpl	%edi, %r8d
	ja	.L22511
	movl	%ecx, %edx
	addq	%rdx, %r13
	addq	%rdx, %rax
	cmpl	%esi, %ecx
	je	.L22488
.L22510:
	movzbl	0(%r13), %edx
	addl	$1, %ecx
	addq	$1, %r13
	movzbl	(%rax), %esi
	addq	$1, %rax
	andl	$15, %edx
	andl	$-16, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r13)
	cmpl	%ecx, %ebp
	jge	.L22510
	jmp	.L22488
.L22693:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L22493
.L22684:
	movzbl	97(%rbx), %r8d
.L22494:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	s390_logical_to_main_l
	movl	24(%rsp), %r10d
	movq	16(%rsp), %r11
	jmp	.L22496
.L22694:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L22495
	jmp	.L22494
.L22518:
	xorl	%esi, %esi
.L22525:
	movzbl	(%rdx,%rsi), %edi
	movzbl	0(%r13,%rsi), %r8d
	andl	$-16, %edi
	andl	$15, %r8d
	orl	%r8d, %edi
	movb	%dil, 0(%r13,%rsi)
	addq	$1, %rsi
	cmpl	%esi, %ecx
	jg	.L22525
	jmp	.L22524
.L22526:
	xorl	%edx, %edx
.L22533:
	movzbl	(%rax,%rdx), %ecx
	movzbl	0(%r13,%rdx), %esi
	andl	$-16, %ecx
	andl	$15, %esi
	orl	%esi, %ecx
	movb	%cl, 0(%r13,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %ebp
	jge	.L22533
	jmp	.L22488
.L22498:
	xorl	%edx, %edx
.L22505:
	movzbl	(%r14,%rdx), %ecx
	movzbl	(%r12,%rdx), %esi
	andl	$-16, %ecx
	andl	$15, %esi
	orl	%esi, %ecx
	movb	%cl, (%r12,%rdx)
	addq	$1, %rdx
	cmpl	%edx, 32(%rsp)
	jg	.L22505
	jmp	.L22504
.L22492:
	leal	(%r10,%r15), %edi
	andl	120(%rbx), %edi
	jmp	.L22684
.L22537:
	xorl	%ecx, %ecx
.L22544:
	movzbl	(%rax,%rcx), %esi
	movzbl	(%r12,%rcx), %edi
	andl	$-16, %esi
	andl	$15, %edi
	orl	%edi, %esi
	movb	%sil, (%r12,%rcx)
	addq	$1, %rcx
	cmpl	%ecx, %edx
	jg	.L22544
	jmp	.L22543
.L22506:
	xorl	%edx, %edx
.L22513:
	movzbl	0(%r13,%rdx), %ecx
	movzbl	(%rax,%rdx), %esi
	andl	$15, %ecx
	andl	$-16, %esi
	orl	%esi, %ecx
	movb	%cl, 0(%r13,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %ebp
	jge	.L22513
	jmp	.L22488
.L22545:
	xorl	%edx, %edx
.L22552:
	movzbl	(%rax,%rdx), %ecx
	movzbl	0(%r13,%rdx), %esi
	andl	$-16, %ecx
	andl	$15, %esi
	orl	%esi, %ecx
	movb	%cl, 0(%r13,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %ebp
	jge	.L22552
	jmp	.L22488
	.cfi_endproc
.LFE2120:
	.size	s390_move_zones, .-s390_move_zones
	.p2align 4,,15
	.globl	s390_multiply_register
	.type	s390_multiply_register, @function
s390_multiply_register:
.LFB2121:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movzbl	1(%rdi), %eax
	movb	$2, 130(%rsi)
	addq	$2, 136(%rsi)
	movzbl	%al, %ebp
	movl	%eax, %r12d
	sarl	$4, %ebp
	andl	$15, %r12d
	testb	$1, %bpl
	je	.L22697
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L22697:
	leal	1(%rbp), %eax
	movslq	%r12d, %r12
	movslq	%ebp, %rbp
	cltq
	movslq	192(%rbx,%r12,8), %rcx
	leaq	(%rbx,%rax,8), %rdx
	movslq	192(%rdx), %rax
	imulq	%rcx, %rax
	movq	%rax, %rcx
	shrq	$32, %rcx
	movl	%ecx, 192(%rbx,%rbp,8)
	movl	%eax, 192(%rdx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE2121:
	.size	s390_multiply_register, .-s390_multiply_register
	.p2align 4,,15
	.globl	s390_multiply
	.type	s390_multiply, @function
s390_multiply:
.LFB2122:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %esi
	bswap	%esi
	movl	%esi, %eax
	movl	%esi, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%esi, %ebp
	movl	%eax, %r12d
	andl	$4095, %ebp
	andl	$15, %r12d
	andl	$15, %edx
	jne	.L22738
.L22703:
	shrl	$12, %esi
	andl	$15, %esi
	movl	%esi, %r13d
	je	.L22704
	movslq	%esi, %rdx
	addl	192(%rbx,%rdx,8), %ebp
.L22704:
	andl	120(%rbx), %ebp
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %al
	je	.L22705
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L22705:
	testb	$3, %bpl
	jne	.L22739
.L22706:
	leal	5(%r13), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L22708
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movl	2232(%rdx), %edi
	cmpl	%edi, 320(%rbx,%rax,8)
	jne	.L22740
.L22709:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L22741
.L22710:
	movl	%ebp, %eax
	andl	$2143289344, %eax
	orl	2224(%rbx), %eax
	cmpl	10424(%rdx), %eax
	jne	.L22708
	testb	$4, 46264(%rbx,%rcx)
	je	.L22708
	movl	%ebp, %eax
	xorq	26808(%rdx), %rax
.L22711:
	movl	(%rax), %eax
	bswap	%eax
.L22712:
	leal	1(%r12), %edx
	cltq
	movslq	%r12d, %r12
	movslq	%edx, %rdx
	leaq	(%rbx,%rdx,8), %rcx
	movslq	192(%rcx), %rdx
	imulq	%rax, %rdx
	movq	%rdx, %rax
	shrq	$32, %rax
	movl	%eax, 192(%rbx,%r12,8)
	movl	%edx, 192(%rcx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L22740:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L22709
.L22708:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%ebp, %edi
	call	s390_logical_to_main_l
	jmp	.L22711
.L22739:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L22706
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movl	%ebp, %edi
	call	s390_vfetch4_full
	jmp	.L22712
.L22738:
	movslq	%edx, %rdx
	addl	192(%rbx,%rdx,8), %ebp
	jmp	.L22703
.L22741:
	cmpb	43192(%rbx,%rcx), %al
	je	.L22710
	jmp	.L22708
	.cfi_endproc
.LFE2122:
	.size	s390_multiply, .-s390_multiply
	.p2align 4,,15
	.globl	s390_multiply_halfword
	.type	s390_multiply_halfword, @function
s390_multiply_halfword:
.LFB2123:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L22774
.L22743:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L22744
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %edi
.L22744:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %dil
	jne	.L22775
.L22745:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L22747
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L22776
.L22748:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L22777
.L22749:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L22747
	testb	$4, 46264(%rbx,%rsi)
	je	.L22747
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L22750:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L22751:
	movslq	%ebp, %rbp
	movswq	%ax, %rax
	leaq	(%rbx,%rbp,8), %rcx
	movslq	192(%rcx), %rdx
	imulq	%rax, %rdx
	movl	%edx, 192(%rcx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L22776:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L22748
.L22747:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L22750
.L22775:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2047, %edx
	jne	.L22745
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch2_full
	jmp	.L22751
.L22774:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %edi
	jmp	.L22743
.L22777:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L22749
	jmp	.L22747
	.cfi_endproc
.LFE2123:
	.size	s390_multiply_halfword, .-s390_multiply_halfword
	.p2align 4,,15
	.globl	s390_multiply_halfword_immediate
	.type	s390_multiply_halfword_immediate, @function
s390_multiply_halfword_immediate:
.LFB2124:
	.cfi_startproc
	movl	(%rdi), %eax
	addq	$4, 136(%rsi)
	bswap	%eax
	movl	%eax, %edx
	cwtl
	shrl	$20, %edx
	andl	$15, %edx
	leaq	(%rsi,%rdx,8), %rdx
	imull	192(%rdx), %eax
	movl	%eax, 192(%rdx)
	ret
	.cfi_endproc
.LFE2124:
	.size	s390_multiply_halfword_immediate, .-s390_multiply_halfword_immediate
	.p2align 4,,15
	.globl	s390_multiply_single_register
	.type	s390_multiply_single_register, @function
s390_multiply_single_register:
.LFB2125:
	.cfi_startproc
	movzbl	3(%rdi), %ecx
	addq	$4, 136(%rsi)
	movq	%rcx, %rax
	andl	$15, %ecx
	shrq	%rax
	andl	$120, %eax
	leaq	(%rsi,%rax), %rdx
	movl	192(%rdx), %eax
	imull	192(%rsi,%rcx,8), %eax
	movl	%eax, 192(%rdx)
	ret
	.cfi_endproc
.LFE2125:
	.size	s390_multiply_single_register, .-s390_multiply_single_register
	.p2align 4,,15
	.globl	s390_multiply_single
	.type	s390_multiply_single, @function
s390_multiply_single:
.LFB2126:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L22812
.L22781:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L22782
	movslq	%eax, %rdx
	addl	192(%rbx,%rdx,8), %edi
.L22782:
	andl	120(%rbx), %edi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L22813
.L22783:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L22785
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movl	2232(%rcx), %r10d
	cmpl	%r10d, 320(%rbx,%rdx,8)
	jne	.L22814
.L22786:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L22815
.L22787:
	movl	%edi, %edx
	andl	$2143289344, %edx
	orl	2224(%rbx), %edx
	cmpl	10424(%rcx), %edx
	jne	.L22785
	testb	$4, 46264(%rbx,%rsi)
	je	.L22785
	movl	%edi, %eax
	xorq	26808(%rcx), %rax
.L22788:
	movl	(%rax), %eax
	bswap	%eax
.L22789:
	movslq	%ebp, %rbp
	leaq	(%rbx,%rbp,8), %rdx
	imull	192(%rdx), %eax
	movl	%eax, 192(%rdx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L22814:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L22786
.L22785:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_logical_to_main_l
	jmp	.L22788
.L22813:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L22783
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	s390_vfetch4_full
	jmp	.L22789
.L22812:
	movslq	%edx, %rdx
	addl	192(%rsi,%rdx,8), %edi
	jmp	.L22781
.L22815:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L22787
	jmp	.L22785
	.cfi_endproc
.LFE2126:
	.size	s390_multiply_single, .-s390_multiply_single
	.p2align 4,,15
	.globl	z900_add_register
	.type	z900_add_register, @function
z900_add_register:
.LFB2174:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	movb	$2, 130(%rsi)
	movq	%rsi, %rax
	addq	$2, 136(%rsi)
	movq	%rcx, %rdx
	andl	$15, %ecx
	shrq	%rdx
	andl	$120, %edx
	addq	%rsi, %rdx
	movl	192(%rsi,%rcx,8), %esi
	movl	192(%rdx), %edi
	leal	(%rdi,%rsi), %ecx
	cmpl	$0, %ecx
	movl	%ecx, 192(%rdx)
	jle	.L22817
	shrl	$31, %esi
	testb	%sil, %sil
	jne	.L22829
.L22826:
	movl	$2, %edx
.L22820:
	movb	%dl, 100(%rax)
.L22816:
	rep ret
	.p2align 4,,10
	.p2align 3
.L22829:
	shrl	$31, %edi
	testb	%dil, %dil
	je	.L22826
.L22818:
	testb	$8, 101(%rax)
	movb	$3, 100(%rax)
	je	.L22816
	movq	2032(%rax), %rdx
	movl	$8, %esi
	movq	%rax, %rdi
	jmp	*%rdx
	.p2align 4,,10
	.p2align 3
.L22817:
	jne	.L22830
	shrl	$31, %esi
	testb	%sil, %sil
	je	.L22828
	shrl	$31, %edi
	testb	%dil, %dil
	jne	.L22818
.L22828:
	xorl	%edx, %edx
	jmp	.L22820
	.p2align 4,,10
	.p2align 3
.L22830:
	testl	%esi, %esi
	js	.L22827
	testl	%edi, %edi
	.p2align 4,,5
	jns	.L22818
.L22827:
	movl	$1, %edx
	.p2align 4,,2
	jmp	.L22820
	.cfi_endproc
.LFE2174:
	.size	z900_add_register, .-z900_add_register
	.p2align 4,,15
	.globl	z900_add
	.type	z900_add, @function
z900_add:
.LFB2175:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L22875
.L22832:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L22833
	movslq	%eax, %rdx
	addq	192(%rbx,%rdx,8), %rdi
.L22833:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L22876
.L22834:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L22836
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L22877
.L22837:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L22878
.L22838:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L22836
	testb	$4, 46264(%rbx,%rsi)
	je	.L22836
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L22839:
	movl	(%rax), %eax
	bswap	%eax
.L22840:
	movslq	%ebp, %rbp
	leaq	(%rbx,%rbp,8), %rcx
	movl	192(%rcx), %esi
	leal	(%rsi,%rax), %edx
	cmpl	$0, %edx
	movl	%edx, 192(%rcx)
	jle	.L22841
	shrl	$31, %eax
	testb	%al, %al
	jne	.L22879
.L22850:
	movl	$2, %eax
.L22844:
	movb	%al, 100(%rbx)
.L22831:
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L22879:
	.cfi_restore_state
	shrl	$31, %esi
	testb	%sil, %sil
	je	.L22850
.L22842:
	testb	$8, 101(%rbx)
	movb	$3, 100(%rbx)
	je	.L22831
	movq	2032(%rbx), %rax
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 16
	movl	$8, %esi
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L22841:
	.cfi_restore_state
	jne	.L22880
	shrl	$31, %eax
	testb	%al, %al
	je	.L22852
	shrl	$31, %esi
	testb	%sil, %sil
	jne	.L22842
.L22852:
	xorl	%eax, %eax
	jmp	.L22844
	.p2align 4,,10
	.p2align 3
.L22880:
	testl	%eax, %eax
	js	.L22851
	testl	%esi, %esi
	.p2align 4,,5
	jns	.L22842
.L22851:
	movl	$1, %eax
	.p2align 4,,2
	jmp	.L22844
.L22877:
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L22837
.L22836:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L22839
.L22876:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L22834
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L22840
.L22878:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L22838
	.p2align 4,,4
	jmp	.L22836
.L22875:
	movslq	%edx, %rdx
	addq	192(%rsi,%rdx,8), %rdi
	jmp	.L22832
	.cfi_endproc
.LFE2175:
	.size	z900_add, .-z900_add
	.p2align 4,,15
	.globl	z900_add_halfword
	.type	z900_add_halfword, @function
z900_add_halfword:
.LFB2176:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L22925
.L22882:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L22883
	movslq	%eax, %rdx
	addq	192(%rbx,%rdx,8), %rdi
.L22883:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %dil
	jne	.L22926
.L22884:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L22886
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L22927
.L22887:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L22928
.L22888:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L22886
	testb	$4, 46264(%rbx,%rsi)
	je	.L22886
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L22889:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L22890:
	movslq	%ebp, %rbp
	cwtl
	leaq	(%rbx,%rbp,8), %rcx
	movl	192(%rcx), %esi
	leal	(%rsi,%rax), %edx
	cmpl	$0, %edx
	movl	%edx, 192(%rcx)
	jle	.L22891
	shrl	$31, %eax
	testb	%al, %al
	jne	.L22929
.L22900:
	movl	$2, %eax
.L22894:
	movb	%al, 100(%rbx)
.L22881:
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L22929:
	.cfi_restore_state
	shrl	$31, %esi
	testb	%sil, %sil
	je	.L22900
.L22892:
	testb	$8, 101(%rbx)
	movb	$3, 100(%rbx)
	je	.L22881
	movq	2032(%rbx), %rax
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 16
	movl	$8, %esi
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L22891:
	.cfi_restore_state
	jne	.L22930
	shrl	$31, %eax
	testb	%al, %al
	je	.L22902
	shrl	$31, %esi
	testb	%sil, %sil
	jne	.L22892
.L22902:
	xorl	%eax, %eax
	jmp	.L22894
	.p2align 4,,10
	.p2align 3
.L22930:
	testl	%eax, %eax
	js	.L22901
	testl	%esi, %esi
	.p2align 4,,5
	jns	.L22892
.L22901:
	movl	$1, %eax
	.p2align 4,,2
	jmp	.L22894
.L22927:
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L22887
.L22886:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L22889
.L22926:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2047, %edx
	jne	.L22884
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch2_full
	jmp	.L22890
.L22928:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L22888
	.p2align 4,,4
	jmp	.L22886
.L22925:
	movslq	%edx, %rdx
	addq	192(%rsi,%rdx,8), %rdi
	jmp	.L22882
	.cfi_endproc
.LFE2176:
	.size	z900_add_halfword, .-z900_add_halfword
	.p2align 4,,15
	.globl	z900_add_halfword_immediate
	.type	z900_add_halfword_immediate, @function
z900_add_halfword_immediate:
.LFB2177:
	.cfi_startproc
	movl	(%rdi), %edx
	movq	%rsi, %rax
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	bswap	%edx
	movl	%edx, %ecx
	movswl	%dx, %edx
	shrl	$20, %ecx
	andl	$15, %ecx
	leaq	(%rsi,%rcx,8), %rsi
	movl	192(%rsi), %edi
	leal	(%rdi,%rdx), %ecx
	cmpl	$0, %ecx
	movl	%ecx, 192(%rsi)
	jle	.L22932
	shrl	$31, %edx
	testb	%dl, %dl
	jne	.L22944
.L22941:
	movl	$2, %edx
.L22935:
	movb	%dl, 100(%rax)
.L22931:
	rep ret
	.p2align 4,,10
	.p2align 3
.L22944:
	shrl	$31, %edi
	testb	%dil, %dil
	je	.L22941
.L22933:
	testb	$8, 101(%rax)
	movb	$3, 100(%rax)
	je	.L22931
	movq	2032(%rax), %rdx
	movl	$8, %esi
	movq	%rax, %rdi
	jmp	*%rdx
	.p2align 4,,10
	.p2align 3
.L22932:
	jne	.L22945
	shrl	$31, %edx
	testb	%dl, %dl
	je	.L22943
	shrl	$31, %edi
	testb	%dil, %dil
	jne	.L22933
.L22943:
	xorl	%edx, %edx
	jmp	.L22935
	.p2align 4,,10
	.p2align 3
.L22945:
	testl	%edx, %edx
	js	.L22942
	testl	%edi, %edi
	.p2align 4,,5
	jns	.L22933
.L22942:
	movl	$1, %edx
	.p2align 4,,2
	jmp	.L22935
	.cfi_endproc
.LFE2177:
	.size	z900_add_halfword_immediate, .-z900_add_halfword_immediate
	.p2align 4,,15
	.globl	z900_add_logical_register
	.type	z900_add_logical_register, @function
z900_add_logical_register:
.LFB2178:
	.cfi_startproc
	movzbl	1(%rdi), %edi
	addq	$2, 136(%rsi)
	movq	%rdi, %rax
	andl	$15, %edi
	shrq	%rax
	andl	$120, %eax
	leaq	(%rsi,%rax), %rcx
	movl	192(%rsi,%rdi,8), %eax
	movl	192(%rcx), %edx
	addl	%edx, %eax
	movl	%eax, 192(%rcx)
	xorl	%ecx, %ecx
	testl	%eax, %eax
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2178:
	.size	z900_add_logical_register, .-z900_add_logical_register
	.p2align 4,,15
	.globl	z900_1E00
	.type	z900_1E00, @function
z900_1E00:
.LFB2179:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2179:
	.size	z900_1E00, .-z900_1E00
	.p2align 4,,15
	.globl	z900_1E01
	.type	z900_1E01, @function
z900_1E01:
.LFB2180:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2180:
	.size	z900_1E01, .-z900_1E01
	.p2align 4,,15
	.globl	z900_1E02
	.type	z900_1E02, @function
z900_1E02:
.LFB2181:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2181:
	.size	z900_1E02, .-z900_1E02
	.p2align 4,,15
	.globl	z900_1E03
	.type	z900_1E03, @function
z900_1E03:
.LFB2182:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2182:
	.size	z900_1E03, .-z900_1E03
	.p2align 4,,15
	.globl	z900_1E04
	.type	z900_1E04, @function
z900_1E04:
.LFB2183:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2183:
	.size	z900_1E04, .-z900_1E04
	.p2align 4,,15
	.globl	z900_1E05
	.type	z900_1E05, @function
z900_1E05:
.LFB2184:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2184:
	.size	z900_1E05, .-z900_1E05
	.p2align 4,,15
	.globl	z900_1E06
	.type	z900_1E06, @function
z900_1E06:
.LFB2185:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2185:
	.size	z900_1E06, .-z900_1E06
	.p2align 4,,15
	.globl	z900_1E07
	.type	z900_1E07, @function
z900_1E07:
.LFB2186:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2186:
	.size	z900_1E07, .-z900_1E07
	.p2align 4,,15
	.globl	z900_1E08
	.type	z900_1E08, @function
z900_1E08:
.LFB2187:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2187:
	.size	z900_1E08, .-z900_1E08
	.p2align 4,,15
	.globl	z900_1E09
	.type	z900_1E09, @function
z900_1E09:
.LFB2188:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2188:
	.size	z900_1E09, .-z900_1E09
	.p2align 4,,15
	.globl	z900_1E0A
	.type	z900_1E0A, @function
z900_1E0A:
.LFB2189:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2189:
	.size	z900_1E0A, .-z900_1E0A
	.p2align 4,,15
	.globl	z900_1E0B
	.type	z900_1E0B, @function
z900_1E0B:
.LFB2190:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2190:
	.size	z900_1E0B, .-z900_1E0B
	.p2align 4,,15
	.globl	z900_1E0C
	.type	z900_1E0C, @function
z900_1E0C:
.LFB2191:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2191:
	.size	z900_1E0C, .-z900_1E0C
	.p2align 4,,15
	.globl	z900_1E0D
	.type	z900_1E0D, @function
z900_1E0D:
.LFB2192:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2192:
	.size	z900_1E0D, .-z900_1E0D
	.p2align 4,,15
	.globl	z900_1E0E
	.type	z900_1E0E, @function
z900_1E0E:
.LFB2193:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2193:
	.size	z900_1E0E, .-z900_1E0E
	.p2align 4,,15
	.globl	z900_1E0F
	.type	z900_1E0F, @function
z900_1E0F:
.LFB2194:
	.cfi_startproc
	movl	192(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 192(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2194:
	.size	z900_1E0F, .-z900_1E0F
	.p2align 4,,15
	.globl	z900_1E10
	.type	z900_1E10, @function
z900_1E10:
.LFB2195:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2195:
	.size	z900_1E10, .-z900_1E10
	.p2align 4,,15
	.globl	z900_1E11
	.type	z900_1E11, @function
z900_1E11:
.LFB2196:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2196:
	.size	z900_1E11, .-z900_1E11
	.p2align 4,,15
	.globl	z900_1E12
	.type	z900_1E12, @function
z900_1E12:
.LFB2197:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2197:
	.size	z900_1E12, .-z900_1E12
	.p2align 4,,15
	.globl	z900_1E13
	.type	z900_1E13, @function
z900_1E13:
.LFB2198:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2198:
	.size	z900_1E13, .-z900_1E13
	.p2align 4,,15
	.globl	z900_1E14
	.type	z900_1E14, @function
z900_1E14:
.LFB2199:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2199:
	.size	z900_1E14, .-z900_1E14
	.p2align 4,,15
	.globl	z900_1E15
	.type	z900_1E15, @function
z900_1E15:
.LFB2200:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2200:
	.size	z900_1E15, .-z900_1E15
	.p2align 4,,15
	.globl	z900_1E16
	.type	z900_1E16, @function
z900_1E16:
.LFB2201:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2201:
	.size	z900_1E16, .-z900_1E16
	.p2align 4,,15
	.globl	z900_1E17
	.type	z900_1E17, @function
z900_1E17:
.LFB2202:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2202:
	.size	z900_1E17, .-z900_1E17
	.p2align 4,,15
	.globl	z900_1E18
	.type	z900_1E18, @function
z900_1E18:
.LFB2203:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2203:
	.size	z900_1E18, .-z900_1E18
	.p2align 4,,15
	.globl	z900_1E19
	.type	z900_1E19, @function
z900_1E19:
.LFB2204:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2204:
	.size	z900_1E19, .-z900_1E19
	.p2align 4,,15
	.globl	z900_1E1A
	.type	z900_1E1A, @function
z900_1E1A:
.LFB2205:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2205:
	.size	z900_1E1A, .-z900_1E1A
	.p2align 4,,15
	.globl	z900_1E1B
	.type	z900_1E1B, @function
z900_1E1B:
.LFB2206:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2206:
	.size	z900_1E1B, .-z900_1E1B
	.p2align 4,,15
	.globl	z900_1E1C
	.type	z900_1E1C, @function
z900_1E1C:
.LFB2207:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2207:
	.size	z900_1E1C, .-z900_1E1C
	.p2align 4,,15
	.globl	z900_1E1D
	.type	z900_1E1D, @function
z900_1E1D:
.LFB2208:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2208:
	.size	z900_1E1D, .-z900_1E1D
	.p2align 4,,15
	.globl	z900_1E1E
	.type	z900_1E1E, @function
z900_1E1E:
.LFB2209:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2209:
	.size	z900_1E1E, .-z900_1E1E
	.p2align 4,,15
	.globl	z900_1E1F
	.type	z900_1E1F, @function
z900_1E1F:
.LFB2210:
	.cfi_startproc
	movl	200(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 200(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2210:
	.size	z900_1E1F, .-z900_1E1F
	.p2align 4,,15
	.globl	z900_1E20
	.type	z900_1E20, @function
z900_1E20:
.LFB2211:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2211:
	.size	z900_1E20, .-z900_1E20
	.p2align 4,,15
	.globl	z900_1E21
	.type	z900_1E21, @function
z900_1E21:
.LFB2212:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2212:
	.size	z900_1E21, .-z900_1E21
	.p2align 4,,15
	.globl	z900_1E22
	.type	z900_1E22, @function
z900_1E22:
.LFB2213:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2213:
	.size	z900_1E22, .-z900_1E22
	.p2align 4,,15
	.globl	z900_1E23
	.type	z900_1E23, @function
z900_1E23:
.LFB2214:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2214:
	.size	z900_1E23, .-z900_1E23
	.p2align 4,,15
	.globl	z900_1E24
	.type	z900_1E24, @function
z900_1E24:
.LFB2215:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2215:
	.size	z900_1E24, .-z900_1E24
	.p2align 4,,15
	.globl	z900_1E25
	.type	z900_1E25, @function
z900_1E25:
.LFB2216:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2216:
	.size	z900_1E25, .-z900_1E25
	.p2align 4,,15
	.globl	z900_1E26
	.type	z900_1E26, @function
z900_1E26:
.LFB2217:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2217:
	.size	z900_1E26, .-z900_1E26
	.p2align 4,,15
	.globl	z900_1E27
	.type	z900_1E27, @function
z900_1E27:
.LFB2218:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2218:
	.size	z900_1E27, .-z900_1E27
	.p2align 4,,15
	.globl	z900_1E28
	.type	z900_1E28, @function
z900_1E28:
.LFB2219:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2219:
	.size	z900_1E28, .-z900_1E28
	.p2align 4,,15
	.globl	z900_1E29
	.type	z900_1E29, @function
z900_1E29:
.LFB2220:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2220:
	.size	z900_1E29, .-z900_1E29
	.p2align 4,,15
	.globl	z900_1E2A
	.type	z900_1E2A, @function
z900_1E2A:
.LFB2221:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2221:
	.size	z900_1E2A, .-z900_1E2A
	.p2align 4,,15
	.globl	z900_1E2B
	.type	z900_1E2B, @function
z900_1E2B:
.LFB2222:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2222:
	.size	z900_1E2B, .-z900_1E2B
	.p2align 4,,15
	.globl	z900_1E2C
	.type	z900_1E2C, @function
z900_1E2C:
.LFB2223:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2223:
	.size	z900_1E2C, .-z900_1E2C
	.p2align 4,,15
	.globl	z900_1E2D
	.type	z900_1E2D, @function
z900_1E2D:
.LFB2224:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2224:
	.size	z900_1E2D, .-z900_1E2D
	.p2align 4,,15
	.globl	z900_1E2E
	.type	z900_1E2E, @function
z900_1E2E:
.LFB2225:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2225:
	.size	z900_1E2E, .-z900_1E2E
	.p2align 4,,15
	.globl	z900_1E2F
	.type	z900_1E2F, @function
z900_1E2F:
.LFB2226:
	.cfi_startproc
	movl	208(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 208(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2226:
	.size	z900_1E2F, .-z900_1E2F
	.p2align 4,,15
	.globl	z900_1E30
	.type	z900_1E30, @function
z900_1E30:
.LFB2227:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2227:
	.size	z900_1E30, .-z900_1E30
	.p2align 4,,15
	.globl	z900_1E31
	.type	z900_1E31, @function
z900_1E31:
.LFB2228:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2228:
	.size	z900_1E31, .-z900_1E31
	.p2align 4,,15
	.globl	z900_1E32
	.type	z900_1E32, @function
z900_1E32:
.LFB2229:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2229:
	.size	z900_1E32, .-z900_1E32
	.p2align 4,,15
	.globl	z900_1E33
	.type	z900_1E33, @function
z900_1E33:
.LFB2230:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2230:
	.size	z900_1E33, .-z900_1E33
	.p2align 4,,15
	.globl	z900_1E34
	.type	z900_1E34, @function
z900_1E34:
.LFB2231:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2231:
	.size	z900_1E34, .-z900_1E34
	.p2align 4,,15
	.globl	z900_1E35
	.type	z900_1E35, @function
z900_1E35:
.LFB2232:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2232:
	.size	z900_1E35, .-z900_1E35
	.p2align 4,,15
	.globl	z900_1E36
	.type	z900_1E36, @function
z900_1E36:
.LFB2233:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2233:
	.size	z900_1E36, .-z900_1E36
	.p2align 4,,15
	.globl	z900_1E37
	.type	z900_1E37, @function
z900_1E37:
.LFB2234:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2234:
	.size	z900_1E37, .-z900_1E37
	.p2align 4,,15
	.globl	z900_1E38
	.type	z900_1E38, @function
z900_1E38:
.LFB2235:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2235:
	.size	z900_1E38, .-z900_1E38
	.p2align 4,,15
	.globl	z900_1E39
	.type	z900_1E39, @function
z900_1E39:
.LFB2236:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2236:
	.size	z900_1E39, .-z900_1E39
	.p2align 4,,15
	.globl	z900_1E3A
	.type	z900_1E3A, @function
z900_1E3A:
.LFB2237:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2237:
	.size	z900_1E3A, .-z900_1E3A
	.p2align 4,,15
	.globl	z900_1E3B
	.type	z900_1E3B, @function
z900_1E3B:
.LFB2238:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2238:
	.size	z900_1E3B, .-z900_1E3B
	.p2align 4,,15
	.globl	z900_1E3C
	.type	z900_1E3C, @function
z900_1E3C:
.LFB2239:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2239:
	.size	z900_1E3C, .-z900_1E3C
	.p2align 4,,15
	.globl	z900_1E3D
	.type	z900_1E3D, @function
z900_1E3D:
.LFB2240:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2240:
	.size	z900_1E3D, .-z900_1E3D
	.p2align 4,,15
	.globl	z900_1E3E
	.type	z900_1E3E, @function
z900_1E3E:
.LFB2241:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2241:
	.size	z900_1E3E, .-z900_1E3E
	.p2align 4,,15
	.globl	z900_1E3F
	.type	z900_1E3F, @function
z900_1E3F:
.LFB2242:
	.cfi_startproc
	movl	216(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 216(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2242:
	.size	z900_1E3F, .-z900_1E3F
	.p2align 4,,15
	.globl	z900_1E40
	.type	z900_1E40, @function
z900_1E40:
.LFB2243:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2243:
	.size	z900_1E40, .-z900_1E40
	.p2align 4,,15
	.globl	z900_1E41
	.type	z900_1E41, @function
z900_1E41:
.LFB2244:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2244:
	.size	z900_1E41, .-z900_1E41
	.p2align 4,,15
	.globl	z900_1E42
	.type	z900_1E42, @function
z900_1E42:
.LFB2245:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2245:
	.size	z900_1E42, .-z900_1E42
	.p2align 4,,15
	.globl	z900_1E43
	.type	z900_1E43, @function
z900_1E43:
.LFB2246:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2246:
	.size	z900_1E43, .-z900_1E43
	.p2align 4,,15
	.globl	z900_1E44
	.type	z900_1E44, @function
z900_1E44:
.LFB2247:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2247:
	.size	z900_1E44, .-z900_1E44
	.p2align 4,,15
	.globl	z900_1E45
	.type	z900_1E45, @function
z900_1E45:
.LFB2248:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2248:
	.size	z900_1E45, .-z900_1E45
	.p2align 4,,15
	.globl	z900_1E46
	.type	z900_1E46, @function
z900_1E46:
.LFB2249:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2249:
	.size	z900_1E46, .-z900_1E46
	.p2align 4,,15
	.globl	z900_1E47
	.type	z900_1E47, @function
z900_1E47:
.LFB2250:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2250:
	.size	z900_1E47, .-z900_1E47
	.p2align 4,,15
	.globl	z900_1E48
	.type	z900_1E48, @function
z900_1E48:
.LFB2251:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2251:
	.size	z900_1E48, .-z900_1E48
	.p2align 4,,15
	.globl	z900_1E49
	.type	z900_1E49, @function
z900_1E49:
.LFB2252:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2252:
	.size	z900_1E49, .-z900_1E49
	.p2align 4,,15
	.globl	z900_1E4A
	.type	z900_1E4A, @function
z900_1E4A:
.LFB2253:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2253:
	.size	z900_1E4A, .-z900_1E4A
	.p2align 4,,15
	.globl	z900_1E4B
	.type	z900_1E4B, @function
z900_1E4B:
.LFB2254:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2254:
	.size	z900_1E4B, .-z900_1E4B
	.p2align 4,,15
	.globl	z900_1E4C
	.type	z900_1E4C, @function
z900_1E4C:
.LFB2255:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2255:
	.size	z900_1E4C, .-z900_1E4C
	.p2align 4,,15
	.globl	z900_1E4D
	.type	z900_1E4D, @function
z900_1E4D:
.LFB2256:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2256:
	.size	z900_1E4D, .-z900_1E4D
	.p2align 4,,15
	.globl	z900_1E4E
	.type	z900_1E4E, @function
z900_1E4E:
.LFB2257:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2257:
	.size	z900_1E4E, .-z900_1E4E
	.p2align 4,,15
	.globl	z900_1E4F
	.type	z900_1E4F, @function
z900_1E4F:
.LFB2258:
	.cfi_startproc
	movl	224(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 224(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2258:
	.size	z900_1E4F, .-z900_1E4F
	.p2align 4,,15
	.globl	z900_1E50
	.type	z900_1E50, @function
z900_1E50:
.LFB2259:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2259:
	.size	z900_1E50, .-z900_1E50
	.p2align 4,,15
	.globl	z900_1E51
	.type	z900_1E51, @function
z900_1E51:
.LFB2260:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2260:
	.size	z900_1E51, .-z900_1E51
	.p2align 4,,15
	.globl	z900_1E52
	.type	z900_1E52, @function
z900_1E52:
.LFB2261:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2261:
	.size	z900_1E52, .-z900_1E52
	.p2align 4,,15
	.globl	z900_1E53
	.type	z900_1E53, @function
z900_1E53:
.LFB2262:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2262:
	.size	z900_1E53, .-z900_1E53
	.p2align 4,,15
	.globl	z900_1E54
	.type	z900_1E54, @function
z900_1E54:
.LFB2263:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2263:
	.size	z900_1E54, .-z900_1E54
	.p2align 4,,15
	.globl	z900_1E55
	.type	z900_1E55, @function
z900_1E55:
.LFB2264:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2264:
	.size	z900_1E55, .-z900_1E55
	.p2align 4,,15
	.globl	z900_1E56
	.type	z900_1E56, @function
z900_1E56:
.LFB2265:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2265:
	.size	z900_1E56, .-z900_1E56
	.p2align 4,,15
	.globl	z900_1E57
	.type	z900_1E57, @function
z900_1E57:
.LFB2266:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2266:
	.size	z900_1E57, .-z900_1E57
	.p2align 4,,15
	.globl	z900_1E58
	.type	z900_1E58, @function
z900_1E58:
.LFB2267:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2267:
	.size	z900_1E58, .-z900_1E58
	.p2align 4,,15
	.globl	z900_1E59
	.type	z900_1E59, @function
z900_1E59:
.LFB2268:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2268:
	.size	z900_1E59, .-z900_1E59
	.p2align 4,,15
	.globl	z900_1E5A
	.type	z900_1E5A, @function
z900_1E5A:
.LFB2269:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2269:
	.size	z900_1E5A, .-z900_1E5A
	.p2align 4,,15
	.globl	z900_1E5B
	.type	z900_1E5B, @function
z900_1E5B:
.LFB2270:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2270:
	.size	z900_1E5B, .-z900_1E5B
	.p2align 4,,15
	.globl	z900_1E5C
	.type	z900_1E5C, @function
z900_1E5C:
.LFB2271:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2271:
	.size	z900_1E5C, .-z900_1E5C
	.p2align 4,,15
	.globl	z900_1E5D
	.type	z900_1E5D, @function
z900_1E5D:
.LFB2272:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2272:
	.size	z900_1E5D, .-z900_1E5D
	.p2align 4,,15
	.globl	z900_1E5E
	.type	z900_1E5E, @function
z900_1E5E:
.LFB2273:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2273:
	.size	z900_1E5E, .-z900_1E5E
	.p2align 4,,15
	.globl	z900_1E5F
	.type	z900_1E5F, @function
z900_1E5F:
.LFB2274:
	.cfi_startproc
	movl	232(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 232(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2274:
	.size	z900_1E5F, .-z900_1E5F
	.p2align 4,,15
	.globl	z900_1E60
	.type	z900_1E60, @function
z900_1E60:
.LFB2275:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2275:
	.size	z900_1E60, .-z900_1E60
	.p2align 4,,15
	.globl	z900_1E61
	.type	z900_1E61, @function
z900_1E61:
.LFB2276:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2276:
	.size	z900_1E61, .-z900_1E61
	.p2align 4,,15
	.globl	z900_1E62
	.type	z900_1E62, @function
z900_1E62:
.LFB2277:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2277:
	.size	z900_1E62, .-z900_1E62
	.p2align 4,,15
	.globl	z900_1E63
	.type	z900_1E63, @function
z900_1E63:
.LFB2278:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2278:
	.size	z900_1E63, .-z900_1E63
	.p2align 4,,15
	.globl	z900_1E64
	.type	z900_1E64, @function
z900_1E64:
.LFB2279:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2279:
	.size	z900_1E64, .-z900_1E64
	.p2align 4,,15
	.globl	z900_1E65
	.type	z900_1E65, @function
z900_1E65:
.LFB2280:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2280:
	.size	z900_1E65, .-z900_1E65
	.p2align 4,,15
	.globl	z900_1E66
	.type	z900_1E66, @function
z900_1E66:
.LFB2281:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2281:
	.size	z900_1E66, .-z900_1E66
	.p2align 4,,15
	.globl	z900_1E67
	.type	z900_1E67, @function
z900_1E67:
.LFB2282:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2282:
	.size	z900_1E67, .-z900_1E67
	.p2align 4,,15
	.globl	z900_1E68
	.type	z900_1E68, @function
z900_1E68:
.LFB2283:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2283:
	.size	z900_1E68, .-z900_1E68
	.p2align 4,,15
	.globl	z900_1E69
	.type	z900_1E69, @function
z900_1E69:
.LFB2284:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2284:
	.size	z900_1E69, .-z900_1E69
	.p2align 4,,15
	.globl	z900_1E6A
	.type	z900_1E6A, @function
z900_1E6A:
.LFB2285:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2285:
	.size	z900_1E6A, .-z900_1E6A
	.p2align 4,,15
	.globl	z900_1E6B
	.type	z900_1E6B, @function
z900_1E6B:
.LFB2286:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2286:
	.size	z900_1E6B, .-z900_1E6B
	.p2align 4,,15
	.globl	z900_1E6C
	.type	z900_1E6C, @function
z900_1E6C:
.LFB2287:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2287:
	.size	z900_1E6C, .-z900_1E6C
	.p2align 4,,15
	.globl	z900_1E6D
	.type	z900_1E6D, @function
z900_1E6D:
.LFB2288:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2288:
	.size	z900_1E6D, .-z900_1E6D
	.p2align 4,,15
	.globl	z900_1E6E
	.type	z900_1E6E, @function
z900_1E6E:
.LFB2289:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2289:
	.size	z900_1E6E, .-z900_1E6E
	.p2align 4,,15
	.globl	z900_1E6F
	.type	z900_1E6F, @function
z900_1E6F:
.LFB2290:
	.cfi_startproc
	movl	240(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 240(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2290:
	.size	z900_1E6F, .-z900_1E6F
	.p2align 4,,15
	.globl	z900_1E70
	.type	z900_1E70, @function
z900_1E70:
.LFB2291:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2291:
	.size	z900_1E70, .-z900_1E70
	.p2align 4,,15
	.globl	z900_1E71
	.type	z900_1E71, @function
z900_1E71:
.LFB2292:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2292:
	.size	z900_1E71, .-z900_1E71
	.p2align 4,,15
	.globl	z900_1E72
	.type	z900_1E72, @function
z900_1E72:
.LFB2293:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2293:
	.size	z900_1E72, .-z900_1E72
	.p2align 4,,15
	.globl	z900_1E73
	.type	z900_1E73, @function
z900_1E73:
.LFB2294:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2294:
	.size	z900_1E73, .-z900_1E73
	.p2align 4,,15
	.globl	z900_1E74
	.type	z900_1E74, @function
z900_1E74:
.LFB2295:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2295:
	.size	z900_1E74, .-z900_1E74
	.p2align 4,,15
	.globl	z900_1E75
	.type	z900_1E75, @function
z900_1E75:
.LFB2296:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2296:
	.size	z900_1E75, .-z900_1E75
	.p2align 4,,15
	.globl	z900_1E76
	.type	z900_1E76, @function
z900_1E76:
.LFB2297:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2297:
	.size	z900_1E76, .-z900_1E76
	.p2align 4,,15
	.globl	z900_1E77
	.type	z900_1E77, @function
z900_1E77:
.LFB2298:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2298:
	.size	z900_1E77, .-z900_1E77
	.p2align 4,,15
	.globl	z900_1E78
	.type	z900_1E78, @function
z900_1E78:
.LFB2299:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2299:
	.size	z900_1E78, .-z900_1E78
	.p2align 4,,15
	.globl	z900_1E79
	.type	z900_1E79, @function
z900_1E79:
.LFB2300:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2300:
	.size	z900_1E79, .-z900_1E79
	.p2align 4,,15
	.globl	z900_1E7A
	.type	z900_1E7A, @function
z900_1E7A:
.LFB2301:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2301:
	.size	z900_1E7A, .-z900_1E7A
	.p2align 4,,15
	.globl	z900_1E7B
	.type	z900_1E7B, @function
z900_1E7B:
.LFB2302:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2302:
	.size	z900_1E7B, .-z900_1E7B
	.p2align 4,,15
	.globl	z900_1E7C
	.type	z900_1E7C, @function
z900_1E7C:
.LFB2303:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2303:
	.size	z900_1E7C, .-z900_1E7C
	.p2align 4,,15
	.globl	z900_1E7D
	.type	z900_1E7D, @function
z900_1E7D:
.LFB2304:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2304:
	.size	z900_1E7D, .-z900_1E7D
	.p2align 4,,15
	.globl	z900_1E7E
	.type	z900_1E7E, @function
z900_1E7E:
.LFB2305:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2305:
	.size	z900_1E7E, .-z900_1E7E
	.p2align 4,,15
	.globl	z900_1E7F
	.type	z900_1E7F, @function
z900_1E7F:
.LFB2306:
	.cfi_startproc
	movl	248(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 248(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2306:
	.size	z900_1E7F, .-z900_1E7F
	.p2align 4,,15
	.globl	z900_1E80
	.type	z900_1E80, @function
z900_1E80:
.LFB2307:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2307:
	.size	z900_1E80, .-z900_1E80
	.p2align 4,,15
	.globl	z900_1E81
	.type	z900_1E81, @function
z900_1E81:
.LFB2308:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2308:
	.size	z900_1E81, .-z900_1E81
	.p2align 4,,15
	.globl	z900_1E82
	.type	z900_1E82, @function
z900_1E82:
.LFB2309:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2309:
	.size	z900_1E82, .-z900_1E82
	.p2align 4,,15
	.globl	z900_1E83
	.type	z900_1E83, @function
z900_1E83:
.LFB2310:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2310:
	.size	z900_1E83, .-z900_1E83
	.p2align 4,,15
	.globl	z900_1E84
	.type	z900_1E84, @function
z900_1E84:
.LFB2311:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2311:
	.size	z900_1E84, .-z900_1E84
	.p2align 4,,15
	.globl	z900_1E85
	.type	z900_1E85, @function
z900_1E85:
.LFB2312:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2312:
	.size	z900_1E85, .-z900_1E85
	.p2align 4,,15
	.globl	z900_1E86
	.type	z900_1E86, @function
z900_1E86:
.LFB2313:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2313:
	.size	z900_1E86, .-z900_1E86
	.p2align 4,,15
	.globl	z900_1E87
	.type	z900_1E87, @function
z900_1E87:
.LFB2314:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2314:
	.size	z900_1E87, .-z900_1E87
	.p2align 4,,15
	.globl	z900_1E88
	.type	z900_1E88, @function
z900_1E88:
.LFB2315:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2315:
	.size	z900_1E88, .-z900_1E88
	.p2align 4,,15
	.globl	z900_1E89
	.type	z900_1E89, @function
z900_1E89:
.LFB2316:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2316:
	.size	z900_1E89, .-z900_1E89
	.p2align 4,,15
	.globl	z900_1E8A
	.type	z900_1E8A, @function
z900_1E8A:
.LFB2317:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2317:
	.size	z900_1E8A, .-z900_1E8A
	.p2align 4,,15
	.globl	z900_1E8B
	.type	z900_1E8B, @function
z900_1E8B:
.LFB2318:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2318:
	.size	z900_1E8B, .-z900_1E8B
	.p2align 4,,15
	.globl	z900_1E8C
	.type	z900_1E8C, @function
z900_1E8C:
.LFB2319:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2319:
	.size	z900_1E8C, .-z900_1E8C
	.p2align 4,,15
	.globl	z900_1E8D
	.type	z900_1E8D, @function
z900_1E8D:
.LFB2320:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2320:
	.size	z900_1E8D, .-z900_1E8D
	.p2align 4,,15
	.globl	z900_1E8E
	.type	z900_1E8E, @function
z900_1E8E:
.LFB2321:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2321:
	.size	z900_1E8E, .-z900_1E8E
	.p2align 4,,15
	.globl	z900_1E8F
	.type	z900_1E8F, @function
z900_1E8F:
.LFB2322:
	.cfi_startproc
	movl	256(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 256(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2322:
	.size	z900_1E8F, .-z900_1E8F
	.p2align 4,,15
	.globl	z900_1E90
	.type	z900_1E90, @function
z900_1E90:
.LFB2323:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2323:
	.size	z900_1E90, .-z900_1E90
	.p2align 4,,15
	.globl	z900_1E91
	.type	z900_1E91, @function
z900_1E91:
.LFB2324:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2324:
	.size	z900_1E91, .-z900_1E91
	.p2align 4,,15
	.globl	z900_1E92
	.type	z900_1E92, @function
z900_1E92:
.LFB2325:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2325:
	.size	z900_1E92, .-z900_1E92
	.p2align 4,,15
	.globl	z900_1E93
	.type	z900_1E93, @function
z900_1E93:
.LFB2326:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2326:
	.size	z900_1E93, .-z900_1E93
	.p2align 4,,15
	.globl	z900_1E94
	.type	z900_1E94, @function
z900_1E94:
.LFB2327:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2327:
	.size	z900_1E94, .-z900_1E94
	.p2align 4,,15
	.globl	z900_1E95
	.type	z900_1E95, @function
z900_1E95:
.LFB2328:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2328:
	.size	z900_1E95, .-z900_1E95
	.p2align 4,,15
	.globl	z900_1E96
	.type	z900_1E96, @function
z900_1E96:
.LFB2329:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2329:
	.size	z900_1E96, .-z900_1E96
	.p2align 4,,15
	.globl	z900_1E97
	.type	z900_1E97, @function
z900_1E97:
.LFB2330:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2330:
	.size	z900_1E97, .-z900_1E97
	.p2align 4,,15
	.globl	z900_1E98
	.type	z900_1E98, @function
z900_1E98:
.LFB2331:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2331:
	.size	z900_1E98, .-z900_1E98
	.p2align 4,,15
	.globl	z900_1E99
	.type	z900_1E99, @function
z900_1E99:
.LFB2332:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2332:
	.size	z900_1E99, .-z900_1E99
	.p2align 4,,15
	.globl	z900_1E9A
	.type	z900_1E9A, @function
z900_1E9A:
.LFB2333:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2333:
	.size	z900_1E9A, .-z900_1E9A
	.p2align 4,,15
	.globl	z900_1E9B
	.type	z900_1E9B, @function
z900_1E9B:
.LFB2334:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2334:
	.size	z900_1E9B, .-z900_1E9B
	.p2align 4,,15
	.globl	z900_1E9C
	.type	z900_1E9C, @function
z900_1E9C:
.LFB2335:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2335:
	.size	z900_1E9C, .-z900_1E9C
	.p2align 4,,15
	.globl	z900_1E9D
	.type	z900_1E9D, @function
z900_1E9D:
.LFB2336:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2336:
	.size	z900_1E9D, .-z900_1E9D
	.p2align 4,,15
	.globl	z900_1E9E
	.type	z900_1E9E, @function
z900_1E9E:
.LFB2337:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2337:
	.size	z900_1E9E, .-z900_1E9E
	.p2align 4,,15
	.globl	z900_1E9F
	.type	z900_1E9F, @function
z900_1E9F:
.LFB2338:
	.cfi_startproc
	movl	264(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 264(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2338:
	.size	z900_1E9F, .-z900_1E9F
	.p2align 4,,15
	.globl	z900_1EA0
	.type	z900_1EA0, @function
z900_1EA0:
.LFB2339:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2339:
	.size	z900_1EA0, .-z900_1EA0
	.p2align 4,,15
	.globl	z900_1EA1
	.type	z900_1EA1, @function
z900_1EA1:
.LFB2340:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2340:
	.size	z900_1EA1, .-z900_1EA1
	.p2align 4,,15
	.globl	z900_1EA2
	.type	z900_1EA2, @function
z900_1EA2:
.LFB2341:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2341:
	.size	z900_1EA2, .-z900_1EA2
	.p2align 4,,15
	.globl	z900_1EA3
	.type	z900_1EA3, @function
z900_1EA3:
.LFB2342:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2342:
	.size	z900_1EA3, .-z900_1EA3
	.p2align 4,,15
	.globl	z900_1EA4
	.type	z900_1EA4, @function
z900_1EA4:
.LFB2343:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2343:
	.size	z900_1EA4, .-z900_1EA4
	.p2align 4,,15
	.globl	z900_1EA5
	.type	z900_1EA5, @function
z900_1EA5:
.LFB2344:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2344:
	.size	z900_1EA5, .-z900_1EA5
	.p2align 4,,15
	.globl	z900_1EA6
	.type	z900_1EA6, @function
z900_1EA6:
.LFB2345:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2345:
	.size	z900_1EA6, .-z900_1EA6
	.p2align 4,,15
	.globl	z900_1EA7
	.type	z900_1EA7, @function
z900_1EA7:
.LFB2346:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2346:
	.size	z900_1EA7, .-z900_1EA7
	.p2align 4,,15
	.globl	z900_1EA8
	.type	z900_1EA8, @function
z900_1EA8:
.LFB2347:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2347:
	.size	z900_1EA8, .-z900_1EA8
	.p2align 4,,15
	.globl	z900_1EA9
	.type	z900_1EA9, @function
z900_1EA9:
.LFB2348:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2348:
	.size	z900_1EA9, .-z900_1EA9
	.p2align 4,,15
	.globl	z900_1EAA
	.type	z900_1EAA, @function
z900_1EAA:
.LFB2349:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2349:
	.size	z900_1EAA, .-z900_1EAA
	.p2align 4,,15
	.globl	z900_1EAB
	.type	z900_1EAB, @function
z900_1EAB:
.LFB2350:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2350:
	.size	z900_1EAB, .-z900_1EAB
	.p2align 4,,15
	.globl	z900_1EAC
	.type	z900_1EAC, @function
z900_1EAC:
.LFB2351:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2351:
	.size	z900_1EAC, .-z900_1EAC
	.p2align 4,,15
	.globl	z900_1EAD
	.type	z900_1EAD, @function
z900_1EAD:
.LFB2352:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2352:
	.size	z900_1EAD, .-z900_1EAD
	.p2align 4,,15
	.globl	z900_1EAE
	.type	z900_1EAE, @function
z900_1EAE:
.LFB2353:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2353:
	.size	z900_1EAE, .-z900_1EAE
	.p2align 4,,15
	.globl	z900_1EAF
	.type	z900_1EAF, @function
z900_1EAF:
.LFB2354:
	.cfi_startproc
	movl	272(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 272(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2354:
	.size	z900_1EAF, .-z900_1EAF
	.p2align 4,,15
	.globl	z900_1EB0
	.type	z900_1EB0, @function
z900_1EB0:
.LFB2355:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2355:
	.size	z900_1EB0, .-z900_1EB0
	.p2align 4,,15
	.globl	z900_1EB1
	.type	z900_1EB1, @function
z900_1EB1:
.LFB2356:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2356:
	.size	z900_1EB1, .-z900_1EB1
	.p2align 4,,15
	.globl	z900_1EB2
	.type	z900_1EB2, @function
z900_1EB2:
.LFB2357:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2357:
	.size	z900_1EB2, .-z900_1EB2
	.p2align 4,,15
	.globl	z900_1EB3
	.type	z900_1EB3, @function
z900_1EB3:
.LFB2358:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2358:
	.size	z900_1EB3, .-z900_1EB3
	.p2align 4,,15
	.globl	z900_1EB4
	.type	z900_1EB4, @function
z900_1EB4:
.LFB2359:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2359:
	.size	z900_1EB4, .-z900_1EB4
	.p2align 4,,15
	.globl	z900_1EB5
	.type	z900_1EB5, @function
z900_1EB5:
.LFB2360:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2360:
	.size	z900_1EB5, .-z900_1EB5
	.p2align 4,,15
	.globl	z900_1EB6
	.type	z900_1EB6, @function
z900_1EB6:
.LFB2361:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2361:
	.size	z900_1EB6, .-z900_1EB6
	.p2align 4,,15
	.globl	z900_1EB7
	.type	z900_1EB7, @function
z900_1EB7:
.LFB2362:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2362:
	.size	z900_1EB7, .-z900_1EB7
	.p2align 4,,15
	.globl	z900_1EB8
	.type	z900_1EB8, @function
z900_1EB8:
.LFB2363:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2363:
	.size	z900_1EB8, .-z900_1EB8
	.p2align 4,,15
	.globl	z900_1EB9
	.type	z900_1EB9, @function
z900_1EB9:
.LFB2364:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2364:
	.size	z900_1EB9, .-z900_1EB9
	.p2align 4,,15
	.globl	z900_1EBA
	.type	z900_1EBA, @function
z900_1EBA:
.LFB2365:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2365:
	.size	z900_1EBA, .-z900_1EBA
	.p2align 4,,15
	.globl	z900_1EBB
	.type	z900_1EBB, @function
z900_1EBB:
.LFB2366:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2366:
	.size	z900_1EBB, .-z900_1EBB
	.p2align 4,,15
	.globl	z900_1EBC
	.type	z900_1EBC, @function
z900_1EBC:
.LFB2367:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2367:
	.size	z900_1EBC, .-z900_1EBC
	.p2align 4,,15
	.globl	z900_1EBD
	.type	z900_1EBD, @function
z900_1EBD:
.LFB2368:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2368:
	.size	z900_1EBD, .-z900_1EBD
	.p2align 4,,15
	.globl	z900_1EBE
	.type	z900_1EBE, @function
z900_1EBE:
.LFB2369:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2369:
	.size	z900_1EBE, .-z900_1EBE
	.p2align 4,,15
	.globl	z900_1EBF
	.type	z900_1EBF, @function
z900_1EBF:
.LFB2370:
	.cfi_startproc
	movl	280(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 280(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2370:
	.size	z900_1EBF, .-z900_1EBF
	.p2align 4,,15
	.globl	z900_1EC0
	.type	z900_1EC0, @function
z900_1EC0:
.LFB2371:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2371:
	.size	z900_1EC0, .-z900_1EC0
	.p2align 4,,15
	.globl	z900_1EC1
	.type	z900_1EC1, @function
z900_1EC1:
.LFB2372:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2372:
	.size	z900_1EC1, .-z900_1EC1
	.p2align 4,,15
	.globl	z900_1EC2
	.type	z900_1EC2, @function
z900_1EC2:
.LFB2373:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2373:
	.size	z900_1EC2, .-z900_1EC2
	.p2align 4,,15
	.globl	z900_1EC3
	.type	z900_1EC3, @function
z900_1EC3:
.LFB2374:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2374:
	.size	z900_1EC3, .-z900_1EC3
	.p2align 4,,15
	.globl	z900_1EC4
	.type	z900_1EC4, @function
z900_1EC4:
.LFB2375:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2375:
	.size	z900_1EC4, .-z900_1EC4
	.p2align 4,,15
	.globl	z900_1EC5
	.type	z900_1EC5, @function
z900_1EC5:
.LFB2376:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2376:
	.size	z900_1EC5, .-z900_1EC5
	.p2align 4,,15
	.globl	z900_1EC6
	.type	z900_1EC6, @function
z900_1EC6:
.LFB2377:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2377:
	.size	z900_1EC6, .-z900_1EC6
	.p2align 4,,15
	.globl	z900_1EC7
	.type	z900_1EC7, @function
z900_1EC7:
.LFB2378:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2378:
	.size	z900_1EC7, .-z900_1EC7
	.p2align 4,,15
	.globl	z900_1EC8
	.type	z900_1EC8, @function
z900_1EC8:
.LFB2379:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2379:
	.size	z900_1EC8, .-z900_1EC8
	.p2align 4,,15
	.globl	z900_1EC9
	.type	z900_1EC9, @function
z900_1EC9:
.LFB2380:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2380:
	.size	z900_1EC9, .-z900_1EC9
	.p2align 4,,15
	.globl	z900_1ECA
	.type	z900_1ECA, @function
z900_1ECA:
.LFB2381:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2381:
	.size	z900_1ECA, .-z900_1ECA
	.p2align 4,,15
	.globl	z900_1ECB
	.type	z900_1ECB, @function
z900_1ECB:
.LFB2382:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2382:
	.size	z900_1ECB, .-z900_1ECB
	.p2align 4,,15
	.globl	z900_1ECC
	.type	z900_1ECC, @function
z900_1ECC:
.LFB2383:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2383:
	.size	z900_1ECC, .-z900_1ECC
	.p2align 4,,15
	.globl	z900_1ECD
	.type	z900_1ECD, @function
z900_1ECD:
.LFB2384:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2384:
	.size	z900_1ECD, .-z900_1ECD
	.p2align 4,,15
	.globl	z900_1ECE
	.type	z900_1ECE, @function
z900_1ECE:
.LFB2385:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2385:
	.size	z900_1ECE, .-z900_1ECE
	.p2align 4,,15
	.globl	z900_1ECF
	.type	z900_1ECF, @function
z900_1ECF:
.LFB2386:
	.cfi_startproc
	movl	288(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 288(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2386:
	.size	z900_1ECF, .-z900_1ECF
	.p2align 4,,15
	.globl	z900_1ED0
	.type	z900_1ED0, @function
z900_1ED0:
.LFB2387:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2387:
	.size	z900_1ED0, .-z900_1ED0
	.p2align 4,,15
	.globl	z900_1ED1
	.type	z900_1ED1, @function
z900_1ED1:
.LFB2388:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2388:
	.size	z900_1ED1, .-z900_1ED1
	.p2align 4,,15
	.globl	z900_1ED2
	.type	z900_1ED2, @function
z900_1ED2:
.LFB2389:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2389:
	.size	z900_1ED2, .-z900_1ED2
	.p2align 4,,15
	.globl	z900_1ED3
	.type	z900_1ED3, @function
z900_1ED3:
.LFB2390:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2390:
	.size	z900_1ED3, .-z900_1ED3
	.p2align 4,,15
	.globl	z900_1ED4
	.type	z900_1ED4, @function
z900_1ED4:
.LFB2391:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2391:
	.size	z900_1ED4, .-z900_1ED4
	.p2align 4,,15
	.globl	z900_1ED5
	.type	z900_1ED5, @function
z900_1ED5:
.LFB2392:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2392:
	.size	z900_1ED5, .-z900_1ED5
	.p2align 4,,15
	.globl	z900_1ED6
	.type	z900_1ED6, @function
z900_1ED6:
.LFB2393:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2393:
	.size	z900_1ED6, .-z900_1ED6
	.p2align 4,,15
	.globl	z900_1ED7
	.type	z900_1ED7, @function
z900_1ED7:
.LFB2394:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2394:
	.size	z900_1ED7, .-z900_1ED7
	.p2align 4,,15
	.globl	z900_1ED8
	.type	z900_1ED8, @function
z900_1ED8:
.LFB2395:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2395:
	.size	z900_1ED8, .-z900_1ED8
	.p2align 4,,15
	.globl	z900_1ED9
	.type	z900_1ED9, @function
z900_1ED9:
.LFB2396:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2396:
	.size	z900_1ED9, .-z900_1ED9
	.p2align 4,,15
	.globl	z900_1EDA
	.type	z900_1EDA, @function
z900_1EDA:
.LFB2397:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2397:
	.size	z900_1EDA, .-z900_1EDA
	.p2align 4,,15
	.globl	z900_1EDB
	.type	z900_1EDB, @function
z900_1EDB:
.LFB2398:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2398:
	.size	z900_1EDB, .-z900_1EDB
	.p2align 4,,15
	.globl	z900_1EDC
	.type	z900_1EDC, @function
z900_1EDC:
.LFB2399:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2399:
	.size	z900_1EDC, .-z900_1EDC
	.p2align 4,,15
	.globl	z900_1EDD
	.type	z900_1EDD, @function
z900_1EDD:
.LFB2400:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2400:
	.size	z900_1EDD, .-z900_1EDD
	.p2align 4,,15
	.globl	z900_1EDE
	.type	z900_1EDE, @function
z900_1EDE:
.LFB2401:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2401:
	.size	z900_1EDE, .-z900_1EDE
	.p2align 4,,15
	.globl	z900_1EDF
	.type	z900_1EDF, @function
z900_1EDF:
.LFB2402:
	.cfi_startproc
	movl	296(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 296(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2402:
	.size	z900_1EDF, .-z900_1EDF
	.p2align 4,,15
	.globl	z900_1EE0
	.type	z900_1EE0, @function
z900_1EE0:
.LFB2403:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2403:
	.size	z900_1EE0, .-z900_1EE0
	.p2align 4,,15
	.globl	z900_1EE1
	.type	z900_1EE1, @function
z900_1EE1:
.LFB2404:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2404:
	.size	z900_1EE1, .-z900_1EE1
	.p2align 4,,15
	.globl	z900_1EE2
	.type	z900_1EE2, @function
z900_1EE2:
.LFB2405:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2405:
	.size	z900_1EE2, .-z900_1EE2
	.p2align 4,,15
	.globl	z900_1EE3
	.type	z900_1EE3, @function
z900_1EE3:
.LFB2406:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2406:
	.size	z900_1EE3, .-z900_1EE3
	.p2align 4,,15
	.globl	z900_1EE4
	.type	z900_1EE4, @function
z900_1EE4:
.LFB2407:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2407:
	.size	z900_1EE4, .-z900_1EE4
	.p2align 4,,15
	.globl	z900_1EE5
	.type	z900_1EE5, @function
z900_1EE5:
.LFB2408:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2408:
	.size	z900_1EE5, .-z900_1EE5
	.p2align 4,,15
	.globl	z900_1EE6
	.type	z900_1EE6, @function
z900_1EE6:
.LFB2409:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2409:
	.size	z900_1EE6, .-z900_1EE6
	.p2align 4,,15
	.globl	z900_1EE7
	.type	z900_1EE7, @function
z900_1EE7:
.LFB2410:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2410:
	.size	z900_1EE7, .-z900_1EE7
	.p2align 4,,15
	.globl	z900_1EE8
	.type	z900_1EE8, @function
z900_1EE8:
.LFB2411:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2411:
	.size	z900_1EE8, .-z900_1EE8
	.p2align 4,,15
	.globl	z900_1EE9
	.type	z900_1EE9, @function
z900_1EE9:
.LFB2412:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2412:
	.size	z900_1EE9, .-z900_1EE9
	.p2align 4,,15
	.globl	z900_1EEA
	.type	z900_1EEA, @function
z900_1EEA:
.LFB2413:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2413:
	.size	z900_1EEA, .-z900_1EEA
	.p2align 4,,15
	.globl	z900_1EEB
	.type	z900_1EEB, @function
z900_1EEB:
.LFB2414:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2414:
	.size	z900_1EEB, .-z900_1EEB
	.p2align 4,,15
	.globl	z900_1EEC
	.type	z900_1EEC, @function
z900_1EEC:
.LFB2415:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2415:
	.size	z900_1EEC, .-z900_1EEC
	.p2align 4,,15
	.globl	z900_1EED
	.type	z900_1EED, @function
z900_1EED:
.LFB2416:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2416:
	.size	z900_1EED, .-z900_1EED
	.p2align 4,,15
	.globl	z900_1EEE
	.type	z900_1EEE, @function
z900_1EEE:
.LFB2417:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2417:
	.size	z900_1EEE, .-z900_1EEE
	.p2align 4,,15
	.globl	z900_1EEF
	.type	z900_1EEF, @function
z900_1EEF:
.LFB2418:
	.cfi_startproc
	movl	304(%rsi), %edx
	xorl	%ecx, %ecx
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 304(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2418:
	.size	z900_1EEF, .-z900_1EEF
	.p2align 4,,15
	.globl	z900_1EF0
	.type	z900_1EF0, @function
z900_1EF0:
.LFB2419:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2419:
	.size	z900_1EF0, .-z900_1EF0
	.p2align 4,,15
	.globl	z900_1EF1
	.type	z900_1EF1, @function
z900_1EF1:
.LFB2420:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2420:
	.size	z900_1EF1, .-z900_1EF1
	.p2align 4,,15
	.globl	z900_1EF2
	.type	z900_1EF2, @function
z900_1EF2:
.LFB2421:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2421:
	.size	z900_1EF2, .-z900_1EF2
	.p2align 4,,15
	.globl	z900_1EF3
	.type	z900_1EF3, @function
z900_1EF3:
.LFB2422:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2422:
	.size	z900_1EF3, .-z900_1EF3
	.p2align 4,,15
	.globl	z900_1EF4
	.type	z900_1EF4, @function
z900_1EF4:
.LFB2423:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2423:
	.size	z900_1EF4, .-z900_1EF4
	.p2align 4,,15
	.globl	z900_1EF5
	.type	z900_1EF5, @function
z900_1EF5:
.LFB2424:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2424:
	.size	z900_1EF5, .-z900_1EF5
	.p2align 4,,15
	.globl	z900_1EF6
	.type	z900_1EF6, @function
z900_1EF6:
.LFB2425:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2425:
	.size	z900_1EF6, .-z900_1EF6
	.p2align 4,,15
	.globl	z900_1EF7
	.type	z900_1EF7, @function
z900_1EF7:
.LFB2426:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2426:
	.size	z900_1EF7, .-z900_1EF7
	.p2align 4,,15
	.globl	z900_1EF8
	.type	z900_1EF8, @function
z900_1EF8:
.LFB2427:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2427:
	.size	z900_1EF8, .-z900_1EF8
	.p2align 4,,15
	.globl	z900_1EF9
	.type	z900_1EF9, @function
z900_1EF9:
.LFB2428:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2428:
	.size	z900_1EF9, .-z900_1EF9
	.p2align 4,,15
	.globl	z900_1EFA
	.type	z900_1EFA, @function
z900_1EFA:
.LFB2429:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2429:
	.size	z900_1EFA, .-z900_1EFA
	.p2align 4,,15
	.globl	z900_1EFB
	.type	z900_1EFB, @function
z900_1EFB:
.LFB2430:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2430:
	.size	z900_1EFB, .-z900_1EFB
	.p2align 4,,15
	.globl	z900_1EFC
	.type	z900_1EFC, @function
z900_1EFC:
.LFB2431:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2431:
	.size	z900_1EFC, .-z900_1EFC
	.p2align 4,,15
	.globl	z900_1EFD
	.type	z900_1EFD, @function
z900_1EFD:
.LFB2432:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2432:
	.size	z900_1EFD, .-z900_1EFD
	.p2align 4,,15
	.globl	z900_1EFE
	.type	z900_1EFE, @function
z900_1EFE:
.LFB2433:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	addl	%edx, %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2433:
	.size	z900_1EFE, .-z900_1EFE
	.p2align 4,,15
	.globl	z900_1EFF
	.type	z900_1EFF, @function
z900_1EFF:
.LFB2434:
	.cfi_startproc
	movl	312(%rsi), %edx
	xorl	%ecx, %ecx
	addq	$2, 136(%rsi)
	leal	(%rdx,%rdx), %eax
	testl	%eax, %eax
	movl	%eax, 312(%rsi)
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2434:
	.size	z900_1EFF, .-z900_1EFF
	.p2align 4,,15
	.globl	z900_and_register
	.type	z900_and_register, @function
z900_and_register:
.LFB2435:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	addq	$2, 136(%rsi)
	movq	%rcx, %rax
	andl	$15, %ecx
	shrq	%rax
	andl	$120, %eax
	leaq	(%rsi,%rax), %rdx
	movl	192(%rsi,%rcx,8), %eax
	andl	%eax, 192(%rdx)
	setne	100(%rsi)
	ret
	.cfi_endproc
.LFE2435:
	.size	z900_and_register, .-z900_and_register
	.p2align 4,,15
	.globl	z900_and_immediate
	.type	z900_and_immediate, @function
z900_and_immediate:
.LFB2436:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %ebp
	shrl	$12, %ecx
	shrl	$16, %ebp
	andl	$4095, %eax
	movl	%ecx, %esi
	andl	$15, %esi
	je	.L23719
	movslq	%esi, %rdx
	addq	192(%rbx,%rdx,8), %rax
	andq	120(%rbx), %rax
.L23719:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L23720
	movl	%eax, %edi
	addl	$1, %edx
	shrl	$12, %edi
	movslq	%edx, %rdx
	andl	$1023, %edi
	leaq	(%rbx,%rdi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L23740
.L23721:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L23741
.L23722:
	movl	2224(%rbx), %r8d
	movq	%rax, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L23720
	testb	$2, 46264(%rbx,%rdi)
	je	.L23720
	xorq	26808(%rcx), %rax
.L23723:
	andb	%bpl, (%rax)
	setne	100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L23740:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L23721
.L23720:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movq	%rax, %rdi
	call	z900_logical_to_main_l
	jmp	.L23723
.L23741:
	cmpb	43192(%rbx,%rdi), %dl
	je	.L23722
	.p2align 4,,4
	jmp	.L23720
	.cfi_endproc
.LFE2436:
	.size	z900_and_immediate, .-z900_and_immediate
	.p2align 4,,15
	.globl	z900_and_character
	.type	z900_and_character, @function
z900_and_character:
.LFB2437:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rsi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r15d
	movl	%eax, %ecx
	shrl	$16, %r15d
	shrl	$28, %ecx
	andl	$4095, %r15d
	testl	%ecx, %ecx
	movl	%ecx, 8(%rsp)
	je	.L23743
	movslq	%ecx, %rdx
	addq	192(%rsi,%rdx,8), %r15
	andq	120(%rsi), %r15
.L23743:
	movl	%eax, %r14d
	shrl	$12, %eax
	andl	$4095, %r14d
	andl	$15, %eax
	movl	%eax, 40(%rsp)
	je	.L23744
	cltq
	addq	192(%rbp,%rax,8), %r14
	andq	120(%rbp), %r14
.L23744:
	movzbl	1(%rdi), %r12d
	movb	$6, 130(%rbp)
	addq	$6, 136(%rbp)
	testl	%r12d, %r12d
	je	.L23880
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	0(%rbp,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L23756
	leal	1(%rax), %edx
	movl	%r15d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	0(%rbp,%rsi,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbp,%rdx,8)
	jne	.L23881
.L23757:
	movzbl	97(%rbp), %ecx
	testb	%cl, %cl
	jne	.L23882
.L23758:
	movl	2224(%rbp), %edi
	movq	%r15, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L23815
	testb	$1, 46264(%rbp,%rsi)
	je	.L23815
	movq	35000(%rax), %r11
	movq	%r15, %rbx
	movzbl	%cl, %r8d
	movq	%r11, 984(%rbp)
	xorq	26808(%rax), %rbx
.L23760:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	0(%rbp,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L23761
	leal	1(%rax), %edx
	movl	%r14d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	0(%rbp,%rsi,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbp,%rdx,8)
	jne	.L23883
.L23762:
	testb	%r8b, %r8b
	jne	.L23884
.L23763:
	movl	2224(%rbp), %edi
	movq	%r14, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L23761
	testb	$4, 46264(%rbp,%rsi)
	je	.L23761
	movq	%r14, %r13
	xorq	26808(%rax), %r13
.L23764:
	movl	$2047, %r10d
	movl	%r15d, %eax
	subl	%r12d, %r10d
	andl	$2047, %eax
	cmpl	%r10d, %eax
	jg	.L23765
	movl	%r14d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L23766
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	movl	$1, %esi
	.p2align 4,,10
	.p2align 3
.L23768:
	movzbl	0(%r13,%rax), %edx
	andb	%dl, (%rbx,%rax)
	cmovne	%esi, %ecx
	addq	$1, %rax
	cmpl	%eax, %r12d
	jge	.L23768
.L23767:
	orb	$6, (%r11)
.L23777:
	movb	%cl, 100(%rbp)
.L23742:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L23883:
	.cfi_restore_state
	movzbl	44216(%rbp,%rsi), %edi
	testb	%dil, 1976(%rbp,%rdx)
	jne	.L23762
.L23761:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movq	%r14, %rdi
	movq	%r11, 32(%rsp)
	call	z900_logical_to_main_l
	movq	32(%rsp), %r11
	movq	%rax, %r13
	jmp	.L23764
.L23882:
	cmpb	43192(%rbp,%rsi), %cl
	je	.L23758
.L23815:
	movzbl	%cl, %r8d
.L23759:
	movl	8(%rsp), %esi
	leal	1(%r12), %r9d
	movl	$1, %ecx
	andl	$511, %r9d
	movq	%rbp, %rdx
	movq	%r15, %rdi
	call	z900_logical_to_main_l
	movq	984(%rbp), %r11
	movq	%rax, %rbx
	movzbl	97(%rbp), %r8d
	jmp	.L23760
.L23881:
	movzbl	44216(%rbp,%rsi), %ecx
	testb	%cl, 1976(%rbp,%rdx)
	jne	.L23757
.L23756:
	movzbl	97(%rbp), %r8d
	jmp	.L23759
.L23880:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbp,%rax,4), %eax
	testl	%eax, %eax
	je	.L23746
	leal	1(%rax), %edx
	movl	%r14d, %eax
	shrl	$12, %eax
	movslq	%edx, %rdx
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbp,%rdx,8)
	jne	.L23885
.L23747:
	movzbl	97(%rbp), %edx
	testb	%dl, %dl
	jne	.L23886
.L23748:
	movl	2224(%rbp), %edi
	movq	%r14, %rsi
	andq	$-4194304, %rsi
	orq	%rdi, %rsi
	cmpq	10424(%rcx), %rsi
	jne	.L23812
	testb	$4, 46264(%rbp,%rax)
	je	.L23812
	xorq	26808(%rcx), %r14
	movzbl	%dl, %r8d
.L23750:
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbp,%rax,4), %eax
	testl	%eax, %eax
	je	.L23751
	leal	1(%rax), %esi
	movl	%r15d, %ecx
	shrl	$12, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	0(%rbp,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbp,%rsi,8)
	jne	.L23887
.L23752:
	testb	%r8b, %r8b
	jne	.L23888
.L23753:
	movl	2224(%rbp), %edi
	movq	%r15, %rsi
	andq	$-4194304, %rsi
	orq	%rdi, %rsi
	cmpq	10424(%rax), %rsi
	jne	.L23751
	testb	$2, 46264(%rbp,%rcx)
	je	.L23751
	xorq	26808(%rax), %r15
	movq	%r15, %rax
.L23754:
	movzbl	(%rax), %edx
	andb	(%r14), %dl
	testb	%dl, %dl
	movb	%dl, (%rax)
	setne	100(%rbp)
	jmp	.L23742
.L23766:
	movl	$2048, %r15d
	subl	%eax, %r15d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L23769
	movq	120(%rbp), %rdx
	leal	1(%rax), %esi
	leal	(%r15,%r14), %eax
	movslq	%esi, %rsi
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbp,%rsi,8)
	jne	.L23889
.L23770:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L23890
.L23772:
	movl	%r15d, %esi
	leaq	(%rsi,%r14), %rdi
	movl	2224(%rbp), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L23771
	testb	$4, 46264(%rbp,%rax)
	je	.L23771
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L23773:
	movq	%rbx, %rdx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L23775:
	addq	$1, %r13
	movzbl	-1(%r13), %esi
	addq	$1, %rdx
	andb	%sil, -1(%rdx)
	movl	%edx, %esi
	cmovne	%edi, %ecx
	subl	%ebx, %esi
	cmpl	%esi, %r15d
	jg	.L23775
	subl	%r15d, %r12d
	js	.L23767
	xorl	%esi, %esi
	movl	$1, %r8d
.L23776:
	movzbl	(%rax,%rsi), %edi
	andb	%dil, (%rdx,%rsi)
	cmovne	%r8d, %ecx
	addq	$1, %rsi
	cmpl	%esi, %r12d
	jge	.L23776
	jmp	.L23767
.L23884:
	cmpb	43192(%rbp,%rsi), %r8b
	je	.L23763
	.p2align 4,,3
	jmp	.L23761
.L23889:
	movzbl	44216(%rbp,%rax), %edi
	testb	%dil, 1976(%rbp,%rsi)
	jne	.L23770
	movzbl	97(%rbp), %r8d
	movl	%r15d, %eax
	leaq	(%rax,%r14), %rdi
	andq	%rdx, %rdi
.L23771:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movq	%r11, 8(%rsp)
	call	z900_logical_to_main_l
	movq	8(%rsp), %r11
	jmp	.L23773
.L23890:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L23772
	movl	%r15d, %eax
	leaq	(%rax,%r14), %rdi
	andq	%rdx, %rdi
	jmp	.L23771
.L23769:
	movl	%r15d, %eax
	movzbl	97(%rbp), %r8d
	leaq	(%rax,%r14), %rdi
	andq	120(%rbp), %rdi
	jmp	.L23771
.L23765:
	movl	$2048, 32(%rsp)
	subl	%eax, 32(%rsp)
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L23778
	leal	1(%rax), %esi
	movl	32(%rsp), %eax
	movq	120(%rbp), %rcx
	movslq	%esi, %rsi
	addl	%r15d, %eax
	andl	%ecx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbp,%rsi,8)
	jne	.L23891
.L23779:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L23892
.L23781:
	movl	32(%rsp), %esi
	leaq	(%rsi,%r15), %rdi
	movl	2224(%rbp), %esi
	andq	%rcx, %rdi
	movq	%rdi, %rcx
	andq	$-4194304, %rcx
	orq	%rsi, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L23780
	testb	$1, 46264(%rbp,%rax)
	je	.L23780
	movq	35000(%rdx), %rax
	movq	%rax, 984(%rbp)
	xorq	26808(%rdx), %rdi
	movq	%rax, 8(%rsp)
	movq	%rdi, %r15
.L23782:
	movl	%r14d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L23783
	movq	%rbx, %rax
	xorl	%ecx, %ecx
	movl	$1, %esi
.L23785:
	addq	$1, %r13
	movzbl	-1(%r13), %edx
	addq	$1, %rax
	andb	%dl, -1(%rax)
	movl	%eax, %edx
	cmovne	%esi, %ecx
	subl	%ebx, %edx
	cmpl	%edx, 32(%rsp)
	jg	.L23785
	subl	32(%rsp), %r12d
	js	.L23786
	xorl	%eax, %eax
	movl	$1, %esi
.L23787:
	movzbl	0(%r13,%rax), %edx
	andb	%dl, (%r15,%rax)
	cmovne	%esi, %ecx
	addq	$1, %rax
	cmpl	%eax, %r12d
	jge	.L23787
.L23786:
	orb	$6, (%r11)
	movq	8(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L23777
.L23888:
	cmpb	%r8b, 43192(%rbp,%rcx)
	je	.L23753
.L23751:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbp, %rdx
	movq	%r15, %rdi
	call	z900_logical_to_main_l
	jmp	.L23754
.L23783:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L23788
	movq	120(%rbp), %rdx
	leal	1(%rax), %esi
	leal	(%r10,%r14), %eax
	movslq	%esi, %rsi
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbp,%rsi,8)
	jne	.L23893
.L23789:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L23894
.L23791:
	movl	%r10d, %esi
	leaq	(%rsi,%r14), %rdi
	movl	2224(%rbp), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L23790
	testb	$4, 46264(%rbp,%rax)
	je	.L23790
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L23792:
	cmpl	%r10d, 32(%rsp)
	je	.L23895
	jge	.L23797
	movq	%r13, %rsi
	xorl	%ecx, %ecx
	movl	$1, %edi
.L23799:
	addq	$1, %rsi
	movzbl	-1(%rsi), %edx
	addq	$1, %rbx
	andb	%dl, -1(%rbx)
	movl	%esi, %edx
	cmovne	%edi, %ecx
	subl	%r13d, %edx
	cmpl	32(%rsp), %edx
	jl	.L23799
	movl	%r10d, %r8d
	subl	32(%rsp), %r8d
	testl	%r8d, %r8d
	jle	.L23800
	xorl	%edx, %edx
	movl	$1, %r9d
.L23802:
	movzbl	(%rsi,%rdx), %edi
	andb	%dil, (%r15,%rdx)
	cmovne	%r9d, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r8d
	jg	.L23802
	subl	$1, %r8d
	leaq	1(%r15,%r8), %r15
.L23800:
	subl	%r10d, %r12d
	js	.L23786
	xorl	%edx, %edx
	movl	$1, %edi
.L23803:
	movzbl	(%rax,%rdx), %esi
	andb	%sil, (%r15,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r12d
	jge	.L23803
	jmp	.L23786
.L23797:
	movq	%rbx, %rdx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L23805:
	addq	$1, %r13
	movzbl	-1(%r13), %esi
	addq	$1, %rdx
	andb	%sil, -1(%rdx)
	movl	%edx, %esi
	cmovne	%edi, %ecx
	subl	%ebx, %esi
	cmpl	%esi, %r10d
	jg	.L23805
	movl	32(%rsp), %r8d
	subl	%r10d, %r8d
	testl	%r8d, %r8d
	jle	.L23806
	xorl	%esi, %esi
	movl	$1, %r9d
.L23808:
	movzbl	(%rax,%rsi), %edi
	andb	%dil, (%rdx,%rsi)
	cmovne	%r9d, %ecx
	addq	$1, %rsi
	cmpl	%esi, %r8d
	jg	.L23808
	subl	$1, %r8d
	leaq	1(%rax,%r8), %rax
.L23806:
	subl	32(%rsp), %r12d
	js	.L23786
	xorl	%edx, %edx
	movl	$1, %edi
.L23809:
	movzbl	(%rax,%rdx), %esi
	andb	%sil, (%r15,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r12d
	jge	.L23809
	jmp	.L23786
.L23895:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L23795:
	movzbl	0(%r13,%rdx), %esi
	andb	%sil, (%rbx,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, 32(%rsp)
	jg	.L23795
	subl	32(%rsp), %r12d
	js	.L23786
	xorl	%edx, %edx
	movl	$1, %edi
.L23796:
	movzbl	(%rax,%rdx), %esi
	andb	%sil, (%r15,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r12d
	jge	.L23796
	jmp	.L23786
.L23891:
	movzbl	44216(%rbp,%rax), %edi
	testb	%dil, 1976(%rbp,%rsi)
	jne	.L23779
	movl	32(%rsp), %eax
	movzbl	97(%rbp), %r8d
	leaq	(%rax,%r15), %rdi
	andq	%rcx, %rdi
.L23780:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 44(%rsp)
	movq	%r11, 24(%rsp)
	call	z900_logical_to_main_l
	movl	44(%rsp), %r10d
	movq	%rax, %r15
	movq	984(%rbp), %rax
	movq	24(%rsp), %r11
	movq	%rax, 8(%rsp)
	jmp	.L23782
.L23892:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L23781
	movl	32(%rsp), %eax
	leaq	(%rax,%r15), %rdi
	andq	%rcx, %rdi
	jmp	.L23780
.L23887:
	movzbl	44216(%rbp,%rcx), %edi
	testb	%dil, 1976(%rbp,%rsi)
	jne	.L23752
	jmp	.L23751
.L23778:
	movl	32(%rsp), %eax
	movzbl	97(%rbp), %r8d
	leaq	(%rax,%r15), %rdi
	andq	120(%rbp), %rdi
	jmp	.L23780
.L23893:
	movzbl	44216(%rbp,%rax), %edi
	testb	%dil, 1976(%rbp,%rsi)
	jne	.L23789
	movzbl	97(%rbp), %r8d
	movl	%r10d, %eax
	leaq	(%rax,%r14), %rdi
	andq	%rdx, %rdi
.L23790:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	z900_logical_to_main_l
	movl	24(%rsp), %r10d
	movq	16(%rsp), %r11
	jmp	.L23792
.L23886:
	cmpb	43192(%rbp,%rax), %dl
	je	.L23748
.L23812:
	movzbl	%dl, %r8d
.L23749:
	movl	40(%rsp), %esi
	movq	%r14, %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	call	z900_logical_to_main_l
	movzbl	97(%rbp), %r8d
	movq	%rax, %r14
	jmp	.L23750
.L23885:
	movzbl	44216(%rbp,%rax), %esi
	testb	%sil, 1976(%rbp,%rdx)
	jne	.L23747
.L23746:
	movzbl	97(%rbp), %r8d
	jmp	.L23749
.L23788:
	movl	%r10d, %eax
	movzbl	97(%rbp), %r8d
	leaq	(%rax,%r14), %rdi
	andq	120(%rbp), %rdi
	jmp	.L23790
.L23894:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L23791
	movl	%r10d, %eax
	leaq	(%rax,%r14), %rdi
	andq	%rdx, %rdi
	jmp	.L23790
	.cfi_endproc
.LFE2437:
	.size	z900_and_character, .-z900_and_character
	.p2align 4,,15
	.globl	z900_branch_and_link_register
	.type	z900_branch_and_link_register, @function
z900_branch_and_link_register:
.LFB2438:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movzbl	1(%rdi), %r12d
	movzbl	%r12b, %ebp
	andl	$15, %r12d
	sarl	$4, %ebp
	cmpq	$0, 424(%rsi)
	movslq	%r12d, %r13
	js	.L23927
.L23897:
	movzbl	103(%rbx), %eax
	movq	192(%rbx,%r13,8), %rcx
	testb	$1, %al
	je	.L23898
	movq	136(%rbx), %rdx
	movslq	%ebp, %rbp
	movq	168(%rbx), %rax
	leaq	2(%rdx,%rax), %rax
	subq	144(%rbx), %rax
	testl	%r12d, %r12d
	movq	%rax, 192(%rbx,%rbp,8)
	je	.L23903
.L23930:
	movq	%rcx, %rax
	movq	120(%rbx), %rsi
	movq	%rdx, 184(%rbx)
	movzbl	808(%rbx), %ecx
	andq	%rsi, %rax
	testb	$5, %cl
	jne	.L23904
	movq	%rax, %rdi
	andq	$-4095, %rdi
	cmpq	168(%rbx), %rdi
	jne	.L23904
	xorq	152(%rbx), %rax
	movq	%rax, 136(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L23898:
	.cfi_restore_state
	testb	$2, %al
	jne	.L23928
	movzbl	808(%rbx), %eax
	testb	$1, %al
	jne	.L23929
	movl	$1073741824, %edi
.L23902:
	movzbl	101(%rbx), %eax
	movzbl	100(%rbx), %esi
	movq	136(%rbx), %rdx
	sall	$24, %eax
	sall	$28, %esi
	orl	%esi, %eax
	movl	168(%rbx), %esi
	orl	%edi, %eax
	leal	2(%rsi,%rdx), %esi
	subl	144(%rbx), %esi
	andl	$16777215, %esi
	orl	%esi, %eax
.L23901:
	movslq	%ebp, %rbp
	testl	%r12d, %r12d
	movl	%eax, 192(%rbx,%rbp,8)
	jne	.L23930
.L23903:
	addq	$2, %rdx
	movq	%rdx, 136(%rbx)
.L23896:
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L23928:
	.cfi_restore_state
	movq	136(%rbx), %rdx
	movl	168(%rbx), %eax
	leal	2(%rax,%rdx), %eax
	subl	144(%rbx), %eax
	orl	$-2147483648, %eax
	jmp	.L23901
	.p2align 4,,10
	.p2align 3
.L23927:
	xorl	%r13d, %r13d
	testl	%r12d, %r12d
	je	.L23897
	movb	$0, 130(%rsi)
	movslq	%r12d, %r13
	movq	%rbx, %rdx
	movzbl	103(%rbx), %edi
	movl	192(%rsi,%r13,8), %esi
	shrb	%dil
	andl	$1, %edi
	call	*2040(%rbx)
	movb	$2, 130(%rbx)
	movq	%rax, 424(%rbx)
	jmp	.L23897
.L23904:
	testb	$1, %cl
	jne	.L23931
.L23906:
	andb	$4, %cl
	movq	%rax, 112(%rbx)
	movq	$0, 160(%rbx)
	je	.L23896
	testb	$-128, 54(%rbx)
	je	.L23896
	testb	$-128, 402(%rbx)
	je	.L23909
	movq	416(%rbx), %rdx
	andq	%rsi, %rax
	movq	408(%rbx), %rcx
	cmpq	%rcx, %rdx
	jb	.L23910
	cmpq	%rax, %rcx
	ja	.L23896
.L23926:
	cmpq	%rax, %rdx
	jb	.L23896
.L23909:
	orl	$8388608, 56(%rbx)
	jmp	.L23896
.L23929:
	andl	$2, %eax
	cmpb	$1, %al
	sbbl	%edi, %edi
	andl	$-1073741824, %edi
	subl	$1073741824, %edi
	jmp	.L23902
.L23931:
	movl	%ecx, %edi
	andl	$2, %edi
	cmpb	$1, %dil
	sbbq	%rdi, %rdi
	andl	$2, %edi
	leaq	-4(%rdx,%rdi), %rdx
	movq	%rdx, 184(%rbx)
	jmp	.L23906
.L23910:
	cmpq	%rax, %rcx
	jbe	.L23909
	jmp	.L23926
	.cfi_endproc
.LFE2438:
	.size	z900_branch_and_link_register, .-z900_branch_and_link_register
	.p2align 4,,15
	.globl	z900_branch_and_link
	.type	z900_branch_and_link, @function
z900_branch_and_link:
.LFB2439:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edi
	shrl	$20, %ecx
	shrl	$16, %edi
	movl	%eax, %edx
	andl	$15, %ecx
	andl	$4095, %edx
	andl	$15, %edi
	jne	.L23960
.L23933:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L23934
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L23934:
	movzbl	103(%rsi), %eax
	movq	136(%rsi), %rdi
	testb	$1, %al
	je	.L23935
	movq	168(%rsi), %rax
	movslq	%ecx, %rcx
	leaq	4(%rdi,%rax), %rax
	subq	144(%rsi), %rax
	movq	%rax, 192(%rsi,%rcx,8)
.L23936:
	movq	120(%rsi), %rcx
	movq	%rdi, 184(%rsi)
	movzbl	808(%rsi), %eax
	andq	%rcx, %rdx
	testb	$5, %al
	jne	.L23939
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L23939
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L23935:
	testb	$2, %al
	movl	168(%rsi), %eax
	leal	4(%rax,%rdi), %eax
	jne	.L23961
	movzbl	100(%rsi), %r8d
	movzbl	101(%rsi), %r9d
	subl	144(%rsi), %eax
	sall	$28, %r8d
	sall	$24, %r9d
	orl	%r9d, %r8d
	andl	$16777215, %eax
	orl	$-2147483648, %r8d
	orl	%r8d, %eax
.L23938:
	movslq	%ecx, %rcx
	movl	%eax, 192(%rsi,%rcx,8)
	jmp	.L23936
	.p2align 4,,10
	.p2align 3
.L23961:
	subl	144(%rsi), %eax
	orl	$-2147483648, %eax
	jmp	.L23938
.L23939:
	testb	$1, %al
	jne	.L23962
.L23941:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L23963
.L23932:
	rep ret
.L23960:
	movslq	%edi, %rdi
	addq	192(%rsi,%rdi,8), %rdx
	jmp	.L23933
.L23963:
	testb	$-128, 54(%rsi)
	je	.L23932
	testb	$-128, 402(%rsi)
	je	.L23944
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L23945
	cmpq	%rdx, %rdi
	ja	.L23932
	cmpq	%rdx, %rax
	jae	.L23944
	.p2align 4,,5
	ret
.L23962:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L23941
.L23945:
	cmpq	%rdx, %rdi
	jbe	.L23944
	cmpq	%rdx, %rax
	jb	.L23932
.L23944:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2439:
	.size	z900_branch_and_link, .-z900_branch_and_link
	.p2align 4,,15
	.globl	z900_branch_and_save_register
	.type	z900_branch_and_save_register, @function
z900_branch_and_save_register:
.LFB2440:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movzbl	1(%rdi), %r12d
	movzbl	%r12b, %ebp
	andl	$15, %r12d
	sarl	$4, %ebp
	cmpq	$0, 424(%rsi)
	movslq	%r12d, %r13
	js	.L23991
.L23965:
	movzbl	103(%rbx), %eax
	movq	192(%rbx,%r13,8), %rcx
	testb	$1, %al
	je	.L23966
	movq	136(%rbx), %rax
	movslq	%ebp, %rbp
	movq	168(%rbx), %rdx
	leaq	2(%rax,%rdx), %rdx
	subq	144(%rbx), %rdx
	movq	%rdx, 192(%rbx,%rbp,8)
.L23967:
	testl	%r12d, %r12d
	je	.L23969
.L23992:
	movq	120(%rbx), %rsi
	movq	%rax, 184(%rbx)
	andq	%rsi, %rcx
	movq	%rcx, %rdx
	movzbl	808(%rbx), %ecx
	testb	$5, %cl
	jne	.L23970
	movq	%rdx, %rdi
	andq	$-4095, %rdi
	cmpq	168(%rbx), %rdi
	jne	.L23970
	xorq	152(%rbx), %rdx
	movq	%rdx, 136(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L23966:
	.cfi_restore_state
	testb	$2, %al
	movl	168(%rbx), %edx
	movslq	%ebp, %rbp
	movq	136(%rbx), %rax
	leal	2(%rdx,%rax), %edx
	je	.L23968
	subl	144(%rbx), %edx
	orl	$-2147483648, %edx
	testl	%r12d, %r12d
	movl	%edx, 192(%rbx,%rbp,8)
	jne	.L23992
.L23969:
	addq	$2, %rax
	movq	%rax, 136(%rbx)
.L23964:
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L23968:
	.cfi_restore_state
	subl	144(%rbx), %edx
	andl	$16777215, %edx
	movl	%edx, 192(%rbx,%rbp,8)
	jmp	.L23967
	.p2align 4,,10
	.p2align 3
.L23991:
	xorl	%r13d, %r13d
	testl	%r12d, %r12d
	je	.L23965
	movb	$0, 130(%rsi)
	movslq	%r12d, %r13
	movq	%rbx, %rdx
	movzbl	103(%rbx), %edi
	movl	192(%rsi,%r13,8), %esi
	shrb	%dil
	andl	$1, %edi
	call	*2040(%rbx)
	movb	$2, 130(%rbx)
	movq	%rax, 424(%rbx)
	jmp	.L23965
.L23970:
	testb	$1, %cl
	jne	.L23993
.L23972:
	andb	$4, %cl
	movq	%rdx, 112(%rbx)
	movq	$0, 160(%rbx)
	je	.L23964
	testb	$-128, 54(%rbx)
	je	.L23964
	testb	$-128, 402(%rbx)
	je	.L23975
	movq	416(%rbx), %rax
	andq	%rsi, %rdx
	movq	408(%rbx), %rcx
	cmpq	%rcx, %rax
	jb	.L23976
	cmpq	%rdx, %rcx
	ja	.L23964
.L23990:
	cmpq	%rdx, %rax
	jb	.L23964
.L23975:
	orl	$8388608, 56(%rbx)
	jmp	.L23964
.L23993:
	movl	%ecx, %edi
	andl	$2, %edi
	cmpb	$1, %dil
	sbbq	%rdi, %rdi
	andl	$2, %edi
	leaq	-4(%rax,%rdi), %rax
	movq	%rax, 184(%rbx)
	jmp	.L23972
.L23976:
	cmpq	%rdx, %rcx
	jbe	.L23975
	jmp	.L23990
	.cfi_endproc
.LFE2440:
	.size	z900_branch_and_save_register, .-z900_branch_and_save_register
	.p2align 4,,15
	.globl	z900_branch_and_save
	.type	z900_branch_and_save, @function
z900_branch_and_save:
.LFB2441:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edi
	shrl	$20, %ecx
	shrl	$16, %edi
	movl	%eax, %edx
	andl	$15, %ecx
	andl	$4095, %edx
	andl	$15, %edi
	jne	.L24021
.L23995:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L23996
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L23996:
	movzbl	103(%rsi), %eax
	testb	$1, %al
	je	.L23997
	movq	136(%rsi), %rax
	movslq	%ecx, %rcx
	movq	168(%rsi), %rdi
	leaq	4(%rax,%rdi), %rdi
	subq	144(%rsi), %rdi
	movq	%rdi, 192(%rsi,%rcx,8)
.L23998:
	movq	120(%rsi), %rdi
	movq	%rax, 184(%rsi)
	movzbl	808(%rsi), %ecx
	andq	%rdi, %rdx
	testb	$5, %cl
	jne	.L24000
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24000
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L23997:
	testb	$2, %al
	movl	168(%rsi), %edi
	movslq	%ecx, %rcx
	movq	136(%rsi), %rax
	leal	4(%rdi,%rax), %edi
	je	.L23999
	subl	144(%rsi), %edi
	orl	$-2147483648, %edi
	movl	%edi, 192(%rsi,%rcx,8)
	jmp	.L23998
	.p2align 4,,10
	.p2align 3
.L23999:
	subl	144(%rsi), %edi
	andl	$16777215, %edi
	movl	%edi, 192(%rsi,%rcx,8)
	jmp	.L23998
.L24000:
	testb	$1, %cl
	jne	.L24022
.L24002:
	andb	$4, %cl
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24023
.L23994:
	rep ret
.L24021:
	movslq	%edi, %rdi
	addq	192(%rsi,%rdi,8), %rdx
	jmp	.L23995
.L24023:
	testb	$-128, 54(%rsi)
	je	.L23994
	testb	$-128, 402(%rsi)
	je	.L24005
	movq	416(%rsi), %rax
	andq	%rdi, %rdx
	movq	408(%rsi), %rcx
	cmpq	%rcx, %rax
	jb	.L24006
	cmpq	%rdx, %rcx
	ja	.L23994
	cmpq	%rdx, %rax
	jae	.L24005
	.p2align 4,,5
	ret
.L24022:
	movq	%rcx, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rax
	movq	%rax, 184(%rsi)
	jmp	.L24002
.L24006:
	cmpq	%rdx, %rcx
	jbe	.L24005
	cmpq	%rdx, %rax
	jb	.L23994
.L24005:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2441:
	.size	z900_branch_and_save, .-z900_branch_and_save
	.p2align 4,,15
	.globl	z900_branch_and_save_and_set_mode
	.type	z900_branch_and_save_and_set_mode, @function
z900_branch_and_save_and_set_mode:
.LFB2442:
	.cfi_startproc
	pushq	%r14
	.cfi_def_cfa_offset 16
	.cfi_offset 14, -16
	pushq	%r13
	.cfi_def_cfa_offset 24
	.cfi_offset 13, -24
	pushq	%r12
	.cfi_def_cfa_offset 32
	.cfi_offset 12, -32
	pushq	%rbp
	.cfi_def_cfa_offset 40
	.cfi_offset 6, -40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset 3, -48
	movq	%rsi, %rbx
	movzbl	1(%rdi), %r12d
	movq	424(%rsi), %rdi
	movzbl	%r12b, %ebp
	andl	$15, %r12d
	movslq	%r12d, %rax
	sarl	$4, %ebp
	movq	192(%rsi,%rax,8), %r13
	movabsq	$4611686018427387904, %rax
	testq	%rax, %rdi
	je	.L24025
	testl	%r12d, %r12d
	movzbl	103(%rsi), %eax
	jne	.L24026
.L24029:
	movq	136(%rbx), %rdx
.L24027:
	testb	$1, %al
	movslq	%ebp, %rbp
	je	.L24031
	movq	%rdx, %rcx
	movq	168(%rbx), %rax
	subq	144(%rbx), %rcx
	leaq	3(%rcx,%rax), %rax
	movq	%rax, 192(%rbx,%rbp,8)
.L24032:
	testl	%r12d, %r12d
	je	.L24034
	testb	$1, %r13b
	je	.L24035
	orb	$3, 103(%rbx)
	movq	$-1, 120(%rbx)
	xorq	$1, %r13
	movq	$-1, %rcx
.L24036:
	movzbl	808(%rbx), %eax
	andq	%rcx, %r13
	movq	%rdx, 184(%rbx)
	testb	$5, %al
	jne	.L24038
	movq	%r13, %rsi
	andq	$-4095, %rsi
	cmpq	168(%rbx), %rsi
	jne	.L24038
	xorq	152(%rbx), %r13
	movq	%r13, 136(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L24025:
	.cfi_restore_state
	testq	%rdi, %rdi
	js	.L24058
.L24060:
	movzbl	103(%rbx), %eax
	jmp	.L24029
	.p2align 4,,10
	.p2align 3
.L24034:
	addq	$2, %rdx
	movq	%rdx, 136(%rbx)
.L24024:
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbp
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r13
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L24031:
	.cfi_restore_state
	testb	$2, %al
	movl	168(%rbx), %eax
	je	.L24033
	subl	144(%rbx), %eax
	leal	2(%rax,%rdx), %eax
	orl	$-2147483648, %eax
	movl	%eax, 192(%rbx,%rbp,8)
	jmp	.L24032
	.p2align 4,,10
	.p2align 3
.L24033:
	subl	144(%rbx), %eax
	leal	2(%rax,%rdx), %eax
	andl	$16777215, %eax
	movl	%eax, 192(%rbx,%rbp,8)
	jmp	.L24032
	.p2align 4,,10
	.p2align 3
.L24035:
	testl	$2147483648, %r13d
	je	.L24037
	movzbl	103(%rbx), %eax
	movq	$2147483647, 120(%rbx)
	movl	$2147483647, %ecx
	andl	$-2, %eax
	orl	$2, %eax
	movb	%al, 103(%rbx)
	jmp	.L24036
	.p2align 4,,10
	.p2align 3
.L24026:
	movq	%rax, %rcx
	movq	%r13, %rdx
	andl	$1, %ecx
	andl	$1, %edx
	cmpq	%rdx, %rcx
	je	.L24028
	movq	136(%rsi), %r14
	movq	%rbx, %rdx
	shrq	$63, %rdi
	movb	$2, 130(%rsi)
	leaq	2(%r14), %rax
	movq	%rax, 136(%rsi)
	movq	%r13, %rsi
	andq	$-2, %rsi
	call	z900_trace_ms
	movq	%r14, 136(%rbx)
	movq	%r14, %rdx
	movq	%rax, 424(%rbx)
	movzbl	103(%rbx), %eax
	jmp	.L24027
	.p2align 4,,10
	.p2align 3
.L24058:
	testl	%r12d, %r12d
	je	.L24060
.L24046:
	testb	$1, %r13b
	movb	$0, 130(%rbx)
	movl	$1, %edi
	jne	.L24030
	movq	%r13, %rdi
	shrq	$31, %rdi
	andl	$1, %edi
.L24030:
	movq	%r13, %rsi
	movq	%rbx, %rdx
	andq	$-2, %rsi
	call	z900_trace_br
	movb	$2, 130(%rbx)
	movq	136(%rbx), %rdx
	movq	%rax, 424(%rbx)
	movzbl	103(%rbx), %eax
	jmp	.L24027
	.p2align 4,,10
	.p2align 3
.L24037:
	andb	$-4, 103(%rbx)
	movq	$16777215, 120(%rbx)
	movl	$16777215, %ecx
	jmp	.L24036
.L24028:
	testq	%rdi, %rdi
	jns	.L24029
	jmp	.L24046
.L24038:
	testb	$1, %al
	.p2align 4,,6
	jne	.L24062
.L24040:
	testb	$4, %al
	movq	%r13, 112(%rbx)
	movq	$0, 160(%rbx)
	je	.L24024
	testb	$-128, 54(%rbx)
	je	.L24024
	testb	$-128, 402(%rbx)
	je	.L24043
	movq	416(%rbx), %rax
	andq	%r13, %rcx
	movq	408(%rbx), %rdx
	cmpq	%rdx, %rax
	jb	.L24044
	cmpq	%rcx, %rdx
	ja	.L24024
.L24061:
	cmpq	%rcx, %rax
	jb	.L24024
.L24043:
	orl	$8388608, 56(%rbx)
	jmp	.L24024
.L24062:
	movl	%eax, %esi
	andl	$2, %esi
	cmpb	$1, %sil
	sbbq	%rsi, %rsi
	andl	$2, %esi
	leaq	-4(%rdx,%rsi), %rdx
	movq	%rdx, 184(%rbx)
	jmp	.L24040
.L24044:
	cmpq	%rcx, %rdx
	jbe	.L24043
	jmp	.L24061
	.cfi_endproc
.LFE2442:
	.size	z900_branch_and_save_and_set_mode, .-z900_branch_and_save_and_set_mode
	.p2align 4,,15
	.globl	z900_branch_and_set_mode
	.type	z900_branch_and_set_mode, @function
z900_branch_and_set_mode:
.LFB2443:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movzbl	1(%rdi), %r12d
	movzbl	%r12b, %ebp
	andl	$15, %r12d
	sarl	$4, %ebp
	testb	$64, 431(%rsi)
	movslq	%r12d, %rax
	movq	192(%rsi,%rax,8), %r13
	je	.L24064
	testl	%r12d, %r12d
	jne	.L24098
.L24064:
	testl	%ebp, %ebp
	je	.L24065
	movzbl	103(%rbx), %eax
	movslq	%ebp, %rbp
	testb	$1, %al
	je	.L24066
	orb	$1, 192(%rbx,%rbp,8)
.L24065:
	testl	%r12d, %r12d
	je	.L24068
	testb	$1, %r13b
	je	.L24069
	orb	$3, 103(%rbx)
	movq	$-1, 120(%rbx)
	xorq	$1, %r13
	movq	$-1, %rdx
.L24070:
	movzbl	808(%rbx), %eax
	andq	%rdx, %r13
	movq	136(%rbx), %rcx
	testb	$5, %al
	movq	%rcx, 184(%rbx)
	jne	.L24072
	movq	%r13, %rsi
	andq	$-4095, %rsi
	cmpq	168(%rbx), %rsi
	jne	.L24072
	xorq	152(%rbx), %r13
	movq	%r13, 136(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L24068:
	.cfi_restore_state
	addq	$2, 136(%rbx)
.L24063:
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L24069:
	.cfi_restore_state
	testl	$2147483648, %r13d
	je	.L24071
	movzbl	103(%rbx), %eax
	movq	$2147483647, 120(%rbx)
	movl	$2147483647, %edx
	andl	$-2, %eax
	orl	$2, %eax
	movb	%al, 103(%rbx)
	jmp	.L24070
	.p2align 4,,10
	.p2align 3
.L24066:
	testb	$2, %al
	je	.L24067
	orl	$-2147483648, 192(%rbx,%rbp,8)
	jmp	.L24065
	.p2align 4,,10
	.p2align 3
.L24098:
	movzbl	103(%rsi), %edx
	movq	%r13, %rax
	andl	$1, %eax
	andl	$1, %edx
	cmpq	%rax, %rdx
	je	.L24064
	addq	$2, 136(%rsi)
	movq	%rsi, %rdx
	xorl	%edi, %edi
	movb	$2, 130(%rsi)
	xorl	%esi, %esi
	call	z900_trace_ms
	movq	%rax, 424(%rbx)
	jmp	.L24064
	.p2align 4,,10
	.p2align 3
.L24067:
	andl	$2147483647, 192(%rbx,%rbp,8)
	jmp	.L24065
	.p2align 4,,10
	.p2align 3
.L24071:
	andb	$-4, 103(%rbx)
	movq	$16777215, 120(%rbx)
	movl	$16777215, %edx
	jmp	.L24070
.L24072:
	testb	$1, %al
	jne	.L24099
.L24074:
	testb	$4, %al
	movq	%r13, 112(%rbx)
	movq	$0, 160(%rbx)
	je	.L24063
	testb	$-128, 54(%rbx)
	je	.L24063
	testb	$-128, 402(%rbx)
	je	.L24077
	movq	416(%rbx), %rax
	andq	%r13, %rdx
	movq	408(%rbx), %rcx
	cmpq	%rcx, %rax
	jb	.L24078
	cmpq	%rdx, %rcx
	ja	.L24063
.L24097:
	cmpq	%rdx, %rax
	jb	.L24063
.L24077:
	orl	$8388608, 56(%rbx)
	jmp	.L24063
.L24099:
	movl	%eax, %esi
	andl	$2, %esi
	cmpb	$1, %sil
	sbbq	%rsi, %rsi
	andl	$2, %esi
	leaq	-4(%rcx,%rsi), %rcx
	movq	%rcx, 184(%rbx)
	jmp	.L24074
.L24078:
	cmpq	%rdx, %rcx
	jbe	.L24077
	jmp	.L24097
	.cfi_endproc
.LFE2443:
	.size	z900_branch_and_set_mode, .-z900_branch_and_set_mode
	.p2align 4,,15
	.globl	z900_branch_on_condition_register
	.type	z900_branch_on_condition_register, @function
z900_branch_on_condition_register:
.LFB2444:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	testb	$15, %al
	je	.L24101
	movzbl	100(%rsi), %ecx
	movl	$128, %edx
	sarl	%cl, %edx
	testl	%edx, %eax
	je	.L24101
	movq	136(%rsi), %r8
	movq	120(%rsi), %rcx
	movq	%r8, 184(%rsi)
	movzbl	1(%rdi), %eax
	movq	%rcx, %rdx
	andl	$15, %eax
	andq	192(%rsi,%rax,8), %rdx
	movq	%rdx, %rax
	movzbl	808(%rsi), %edx
	testb	$5, %dl
	jne	.L24102
	movq	%rax, %rdi
	andq	$-4095, %rdi
	cmpq	168(%rsi), %rdi
	jne	.L24102
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24101:
	addq	$2, 136(%rsi)
	ret
.L24102:
	testb	$1, %dl
	jne	.L24123
.L24104:
	andb	$4, %dl
	movq	%rax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24124
.L24100:
	rep ret
.L24124:
	testb	$-128, 54(%rsi)
	je	.L24100
	testb	$-128, 402(%rsi)
	je	.L24107
	movq	416(%rsi), %rdx
	andq	%rcx, %rax
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rdx
	jb	.L24108
	cmpq	%rax, %rdi
	ja	.L24100
	cmpq	%rax, %rdx
	jae	.L24107
	.p2align 4,,5
	ret
.L24123:
	movl	%edx, %edi
	andl	$2, %edi
	cmpb	$1, %dil
	sbbq	%rdi, %rdi
	andl	$2, %edi
	leaq	-4(%r8,%rdi), %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24104
.L24108:
	cmpq	%rax, %rdi
	jbe	.L24107
	cmpq	%rax, %rdx
	jb	.L24100
.L24107:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2444:
	.size	z900_branch_on_condition_register, .-z900_branch_on_condition_register
	.p2align 4,,15
	.globl	z900_store_character
	.type	z900_store_character, @function
z900_store_character:
.LFB2445:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %edi
	shrl	$20, %edx
	shrl	$16, %edi
	movl	%eax, %ecx
	andl	$15, %edx
	andl	$4095, %ecx
	andl	$15, %edi
	jne	.L24151
.L24126:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L24127
	movslq	%eax, %rdi
	addq	192(%rsi,%rdi,8), %rcx
.L24127:
	movslq	%edx, %rdx
	movb	$4, 130(%rsi)
	andq	120(%rsi), %rcx
	addq	$4, 136(%rsi)
	movq	%rcx, %rdi
	movzbl	192(%rsi,%rdx,8), %ebx
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24128
	movl	%ecx, %r8d
	addl	$1, %edx
	shrl	$12, %r8d
	movslq	%edx, %rdx
	andl	$1023, %r8d
	leaq	(%rsi,%r8,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rsi,%rdx,8)
	jne	.L24152
.L24129:
	movzbl	97(%rsi), %edx
	testb	%dl, %dl
	jne	.L24153
.L24130:
	movl	2224(%rsi), %r9d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r9, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24128
	testb	$2, 46264(%rsi,%r8)
	je	.L24128
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24131:
	movb	%bl, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24152:
	.cfi_restore_state
	movzbl	44216(%rsi,%r8), %r9d
	testb	%r9b, 1976(%rsi,%rdx)
	jne	.L24129
.L24128:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$1, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24131
.L24151:
	movslq	%edi, %rdi
	addq	192(%rsi,%rdi,8), %rcx
	jmp	.L24126
.L24153:
	cmpb	43192(%rsi,%r8), %dl
	je	.L24130
	jmp	.L24128
	.cfi_endproc
.LFE2445:
	.size	z900_store_character, .-z900_store_character
	.p2align 4,,15
	.globl	z900_branch_on_condition
	.type	z900_branch_on_condition, @function
z900_branch_on_condition:
.LFB2446:
	.cfi_startproc
	movzbl	100(%rsi), %ecx
	movl	$128, %eax
	movzbl	1(%rdi), %edx
	sarl	%cl, %eax
	testl	%eax, %edx
	je	.L24155
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	andl	$4095, %edx
	shrl	$12, %eax
	andl	$15, %ecx
	addq	192(%rsi,%rcx,8), %rdx
	andl	$15, %eax
	je	.L24156
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24156:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24157
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24157
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24155:
	addq	$4, 136(%rsi)
	ret
.L24157:
	testb	$1, %al
	jne	.L24175
.L24159:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24176
.L24154:
	rep ret
.L24176:
	testb	$-128, 54(%rsi)
	je	.L24154
	testb	$-128, 402(%rsi)
	je	.L24162
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24163
	cmpq	%rdx, %rdi
	ja	.L24154
	cmpq	%rdx, %rax
	jae	.L24162
	.p2align 4,,5
	ret
.L24175:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24159
.L24163:
	cmpq	%rdx, %rdi
	jbe	.L24162
	cmpq	%rdx, %rax
	jb	.L24154
.L24162:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2446:
	.size	z900_branch_on_condition, .-z900_branch_on_condition
	.p2align 4,,15
	.globl	z900_47_0
	.type	z900_47_0, @function
z900_47_0:
.LFB2447:
	.cfi_startproc
	movzbl	100(%rsi), %ecx
	movl	$128, %eax
	movzbl	1(%rdi), %edx
	sarl	%cl, %eax
	testl	%eax, %edx
	je	.L24178
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24179
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24179:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24180
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24180
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24178:
	addq	$4, 136(%rsi)
	ret
.L24180:
	testb	$1, %al
	jne	.L24198
.L24182:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24199
.L24177:
	rep ret
.L24199:
	testb	$-128, 54(%rsi)
	je	.L24177
	testb	$-128, 402(%rsi)
	je	.L24185
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24186
	cmpq	%rdx, %rdi
	ja	.L24177
	cmpq	%rdx, %rax
	jae	.L24185
	.p2align 4,,5
	ret
.L24198:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24182
.L24186:
	cmpq	%rdx, %rdi
	jbe	.L24185
	cmpq	%rdx, %rax
	jb	.L24177
.L24185:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2447:
	.size	z900_47_0, .-z900_47_0
	.p2align 4,,15
	.globl	z900_nop4
	.type	z900_nop4, @function
z900_nop4:
.LFB2448:
	.cfi_startproc
	addq	$4, 136(%rsi)
	ret
	.cfi_endproc
.LFE2448:
	.size	z900_nop4, .-z900_nop4
	.p2align 4,,15
	.globl	z900_4710
	.type	z900_4710, @function
z900_4710:
.LFB2449:
	.cfi_startproc
	cmpb	$3, 100(%rsi)
	je	.L24222
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24222:
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24203
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24203:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24204
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24204
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
.L24204:
	testb	$1, %al
	jne	.L24223
.L24206:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24224
.L24201:
	rep ret
.L24224:
	testb	$-128, 54(%rsi)
	je	.L24201
	testb	$-128, 402(%rsi)
	je	.L24209
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24210
	cmpq	%rdx, %rdi
	ja	.L24201
	cmpq	%rdx, %rax
	jae	.L24209
	.p2align 4,,5
	ret
.L24223:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24206
.L24210:
	cmpq	%rdx, %rdi
	jbe	.L24209
	cmpq	%rdx, %rax
	jb	.L24201
.L24209:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2449:
	.size	z900_4710, .-z900_4710
	.p2align 4,,15
	.globl	z900_4720
	.type	z900_4720, @function
z900_4720:
.LFB2450:
	.cfi_startproc
	cmpb	$2, 100(%rsi)
	je	.L24246
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24246:
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24227
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24227:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24228
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24228
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
.L24228:
	testb	$1, %al
	jne	.L24247
.L24230:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24248
.L24225:
	rep ret
.L24248:
	testb	$-128, 54(%rsi)
	je	.L24225
	testb	$-128, 402(%rsi)
	je	.L24233
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24234
	cmpq	%rdx, %rdi
	ja	.L24225
	cmpq	%rdx, %rax
	jae	.L24233
	.p2align 4,,5
	ret
.L24247:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24230
.L24234:
	cmpq	%rdx, %rdi
	jbe	.L24233
	cmpq	%rdx, %rax
	jb	.L24225
.L24233:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2450:
	.size	z900_4720, .-z900_4720
	.p2align 4,,15
	.globl	z900_4730
	.type	z900_4730, @function
z900_4730:
.LFB2451:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	jbe	.L24250
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24251
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24251:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24252
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24252
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24250:
	addq	$4, 136(%rsi)
	ret
.L24252:
	testb	$1, %al
	jne	.L24270
.L24254:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24271
.L24249:
	rep ret
.L24271:
	testb	$-128, 54(%rsi)
	je	.L24249
	testb	$-128, 402(%rsi)
	je	.L24257
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24258
	cmpq	%rdx, %rdi
	ja	.L24249
	cmpq	%rdx, %rax
	jae	.L24257
	.p2align 4,,5
	ret
.L24270:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24254
.L24258:
	cmpq	%rdx, %rdi
	jbe	.L24257
	cmpq	%rdx, %rax
	jb	.L24249
.L24257:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2451:
	.size	z900_4730, .-z900_4730
	.p2align 4,,15
	.globl	z900_4740
	.type	z900_4740, @function
z900_4740:
.LFB2452:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	je	.L24293
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24293:
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24274
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24274:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24275
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24275
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
.L24275:
	testb	$1, %al
	jne	.L24294
.L24277:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24295
.L24272:
	rep ret
.L24295:
	testb	$-128, 54(%rsi)
	je	.L24272
	testb	$-128, 402(%rsi)
	je	.L24280
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24281
	cmpq	%rdx, %rdi
	ja	.L24272
	cmpq	%rdx, %rax
	jae	.L24280
	.p2align 4,,5
	ret
.L24294:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24277
.L24281:
	cmpq	%rdx, %rdi
	jbe	.L24280
	cmpq	%rdx, %rax
	jb	.L24272
.L24280:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2452:
	.size	z900_4740, .-z900_4740
	.p2align 4,,15
	.globl	z900_4750
	.type	z900_4750, @function
z900_4750:
.LFB2453:
	.cfi_startproc
	testb	$1, 100(%rsi)
	je	.L24297
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24298
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24298:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24299
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24299
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24297:
	addq	$4, 136(%rsi)
	ret
.L24299:
	testb	$1, %al
	jne	.L24317
.L24301:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24318
.L24296:
	rep ret
.L24318:
	testb	$-128, 54(%rsi)
	je	.L24296
	testb	$-128, 402(%rsi)
	je	.L24304
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24305
	cmpq	%rdx, %rdi
	ja	.L24296
	cmpq	%rdx, %rax
	jae	.L24304
	.p2align 4,,5
	ret
.L24317:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24301
.L24305:
	cmpq	%rdx, %rdi
	jbe	.L24304
	cmpq	%rdx, %rax
	jb	.L24296
.L24304:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2453:
	.size	z900_4750, .-z900_4750
	.p2align 4,,15
	.globl	z900_4770
	.type	z900_4770, @function
z900_4770:
.LFB2454:
	.cfi_startproc
	cmpb	$0, 100(%rsi)
	je	.L24320
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24321
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24321:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24322
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24322
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24320:
	addq	$4, 136(%rsi)
	ret
.L24322:
	testb	$1, %al
	jne	.L24340
.L24324:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24341
.L24319:
	rep ret
.L24341:
	testb	$-128, 54(%rsi)
	je	.L24319
	testb	$-128, 402(%rsi)
	je	.L24327
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24328
	cmpq	%rdx, %rdi
	ja	.L24319
	cmpq	%rdx, %rax
	jae	.L24327
	.p2align 4,,5
	ret
.L24340:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24324
.L24328:
	cmpq	%rdx, %rdi
	jbe	.L24327
	cmpq	%rdx, %rax
	jb	.L24319
.L24327:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2454:
	.size	z900_4770, .-z900_4770
	.p2align 4,,15
	.globl	z900_4780
	.type	z900_4780, @function
z900_4780:
.LFB2455:
	.cfi_startproc
	cmpb	$0, 100(%rsi)
	jne	.L24343
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24344
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24344:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24345
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24345
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24343:
	addq	$4, 136(%rsi)
	ret
.L24345:
	testb	$1, %al
	jne	.L24363
.L24347:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24364
.L24342:
	rep ret
.L24364:
	testb	$-128, 54(%rsi)
	je	.L24342
	testb	$-128, 402(%rsi)
	je	.L24350
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24351
	cmpq	%rdx, %rdi
	ja	.L24342
	cmpq	%rdx, %rax
	jae	.L24350
	.p2align 4,,5
	ret
.L24363:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24347
.L24351:
	cmpq	%rdx, %rdi
	jbe	.L24350
	cmpq	%rdx, %rax
	jb	.L24342
.L24350:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2455:
	.size	z900_4780, .-z900_4780
	.p2align 4,,15
	.globl	z900_47A0
	.type	z900_47A0, @function
z900_47A0:
.LFB2456:
	.cfi_startproc
	testb	$1, 100(%rsi)
	jne	.L24366
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24367
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24367:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24368
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24368
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24366:
	addq	$4, 136(%rsi)
	ret
.L24368:
	testb	$1, %al
	jne	.L24386
.L24370:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24387
.L24365:
	rep ret
.L24387:
	testb	$-128, 54(%rsi)
	je	.L24365
	testb	$-128, 402(%rsi)
	je	.L24373
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24374
	cmpq	%rdx, %rdi
	ja	.L24365
	cmpq	%rdx, %rax
	jae	.L24373
	.p2align 4,,5
	ret
.L24386:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24370
.L24374:
	cmpq	%rdx, %rdi
	jbe	.L24373
	cmpq	%rdx, %rax
	jb	.L24365
.L24373:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2456:
	.size	z900_47A0, .-z900_47A0
	.p2align 4,,15
	.globl	z900_47B0
	.type	z900_47B0, @function
z900_47B0:
.LFB2457:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	je	.L24389
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24390
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24390:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24391
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24391
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24389:
	addq	$4, 136(%rsi)
	ret
.L24391:
	testb	$1, %al
	jne	.L24409
.L24393:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24410
.L24388:
	rep ret
.L24410:
	testb	$-128, 54(%rsi)
	je	.L24388
	testb	$-128, 402(%rsi)
	je	.L24396
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24397
	cmpq	%rdx, %rdi
	ja	.L24388
	cmpq	%rdx, %rax
	jae	.L24396
	.p2align 4,,5
	ret
.L24409:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24393
.L24397:
	cmpq	%rdx, %rdi
	jbe	.L24396
	cmpq	%rdx, %rax
	jb	.L24388
.L24396:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2457:
	.size	z900_47B0, .-z900_47B0
	.p2align 4,,15
	.globl	z900_47C0
	.type	z900_47C0, @function
z900_47C0:
.LFB2458:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	jbe	.L24432
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24432:
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24413
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24413:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24414
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24414
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
.L24414:
	testb	$1, %al
	jne	.L24433
.L24416:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24434
.L24411:
	rep ret
.L24434:
	testb	$-128, 54(%rsi)
	je	.L24411
	testb	$-128, 402(%rsi)
	je	.L24419
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24420
	cmpq	%rdx, %rdi
	ja	.L24411
	cmpq	%rdx, %rax
	jae	.L24419
	.p2align 4,,5
	ret
.L24433:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24416
.L24420:
	cmpq	%rdx, %rdi
	jbe	.L24419
	cmpq	%rdx, %rax
	jb	.L24411
.L24419:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2458:
	.size	z900_47C0, .-z900_47C0
	.p2align 4,,15
	.globl	z900_47D0
	.type	z900_47D0, @function
z900_47D0:
.LFB2459:
	.cfi_startproc
	cmpb	$2, 100(%rsi)
	je	.L24436
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24437
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24437:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24438
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24438
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24436:
	addq	$4, 136(%rsi)
	ret
.L24438:
	testb	$1, %al
	jne	.L24456
.L24440:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24457
.L24435:
	rep ret
.L24457:
	testb	$-128, 54(%rsi)
	je	.L24435
	testb	$-128, 402(%rsi)
	je	.L24443
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24444
	cmpq	%rdx, %rdi
	ja	.L24435
	cmpq	%rdx, %rax
	jae	.L24443
	.p2align 4,,5
	ret
.L24456:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24440
.L24444:
	cmpq	%rdx, %rdi
	jbe	.L24443
	cmpq	%rdx, %rax
	jb	.L24435
.L24443:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2459:
	.size	z900_47D0, .-z900_47D0
	.p2align 4,,15
	.globl	z900_47E0
	.type	z900_47E0, @function
z900_47E0:
.LFB2460:
	.cfi_startproc
	cmpb	$3, 100(%rsi)
	je	.L24459
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24460
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24460:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24461
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24461
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L24459:
	addq	$4, 136(%rsi)
	ret
.L24461:
	testb	$1, %al
	jne	.L24479
.L24463:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24480
.L24458:
	rep ret
.L24480:
	testb	$-128, 54(%rsi)
	je	.L24458
	testb	$-128, 402(%rsi)
	je	.L24466
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24467
	cmpq	%rdx, %rdi
	ja	.L24458
	cmpq	%rdx, %rax
	jae	.L24466
	.p2align 4,,5
	ret
.L24479:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24463
.L24467:
	cmpq	%rdx, %rdi
	jbe	.L24466
	cmpq	%rdx, %rax
	jb	.L24458
.L24466:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2460:
	.size	z900_47E0, .-z900_47E0
	.p2align 4,,15
	.globl	z900_47F0
	.type	z900_47F0, @function
z900_47F0:
.LFB2461:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L24482
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L24482:
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rcx, %rdx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L24483
	movq	%rdx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L24483
	xorq	152(%rsi), %rdx
	movq	%rdx, 136(%rsi)
	ret
.L24483:
	testb	$1, %al
	jne	.L24501
.L24485:
	testb	$4, %al
	movq	%rdx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L24502
.L24481:
	rep ret
.L24502:
	testb	$-128, 54(%rsi)
	je	.L24481
	testb	$-128, 402(%rsi)
	je	.L24488
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L24489
	cmpq	%rdx, %rdi
	ja	.L24481
	cmpq	%rdx, %rax
	jae	.L24488
	.p2align 4,,5
	ret
.L24501:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L24485
.L24489:
	cmpq	%rdx, %rdi
	jbe	.L24488
	cmpq	%rdx, %rax
	jb	.L24481
.L24488:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2461:
	.size	z900_47F0, .-z900_47F0
	.p2align 4,,15
	.globl	z900_and
	.type	z900_and, @function
z900_and:
.LFB2462:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L24535
.L24504:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L24505
	movslq	%eax, %rdx
	addq	192(%rbx,%rdx,8), %rdi
.L24505:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24536
.L24506:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24508
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24537
.L24509:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24538
.L24510:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24508
	testb	$4, 46264(%rbx,%rsi)
	je	.L24508
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24511:
	movl	(%rax), %eax
	bswap	%eax
.L24512:
	movslq	%ebp, %rbp
	leaq	(%rbx,%rbp,8), %rdx
	andl	%eax, 192(%rdx)
	setne	100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L24537:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24509
.L24508:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24511
.L24536:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24506
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24512
.L24535:
	movslq	%edx, %rdx
	addq	192(%rsi,%rdx,8), %rdi
	jmp	.L24504
.L24538:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24510
	jmp	.L24508
	.cfi_endproc
.LFE2462:
	.size	z900_and, .-z900_and
	.p2align 4,,15
	.globl	z900_load
	.type	z900_load, @function
z900_load:
.LFB2463:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %ebp
	shrl	$16, %ecx
	movl	%eax, %edx
	shrl	$20, %ebp
	andl	$4095, %edx
	andl	$15, %ecx
	shrl	$12, %eax
	andl	$15, %ebp
	addq	192(%rsi,%rcx,8), %rdx
	andl	$15, %eax
	je	.L24540
	movslq	%eax, %rcx
	addq	192(%rsi,%rcx,8), %rdx
.L24540:
	movq	%rdx, %rdi
	movb	$4, 130(%rbx)
	andq	120(%rbx), %rdi
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24567
.L24541:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24543
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24568
.L24544:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24569
.L24545:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24543
	testb	$4, 46264(%rbx,%rsi)
	je	.L24543
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24546:
	movl	(%rax), %eax
	bswap	%eax
.L24547:
	movslq	%ebp, %rbp
	movl	%eax, 192(%rbx,%rbp,8)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L24568:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24544
.L24543:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24546
.L24567:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24541
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24547
.L24569:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24545
	.p2align 4,,4
	jmp	.L24543
	.cfi_endproc
.LFE2463:
	.size	z900_load, .-z900_load
	.p2align 4,,15
	.globl	z900_5800
	.type	z900_5800, @function
z900_5800:
.LFB2464:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24571
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24571:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24598
.L24572:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24574
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24599
.L24575:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24600
.L24576:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24574
	testb	$4, 46264(%rbx,%rsi)
	je	.L24574
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24577:
	movl	(%rax), %eax
	bswap	%eax
.L24578:
	movl	%eax, 192(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24599:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24575
.L24574:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24577
.L24598:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24572
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24578
.L24600:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24576
	.p2align 4,,4
	jmp	.L24574
	.cfi_endproc
.LFE2464:
	.size	z900_5800, .-z900_5800
	.p2align 4,,15
	.globl	z900_5810
	.type	z900_5810, @function
z900_5810:
.LFB2465:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24602
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24602:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24629
.L24603:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24605
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24630
.L24606:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24631
.L24607:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24605
	testb	$4, 46264(%rbx,%rsi)
	je	.L24605
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24608:
	movl	(%rax), %eax
	bswap	%eax
.L24609:
	movl	%eax, 200(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24630:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24606
.L24605:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24608
.L24629:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24603
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24609
.L24631:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24607
	.p2align 4,,4
	jmp	.L24605
	.cfi_endproc
.LFE2465:
	.size	z900_5810, .-z900_5810
	.p2align 4,,15
	.globl	z900_5820
	.type	z900_5820, @function
z900_5820:
.LFB2466:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24633
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24633:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24660
.L24634:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24636
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24661
.L24637:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24662
.L24638:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24636
	testb	$4, 46264(%rbx,%rsi)
	je	.L24636
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24639:
	movl	(%rax), %eax
	bswap	%eax
.L24640:
	movl	%eax, 208(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24661:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24637
.L24636:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24639
.L24660:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24634
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24640
.L24662:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24638
	.p2align 4,,4
	jmp	.L24636
	.cfi_endproc
.LFE2466:
	.size	z900_5820, .-z900_5820
	.p2align 4,,15
	.globl	z900_5830
	.type	z900_5830, @function
z900_5830:
.LFB2467:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24664
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24664:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24691
.L24665:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24667
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24692
.L24668:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24693
.L24669:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24667
	testb	$4, 46264(%rbx,%rsi)
	je	.L24667
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24670:
	movl	(%rax), %eax
	bswap	%eax
.L24671:
	movl	%eax, 216(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24692:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24668
.L24667:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24670
.L24691:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24665
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24671
.L24693:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24669
	.p2align 4,,4
	jmp	.L24667
	.cfi_endproc
.LFE2467:
	.size	z900_5830, .-z900_5830
	.p2align 4,,15
	.globl	z900_5840
	.type	z900_5840, @function
z900_5840:
.LFB2468:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24695
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24695:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24722
.L24696:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24698
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24723
.L24699:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24724
.L24700:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24698
	testb	$4, 46264(%rbx,%rsi)
	je	.L24698
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24701:
	movl	(%rax), %eax
	bswap	%eax
.L24702:
	movl	%eax, 224(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24723:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24699
.L24698:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24701
.L24722:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24696
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24702
.L24724:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24700
	.p2align 4,,4
	jmp	.L24698
	.cfi_endproc
.LFE2468:
	.size	z900_5840, .-z900_5840
	.p2align 4,,15
	.globl	z900_5850
	.type	z900_5850, @function
z900_5850:
.LFB2469:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24726
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24726:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24753
.L24727:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24729
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24754
.L24730:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24755
.L24731:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24729
	testb	$4, 46264(%rbx,%rsi)
	je	.L24729
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24732:
	movl	(%rax), %eax
	bswap	%eax
.L24733:
	movl	%eax, 232(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24754:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24730
.L24729:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24732
.L24753:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24727
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24733
.L24755:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24731
	.p2align 4,,4
	jmp	.L24729
	.cfi_endproc
.LFE2469:
	.size	z900_5850, .-z900_5850
	.p2align 4,,15
	.globl	z900_5860
	.type	z900_5860, @function
z900_5860:
.LFB2470:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24757
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24757:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24784
.L24758:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24760
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24785
.L24761:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24786
.L24762:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24760
	testb	$4, 46264(%rbx,%rsi)
	je	.L24760
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24763:
	movl	(%rax), %eax
	bswap	%eax
.L24764:
	movl	%eax, 240(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24785:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24761
.L24760:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24763
.L24784:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24758
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24764
.L24786:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24762
	.p2align 4,,4
	jmp	.L24760
	.cfi_endproc
.LFE2470:
	.size	z900_5860, .-z900_5860
	.p2align 4,,15
	.globl	z900_5870
	.type	z900_5870, @function
z900_5870:
.LFB2471:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24788
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24788:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24815
.L24789:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24791
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24816
.L24792:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24817
.L24793:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24791
	testb	$4, 46264(%rbx,%rsi)
	je	.L24791
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24794:
	movl	(%rax), %eax
	bswap	%eax
.L24795:
	movl	%eax, 248(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24816:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24792
.L24791:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24794
.L24815:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24789
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24795
.L24817:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24793
	.p2align 4,,4
	jmp	.L24791
	.cfi_endproc
.LFE2471:
	.size	z900_5870, .-z900_5870
	.p2align 4,,15
	.globl	z900_5880
	.type	z900_5880, @function
z900_5880:
.LFB2472:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24819
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24819:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24846
.L24820:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24822
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24847
.L24823:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24848
.L24824:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24822
	testb	$4, 46264(%rbx,%rsi)
	je	.L24822
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24825:
	movl	(%rax), %eax
	bswap	%eax
.L24826:
	movl	%eax, 256(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24847:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24823
.L24822:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24825
.L24846:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24820
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24826
.L24848:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24824
	.p2align 4,,4
	jmp	.L24822
	.cfi_endproc
.LFE2472:
	.size	z900_5880, .-z900_5880
	.p2align 4,,15
	.globl	z900_5890
	.type	z900_5890, @function
z900_5890:
.LFB2473:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24850
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24850:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24877
.L24851:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24853
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24878
.L24854:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24879
.L24855:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24853
	testb	$4, 46264(%rbx,%rsi)
	je	.L24853
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24856:
	movl	(%rax), %eax
	bswap	%eax
.L24857:
	movl	%eax, 264(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24878:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24854
.L24853:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24856
.L24877:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24851
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24857
.L24879:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24855
	.p2align 4,,4
	jmp	.L24853
	.cfi_endproc
.LFE2473:
	.size	z900_5890, .-z900_5890
	.p2align 4,,15
	.globl	z900_58A0
	.type	z900_58A0, @function
z900_58A0:
.LFB2474:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24881
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24881:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24908
.L24882:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24884
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24909
.L24885:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24910
.L24886:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24884
	testb	$4, 46264(%rbx,%rsi)
	je	.L24884
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24887:
	movl	(%rax), %eax
	bswap	%eax
.L24888:
	movl	%eax, 272(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24909:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24885
.L24884:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24887
.L24908:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24882
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24888
.L24910:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24886
	.p2align 4,,4
	jmp	.L24884
	.cfi_endproc
.LFE2474:
	.size	z900_58A0, .-z900_58A0
	.p2align 4,,15
	.globl	z900_58B0
	.type	z900_58B0, @function
z900_58B0:
.LFB2475:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24912
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24912:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24939
.L24913:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24915
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24940
.L24916:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24941
.L24917:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24915
	testb	$4, 46264(%rbx,%rsi)
	je	.L24915
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24918:
	movl	(%rax), %eax
	bswap	%eax
.L24919:
	movl	%eax, 280(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24940:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24916
.L24915:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24918
.L24939:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24913
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24919
.L24941:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24917
	.p2align 4,,4
	jmp	.L24915
	.cfi_endproc
.LFE2475:
	.size	z900_58B0, .-z900_58B0
	.p2align 4,,15
	.globl	z900_58C0
	.type	z900_58C0, @function
z900_58C0:
.LFB2476:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24943
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24943:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L24970
.L24944:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24946
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L24971
.L24947:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L24972
.L24948:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24946
	testb	$4, 46264(%rbx,%rsi)
	je	.L24946
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24949:
	movl	(%rax), %eax
	bswap	%eax
.L24950:
	movl	%eax, 288(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L24971:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24947
.L24946:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24949
.L24970:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24944
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24950
.L24972:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24948
	.p2align 4,,4
	jmp	.L24946
	.cfi_endproc
.LFE2476:
	.size	z900_58C0, .-z900_58C0
	.p2align 4,,15
	.globl	z900_58D0
	.type	z900_58D0, @function
z900_58D0:
.LFB2477:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L24974
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L24974:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L25001
.L24975:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L24977
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L25002
.L24978:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L25003
.L24979:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L24977
	testb	$4, 46264(%rbx,%rsi)
	je	.L24977
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L24980:
	movl	(%rax), %eax
	bswap	%eax
.L24981:
	movl	%eax, 296(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25002:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L24978
.L24977:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L24980
.L25001:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L24975
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L24981
.L25003:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L24979
	.p2align 4,,4
	jmp	.L24977
	.cfi_endproc
.LFE2477:
	.size	z900_58D0, .-z900_58D0
	.p2align 4,,15
	.globl	z900_58E0
	.type	z900_58E0, @function
z900_58E0:
.LFB2478:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L25005
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L25005:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L25032
.L25006:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25008
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L25033
.L25009:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L25034
.L25010:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L25008
	testb	$4, 46264(%rbx,%rsi)
	je	.L25008
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L25011:
	movl	(%rax), %eax
	bswap	%eax
.L25012:
	movl	%eax, 304(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25033:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L25009
.L25008:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L25011
.L25032:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25006
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L25012
.L25034:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L25010
	.p2align 4,,4
	jmp	.L25008
	.cfi_endproc
.LFE2478:
	.size	z900_58E0, .-z900_58E0
	.p2align 4,,15
	.globl	z900_58F0
	.type	z900_58F0, @function
z900_58F0:
.LFB2479:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L25036
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L25036:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L25063
.L25037:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25039
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L25064
.L25040:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L25065
.L25041:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L25039
	testb	$4, 46264(%rbx,%rsi)
	je	.L25039
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L25042:
	movl	(%rax), %eax
	bswap	%eax
.L25043:
	movl	%eax, 312(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25064:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L25040
.L25039:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L25042
.L25063:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25037
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L25043
.L25065:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L25041
	.p2align 4,,4
	jmp	.L25039
	.cfi_endproc
.LFE2479:
	.size	z900_58F0, .-z900_58F0
	.p2align 4,,15
	.globl	z900_store
	.type	z900_store, @function
z900_store:
.LFB2480:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %edi
	shrl	$16, %edx
	movl	%eax, %ecx
	shrl	$20, %edi
	andl	$4095, %ecx
	andl	$15, %edx
	shrl	$12, %eax
	andl	$15, %edi
	addq	192(%rsi,%rdx,8), %rcx
	andl	$15, %eax
	je	.L25067
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rcx
.L25067:
	andq	120(%rsi), %rcx
	movb	$4, 130(%rsi)
	movslq	%edi, %rdi
	addq	$4, 136(%rsi)
	testb	$3, %cl
	movq	%rcx, %r10
	movl	192(%rsi,%rdi,8), %ebx
	jne	.L25095
.L25068:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25070
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25096
.L25071:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25097
.L25072:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25070
	testb	$2, 46264(%rsi,%rdx)
	je	.L25070
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25073:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25096:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25071
.L25070:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25073
.L25095:
	movl	%ecx, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25068
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25097:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25072
	jmp	.L25070
	.cfi_endproc
.LFE2480:
	.size	z900_store, .-z900_store
	.p2align 4,,15
	.globl	z900_5000
	.type	z900_5000, @function
z900_5000:
.LFB2481:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25099
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25099:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	192(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25127
.L25100:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25102
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25128
.L25103:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25129
.L25104:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25102
	testb	$2, 46264(%rsi,%rdx)
	je	.L25102
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25105:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25128:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25103
.L25102:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25105
.L25127:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25100
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25129:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25104
	jmp	.L25102
	.cfi_endproc
.LFE2481:
	.size	z900_5000, .-z900_5000
	.p2align 4,,15
	.globl	z900_5010
	.type	z900_5010, @function
z900_5010:
.LFB2482:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25131
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25131:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	200(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25159
.L25132:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25134
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25160
.L25135:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25161
.L25136:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25134
	testb	$2, 46264(%rsi,%rdx)
	je	.L25134
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25137:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25160:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25135
.L25134:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25137
.L25159:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25132
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25161:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25136
	jmp	.L25134
	.cfi_endproc
.LFE2482:
	.size	z900_5010, .-z900_5010
	.p2align 4,,15
	.globl	z900_5020
	.type	z900_5020, @function
z900_5020:
.LFB2483:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25163
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25163:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	208(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25191
.L25164:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25166
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25192
.L25167:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25193
.L25168:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25166
	testb	$2, 46264(%rsi,%rdx)
	je	.L25166
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25169:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25192:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25167
.L25166:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25169
.L25191:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25164
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25193:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25168
	jmp	.L25166
	.cfi_endproc
.LFE2483:
	.size	z900_5020, .-z900_5020
	.p2align 4,,15
	.globl	z900_5030
	.type	z900_5030, @function
z900_5030:
.LFB2484:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25195
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25195:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	216(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25223
.L25196:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25198
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25224
.L25199:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25225
.L25200:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25198
	testb	$2, 46264(%rsi,%rdx)
	je	.L25198
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25201:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25224:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25199
.L25198:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25201
.L25223:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25196
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25225:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25200
	jmp	.L25198
	.cfi_endproc
.LFE2484:
	.size	z900_5030, .-z900_5030
	.p2align 4,,15
	.globl	z900_5040
	.type	z900_5040, @function
z900_5040:
.LFB2485:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25227
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25227:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	224(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25255
.L25228:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25230
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25256
.L25231:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25257
.L25232:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25230
	testb	$2, 46264(%rsi,%rdx)
	je	.L25230
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25233:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25256:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25231
.L25230:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25233
.L25255:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25228
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25257:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25232
	jmp	.L25230
	.cfi_endproc
.LFE2485:
	.size	z900_5040, .-z900_5040
	.p2align 4,,15
	.globl	z900_5050
	.type	z900_5050, @function
z900_5050:
.LFB2486:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25259
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25259:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	232(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25287
.L25260:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25262
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25288
.L25263:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25289
.L25264:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25262
	testb	$2, 46264(%rsi,%rdx)
	je	.L25262
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25265:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25288:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25263
.L25262:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25265
.L25287:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25260
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25289:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25264
	jmp	.L25262
	.cfi_endproc
.LFE2486:
	.size	z900_5050, .-z900_5050
	.p2align 4,,15
	.globl	z900_5060
	.type	z900_5060, @function
z900_5060:
.LFB2487:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25291
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25291:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	240(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25319
.L25292:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25294
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25320
.L25295:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25321
.L25296:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25294
	testb	$2, 46264(%rsi,%rdx)
	je	.L25294
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25297:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25320:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25295
.L25294:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25297
.L25319:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25292
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25321:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25296
	jmp	.L25294
	.cfi_endproc
.LFE2487:
	.size	z900_5060, .-z900_5060
	.p2align 4,,15
	.globl	z900_5070
	.type	z900_5070, @function
z900_5070:
.LFB2488:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25323
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25323:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	248(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25351
.L25324:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25326
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25352
.L25327:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25353
.L25328:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25326
	testb	$2, 46264(%rsi,%rdx)
	je	.L25326
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25329:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25352:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25327
.L25326:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25329
.L25351:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25324
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25353:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25328
	jmp	.L25326
	.cfi_endproc
.LFE2488:
	.size	z900_5070, .-z900_5070
	.p2align 4,,15
	.globl	z900_5080
	.type	z900_5080, @function
z900_5080:
.LFB2489:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25355
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25355:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	256(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25383
.L25356:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25358
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25384
.L25359:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25385
.L25360:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25358
	testb	$2, 46264(%rsi,%rdx)
	je	.L25358
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25361:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25384:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25359
.L25358:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25361
.L25383:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25356
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25385:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25360
	jmp	.L25358
	.cfi_endproc
.LFE2489:
	.size	z900_5080, .-z900_5080
	.p2align 4,,15
	.globl	z900_5090
	.type	z900_5090, @function
z900_5090:
.LFB2490:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25387
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25387:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	264(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25415
.L25388:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25390
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25416
.L25391:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25417
.L25392:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25390
	testb	$2, 46264(%rsi,%rdx)
	je	.L25390
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25393:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25416:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25391
.L25390:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25393
.L25415:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25388
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25417:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25392
	jmp	.L25390
	.cfi_endproc
.LFE2490:
	.size	z900_5090, .-z900_5090
	.p2align 4,,15
	.globl	z900_50A0
	.type	z900_50A0, @function
z900_50A0:
.LFB2491:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25419
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25419:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	272(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25447
.L25420:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25422
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25448
.L25423:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25449
.L25424:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25422
	testb	$2, 46264(%rsi,%rdx)
	je	.L25422
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25425:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25448:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25423
.L25422:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25425
.L25447:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25420
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25449:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25424
	jmp	.L25422
	.cfi_endproc
.LFE2491:
	.size	z900_50A0, .-z900_50A0
	.p2align 4,,15
	.globl	z900_50B0
	.type	z900_50B0, @function
z900_50B0:
.LFB2492:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25451
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25451:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	280(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25479
.L25452:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25454
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25480
.L25455:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25481
.L25456:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25454
	testb	$2, 46264(%rsi,%rdx)
	je	.L25454
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25457:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25480:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25455
.L25454:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25457
.L25479:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25452
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25481:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25456
	jmp	.L25454
	.cfi_endproc
.LFE2492:
	.size	z900_50B0, .-z900_50B0
	.p2align 4,,15
	.globl	z900_50C0
	.type	z900_50C0, @function
z900_50C0:
.LFB2493:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25483
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25483:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	288(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25511
.L25484:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25486
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25512
.L25487:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25513
.L25488:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25486
	testb	$2, 46264(%rsi,%rdx)
	je	.L25486
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25489:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25512:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25487
.L25486:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25489
.L25511:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25484
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25513:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25488
	jmp	.L25486
	.cfi_endproc
.LFE2493:
	.size	z900_50C0, .-z900_50C0
	.p2align 4,,15
	.globl	z900_50D0
	.type	z900_50D0, @function
z900_50D0:
.LFB2494:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25515
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25515:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	296(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25543
.L25516:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25518
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25544
.L25519:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25545
.L25520:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25518
	testb	$2, 46264(%rsi,%rdx)
	je	.L25518
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25521:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25544:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25519
.L25518:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25521
.L25543:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25516
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25545:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25520
	jmp	.L25518
	.cfi_endproc
.LFE2494:
	.size	z900_50D0, .-z900_50D0
	.p2align 4,,15
	.globl	z900_50E0
	.type	z900_50E0, @function
z900_50E0:
.LFB2495:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25547
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25547:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	304(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25575
.L25548:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25550
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25576
.L25551:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25577
.L25552:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25550
	testb	$2, 46264(%rsi,%rdx)
	je	.L25550
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25553:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25576:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25551
.L25550:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25553
.L25575:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25548
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25577:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25552
	jmp	.L25550
	.cfi_endproc
.LFE2495:
	.size	z900_50E0, .-z900_50E0
	.p2align 4,,15
	.globl	z900_50F0
	.type	z900_50F0, @function
z900_50F0:
.LFB2496:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r10d
	shrl	$12, %eax
	andl	$4095, %r10d
	andl	$15, %eax
	je	.L25579
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %r10
.L25579:
	andq	120(%rsi), %r10
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	312(%rsi), %ebx
	testb	$3, %r10b
	jne	.L25607
.L25580:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rsi,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25582
	leal	1(%rdx), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rsi,%rdx,8), %r8
	movq	2232(%r8), %rdi
	cmpq	%rdi, 320(%rsi,%rcx,8)
	jne	.L25608
.L25583:
	movzbl	97(%rsi), %ecx
	testb	%cl, %cl
	jne	.L25609
.L25584:
	movl	2224(%rsi), %edi
	movq	%r10, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%r8), %rcx
	jne	.L25582
	testb	$2, 46264(%rsi,%rdx)
	je	.L25582
	movq	%r10, %rax
	xorq	26808(%r8), %rax
.L25585:
	bswap	%ebx
	movl	%ebx, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25608:
	.cfi_restore_state
	movzbl	44216(%rsi,%rdx), %edi
	testb	%dil, 1976(%rsi,%rcx)
	jne	.L25583
.L25582:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$4, %r9d
	movl	$2, %ecx
	movl	%eax, %esi
	movq	%r10, %rdi
	call	z900_logical_to_main_l
	jmp	.L25585
.L25607:
	movl	%r10d, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25580
	movl	%ebx, %edi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	movq	%rsi, %rcx
	movl	%eax, %edx
	movq	%r10, %rsi
	jmp	z900_vstore4_full
.L25609:
	.cfi_restore_state
	cmpb	43192(%rsi,%rdx), %cl
	je	.L25584
	jmp	.L25582
	.cfi_endproc
.LFE2496:
	.size	z900_50F0, .-z900_50F0
	.p2align 4,,15
	.globl	z900_load_address
	.type	z900_load_address, @function
z900_load_address:
.LFB2497:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	movl	%eax, %ecx
	shrl	$16, %edi
	movl	%eax, %edx
	shrl	$20, %ecx
	andl	$4095, %edx
	andl	$15, %edi
	shrl	$12, %eax
	andl	$15, %ecx
	addq	192(%rsi,%rdi,8), %rdx
	andl	$15, %eax
	je	.L25611
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25611:
	andq	120(%rsi), %rdx
	movslq	%ecx, %rcx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25617
	movl	%edx, 192(%rsi,%rcx,8)
	ret
	.p2align 4,,10
	.p2align 3
.L25617:
	movq	%rdx, 192(%rsi,%rcx,8)
	ret
	.cfi_endproc
.LFE2497:
	.size	z900_load_address, .-z900_load_address
	.p2align 4,,15
	.globl	z900_4100
	.type	z900_4100, @function
z900_4100:
.LFB2498:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25619
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25619:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25625
	movl	%edx, 192(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25625:
	movq	%rdx, 192(%rsi)
	ret
	.cfi_endproc
.LFE2498:
	.size	z900_4100, .-z900_4100
	.p2align 4,,15
	.globl	z900_4110
	.type	z900_4110, @function
z900_4110:
.LFB2499:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25627
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25627:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25633
	movl	%edx, 200(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25633:
	movq	%rdx, 200(%rsi)
	ret
	.cfi_endproc
.LFE2499:
	.size	z900_4110, .-z900_4110
	.p2align 4,,15
	.globl	z900_4120
	.type	z900_4120, @function
z900_4120:
.LFB2500:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25635
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25635:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25641
	movl	%edx, 208(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25641:
	movq	%rdx, 208(%rsi)
	ret
	.cfi_endproc
.LFE2500:
	.size	z900_4120, .-z900_4120
	.p2align 4,,15
	.globl	z900_4130
	.type	z900_4130, @function
z900_4130:
.LFB2501:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25643
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25643:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25649
	movl	%edx, 216(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25649:
	movq	%rdx, 216(%rsi)
	ret
	.cfi_endproc
.LFE2501:
	.size	z900_4130, .-z900_4130
	.p2align 4,,15
	.globl	z900_4140
	.type	z900_4140, @function
z900_4140:
.LFB2502:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25651
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25651:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25657
	movl	%edx, 224(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25657:
	movq	%rdx, 224(%rsi)
	ret
	.cfi_endproc
.LFE2502:
	.size	z900_4140, .-z900_4140
	.p2align 4,,15
	.globl	z900_4150
	.type	z900_4150, @function
z900_4150:
.LFB2503:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25659
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25659:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25665
	movl	%edx, 232(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25665:
	movq	%rdx, 232(%rsi)
	ret
	.cfi_endproc
.LFE2503:
	.size	z900_4150, .-z900_4150
	.p2align 4,,15
	.globl	z900_4160
	.type	z900_4160, @function
z900_4160:
.LFB2504:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25667
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25667:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25673
	movl	%edx, 240(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25673:
	movq	%rdx, 240(%rsi)
	ret
	.cfi_endproc
.LFE2504:
	.size	z900_4160, .-z900_4160
	.p2align 4,,15
	.globl	z900_4170
	.type	z900_4170, @function
z900_4170:
.LFB2505:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25675
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25675:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25681
	movl	%edx, 248(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25681:
	movq	%rdx, 248(%rsi)
	ret
	.cfi_endproc
.LFE2505:
	.size	z900_4170, .-z900_4170
	.p2align 4,,15
	.globl	z900_4180
	.type	z900_4180, @function
z900_4180:
.LFB2506:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25683
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25683:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25689
	movl	%edx, 256(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25689:
	movq	%rdx, 256(%rsi)
	ret
	.cfi_endproc
.LFE2506:
	.size	z900_4180, .-z900_4180
	.p2align 4,,15
	.globl	z900_4190
	.type	z900_4190, @function
z900_4190:
.LFB2507:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25691
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25691:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25697
	movl	%edx, 264(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25697:
	movq	%rdx, 264(%rsi)
	ret
	.cfi_endproc
.LFE2507:
	.size	z900_4190, .-z900_4190
	.p2align 4,,15
	.globl	z900_41A0
	.type	z900_41A0, @function
z900_41A0:
.LFB2508:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25699
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25699:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25705
	movl	%edx, 272(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25705:
	movq	%rdx, 272(%rsi)
	ret
	.cfi_endproc
.LFE2508:
	.size	z900_41A0, .-z900_41A0
	.p2align 4,,15
	.globl	z900_41B0
	.type	z900_41B0, @function
z900_41B0:
.LFB2509:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25707
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25707:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25713
	movl	%edx, 280(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25713:
	movq	%rdx, 280(%rsi)
	ret
	.cfi_endproc
.LFE2509:
	.size	z900_41B0, .-z900_41B0
	.p2align 4,,15
	.globl	z900_41C0
	.type	z900_41C0, @function
z900_41C0:
.LFB2510:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25715
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25715:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25721
	movl	%edx, 288(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25721:
	movq	%rdx, 288(%rsi)
	ret
	.cfi_endproc
.LFE2510:
	.size	z900_41C0, .-z900_41C0
	.p2align 4,,15
	.globl	z900_41D0
	.type	z900_41D0, @function
z900_41D0:
.LFB2511:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25723
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25723:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25729
	movl	%edx, 296(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25729:
	movq	%rdx, 296(%rsi)
	ret
	.cfi_endproc
.LFE2511:
	.size	z900_41D0, .-z900_41D0
	.p2align 4,,15
	.globl	z900_41E0
	.type	z900_41E0, @function
z900_41E0:
.LFB2512:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25731
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25731:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25737
	movl	%edx, 304(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25737:
	movq	%rdx, 304(%rsi)
	ret
	.cfi_endproc
.LFE2512:
	.size	z900_41E0, .-z900_41E0
	.p2align 4,,15
	.globl	z900_41F0
	.type	z900_41F0, @function
z900_41F0:
.LFB2513:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$12, %eax
	andl	$4095, %edx
	andl	$15, %eax
	je	.L25739
	cltq
	addq	192(%rsi,%rax,8), %rdx
.L25739:
	andq	120(%rsi), %rdx
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	jne	.L25745
	movl	%edx, 312(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L25745:
	movq	%rdx, 312(%rsi)
	ret
	.cfi_endproc
.LFE2513:
	.size	z900_41F0, .-z900_41F0
	.p2align 4,,15
	.globl	z900_insert_character
	.type	z900_insert_character, @function
z900_insert_character:
.LFB2514:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %ecx
	shrl	$20, %ebp
	shrl	$16, %ecx
	movl	%eax, %edx
	andl	$15, %ebp
	andl	$4095, %edx
	andl	$15, %ecx
	jne	.L25772
.L25747:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L25748
	movslq	%eax, %rcx
	addq	192(%rbx,%rcx,8), %rdx
.L25748:
	movq	%rdx, %rdi
	movb	$4, 130(%rbx)
	leal	5(%rax), %edx
	andq	120(%rbx), %rdi
	addq	$4, 136(%rbx)
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25749
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L25773
.L25750:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L25774
.L25751:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L25749
	testb	$4, 46264(%rbx,%rsi)
	je	.L25749
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L25752:
	movzbl	(%rax), %eax
	movslq	%ebp, %rbp
	movb	%al, 192(%rbx,%rbp,8)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L25773:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L25750
.L25749:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L25752
.L25772:
	movslq	%ecx, %rcx
	addq	192(%rsi,%rcx,8), %rdx
	jmp	.L25747
.L25774:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L25751
	jmp	.L25749
	.cfi_endproc
.LFE2514:
	.size	z900_insert_character, .-z900_insert_character
	.p2align 4,,15
	.globl	z900_add_logical
	.type	z900_add_logical, @function
z900_add_logical:
.LFB2515:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L25809
.L25776:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L25777
	movslq	%eax, %rdx
	addq	192(%rbx,%rdx,8), %rdi
.L25777:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L25810
.L25778:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25780
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L25811
.L25781:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L25812
.L25782:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L25780
	testb	$4, 46264(%rbx,%rsi)
	je	.L25780
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L25783:
	movl	(%rax), %eax
	bswap	%eax
.L25784:
	movslq	%ebp, %rbp
	leaq	(%rbx,%rbp,8), %rcx
	movl	192(%rcx), %edx
	addl	%edx, %eax
	movl	%eax, 192(%rcx)
	xorl	%ecx, %ecx
	testl	%eax, %eax
	setne	%cl
	cmpl	%edx, %eax
	sbbl	%eax, %eax
	andl	$2, %eax
	orl	%ecx, %eax
	movb	%al, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L25811:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L25781
.L25780:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L25783
.L25810:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25778
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L25784
.L25809:
	movslq	%edx, %rdx
	addq	192(%rsi,%rdx,8), %rdi
	jmp	.L25776
.L25812:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L25782
	jmp	.L25780
	.cfi_endproc
.LFE2515:
	.size	z900_add_logical, .-z900_add_logical
	.p2align 4,,15
	.globl	z900_compare_logical
	.type	z900_compare_logical, @function
z900_compare_logical:
.LFB2516:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %ebp
	shrl	$16, %ecx
	movl	%eax, %edx
	shrl	$20, %ebp
	andl	$4095, %edx
	andl	$15, %ecx
	shrl	$12, %eax
	andl	$15, %ebp
	addq	192(%rsi,%rcx,8), %rdx
	andl	$15, %eax
	je	.L25814
	movslq	%eax, %rcx
	addq	192(%rsi,%rcx,8), %rdx
.L25814:
	movq	%rdx, %rdi
	movb	$4, 130(%rbx)
	andq	120(%rbx), %rdi
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L25844
.L25815:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25817
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L25845
.L25818:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L25846
.L25819:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L25817
	testb	$4, 46264(%rbx,%rsi)
	je	.L25817
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L25820:
	movl	(%rax), %eax
	bswap	%eax
.L25821:
	movslq	%ebp, %rbp
	movl	$1, %edx
	movl	192(%rbx,%rbp,8), %ecx
	cmpl	%eax, %ecx
	jb	.L25822
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L25822:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L25845:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L25818
.L25817:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L25820
.L25844:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25815
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L25821
.L25846:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L25819
	.p2align 4,,4
	jmp	.L25817
	.cfi_endproc
.LFE2516:
	.size	z900_compare_logical, .-z900_compare_logical
	.p2align 4,,15
	.globl	z900_5500
	.type	z900_5500, @function
z900_5500:
.LFB2517:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L25848
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L25848:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L25878
.L25849:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25851
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L25879
.L25852:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L25880
.L25853:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L25851
	testb	$4, 46264(%rbx,%rsi)
	je	.L25851
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L25854:
	movl	(%rax), %eax
	bswap	%eax
.L25855:
	movl	192(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L25856
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L25856:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25879:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L25852
.L25851:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L25854
.L25878:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25849
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L25855
.L25880:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L25853
	.p2align 4,,4
	jmp	.L25851
	.cfi_endproc
.LFE2517:
	.size	z900_5500, .-z900_5500
	.p2align 4,,15
	.globl	z900_5510
	.type	z900_5510, @function
z900_5510:
.LFB2518:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L25882
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L25882:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L25912
.L25883:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25885
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L25913
.L25886:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L25914
.L25887:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L25885
	testb	$4, 46264(%rbx,%rsi)
	je	.L25885
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L25888:
	movl	(%rax), %eax
	bswap	%eax
.L25889:
	movl	200(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L25890
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L25890:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25913:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L25886
.L25885:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L25888
.L25912:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25883
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L25889
.L25914:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L25887
	.p2align 4,,4
	jmp	.L25885
	.cfi_endproc
.LFE2518:
	.size	z900_5510, .-z900_5510
	.p2align 4,,15
	.globl	z900_5520
	.type	z900_5520, @function
z900_5520:
.LFB2519:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L25916
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L25916:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L25946
.L25917:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25919
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L25947
.L25920:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L25948
.L25921:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L25919
	testb	$4, 46264(%rbx,%rsi)
	je	.L25919
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L25922:
	movl	(%rax), %eax
	bswap	%eax
.L25923:
	movl	208(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L25924
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L25924:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25947:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L25920
.L25919:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L25922
.L25946:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25917
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L25923
.L25948:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L25921
	.p2align 4,,4
	jmp	.L25919
	.cfi_endproc
.LFE2519:
	.size	z900_5520, .-z900_5520
	.p2align 4,,15
	.globl	z900_5530
	.type	z900_5530, @function
z900_5530:
.LFB2520:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L25950
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L25950:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L25980
.L25951:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25953
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L25981
.L25954:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L25982
.L25955:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L25953
	testb	$4, 46264(%rbx,%rsi)
	je	.L25953
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L25956:
	movl	(%rax), %eax
	bswap	%eax
.L25957:
	movl	216(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L25958
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L25958:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L25981:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L25954
.L25953:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L25956
.L25980:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25951
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L25957
.L25982:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L25955
	.p2align 4,,4
	jmp	.L25953
	.cfi_endproc
.LFE2520:
	.size	z900_5530, .-z900_5530
	.p2align 4,,15
	.globl	z900_5540
	.type	z900_5540, @function
z900_5540:
.LFB2521:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L25984
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L25984:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L26014
.L25985:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L25987
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26015
.L25988:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26016
.L25989:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L25987
	testb	$4, 46264(%rbx,%rsi)
	je	.L25987
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L25990:
	movl	(%rax), %eax
	bswap	%eax
.L25991:
	movl	224(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L25992
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L25992:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L26015:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L25988
.L25987:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L25990
.L26014:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L25985
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L25991
.L26016:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L25989
	.p2align 4,,4
	jmp	.L25987
	.cfi_endproc
.LFE2521:
	.size	z900_5540, .-z900_5540
	.p2align 4,,15
	.globl	z900_5550
	.type	z900_5550, @function
z900_5550:
.LFB2522:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L26018
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L26018:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L26048
.L26019:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L26021
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26049
.L26022:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26050
.L26023:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L26021
	testb	$4, 46264(%rbx,%rsi)
	je	.L26021
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L26024:
	movl	(%rax), %eax
	bswap	%eax
.L26025:
	movl	232(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L26026
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L26026:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L26049:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L26022
.L26021:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L26024
.L26048:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L26019
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L26025
.L26050:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L26023
	.p2align 4,,4
	jmp	.L26021
	.cfi_endproc
.LFE2522:
	.size	z900_5550, .-z900_5550
	.p2align 4,,15
	.globl	z900_5560
	.type	z900_5560, @function
z900_5560:
.LFB2523:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L26052
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L26052:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L26082
.L26053:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L26055
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26083
.L26056:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26084
.L26057:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L26055
	testb	$4, 46264(%rbx,%rsi)
	je	.L26055
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L26058:
	movl	(%rax), %eax
	bswap	%eax
.L26059:
	movl	240(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L26060
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L26060:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L26083:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L26056
.L26055:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L26058
.L26082:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L26053
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L26059
.L26084:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L26057
	.p2align 4,,4
	jmp	.L26055
	.cfi_endproc
.LFE2523:
	.size	z900_5560, .-z900_5560
	.p2align 4,,15
	.globl	z900_5570
	.type	z900_5570, @function
z900_5570:
.LFB2524:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L26086
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L26086:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L26116
.L26087:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L26089
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26117
.L26090:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26118
.L26091:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L26089
	testb	$4, 46264(%rbx,%rsi)
	je	.L26089
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L26092:
	movl	(%rax), %eax
	bswap	%eax
.L26093:
	movl	248(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L26094
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L26094:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L26117:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L26090
.L26089:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L26092
.L26116:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L26087
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L26093
.L26118:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L26091
	.p2align 4,,4
	jmp	.L26089
	.cfi_endproc
.LFE2524:
	.size	z900_5570, .-z900_5570
	.p2align 4,,15
	.globl	z900_5580
	.type	z900_5580, @function
z900_5580:
.LFB2525:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L26120
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L26120:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L26150
.L26121:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L26123
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26151
.L26124:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26152
.L26125:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L26123
	testb	$4, 46264(%rbx,%rsi)
	je	.L26123
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L26126:
	movl	(%rax), %eax
	bswap	%eax
.L26127:
	movl	256(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L26128
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L26128:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L26151:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L26124
.L26123:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L26126
.L26150:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L26121
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L26127
.L26152:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L26125
	.p2align 4,,4
	jmp	.L26123
	.cfi_endproc
.LFE2525:
	.size	z900_5580, .-z900_5580
	.p2align 4,,15
	.globl	z900_5590
	.type	z900_5590, @function
z900_5590:
.LFB2526:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L26154
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L26154:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L26184
.L26155:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L26157
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26185
.L26158:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26186
.L26159:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L26157
	testb	$4, 46264(%rbx,%rsi)
	je	.L26157
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L26160:
	movl	(%rax), %eax
	bswap	%eax
.L26161:
	movl	264(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L26162
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L26162:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L26185:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L26158
.L26157:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L26160
.L26184:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L26155
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L26161
.L26186:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L26159
	.p2align 4,,4
	jmp	.L26157
	.cfi_endproc
.LFE2526:
	.size	z900_5590, .-z900_5590
	.p2align 4,,15
	.globl	z900_55A0
	.type	z900_55A0, @function
z900_55A0:
.LFB2527:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L26188
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L26188:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L26218
.L26189:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L26191
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26219
.L26192:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26220
.L26193:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L26191
	testb	$4, 46264(%rbx,%rsi)
	je	.L26191
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L26194:
	movl	(%rax), %eax
	bswap	%eax
.L26195:
	movl	272(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L26196
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L26196:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L26219:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L26192
.L26191:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L26194
.L26218:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L26189
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L26195
.L26220:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L26193
	.p2align 4,,4
	jmp	.L26191
	.cfi_endproc
.LFE2527:
	.size	z900_55A0, .-z900_55A0
	.p2align 4,,15
	.globl	z900_55B0
	.type	z900_55B0, @function
z900_55B0:
.LFB2528:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L26222
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L26222:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L26252
.L26223:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L26225
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26253
.L26226:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26254
.L26227:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L26225
	testb	$4, 46264(%rbx,%rsi)
	je	.L26225
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L26228:
	movl	(%rax), %eax
	bswap	%eax
.L26229:
	movl	280(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L26230
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L26230:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L26253:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L26226
.L26225:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L26228
.L26252:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L26223
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L26229
.L26254:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L26227
	.p2align 4,,4
	jmp	.L26225
	.cfi_endproc
.LFE2528:
	.size	z900_55B0, .-z900_55B0
	.p2align 4,,15
	.globl	z900_55C0
	.type	z900_55C0, @function
z900_55C0:
.LFB2529:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L26256
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L26256:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L26286
.L26257:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L26259
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26287
.L26260:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26288
.L26261:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L26259
	testb	$4, 46264(%rbx,%rsi)
	je	.L26259
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L26262:
	movl	(%rax), %eax
	bswap	%eax
.L26263:
	movl	288(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L26264
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L26264:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L26287:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L26260
.L26259:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L26262
.L26286:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L26257
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L26263
.L26288:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L26261
	.p2align 4,,4
	jmp	.L26259
	.cfi_endproc
.LFE2529:
	.size	z900_55C0, .-z900_55C0
	.p2align 4,,15
	.globl	z900_55D0
	.type	z900_55D0, @function
z900_55D0:
.LFB2530:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L26290
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L26290:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L26320
.L26291:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L26293
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26321
.L26294:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26322
.L26295:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L26293
	testb	$4, 46264(%rbx,%rsi)
	je	.L26293
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L26296:
	movl	(%rax), %eax
	bswap	%eax
.L26297:
	movl	296(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L26298
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L26298:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L26321:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L26294
.L26293:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L26296
.L26320:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L26291
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L26297
.L26322:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L26295
	.p2align 4,,4
	jmp	.L26293
	.cfi_endproc
.LFE2530:
	.size	z900_55D0, .-z900_55D0
	.p2align 4,,15
	.globl	z900_55E0
	.type	z900_55E0, @function
z900_55E0:
.LFB2531:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L26324
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L26324:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L26354
.L26325:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L26327
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26355
.L26328:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26356
.L26329:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L26327
	testb	$4, 46264(%rbx,%rsi)
	je	.L26327
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L26330:
	movl	(%rax), %eax
	bswap	%eax
.L26331:
	movl	304(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L26332
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L26332:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L26355:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L26328
.L26327:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L26330
.L26354:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L26325
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L26331
.L26356:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L26329
	.p2align 4,,4
	jmp	.L26327
	.cfi_endproc
.LFE2531:
	.size	z900_55E0, .-z900_55E0
	.p2align 4,,15
	.globl	z900_55F0
	.type	z900_55F0, @function
z900_55F0:
.LFB2532:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edi
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %eax
	je	.L26358
	movslq	%eax, %rdx
	addq	192(%rsi,%rdx,8), %rdi
.L26358:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L26388
.L26359:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L26361
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26389
.L26362:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26390
.L26363:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L26361
	testb	$4, 46264(%rbx,%rsi)
	je	.L26361
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L26364:
	movl	(%rax), %eax
	bswap	%eax
.L26365:
	movl	312(%rbx), %ecx
	movl	$1, %edx
	cmpl	%eax, %ecx
	jb	.L26366
	cmpl	%ecx, %eax
	sbbl	%edx, %edx
	andl	$2, %edx
.L26366:
	movb	%dl, 100(%rbx)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L26389:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L26362
.L26361:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L26364
.L26388:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L26359
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L26365
.L26390:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L26363
	.p2align 4,,4
	jmp	.L26361
	.cfi_endproc
.LFE2532:
	.size	z900_55F0, .-z900_55F0
	.p2align 4,,15
	.globl	z900_load_halfword
	.type	z900_load_halfword, @function
z900_load_halfword:
.LFB2533:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L26423
.L26392:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L26393
	movslq	%eax, %rdx
	addq	192(%rbx,%rdx,8), %rdi
.L26393:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %dil
	jne	.L26424
.L26394:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L26396
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26425
.L26397:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26426
.L26398:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L26396
	testb	$4, 46264(%rbx,%rsi)
	je	.L26396
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L26399:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L26400:
	movslq	%ebp, %rbp
	cwtl
	movl	%eax, 192(%rbx,%rbp,8)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L26425:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L26397
.L26396:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L26399
.L26424:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2047, %edx
	jne	.L26394
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch2_full
	jmp	.L26400
.L26423:
	movslq	%edx, %rdx
	addq	192(%rsi,%rdx,8), %rdi
	jmp	.L26392
.L26426:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L26398
	jmp	.L26396
	.cfi_endproc
.LFE2533:
	.size	z900_load_halfword, .-z900_load_halfword
	.p2align 4,,15
	.globl	z900_branch_relative_on_condition
	.type	z900_branch_relative_on_condition, @function
z900_branch_relative_on_condition:
.LFB2534:
	.cfi_startproc
	movzbl	100(%rsi), %ecx
	movl	$128, %eax
	movzbl	1(%rdi), %edx
	sarl	%cl, %eax
	testl	%eax, %edx
	je	.L26428
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26429
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26429
	cmpq	160(%rsi), %rdx
	jae	.L26429
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26428:
	addq	$4, 136(%rsi)
	ret
.L26429:
	testb	$1, %dil
	jne	.L26431
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26432:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26444
.L26427:
	rep ret
.L26444:
	testb	$-128, 54(%rsi)
	je	.L26427
	testb	$-128, 402(%rsi)
	je	.L26435
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26436
	cmpq	%rax, %rcx
	ja	.L26427
	cmpq	%rax, %rdx
	jae	.L26435
	.p2align 4,,5
	ret
.L26431:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26432
.L26436:
	cmpq	%rax, %rcx
	jbe	.L26435
	cmpq	%rax, %rdx
	jb	.L26427
.L26435:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2534:
	.size	z900_branch_relative_on_condition, .-z900_branch_relative_on_condition
	.p2align 4,,15
	.globl	z900_A714
	.type	z900_A714, @function
z900_A714:
.LFB2535:
	.cfi_startproc
	cmpb	$3, 100(%rsi)
	je	.L26462
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26462:
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26447
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26447
	cmpq	160(%rsi), %rdx
	jae	.L26447
	movq	%rdx, 136(%rsi)
	ret
.L26447:
	testb	$1, %dil
	jne	.L26449
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26450:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26463
.L26445:
	rep ret
.L26463:
	testb	$-128, 54(%rsi)
	je	.L26445
	testb	$-128, 402(%rsi)
	je	.L26453
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26454
	cmpq	%rax, %rcx
	ja	.L26445
	cmpq	%rax, %rdx
	jae	.L26453
	.p2align 4,,5
	ret
.L26449:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26450
.L26454:
	cmpq	%rax, %rcx
	jbe	.L26453
	cmpq	%rax, %rdx
	jb	.L26445
.L26453:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2535:
	.size	z900_A714, .-z900_A714
	.p2align 4,,15
	.globl	z900_A724
	.type	z900_A724, @function
z900_A724:
.LFB2536:
	.cfi_startproc
	cmpb	$2, 100(%rsi)
	je	.L26481
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26481:
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26466
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26466
	cmpq	160(%rsi), %rdx
	jae	.L26466
	movq	%rdx, 136(%rsi)
	ret
.L26466:
	testb	$1, %dil
	jne	.L26468
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26469:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26482
.L26464:
	rep ret
.L26482:
	testb	$-128, 54(%rsi)
	je	.L26464
	testb	$-128, 402(%rsi)
	je	.L26472
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26473
	cmpq	%rax, %rcx
	ja	.L26464
	cmpq	%rax, %rdx
	jae	.L26472
	.p2align 4,,5
	ret
.L26468:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26469
.L26473:
	cmpq	%rax, %rcx
	jbe	.L26472
	cmpq	%rax, %rdx
	jb	.L26464
.L26472:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2536:
	.size	z900_A724, .-z900_A724
	.p2align 4,,15
	.globl	z900_A734
	.type	z900_A734, @function
z900_A734:
.LFB2537:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	jbe	.L26484
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26485
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26485
	cmpq	160(%rsi), %rdx
	jae	.L26485
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26484:
	addq	$4, 136(%rsi)
	ret
.L26485:
	testb	$1, %dil
	jne	.L26487
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26488:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26500
.L26483:
	rep ret
.L26500:
	testb	$-128, 54(%rsi)
	je	.L26483
	testb	$-128, 402(%rsi)
	je	.L26491
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26492
	cmpq	%rax, %rcx
	ja	.L26483
	cmpq	%rax, %rdx
	jae	.L26491
	.p2align 4,,5
	ret
.L26487:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26488
.L26492:
	cmpq	%rax, %rcx
	jbe	.L26491
	cmpq	%rax, %rdx
	jb	.L26483
.L26491:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2537:
	.size	z900_A734, .-z900_A734
	.p2align 4,,15
	.globl	z900_A744
	.type	z900_A744, @function
z900_A744:
.LFB2538:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	je	.L26518
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26518:
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26503
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26503
	cmpq	160(%rsi), %rdx
	jae	.L26503
	movq	%rdx, 136(%rsi)
	ret
.L26503:
	testb	$1, %dil
	jne	.L26505
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26506:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26519
.L26501:
	rep ret
.L26519:
	testb	$-128, 54(%rsi)
	je	.L26501
	testb	$-128, 402(%rsi)
	je	.L26509
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26510
	cmpq	%rax, %rcx
	ja	.L26501
	cmpq	%rax, %rdx
	jae	.L26509
	.p2align 4,,5
	ret
.L26505:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26506
.L26510:
	cmpq	%rax, %rcx
	jbe	.L26509
	cmpq	%rax, %rdx
	jb	.L26501
.L26509:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2538:
	.size	z900_A744, .-z900_A744
	.p2align 4,,15
	.globl	z900_A754
	.type	z900_A754, @function
z900_A754:
.LFB2539:
	.cfi_startproc
	testb	$1, 100(%rsi)
	je	.L26521
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26522
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26522
	cmpq	160(%rsi), %rdx
	jae	.L26522
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26521:
	addq	$4, 136(%rsi)
	ret
.L26522:
	testb	$1, %dil
	jne	.L26524
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26525:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26537
.L26520:
	rep ret
.L26537:
	testb	$-128, 54(%rsi)
	je	.L26520
	testb	$-128, 402(%rsi)
	je	.L26528
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26529
	cmpq	%rax, %rcx
	ja	.L26520
	cmpq	%rax, %rdx
	jae	.L26528
	.p2align 4,,5
	ret
.L26524:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26525
.L26529:
	cmpq	%rax, %rcx
	jbe	.L26528
	cmpq	%rax, %rdx
	jb	.L26520
.L26528:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2539:
	.size	z900_A754, .-z900_A754
	.p2align 4,,15
	.globl	z900_A774
	.type	z900_A774, @function
z900_A774:
.LFB2540:
	.cfi_startproc
	cmpb	$0, 100(%rsi)
	je	.L26539
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26540
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26540
	cmpq	160(%rsi), %rdx
	jae	.L26540
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26539:
	addq	$4, 136(%rsi)
	ret
.L26540:
	testb	$1, %dil
	jne	.L26542
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26543:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26555
.L26538:
	rep ret
.L26555:
	testb	$-128, 54(%rsi)
	je	.L26538
	testb	$-128, 402(%rsi)
	je	.L26546
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26547
	cmpq	%rax, %rcx
	ja	.L26538
	cmpq	%rax, %rdx
	jae	.L26546
	.p2align 4,,5
	ret
.L26542:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26543
.L26547:
	cmpq	%rax, %rcx
	jbe	.L26546
	cmpq	%rax, %rdx
	jb	.L26538
.L26546:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2540:
	.size	z900_A774, .-z900_A774
	.p2align 4,,15
	.globl	z900_A784
	.type	z900_A784, @function
z900_A784:
.LFB2541:
	.cfi_startproc
	cmpb	$0, 100(%rsi)
	jne	.L26557
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26558
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26558
	cmpq	160(%rsi), %rdx
	jae	.L26558
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26557:
	addq	$4, 136(%rsi)
	ret
.L26558:
	testb	$1, %dil
	jne	.L26560
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26561:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26573
.L26556:
	rep ret
.L26573:
	testb	$-128, 54(%rsi)
	je	.L26556
	testb	$-128, 402(%rsi)
	je	.L26564
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26565
	cmpq	%rax, %rcx
	ja	.L26556
	cmpq	%rax, %rdx
	jae	.L26564
	.p2align 4,,5
	ret
.L26560:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26561
.L26565:
	cmpq	%rax, %rcx
	jbe	.L26564
	cmpq	%rax, %rdx
	jb	.L26556
.L26564:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2541:
	.size	z900_A784, .-z900_A784
	.p2align 4,,15
	.globl	z900_A7A4
	.type	z900_A7A4, @function
z900_A7A4:
.LFB2542:
	.cfi_startproc
	testb	$1, 100(%rsi)
	jne	.L26575
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26576
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26576
	cmpq	160(%rsi), %rdx
	jae	.L26576
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26575:
	addq	$4, 136(%rsi)
	ret
.L26576:
	testb	$1, %dil
	jne	.L26578
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26579:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26591
.L26574:
	rep ret
.L26591:
	testb	$-128, 54(%rsi)
	je	.L26574
	testb	$-128, 402(%rsi)
	je	.L26582
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26583
	cmpq	%rax, %rcx
	ja	.L26574
	cmpq	%rax, %rdx
	jae	.L26582
	.p2align 4,,5
	ret
.L26578:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26579
.L26583:
	cmpq	%rax, %rcx
	jbe	.L26582
	cmpq	%rax, %rdx
	jb	.L26574
.L26582:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2542:
	.size	z900_A7A4, .-z900_A7A4
	.p2align 4,,15
	.globl	z900_A7B4
	.type	z900_A7B4, @function
z900_A7B4:
.LFB2543:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	je	.L26593
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26594
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26594
	cmpq	160(%rsi), %rdx
	jae	.L26594
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26593:
	addq	$4, 136(%rsi)
	ret
.L26594:
	testb	$1, %dil
	jne	.L26596
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26597:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26609
.L26592:
	rep ret
.L26609:
	testb	$-128, 54(%rsi)
	je	.L26592
	testb	$-128, 402(%rsi)
	je	.L26600
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26601
	cmpq	%rax, %rcx
	ja	.L26592
	cmpq	%rax, %rdx
	jae	.L26600
	.p2align 4,,5
	ret
.L26596:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26597
.L26601:
	cmpq	%rax, %rcx
	jbe	.L26600
	cmpq	%rax, %rdx
	jb	.L26592
.L26600:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2543:
	.size	z900_A7B4, .-z900_A7B4
	.p2align 4,,15
	.globl	z900_A7C4
	.type	z900_A7C4, @function
z900_A7C4:
.LFB2544:
	.cfi_startproc
	cmpb	$1, 100(%rsi)
	jbe	.L26627
	addq	$4, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26627:
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26612
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26612
	cmpq	160(%rsi), %rdx
	jae	.L26612
	movq	%rdx, 136(%rsi)
	ret
.L26612:
	testb	$1, %dil
	jne	.L26614
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26615:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26628
.L26610:
	rep ret
.L26628:
	testb	$-128, 54(%rsi)
	je	.L26610
	testb	$-128, 402(%rsi)
	je	.L26618
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26619
	cmpq	%rax, %rcx
	ja	.L26610
	cmpq	%rax, %rdx
	jae	.L26618
	.p2align 4,,5
	ret
.L26614:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26615
.L26619:
	cmpq	%rax, %rcx
	jbe	.L26618
	cmpq	%rax, %rdx
	jb	.L26610
.L26618:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2544:
	.size	z900_A7C4, .-z900_A7C4
	.p2align 4,,15
	.globl	z900_A7D4
	.type	z900_A7D4, @function
z900_A7D4:
.LFB2545:
	.cfi_startproc
	cmpb	$2, 100(%rsi)
	je	.L26630
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26631
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26631
	cmpq	160(%rsi), %rdx
	jae	.L26631
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26630:
	addq	$4, 136(%rsi)
	ret
.L26631:
	testb	$1, %dil
	jne	.L26633
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26634:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26646
.L26629:
	rep ret
.L26646:
	testb	$-128, 54(%rsi)
	je	.L26629
	testb	$-128, 402(%rsi)
	je	.L26637
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26638
	cmpq	%rax, %rcx
	ja	.L26629
	cmpq	%rax, %rdx
	jae	.L26637
	.p2align 4,,5
	ret
.L26633:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26634
.L26638:
	cmpq	%rax, %rcx
	jbe	.L26637
	cmpq	%rax, %rdx
	jb	.L26629
.L26637:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2545:
	.size	z900_A7D4, .-z900_A7D4
	.p2align 4,,15
	.globl	z900_A7E4
	.type	z900_A7E4, @function
z900_A7E4:
.LFB2546:
	.cfi_startproc
	cmpb	$3, 100(%rsi)
	je	.L26648
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26649
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26649
	cmpq	160(%rsi), %rdx
	jae	.L26649
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26648:
	addq	$4, 136(%rsi)
	ret
.L26649:
	testb	$1, %dil
	jne	.L26651
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26652:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26664
.L26647:
	rep ret
.L26664:
	testb	$-128, 54(%rsi)
	je	.L26647
	testb	$-128, 402(%rsi)
	je	.L26655
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26656
	cmpq	%rax, %rcx
	ja	.L26647
	cmpq	%rax, %rdx
	jae	.L26655
	.p2align 4,,5
	ret
.L26651:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26652
.L26656:
	cmpq	%rax, %rcx
	jbe	.L26655
	cmpq	%rax, %rdx
	jb	.L26647
.L26655:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2546:
	.size	z900_A7E4, .-z900_A7E4
	.p2align 4,,15
	.globl	z900_A7F4
	.type	z900_A7F4, @function
z900_A7F4:
.LFB2547:
	.cfi_startproc
	movl	(%rdi), %eax
	movzbl	808(%rsi), %edi
	movq	136(%rsi), %rcx
	bswap	%eax
	cwtl
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26666
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26666
	cmpq	160(%rsi), %rdx
	jae	.L26666
	movq	%rdx, 136(%rsi)
	ret
.L26666:
	testb	$1, %dil
	jne	.L26668
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26669:
	movq	$0, 160(%rsi)
	andl	$4, %edi
	jne	.L26681
.L26665:
	rep ret
.L26681:
	testb	$-128, 54(%rsi)
	je	.L26665
	testb	$-128, 402(%rsi)
	je	.L26672
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26673
	cmpq	%rax, %rcx
	ja	.L26665
	cmpq	%rax, %rdx
	jae	.L26672
	.p2align 4,,5
	ret
.L26668:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26669
.L26673:
	cmpq	%rax, %rcx
	jbe	.L26672
	cmpq	%rax, %rdx
	jb	.L26665
.L26672:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2547:
	.size	z900_A7F4, .-z900_A7F4
	.p2align 4,,15
	.globl	z900_branch_on_count_register
	.type	z900_branch_on_count_register, @function
z900_branch_on_count_register:
.LFB2548:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	movl	%eax, %ecx
	shrq	%rax
	andl	$15, %ecx
	andl	$120, %eax
	movslq	%ecx, %rdx
	addq	%rsi, %rax
	movq	192(%rsi,%rdx,8), %rdi
	subl	$1, 192(%rax)
	je	.L26683
	testl	%ecx, %ecx
	je	.L26683
	movq	120(%rsi), %rdx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rcx
	andq	%rdx, %rdi
	testb	$5, %al
	movq	%rcx, 184(%rsi)
	jne	.L26684
	movq	%rdi, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L26684
	xorq	152(%rsi), %rdi
	movq	%rdi, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26683:
	addq	$2, 136(%rsi)
	ret
.L26684:
	testb	$1, %al
	jne	.L26705
.L26686:
	testb	$4, %al
	movq	%rdi, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L26706
.L26682:
	rep ret
.L26706:
	testb	$-128, 54(%rsi)
	je	.L26682
	testb	$-128, 402(%rsi)
	je	.L26689
	movq	416(%rsi), %rax
	andq	%rdi, %rdx
	movq	408(%rsi), %rcx
	cmpq	%rcx, %rax
	jb	.L26690
	cmpq	%rdx, %rcx
	ja	.L26682
	cmpq	%rdx, %rax
	jae	.L26689
	.p2align 4,,5
	ret
.L26705:
	movl	%eax, %r8d
	andl	$2, %r8d
	cmpb	$1, %r8b
	sbbq	%r8, %r8
	andl	$2, %r8d
	leaq	-4(%rcx,%r8), %rcx
	movq	%rcx, 184(%rsi)
	jmp	.L26686
.L26690:
	cmpq	%rdx, %rcx
	jbe	.L26689
	cmpq	%rdx, %rax
	jb	.L26682
.L26689:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2548:
	.size	z900_branch_on_count_register, .-z900_branch_on_count_register
	.p2align 4,,15
	.globl	z900_branch_on_count
	.type	z900_branch_on_count, @function
z900_branch_on_count:
.LFB2549:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %edi
	shrl	$20, %edx
	shrl	$16, %edi
	movl	%eax, %ecx
	andl	$15, %edx
	andl	$4095, %ecx
	andl	$15, %edi
	jne	.L26732
.L26708:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L26709
	cltq
	addq	192(%rsi,%rax,8), %rcx
.L26709:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rdx
	subl	$1, 192(%rdx)
	je	.L26710
	movq	120(%rsi), %rdx
	movzbl	808(%rsi), %eax
	movq	136(%rsi), %rdi
	andq	%rdx, %rcx
	testb	$5, %al
	movq	%rdi, 184(%rsi)
	jne	.L26711
	movq	%rcx, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L26711
	xorq	152(%rsi), %rcx
	movq	%rcx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26710:
	addq	$4, 136(%rsi)
	ret
.L26711:
	testb	$1, %al
	jne	.L26733
.L26713:
	testb	$4, %al
	movq	%rcx, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L26734
.L26707:
	rep ret
.L26732:
	movslq	%edi, %rdi
	addq	192(%rsi,%rdi,8), %rcx
	jmp	.L26708
.L26734:
	testb	$-128, 54(%rsi)
	je	.L26707
	testb	$-128, 402(%rsi)
	je	.L26716
	movq	416(%rsi), %rax
	andq	%rcx, %rdx
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rax
	jb	.L26717
	cmpq	%rdx, %rdi
	ja	.L26707
	cmpq	%rdx, %rax
	jae	.L26716
	.p2align 4,,5
	ret
.L26733:
	movq	%rax, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L26713
.L26717:
	cmpq	%rdx, %rdi
	jbe	.L26716
	cmpq	%rdx, %rax
	jb	.L26707
.L26716:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2549:
	.size	z900_branch_on_count, .-z900_branch_on_count
	.p2align 4,,15
	.globl	z900_branch_on_index_high
	.type	z900_branch_on_index_high, @function
z900_branch_on_index_high:
.LFB2550:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	movl	%eax, %edi
	shrl	$20, %edx
	movl	%ecx, %r9d
	shrl	$12, %edi
	andl	$15, %edx
	andl	$15, %r9d
	andl	$4095, %eax
	andl	$15, %edi
	je	.L26736
	movslq	%edi, %rdi
	addq	192(%rsi,%rdi,8), %rax
.L26736:
	movslq	%r9d, %rdi
	andl	$1, %ecx
	movl	192(%rsi,%rdi,8), %edi
	movl	%edi, %r8d
	jne	.L26737
	addl	$1, %r9d
	movslq	%r9d, %r9
	movl	192(%rsi,%r9,8), %r8d
.L26737:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rcx
	movl	192(%rcx), %edx
	addl	%edi, %edx
	cmpl	%edx, %r8d
	movl	%edx, 192(%rcx)
	jge	.L26738
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %edx
	movq	136(%rsi), %rdi
	andq	%rcx, %rax
	testb	$5, %dl
	movq	%rdi, 184(%rsi)
	jne	.L26739
	movq	%rax, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L26739
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26738:
	addq	$4, 136(%rsi)
	ret
.L26739:
	testb	$1, %dl
	jne	.L26758
.L26741:
	andb	$4, %dl
	movq	%rax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L26759
.L26735:
	rep ret
.L26759:
	testb	$-128, 54(%rsi)
	je	.L26735
	testb	$-128, 402(%rsi)
	je	.L26744
	movq	416(%rsi), %rdx
	andq	%rcx, %rax
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rdx
	jb	.L26745
	cmpq	%rax, %rdi
	ja	.L26735
	cmpq	%rax, %rdx
	jae	.L26744
	.p2align 4,,5
	ret
.L26758:
	movq	%rdx, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L26741
.L26745:
	cmpq	%rax, %rdi
	jbe	.L26744
	cmpq	%rax, %rdx
	jb	.L26735
.L26744:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2550:
	.size	z900_branch_on_index_high, .-z900_branch_on_index_high
	.p2align 4,,15
	.globl	z900_branch_on_index_low_or_equal
	.type	z900_branch_on_index_low_or_equal, @function
z900_branch_on_index_low_or_equal:
.LFB2551:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	movl	%eax, %edi
	shrl	$20, %edx
	movl	%ecx, %r9d
	shrl	$12, %edi
	andl	$15, %edx
	andl	$15, %r9d
	andl	$4095, %eax
	andl	$15, %edi
	je	.L26761
	movslq	%edi, %rdi
	addq	192(%rsi,%rdi,8), %rax
.L26761:
	movslq	%r9d, %rdi
	andl	$1, %ecx
	movl	192(%rsi,%rdi,8), %edi
	movl	%edi, %r8d
	jne	.L26762
	addl	$1, %r9d
	movslq	%r9d, %r9
	movl	192(%rsi,%r9,8), %r8d
.L26762:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rcx
	movl	192(%rcx), %edx
	addl	%edi, %edx
	cmpl	%edx, %r8d
	movl	%edx, 192(%rcx)
	jl	.L26763
	movq	120(%rsi), %rcx
	movzbl	808(%rsi), %edx
	movq	136(%rsi), %rdi
	andq	%rcx, %rax
	testb	$5, %dl
	movq	%rdi, 184(%rsi)
	jne	.L26764
	movq	%rax, %r8
	andq	$-4095, %r8
	cmpq	168(%rsi), %r8
	jne	.L26764
	xorq	152(%rsi), %rax
	movq	%rax, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26763:
	addq	$4, 136(%rsi)
	ret
.L26764:
	testb	$1, %dl
	jne	.L26783
.L26766:
	andb	$4, %dl
	movq	%rax, 112(%rsi)
	movq	$0, 160(%rsi)
	jne	.L26784
.L26760:
	rep ret
.L26784:
	testb	$-128, 54(%rsi)
	je	.L26760
	testb	$-128, 402(%rsi)
	je	.L26769
	movq	416(%rsi), %rdx
	andq	%rcx, %rax
	movq	408(%rsi), %rdi
	cmpq	%rdi, %rdx
	jb	.L26770
	cmpq	%rax, %rdi
	ja	.L26760
	cmpq	%rax, %rdx
	jae	.L26769
	.p2align 4,,5
	ret
.L26783:
	movq	%rdx, %r8
	salq	$62, %r8
	sarq	$63, %r8
	andq	$-2, %r8
	addq	%r8, %rdi
	movq	%rdi, 184(%rsi)
	jmp	.L26766
.L26770:
	cmpq	%rax, %rdi
	jbe	.L26769
	cmpq	%rax, %rdx
	jb	.L26760
.L26769:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2551:
	.size	z900_branch_on_index_low_or_equal, .-z900_branch_on_index_low_or_equal
	.p2align 4,,15
	.globl	z900_branch_relative_and_save
	.type	z900_branch_relative_and_save, @function
z900_branch_relative_and_save:
.LFB2552:
	.cfi_startproc
	movl	(%rdi), %eax
	movzbl	103(%rsi), %edx
	bswap	%eax
	movl	%eax, %ecx
	shrl	$20, %ecx
	andl	$15, %ecx
	testb	$1, %dl
	je	.L26786
	movq	136(%rsi), %rdx
	movslq	%ecx, %rcx
	movq	168(%rsi), %r8
	movq	144(%rsi), %rdi
	leaq	4(%rdx,%r8), %r8
	subq	%rdi, %r8
	movq	%r8, 192(%rsi,%rcx,8)
.L26787:
	movzbl	808(%rsi), %r8d
	movq	%rdx, 184(%rsi)
	cwtl
	testb	$5, %r8b
	jne	.L26789
	leal	(%rax,%rax), %ecx
	movslq	%ecx, %rcx
	addq	%rdx, %rcx
	cmpq	%rdi, %rcx
	jb	.L26789
	cmpq	160(%rsi), %rcx
	jae	.L26789
	movq	%rcx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26786:
	andl	$2, %edx
	movl	168(%rsi), %r8d
	movslq	%ecx, %rcx
	movq	136(%rsi), %rdx
	movq	144(%rsi), %rdi
	leal	4(%r8,%rdx), %r8d
	je	.L26788
	subl	%edi, %r8d
	orl	$-2147483648, %r8d
	movl	%r8d, 192(%rsi,%rcx,8)
	jmp	.L26787
	.p2align 4,,10
	.p2align 3
.L26788:
	subl	%edi, %r8d
	andl	$16777215, %r8d
	movl	%r8d, 192(%rsi,%rcx,8)
	jmp	.L26787
.L26789:
	testb	$1, %r8b
	jne	.L26791
	addl	%eax, %eax
	subq	%rdi, %rdx
	cltq
	addq	168(%rsi), %rax
	addq	%rdx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26792:
	movq	$0, 160(%rsi)
	andl	$4, %r8d
	jne	.L26804
.L26785:
	rep ret
.L26804:
	testb	$-128, 54(%rsi)
	je	.L26785
	testb	$-128, 402(%rsi)
	je	.L26795
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26796
	cmpq	%rax, %rcx
	ja	.L26785
	cmpq	%rax, %rdx
	jae	.L26795
	.p2align 4,,5
	ret
.L26791:
	addl	%eax, %eax
	movq	%r8, %rcx
	cltq
	salq	$62, %rcx
	addq	800(%rsi), %rax
	sarq	$63, %rcx
	andq	$-2, %rcx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26792
.L26796:
	cmpq	%rax, %rcx
	jbe	.L26795
	cmpq	%rax, %rdx
	jb	.L26785
.L26795:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2552:
	.size	z900_branch_relative_and_save, .-z900_branch_relative_and_save
	.p2align 4,,15
	.globl	z900_branch_relative_on_count
	.type	z900_branch_relative_on_count, @function
z900_branch_relative_on_count:
.LFB2553:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	shrl	$20, %edx
	andl	$15, %edx
	leaq	(%rsi,%rdx,8), %rcx
	movl	192(%rcx), %edi
	leal	-1(%rdi), %edx
	testl	%edx, %edx
	movl	%edx, 192(%rcx)
	je	.L26806
	movzbl	808(%rsi), %edi
	cwtl
	movq	136(%rsi), %rcx
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26807
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26807
	cmpq	160(%rsi), %rdx
	jae	.L26807
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26806:
	addq	$4, 136(%rsi)
	ret
.L26807:
	testb	$1, %dil
	jne	.L26809
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26810:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26822
.L26805:
	rep ret
.L26822:
	testb	$-128, 54(%rsi)
	je	.L26805
	testb	$-128, 402(%rsi)
	je	.L26813
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26814
	cmpq	%rax, %rcx
	ja	.L26805
	cmpq	%rax, %rdx
	jae	.L26813
	.p2align 4,,5
	ret
.L26809:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26810
.L26814:
	cmpq	%rax, %rcx
	jbe	.L26813
	cmpq	%rax, %rdx
	jb	.L26805
.L26813:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2553:
	.size	z900_branch_relative_on_count, .-z900_branch_relative_on_count
	.p2align 4,,15
	.globl	z900_branch_relative_on_index_high
	.type	z900_branch_relative_on_index_high, @function
z900_branch_relative_on_index_high:
.LFB2554:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	shrl	$20, %edx
	movl	%ecx, %r9d
	andl	$15, %edx
	andl	$15, %r9d
	andl	$1, %ecx
	movslq	%r9d, %rdi
	movl	192(%rsi,%rdi,8), %edi
	movl	%edi, %r8d
	jne	.L26824
	addl	$1, %r9d
	movslq	%r9d, %r9
	movl	192(%rsi,%r9,8), %r8d
.L26824:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rcx
	addl	192(%rcx), %edi
	cmpl	%edi, %r8d
	movl	%edi, 192(%rcx)
	jge	.L26825
	movzbl	808(%rsi), %edi
	cwtl
	movq	136(%rsi), %rcx
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26826
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26826
	cmpq	160(%rsi), %rdx
	jae	.L26826
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26825:
	addq	$4, 136(%rsi)
	ret
.L26826:
	testb	$1, %dil
	jne	.L26828
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26829:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26842
.L26823:
	rep ret
.L26842:
	testb	$-128, 54(%rsi)
	je	.L26823
	testb	$-128, 402(%rsi)
	je	.L26832
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26833
	cmpq	%rax, %rcx
	ja	.L26823
	cmpq	%rax, %rdx
	jae	.L26832
	.p2align 4,,5
	ret
.L26828:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26829
.L26833:
	cmpq	%rax, %rcx
	jbe	.L26832
	cmpq	%rax, %rdx
	jb	.L26823
.L26832:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2554:
	.size	z900_branch_relative_on_index_high, .-z900_branch_relative_on_index_high
	.p2align 4,,15
	.globl	z900_branch_relative_on_index_low_or_equal
	.type	z900_branch_relative_on_index_low_or_equal, @function
z900_branch_relative_on_index_low_or_equal:
.LFB2555:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %edx
	shrl	$16, %ecx
	shrl	$20, %edx
	movl	%ecx, %r9d
	andl	$15, %edx
	andl	$15, %r9d
	andl	$1, %ecx
	movslq	%r9d, %rdi
	movl	192(%rsi,%rdi,8), %edi
	movl	%edi, %r8d
	jne	.L26844
	addl	$1, %r9d
	movslq	%r9d, %r9
	movl	192(%rsi,%r9,8), %r8d
.L26844:
	movslq	%edx, %rdx
	leaq	(%rsi,%rdx,8), %rcx
	addl	192(%rcx), %edi
	cmpl	%edi, %r8d
	movl	%edi, 192(%rcx)
	jl	.L26845
	movzbl	808(%rsi), %edi
	cwtl
	movq	136(%rsi), %rcx
	testb	$5, %dil
	movq	%rcx, 184(%rsi)
	jne	.L26846
	leal	(%rax,%rax), %edx
	movslq	%edx, %rdx
	addq	%rcx, %rdx
	cmpq	144(%rsi), %rdx
	jb	.L26846
	cmpq	160(%rsi), %rdx
	jae	.L26846
	movq	%rdx, 136(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L26845:
	addq	$4, 136(%rsi)
	ret
.L26846:
	testb	$1, %dil
	jne	.L26848
	subq	144(%rsi), %rcx
	addl	%eax, %eax
	cltq
	addq	168(%rsi), %rcx
	addq	%rcx, %rax
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
.L26849:
	movq	$0, 160(%rsi)
	andb	$4, %dil
	jne	.L26862
.L26843:
	rep ret
.L26862:
	testb	$-128, 54(%rsi)
	je	.L26843
	testb	$-128, 402(%rsi)
	je	.L26852
	movq	416(%rsi), %rdx
	movq	408(%rsi), %rcx
	movq	120(%rsi), %rax
	andq	112(%rsi), %rax
	cmpq	%rcx, %rdx
	jb	.L26853
	cmpq	%rax, %rcx
	ja	.L26843
	cmpq	%rax, %rdx
	jae	.L26852
	.p2align 4,,5
	ret
.L26848:
	addl	%eax, %eax
	movq	%rdi, %rdx
	cltq
	salq	$62, %rdx
	addq	800(%rsi), %rax
	sarq	$63, %rdx
	andq	$-2, %rdx
	addq	%rcx, %rdx
	movq	%rdx, 184(%rsi)
	andq	120(%rsi), %rax
	movq	%rax, 112(%rsi)
	jmp	.L26849
.L26853:
	cmpq	%rax, %rcx
	jbe	.L26852
	cmpq	%rax, %rdx
	jb	.L26843
.L26852:
	orl	$8388608, 56(%rsi)
	ret
	.cfi_endproc
.LFE2555:
	.size	z900_branch_relative_on_index_low_or_equal, .-z900_branch_relative_on_index_low_or_equal
	.p2align 4,,15
	.globl	z900_checksum
	.type	z900_checksum, @function
z900_checksum:
.LFB2556:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movq	%rsi, %r12
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movzbl	3(%rdi), %eax
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movl	%eax, %ebp
	movzbl	%al, %ebx
	andl	$15, %ebp
	sarl	$4, %ebx
	testb	$1, %al
	movzbl	%bpl, %edi
	movl	%edi, 32(%rsp)
	jne	.L26931
.L26864:
	movq	120(%r12), %r13
	movzbl	%bpl, %ebp
	leaq	(%r12,%rbp,8), %rax
	movl	32(%rsp), %edi
	movq	%rax, 8(%rsp)
	andq	192(%rax), %r13
	movzbl	103(%r12), %eax
	leal	1(%rdi), %edx
	andl	$1, %eax
	je	.L26865
	movslq	%edx, %rdi
	movq	192(%r12,%rdi,8), %r14
	movq	%rdi, 24(%rsp)
.L26866:
	movslq	%ebx, %rbx
	testq	%r14, %r14
	leaq	(%r12,%rbx,8), %rdi
	movq	%rdi, 16(%rsp)
	movl	192(%rdi), %r15d
	je	.L26891
	movl	32(%rsp), %eax
	movl	$1024, %r10d
	leal	5(%rax), %r11d
	movslq	%r11d, %r11
	.p2align 4,,10
	.p2align 3
.L26868:
	xorl	%ebx, %ebx
	cmpq	$3, %r14
	movl	$4, %ebp
	ja	.L26932
.L26928:
	sall	$8, %ebx
	testq	%r14, %r14
	jne	.L26933
.L26880:
	subl	$1, %ebp
	jne	.L26928
.L26879:
	movl	%ebx, %ebx
	movl	$4294967295, %eax
	addq	%rbx, %r15
	cmpq	%rax, %r15
	jbe	.L26887
	movl	%r15d, %r15d
	addq	$1, %r15
.L26887:
	testq	%r14, %r14
	je	.L26934
	subl	$1, %r10d
	jne	.L26868
	movzbl	103(%r12), %eax
	movl	$3, %edx
	andl	$1, %eax
	jmp	.L26867
	.p2align 4,,10
	.p2align 3
.L26933:
	movl	1892(%r12,%r11,4), %eax
	testl	%eax, %eax
	je	.L26881
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%r12,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%r12,%rdx,8)
	jne	.L26935
.L26882:
	movzbl	97(%r12), %esi
	testb	%sil, %sil
	jne	.L26936
.L26883:
	movl	2224(%r12), %edi
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L26897
	testb	$4, 46264(%r12,%rcx)
	je	.L26897
	movq	%r13, %rsi
	xorq	26808(%rax), %rsi
	movq	%rsi, %rax
.L26885:
	movzbl	(%rax), %eax
	addq	$1, %r13
	subq	$1, %r14
	andq	120(%r12), %r13
	orl	%eax, %ebx
	jmp	.L26880
	.p2align 4,,10
	.p2align 3
.L26932:
	testb	$3, %r13b
	movl	%r13d, %ecx
	jne	.L26937
.L26871:
	movl	1892(%r12,%r11,4), %eax
	testl	%eax, %eax
	je	.L26873
	leal	1(%rax), %edx
	shrl	$12, %ecx
	andl	$1023, %ecx
	movslq	%edx, %rdx
	leaq	(%r12,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%r12,%rdx,8)
	jne	.L26938
.L26874:
	movzbl	97(%r12), %esi
	testb	%sil, %sil
	jne	.L26939
.L26875:
	movl	2224(%r12), %edi
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L26894
	testb	$4, 46264(%r12,%rcx)
	je	.L26894
	movq	%r13, %rdi
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L26877:
	movl	(%rax), %ebx
	bswap	%ebx
.L26878:
	addq	$4, %r13
	subq	$4, %r14
	andq	120(%r12), %r13
	jmp	.L26879
	.p2align 4,,10
	.p2align 3
.L26934:
	movzbl	103(%r12), %eax
	xorl	%edx, %edx
	andl	$1, %eax
.L26867:
	movq	16(%rsp), %rsi
	testb	%al, %al
	movq	8(%rsp), %rax
	movl	%r15d, 192(%rsi)
	je	.L26889
	movq	%r13, 192(%rax)
	movq	24(%rsp), %rax
	movq	%r14, 192(%r12,%rax,8)
.L26890:
	movb	%dl, 100(%r12)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L26865:
	.cfi_restore_state
	movslq	%edx, %rsi
	movq	%rsi, 24(%rsp)
	movl	192(%r12,%rsi,8), %r14d
	jmp	.L26866
	.p2align 4,,10
	.p2align 3
.L26889:
	movl	%r13d, 192(%rax)
	movq	24(%rsp), %rax
	movl	%r14d, 192(%r12,%rax,8)
	jmp	.L26890
.L26931:
	movl	$6, %esi
	movq	%r12, %rdi
	call	*2032(%r12)
	jmp	.L26864
.L26891:
	xorl	%edx, %edx
	jmp	.L26867
.L26936:
	cmpb	43192(%r12,%rcx), %sil
	je	.L26883
.L26897:
	movzbl	%sil, %r8d
.L26884:
	movl	32(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%r12, %rdx
	movq	%r13, %rdi
	movq	%r11, 40(%rsp)
	movl	%r10d, 36(%rsp)
	call	z900_logical_to_main_l
	movq	40(%rsp), %r11
	movl	36(%rsp), %r10d
	jmp	.L26885
.L26935:
	movzbl	44216(%r12,%rcx), %esi
	testb	%sil, 1976(%r12,%rdx)
	jne	.L26882
.L26881:
	movzbl	97(%r12), %r8d
	jmp	.L26884
.L26939:
	cmpb	43192(%r12,%rcx), %sil
	je	.L26875
.L26894:
	movzbl	%sil, %r8d
.L26876:
	movl	32(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%r12, %rdx
	movq	%r13, %rdi
	movq	%r11, 40(%rsp)
	movl	%r10d, 36(%rsp)
	call	z900_logical_to_main_l
	movq	40(%rsp), %r11
	movl	36(%rsp), %r10d
	jmp	.L26877
.L26938:
	movzbl	44216(%r12,%rcx), %esi
	testb	%sil, 1976(%r12,%rdx)
	jne	.L26874
.L26873:
	movzbl	97(%r12), %r8d
	jmp	.L26876
.L26937:
	movl	%r13d, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L26871
	movl	32(%rsp), %esi
	movq	%r12, %rdx
	movq	%r13, %rdi
	movq	%r11, 40(%rsp)
	movl	%r10d, 36(%rsp)
	call	z900_vfetch4_full
	movq	40(%rsp), %r11
	movl	%eax, %ebx
	movl	36(%rsp), %r10d
	jmp	.L26878
	.cfi_endproc
.LFE2556:
	.size	z900_checksum, .-z900_checksum
	.p2align 4,,15
	.globl	z900_compare_register
	.type	z900_compare_register, @function
z900_compare_register:
.LFB2557:
	.cfi_startproc
	movzbl	1(%rdi), %edx
	movl	$1, %ecx
	addq	$2, 136(%rsi)
	movq	%rdx, %rax
	andl	$15, %edx
	movl	192(%rsi,%rdx,8), %edi
	shrq	$4, %rax
	andl	$15, %eax
	cmpl	%edi, 192(%rsi,%rax,8)
	jl	.L26941
	setg	%cl
	addl	%ecx, %ecx
.L26941:
	movb	%cl, 100(%rsi)
	ret
	.cfi_endproc
.LFE2557:
	.size	z900_compare_register, .-z900_compare_register
	.p2align 4,,15
	.globl	z900_compare
	.type	z900_compare, @function
z900_compare:
.LFB2558:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L26979
.L26945:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L26946
	movslq	%eax, %rdx
	addq	192(%rbx,%rdx,8), %rdi
.L26946:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L26980
.L26947:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L26949
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L26981
.L26950:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L26982
.L26951:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L26949
	testb	$4, 46264(%rbx,%rsi)
	je	.L26949
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L26952:
	movl	(%rax), %eax
	bswap	%eax
.L26953:
	movslq	%ebp, %rbp
	movl	$1, %edx
	cmpl	%eax, 192(%rbx,%rbp,8)
	jl	.L26954
	setg	%dl
	addl	%edx, %edx
.L26954:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L26981:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L26950
.L26949:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L26952
.L26980:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L26947
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L26953
.L26979:
	movslq	%edx, %rdx
	addq	192(%rsi,%rdx,8), %rdi
	jmp	.L26945
.L26982:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L26951
	jmp	.L26949
	.cfi_endproc
.LFE2558:
	.size	z900_compare, .-z900_compare
	.p2align 4,,15
	.globl	z900_compare_and_form_codeword
	.type	z900_compare_and_form_codeword, @function
z900_compare_and_form_codeword:
.LFB2559:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	movq	%rsi, %r15
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$184, %rsp
	.cfi_def_cfa_offset 240
	movzbl	103(%rsi), %ebp
	movl	%ebp, %eax
	andl	$1, %eax
	cmpb	$1, %al
	sbbl	%edx, %edx
	movl	%edx, 36(%rsp)
	movl	%edx, %r14d
	andl	$-4, 36(%rsp)
	movl	%edx, 48(%rsp)
	andl	$4, %r14d
	andl	$-32, 48(%rsp)
	addl	$2042, %r14d
	addl	$6, 36(%rsp)
	addl	$48, 48(%rsp)
	cmpb	$1, %al
	sbbq	%rdx, %rdx
	movq	%rdx, (%rsp)
	andq	$-4, (%rsp)
	addq	$6, (%rsp)
	cmpb	$1, %al
	sbbl	%edx, %edx
	movl	%edx, 16(%rsp)
	andb	$-4, 16(%rsp)
	movl	%edx, 52(%rsp)
	movabsq	$-9223372036854775808, %rdx
	andl	$-2147483648, 52(%rsp)
	addb	$6, 16(%rsp)
	testb	%al, %al
	movl	$2147483648, %eax
	cmovne	%rdx, %rax
	movq	%rax, 56(%rsp)
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %ebx
	shrl	$12, %edx
	andl	$4095, %ebx
	andl	$15, %edx
	movq	%rbx, 40(%rsp)
	je	.L26985
	movslq	%edx, %rdx
	movq	192(%rsi,%rdx,8), %rax
	addq	%rax, 40(%rsp)
	movq	120(%rsi), %rax
	andq	%rax, 40(%rsp)
.L26985:
	addq	$4, 136(%r15)
	movb	$4, 130(%r15)
	testb	$1, 200(%r15)
	jne	.L26987
	testb	$1, 208(%r15)
	je	.L27694
.L26987:
	movl	$6, %esi
	movq	%r15, %rdi
	call	*2032(%r15)
	movzbl	103(%r15), %ebp
.L26992:
	movzwl	40(%rsp), %eax
	movl	%r14d, %r12d
	movslq	36(%rsp), %r13
	andw	$32766, %ax
	movw	%ax, 34(%rsp)
	movq	%r13, %rax
	andl	$4, %eax
	movq	%rax, %r14
	jmp	.L27283
	.p2align 4,,10
	.p2align 3
.L27703:
	movq	(%rsp), %rax
	addq	%rax, 208(%r15)
	movq	%rax, %rdx
.L27281:
	leaq	144(%rsp), %rsi
	leaq	128(%rsp), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L27695
.L27283:
	movzwl	208(%r15), %ebx
	andl	$1, %ebp
	cmpw	34(%rsp), %bx
	ja	.L27696
	movq	%rbx, %rbp
	movq	120(%r15), %rax
	addq	200(%r15), %rbp
	addq	216(%r15), %rbx
	movl	1916(%r15), %r8d
	andq	%rax, %rbp
	andq	%rax, %rbx
	testl	%r8d, %r8d
	je	.L26998
	leal	1(%r8), %eax
	movl	%ebp, %esi
	movl	%ebp, 8(%rsp)
	shrl	$12, %esi
	cltq
	movl	%esi, %ecx
	andl	$1023, %ecx
	leaq	(%r15,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%r15,%rax,8)
	jne	.L27697
.L26999:
	movzbl	97(%r15), %r11d
	testb	%r11b, %r11b
	jne	.L27698
.L27001:
	movl	2224(%r15), %edi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L27334
	testb	$4, 46264(%r15,%rcx)
	je	.L27334
	movq	%rbp, %r10
	xorq	26808(%rdx), %r10
.L27002:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	%r12d, %eax
	jg	.L27114
	leaq	128(%rsp), %rdi
	cmpq	$8, %r13
	movq	%r10, %rsi
	jae	.L27699
.L27115:
	xorl	%eax, %eax
	testq	%r14, %r14
	je	.L27118
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L27118:
	testb	$2, %r13b
	je	.L27119
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L27119:
	testb	$1, %r13b
	je	.L27121
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L27121:
	testl	%r8d, %r8d
	je	.L27139
	leal	1(%r8), %eax
	movl	%ebx, %esi
	movl	%ebx, %ebp
	shrl	$12, %esi
	cltq
	movl	%esi, %ecx
	andl	$1023, %ecx
	leaq	(%r15,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%r15,%rax,8)
	jne	.L27700
.L27140:
	testb	%r11b, %r11b
	jne	.L27701
.L27142:
	movl	2224(%r15), %edi
	movq	%rbx, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L27141
	testb	$4, 46264(%r15,%rcx)
	je	.L27141
	movq	%rbx, %r10
	xorq	26808(%rdx), %r10
.L27143:
	movl	%ebx, %eax
	andl	$2047, %eax
	cmpl	%r12d, %eax
	jg	.L27255
	leaq	144(%rsp), %rdi
	cmpq	$8, %r13
	movq	%r10, %rsi
	jae	.L27702
.L27256:
	xorl	%eax, %eax
	testq	%r14, %r14
	je	.L27259
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L27259:
	testb	$2, %r13b
	je	.L27260
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L27260:
	testb	$1, %r13b
	je	.L27262
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L27262:
	movzbl	103(%r15), %ebp
	movl	%ebp, %ebx
	andl	$1, %ebx
	jne	.L27703
	movzbl	16(%rsp), %eax
	movq	(%rsp), %rdx
	addl	%eax, 208(%r15)
	jmp	.L27281
	.p2align 4,,10
	.p2align 3
.L27702:
	cmpq	$127, %r13
	ja	.L27704
	leaq	144(%rsp), %rdi
	movq	%r13, %rcx
	shrq	$3, %rcx
	rep movsq
	jmp	.L27256
	.p2align 4,,10
	.p2align 3
.L27699:
	cmpq	$127, %r13
	ja	.L27705
	leaq	128(%rsp), %rdi
	movq	%r13, %rcx
	shrq	$3, %rcx
	rep movsq
	jmp	.L27115
	.p2align 4,,10
	.p2align 3
.L27696:
	testb	%bpl, %bpl
	movb	$0, 100(%r15)
	jne	.L27706
	movl	52(%rsp), %eax
	orl	216(%r15), %eax
	movl	%eax, 208(%r15)
.L26983:
	addq	$184, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L27694:
	.cfi_restore_state
	testb	$1, 216(%r15)
	je	.L26992
	jmp	.L26987
	.p2align 4,,10
	.p2align 3
.L27695:
	movzbl	40(%rsp), %edx
	andl	$1, %edx
	testl	%eax, %eax
	js	.L27707
	testb	%dl, %dl
	jne	.L27296
	movzbl	128(%rsp), %eax
	movb	$2, 100(%r15)
	movl	36(%rsp), %edx
	notl	%eax
	movb	%al, 160(%rsp)
	movzbl	129(%rsp), %eax
	cmpl	$2, %edx
	notl	%eax
	movb	%al, 161(%rsp)
	jle	.L27297
	movzbl	130(%rsp), %eax
	cmpl	$3, %edx
	notl	%eax
	movb	%al, 162(%rsp)
	jle	.L27297
	movzbl	131(%rsp), %eax
	cmpl	$4, %edx
	notl	%eax
	movb	%al, 163(%rsp)
	jle	.L27297
	movzbl	132(%rsp), %eax
	cmpl	$5, %edx
	notl	%eax
	movb	%al, 164(%rsp)
	jle	.L27297
	movzbl	133(%rsp), %eax
	notl	%eax
	movb	%al, 165(%rsp)
.L27297:
	testb	%bl, %bl
	je	.L27298
	movq	200(%r15), %rax
	movq	216(%r15), %rdx
	movq	%rax, 216(%r15)
	movq	%rdx, 200(%r15)
.L27295:
	movzbl	160(%rsp), %edx
	movzbl	161(%rsp), %eax
	salq	$8, %rdx
	orq	%rdx, %rax
	cmpl	$2, 36(%rsp)
	jle	.L27306
.L27305:
	salq	$8, %rax
	movl	36(%rsp), %ecx
	movq	%rax, %rdx
	movzbl	162(%rsp), %eax
	orq	%rdx, %rax
	cmpl	$3, %ecx
	jle	.L27306
	salq	$8, %rax
	movq	%rax, %rdx
	movzbl	163(%rsp), %eax
	orq	%rdx, %rax
	cmpl	$4, %ecx
	jle	.L27306
	salq	$8, %rax
	movq	%rax, %rdx
	movzbl	164(%rsp), %eax
	orq	%rdx, %rax
	cmpl	$5, %ecx
	jle	.L27306
	salq	$8, %rax
	movq	%rax, %rdx
	movzbl	165(%rsp), %eax
	orq	%rdx, %rax
.L27306:
	testb	%bl, %bl
	je	.L27307
	movq	208(%r15), %rdx
	movzbl	48(%rsp), %ecx
	salq	%cl, %rdx
	orq	%rax, %rdx
	movq	%rdx, 208(%r15)
	jmp	.L26983
	.p2align 4,,10
	.p2align 3
.L27705:
	movq	%r13, %rdx
	movl	%r8d, 64(%rsp)
	movl	%r11d, 8(%rsp)
	call	memcpy
	movl	8(%rsp), %r11d
	movl	64(%rsp), %r8d
	jmp	.L27121
	.p2align 4,,10
	.p2align 3
.L27704:
	movq	%r13, %rdx
	call	memcpy
	jmp	.L27262
	.p2align 4,,10
	.p2align 3
.L27706:
	movq	56(%rsp), %rax
	orq	216(%r15), %rax
	movq	%rax, 208(%r15)
	jmp	.L26983
	.p2align 4,,10
	.p2align 3
.L27298:
	movl	200(%r15), %eax
	movl	216(%r15), %edx
	movl	%eax, 216(%r15)
	movl	%edx, 200(%r15)
	jmp	.L27295
	.p2align 4,,10
	.p2align 3
.L27707:
	testb	%dl, %dl
	jne	.L27285
	movzbl	144(%rsp), %eax
	movb	$1, 100(%r15)
	movl	36(%rsp), %edx
	notl	%eax
	movb	%al, 160(%rsp)
	movzbl	145(%rsp), %eax
	cmpl	$2, %edx
	notl	%eax
	movb	%al, 161(%rsp)
	jle	.L27286
	movzbl	146(%rsp), %eax
	cmpl	$3, %edx
	notl	%eax
	movb	%al, 162(%rsp)
	jle	.L27287
	movzbl	147(%rsp), %eax
	cmpl	$4, %edx
	notl	%eax
	movb	%al, 163(%rsp)
	jle	.L27287
	movzbl	148(%rsp), %eax
	cmpl	$5, %edx
	notl	%eax
	movb	%al, 164(%rsp)
	jle	.L27287
	movzbl	149(%rsp), %eax
	notl	%eax
	movb	%al, 165(%rsp)
.L27287:
	movzbl	160(%rsp), %edx
	movzbl	161(%rsp), %eax
	salq	$8, %rdx
	orq	%rdx, %rax
	jmp	.L27305
	.p2align 4,,10
	.p2align 3
.L27307:
	movl	208(%r15), %edx
	movzbl	48(%rsp), %ecx
	salq	%cl, %rdx
	orl	%edx, %eax
	movl	%eax, 208(%r15)
	jmp	.L26983
.L27296:
	cmpq	$8, (%rsp)
	movb	$1, 100(%r15)
	leaq	160(%rsp), %rdi
	leaq	144(%rsp), %rsi
	jae	.L27708
.L27299:
	xorl	%eax, %eax
	testb	$4, (%rsp)
	je	.L27302
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L27302:
	testb	$2, (%rsp)
	je	.L27303
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L27303:
	testb	$1, (%rsp)
	je	.L27295
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
	jmp	.L27295
.L27708:
	cmpq	$127, (%rsp)
	ja	.L27709
	movq	(%rsp), %rcx
	shrq	$3, %rcx
	rep movsq
	jmp	.L27299
.L27285:
	cmpq	$8, (%rsp)
	movb	$2, 100(%r15)
	leaq	160(%rsp), %rdi
	leaq	128(%rsp), %rsi
	jae	.L27710
.L27288:
	xorl	%eax, %eax
	testb	$4, (%rsp)
	je	.L27291
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L27291:
	testb	$2, (%rsp)
	je	.L27292
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L27292:
	testb	$1, (%rsp)
	je	.L27297
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
	jmp	.L27297
.L27710:
	cmpq	$127, (%rsp)
	ja	.L27711
	movq	(%rsp), %rcx
	shrq	$3, %rcx
	rep movsq
	jmp	.L27288
.L27286:
	movzbl	160(%rsp), %edx
	movzbl	161(%rsp), %eax
	salq	$8, %rdx
	orq	%rdx, %rax
	jmp	.L27306
.L27139:
	movl	%ebx, %esi
	movl	%ebx, %ebp
	shrl	$12, %esi
.L27141:
	andl	$1023, %esi
	testb	$4, 96(%r15)
	movl	%esi, 64(%rsp)
	movzbl	1144(%r15), %eax
	jne	.L27144
	andb	$-8, 994(%r15)
	testb	$1, %al
	je	.L27712
	movzbl	99(%r15), %ecx
	cmpb	$64, %cl
	je	.L27329
.L27330:
	movq	1064(%r15), %rdx
	movq	1080(%rdx), %rsi
	testb	$1, 2(%rsi)
	je	.L27148
	testb	$64, 99(%rdx)
	je	.L27148
.L27149:
	movl	588(%rdx), %edx
	movl	%edx, 8(%rsp)
.L27152:
	testl	%edx, %edx
	je	.L27187
	cmpl	$1, %edx
	je	.L27690
	cmpl	$15, %r8d
	jle	.L27156
	movzbl	2010(%r15), %edx
	leal	1(%r8), %eax
	cltq
	movq	320(%r15,%rax,8), %rax
	movl	$1, 976(%r15)
	andl	$3, %edx
	leal	(%rdx,%rdx), %ecx
	movzbl	994(%r15), %edx
	movq	%rax, 968(%r15)
	andl	$-7, %edx
	orl	%ecx, %edx
	movb	%dl, 994(%r15)
	movq	%rax, %rdx
	andl	$288, %edx
.L27155:
	testq	%rdx, %rdx
	movzbl	994(%r15), %edx
	movl	2224(%r15), %esi
	setne	%cl
	movslq	64(%rsp), %r8
	andl	$-2, %edx
	orl	%ecx, %edx
	movq	%rbx, %rcx
	andq	$-4194304, %rcx
	movb	%dl, 994(%r15)
	orq	%rcx, %rsi
	movq	%rcx, 72(%rsp)
	leaq	(%r15,%r8,8), %rcx
	cmpq	10424(%rcx), %rsi
	je	.L27713
.L27190:
	testb	$32, %al
	je	.L27192
	movq	%rbx, %r10
	xorl	%r9d, %r9d
	andq	$-4096, %r10
.L27193:
	testl	$512, %r10d
	jne	.L27219
	movzbl	994(%r15), %edx
	shrb	%dl
	andl	$3, %edx
.L27220:
	movq	%rax, 2232(%rcx)
	movq	%rsi, 10424(%rcx)
	movq	%r10, 18616(%rcx)
	movb	%r9b, 44216(%r15,%r8)
	movb	%dl, 45240(%r15,%r8)
	movb	$0, 46264(%r15,%r8)
	movq	$0, 26808(%rcx)
.L27191:
	movq	%rbx, %rax
	andq	$-4096, %r10
	xorl	%edx, %edx
	andl	$4095, %eax
	movq	%r10, 960(%r15)
	movq	%r10, %rcx
	orq	%r10, %rax
	movw	%dx, 992(%r15)
	movq	%rax, 944(%r15)
.L27216:
	movq	%rax, %r10
.L27146:
	movq	%r10, %rdx
	movl	88(%r15), %eax
	andq	$-8192, %rdx
	je	.L27230
	cmpq	%rax, %rdx
	je	.L27230
.L27231:
	movq	%rcx, %rdx
	movq	%r10, 952(%r15)
	andq	$-8192, %rdx
	je	.L27232
	cmpq	%rax, %rdx
	je	.L27232
.L27233:
	cmpq	1040(%r15), %r10
	ja	.L27234
	movzbl	1144(%r15), %eax
	testb	$2, %al
	jne	.L27714
.L27235:
	movq	%r10, %rdx
	shrq	$11, %rdx
	addq	1032(%r15), %rdx
	testb	$1, %al
	movq	%rdx, 984(%r15)
	jne	.L27715
	testb	%r11b, %r11b
	movzbl	(%rdx), %esi
	jne	.L27716
.L27247:
	orl	$4, %esi
	movb	%sil, (%rdx)
	leaq	(%r15,%r8,8), %rdx
	movq	%rbx, %rsi
	movq	984(%r15), %rax
	andq	$-4096, %rsi
	movq	%rax, 35000(%rdx)
	movzbl	(%rax), %eax
	movb	$4, 46264(%r15,%r8)
	andl	$-16, %eax
	movb	%al, 43192(%r15,%r8)
	movq	1024(%r15), %rax
	addq	%rax, %rcx
	addq	%rax, %r10
	xorq	%rsi, %rcx
	movq	%rcx, 26808(%rdx)
	jmp	.L27143
.L27698:
	cmpb	43192(%r15,%rcx), %r11b
	je	.L27001
.L27334:
	movb	%r11b, 64(%rsp)
.L27000:
	andl	$1023, %esi
	testb	$4, 96(%r15)
	movl	%esi, 80(%rsp)
	movzbl	1144(%r15), %eax
	jne	.L27003
	andb	$-8, 994(%r15)
	testb	$1, %al
	je	.L27717
	movzbl	99(%r15), %ecx
	cmpb	$64, %cl
	je	.L27327
.L27328:
	movq	1064(%r15), %rdx
	movq	1080(%rdx), %rsi
	testb	$1, 2(%rsi)
	je	.L27007
	testb	$64, 99(%rdx)
	je	.L27007
.L27008:
	movl	588(%rdx), %r11d
.L27011:
	testl	%r11d, %r11d
	je	.L27046
	cmpl	$1, %r11d
	je	.L27689
	cmpl	$15, %r8d
	jle	.L27015
	movzbl	2010(%r15), %edx
	leal	1(%r8), %eax
	cltq
	movq	320(%r15,%rax,8), %rax
	movl	$1, 976(%r15)
	andl	$3, %edx
	leal	(%rdx,%rdx), %ecx
	movzbl	994(%r15), %edx
	movq	%rax, 968(%r15)
	andl	$-7, %edx
	orl	%ecx, %edx
	movb	%dl, 994(%r15)
	movq	%rax, %rdx
	andl	$288, %edx
.L27014:
	testq	%rdx, %rdx
	movzbl	994(%r15), %edx
	movl	2224(%r15), %esi
	setne	%cl
	movslq	80(%rsp), %r8
	andl	$-2, %edx
	orl	%ecx, %edx
	movq	%rbp, %rcx
	andq	$-4194304, %rcx
	movb	%dl, 994(%r15)
	leaq	(%r15,%r8,8), %r9
	orq	%rcx, %rsi
	movq	%rcx, 72(%rsp)
	cmpq	10424(%r9), %rsi
	je	.L27718
.L27049:
	testb	$32, %al
	je	.L27051
	movq	%rbp, %r10
	xorl	%r11d, %r11d
	andq	$-4096, %r10
.L27052:
	testl	$512, %r10d
	jne	.L27078
	movzbl	994(%r15), %edx
	shrb	%dl
	andl	$3, %edx
.L27079:
	movq	%rax, 2232(%r9)
	movq	%rsi, 10424(%r9)
	movq	%r10, 18616(%r9)
	movb	%r11b, 44216(%r15,%r8)
	movb	%dl, 45240(%r15,%r8)
	movb	$0, 46264(%r15,%r8)
	movq	$0, 26808(%r9)
.L27050:
	movq	%rbp, %rax
	andq	$-4096, %r10
	xorl	%edi, %edi
	andl	$4095, %eax
	movq	%r10, 960(%r15)
	movq	%r10, %rcx
	orq	%r10, %rax
	movw	%di, 992(%r15)
	movq	%rax, 944(%r15)
.L27075:
	movq	%rax, %r10
.L27005:
	movq	%r10, %rdx
	movl	88(%r15), %eax
	andq	$-8192, %rdx
	je	.L27089
	cmpq	%rax, %rdx
	je	.L27089
.L27090:
	movq	%rcx, %rdx
	movq	%r10, 952(%r15)
	andq	$-8192, %rdx
	je	.L27091
	cmpq	%rax, %rdx
	je	.L27091
.L27092:
	cmpq	1040(%r15), %r10
	ja	.L27093
	movzbl	1144(%r15), %eax
	testb	$2, %al
	jne	.L27719
.L27094:
	movq	%r10, %rdx
	shrq	$11, %rdx
	addq	1032(%r15), %rdx
	testb	$1, %al
	movq	%rdx, 984(%r15)
	jne	.L27720
	cmpb	$0, 64(%rsp)
	movzbl	(%rdx), %esi
	jne	.L27721
.L27106:
	orl	$4, %esi
	movb	%sil, (%rdx)
	leaq	(%r15,%r8,8), %rdx
	movq	%rbp, %rsi
	movq	984(%r15), %rax
	andq	$-4096, %rsi
	movq	%rax, 35000(%rdx)
	movzbl	(%rax), %eax
	movb	$4, 46264(%r15,%r8)
	andl	$-16, %eax
	movb	%al, 43192(%r15,%r8)
	movq	1024(%r15), %rax
	addq	%rax, %rcx
	addq	%rax, %r10
	xorq	%rsi, %rcx
	movq	%rcx, 26808(%rdx)
.L27105:
	movl	1916(%r15), %r8d
	movzbl	97(%r15), %r11d
	jmp	.L27002
.L27232:
	xorq	%rax, %rcx
	jmp	.L27233
.L27230:
	xorq	%rax, %r10
	jmp	.L27231
.L27091:
	xorq	%rax, %rcx
	.p2align 4,,2
	jmp	.L27092
.L27089:
	xorq	%rax, %r10
	.p2align 4,,2
	jmp	.L27090
.L27003:
	movzbl	99(%r15), %ecx
	movl	%eax, %edx
	andb	$-8, 994(%r15)
	andl	$1, %edx
	cmpb	$64, %cl
	je	.L27006
	testb	%dl, %dl
	jne	.L27328
.L27007:
	cmpb	$-128, %cl
	je	.L27689
	cmpb	$-64, %cl
	.p2align 4,,3
	je	.L27722
.L27046:
	movq	336(%r15), %rax
	movl	$0, 976(%r15)
	movq	%rax, %rdx
	movq	%rax, 968(%r15)
	andl	$288, %edx
	jmp	.L27014
.L27144:
	movzbl	99(%r15), %ecx
	movl	%eax, %edx
	andb	$-8, 994(%r15)
	andl	$1, %edx
	cmpb	$64, %cl
	je	.L27147
	testb	%dl, %dl
	jne	.L27330
.L27148:
	cmpb	$-128, %cl
	je	.L27690
	cmpb	$-64, %cl
	.p2align 4,,3
	je	.L27723
.L27187:
	movq	336(%r15), %rax
	movl	$0, 976(%r15)
	movq	%rax, %rdx
	movq	%rax, 968(%r15)
	andl	$288, %edx
	jmp	.L27155
.L27114:
	movl	8(%rsp), %ecx
	movl	$2048, 64(%rsp)
	movl	%ecx, %eax
	andl	$2047, %eax
	subl	%eax, 64(%rsp)
	testl	%r8d, %r8d
	je	.L27122
	movl	64(%rsp), %eax
	leal	1(%r8), %esi
	movq	120(%r15), %rdx
	movslq	%esi, %rsi
	addl	%ecx, %eax
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%r15,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%r15,%rsi,8)
	jne	.L27724
.L27123:
	testb	%r11b, %r11b
	jne	.L27725
.L27125:
	movl	64(%rsp), %esi
	leaq	(%rsi,%rbp), %rdi
	movq	%rsi, 8(%rsp)
	movl	2224(%r15), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L27124
	testb	$4, 46264(%r15,%rax)
	je	.L27124
	xorq	26808(%rcx), %rdi
	movq	%rdi, %rbp
.L27126:
	cmpq	$8, 8(%rsp)
	leaq	128(%rsp), %rdi
	movq	%r10, %rsi
	jae	.L27726
.L27127:
	xorl	%eax, %eax
	testb	$4, 8(%rsp)
	je	.L27130
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L27130:
	testb	$2, 8(%rsp)
	je	.L27131
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L27131:
	testb	$1, 8(%rsp)
	je	.L27129
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L27129:
	movl	36(%rsp), %edx
	leaq	128(%rsp), %rax
	movq	%rbp, %rsi
	movq	8(%rsp), %rdi
	subl	64(%rsp), %edx
	addq	%rax, %rdi
	movq	%rdi, %rax
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L27727
.L27133:
	xorl	%ecx, %ecx
	testb	$4, %dl
	je	.L27136
	movl	(%rsi), %ecx
	movl	%ecx, (%rax)
	movl	$4, %ecx
.L27136:
	testb	$2, %dl
	je	.L27137
	movzwl	(%rsi,%rcx), %edi
	movw	%di, (%rax,%rcx)
	addq	$2, %rcx
.L27137:
	andl	$1, %edx
	je	.L27121
	movzbl	(%rsi,%rcx), %edx
	movb	%dl, (%rax,%rcx)
	jmp	.L27121
.L27700:
	movzbl	1976(%r15,%rax), %eax
	testb	%al, 44216(%r15,%rcx)
	jne	.L27140
	jmp	.L27141
	.p2align 4,,10
	.p2align 3
.L27709:
	movq	(%rsp), %rdx
	call	memcpy
	.p2align 4,,4
	jmp	.L27295
.L27701:
	cmpb	%r11b, 43192(%r15,%rcx)
	je	.L27142
	.p2align 4,,3
	jmp	.L27141
	.p2align 4,,10
	.p2align 3
.L27255:
	movl	%ebp, %eax
	movl	$2048, %r11d
	andl	$2047, %eax
	subl	%eax, %r11d
	movl	1916(%r15), %eax
	testl	%eax, %eax
	je	.L27263
	movq	120(%r15), %rdx
	leal	1(%rax), %esi
	addl	%r11d, %ebp
	movslq	%esi, %rsi
	andl	%edx, %ebp
	shrl	$12, %ebp
	movl	%ebp, %eax
	andl	$1023, %eax
	leaq	(%r15,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%r15,%rsi,8)
	jne	.L27728
.L27264:
	movzbl	97(%r15), %r8d
	movl	%r11d, %ebp
	leaq	0(%rbp,%rbx), %rdi
	andq	%rdx, %rdi
	testb	%r8b, %r8b
	jne	.L27729
.L27266:
	movl	2224(%r15), %esi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L27265
	testb	$4, 46264(%r15,%rax)
	je	.L27265
	movq	%rdi, %rbx
	xorq	26808(%rcx), %rbx
.L27267:
	cmpq	$8, %rbp
	movq	%r10, %rsi
	leaq	144(%rsp), %rdi
	jae	.L27730
.L27268:
	xorl	%eax, %eax
	testb	$4, %bpl
	je	.L27271
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L27271:
	testb	$2, %bpl
	je	.L27272
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L27272:
	testb	$1, %bpl
	je	.L27270
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L27270:
	movl	36(%rsp), %edx
	leaq	144(%rsp), %rax
	movq	%rbx, %rsi
	leaq	(%rax,%rbp), %rdi
	movq	%rdi, %r8
	subl	%r11d, %edx
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L27731
.L27274:
	xorl	%eax, %eax
	testb	$4, %dl
	je	.L27277
	movl	(%rsi), %eax
	movl	%eax, (%r8)
	movl	$4, %eax
.L27277:
	testb	$2, %dl
	je	.L27278
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%r8,%rax)
	addq	$2, %rax
.L27278:
	andl	$1, %edx
	je	.L27262
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%r8,%rax)
	jmp	.L27262
.L27697:
	movzbl	44216(%r15,%rcx), %edi
	testb	%dil, 1976(%r15,%rax)
	jne	.L26999
.L27685:
	movzbl	97(%r15), %eax
	movb	%al, 64(%rsp)
	jmp	.L27000
.L26998:
	movl	%ebp, %esi
	movl	%ebp, 8(%rsp)
	shrl	$12, %esi
	jmp	.L27685
.L27712:
	movslq	%esi, %r8
	movq	%rbx, %rcx
	movq	%rbx, 944(%r15)
	leaq	(%r15,%r8,8), %rax
	andq	$-4096, %rcx
	movq	%rbx, %rsi
	movq	%rcx, 960(%r15)
	andq	$-4194304, %rsi
	movq	%rbx, %r10
	movq	$-1, 2232(%rax)
	movl	2224(%r15), %edx
	movq	%rsi, 18616(%rax)
	orq	%rsi, %rdx
	movq	%rdx, 10424(%rax)
	movb	$0, 45240(%r15,%r8)
	movb	$0, 44216(%r15,%r8)
	movb	$0, 46264(%r15,%r8)
	jmp	.L27146
.L27717:
	movslq	%esi, %r8
	movq	%rbp, %rcx
	movq	%rbp, 944(%r15)
	leaq	(%r15,%r8,8), %rax
	andq	$-4096, %rcx
	movq	%rbp, %rsi
	movq	%rcx, 960(%r15)
	andq	$-4194304, %rsi
	movq	%rbp, %r10
	movq	$-1, 2232(%rax)
	movl	2224(%r15), %edx
	movq	%rsi, 18616(%rax)
	orq	%rsi, %rdx
	movq	%rdx, 10424(%rax)
	movb	$0, 45240(%r15,%r8)
	movb	$0, 44216(%r15,%r8)
	movb	$0, 46264(%r15,%r8)
	jmp	.L27005
.L27731:
	cmpq	$127, %rdx
	ja	.L27732
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rdi, %r8
	jmp	.L27274
.L27727:
	cmpq	$127, %rdx
	ja	.L27733
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rdi, %rax
	jmp	.L27133
.L27730:
	cmpq	$127, %rbp
	ja	.L27734
	leaq	144(%rsp), %rdi
	movq	%rbp, %rcx
	shrq	$3, %rcx
	rep movsq
	jmp	.L27268
.L27726:
	cmpq	$127, 8(%rsp)
	ja	.L27735
	movq	8(%rsp), %rcx
	leaq	128(%rsp), %rdi
	shrq	$3, %rcx
	rep movsq
	jmp	.L27127
.L27192:
	movl	%eax, %edx
	movq	%rbx, %rsi
	movl	%eax, %edi
	shrq	$50, %rsi
	andl	$12, %edx
	andw	$16376, %si
	cmpb	$11, %dl
	ja	.L27350
	testw	%si, %si
	jne	.L27194
.L27350:
	movq	%rbx, %r9
	shrq	$39, %r9
	andw	$16376, %r9w
	cmpb	$7, %dl
	ja	.L27351
	testw	%r9w, %r9w
	jne	.L27194
.L27351:
	movq	%rbx, %r10
	shrq	$28, %r10
	andw	$16376, %r10w
	cmpb	$3, %dl
	movw	%r10w, 64(%rsp)
	jbe	.L27736
.L27352:
	movq	%rbx, %r10
	andq	$-4096, %rax
	andl	$3, %edi
	shrq	$17, %r10
	andw	$16376, %r10w
	cmpb	$8, %dl
	movw	%r10w, 80(%rsp)
	je	.L27199
	cmpb	$12, %dl
	je	.L27200
	cmpb	$4, %dl
	je	.L27737
	movzwl	80(%rsp), %esi
	movzwl	%si, %edx
	shrw	$12, %si
	addq	%rdx, %rax
	movq	%rax, 8(%rsp)
.L27322:
	movzbl	%dil, %edi
	cmpw	%di, %si
	ja	.L27210
	movq	8(%rsp), %rax
	cmpq	1040(%r15), %rax
	jbe	.L27738
.L27203:
	movl	$5, %eax
	movl	$5, %esi
	movw	%ax, 992(%r15)
.L27221:
	movq	%r15, %rdi
	call	*2032(%r15)
.L27211:
.L27210:
	movq	8(%rsp), %rax
	movl	$16, %r9d
	movl	$16, %esi
	movw	%r9w, 992(%r15)
	movq	%rax, 944(%r15)
.L27222:
	movl	976(%r15), %edx
	movq	%rbx, %rcx
	andq	$-4096, %rcx
	movq	%rcx, 792(%r15)
	movslq	%edx, %rax
	orq	%rcx, %rax
	cmpl	$1, %edx
	je	.L27739
.L27224:
	orb	$8, %ah
	cmpb	$64, 99(%r15)
	movq	%rax, 792(%r15)
	je	.L27185
	testb	$1, 1144(%r15)
	je	.L27254
	movq	1064(%r15), %rax
	movq	1080(%rax), %rdx
	testb	$1, 2(%rdx)
	je	.L27254
	testb	$64, 99(%rax)
	je	.L27254
.L27185:
	movb	$1, 1012(%r15)
.L27253:
.L27254:
	movq	%r15, %rdi
	call	*2032(%r15)
	xorl	%r10d, %r10d
	jmp	.L27143
.L27736:
	testw	%r10w, %r10w
	je	.L27352
.L27194:
	movl	$56, %r8d
	movl	$56, %esi
	movw	%r8w, 992(%r15)
	jmp	.L27222
.L27690:
	movq	384(%r15), %rax
	movl	$2, 976(%r15)
	movq	%rax, %rdx
	movq	%rax, 968(%r15)
	andl	$288, %edx
	jmp	.L27155
.L27689:
	movq	384(%r15), %rax
	movl	$2, 976(%r15)
	movq	%rax, %rdx
	movq	%rax, 968(%r15)
	andl	$288, %edx
	jmp	.L27014
.L27051:
	movl	%eax, %edx
	movq	%rbp, %r11
	movl	%eax, %edi
	shrq	$50, %r11
	andl	$12, %edx
	andw	$16376, %r11w
	cmpb	$11, %dl
	ja	.L27347
	testw	%r11w, %r11w
	jne	.L27053
.L27347:
	movq	%rbp, %rcx
	shrq	$39, %rcx
	andw	$16376, %cx
	cmpb	$7, %dl
	ja	.L27348
	testw	%cx, %cx
	jne	.L27053
.L27348:
	movq	%rbp, %r10
	shrq	$28, %r10
	andw	$16376, %r10w
	cmpb	$3, %dl
	jbe	.L27740
.L27349:
	movq	%rbp, %rsi
	andq	$-4096, %rax
	andl	$3, %edi
	shrq	$17, %rsi
	andw	$16376, %si
	cmpb	$8, %dl
	movw	%si, 80(%rsp)
	je	.L27058
	cmpb	$12, %dl
	je	.L27059
	cmpb	$4, %dl
	je	.L27741
	movzwl	80(%rsp), %esi
	movzwl	%si, %edx
	shrw	$12, %si
	addq	%rax, %rdx
.L27314:
	movzbl	%dil, %edi
	cmpw	%di, %si
	ja	.L27069
	cmpq	1040(%r15), %rdx
	jbe	.L27742
.L27062:
	movl	$5, %esi
	movw	%si, 992(%r15)
	movl	$5, %esi
.L27080:
	movq	%r15, %rdi
	movq	%rdx, 64(%rsp)
	call	*2032(%r15)
	movq	64(%rsp), %rdx
.L27070:
.L27069:
	movl	$16, %eax
	movq	%rdx, 944(%r15)
	movl	$16, %esi
	movw	%ax, 992(%r15)
.L27081:
	movl	976(%r15), %edx
	movq	%rbp, %rcx
	andq	$-4096, %rcx
	movq	%rcx, 792(%r15)
	movslq	%edx, %rax
	orq	%rcx, %rax
	cmpl	$1, %edx
	je	.L27743
.L27083:
	orb	$8, %ah
	cmpb	$64, 99(%r15)
	movq	%rax, 792(%r15)
	je	.L27044
	testb	$1, 1144(%r15)
	je	.L27113
	movq	1064(%r15), %rax
	movq	1080(%rax), %rdx
	testb	$1, 2(%rdx)
	je	.L27113
	testb	$64, 99(%rax)
	je	.L27113
.L27044:
	movb	$1, 1012(%r15)
.L27112:
.L27113:
	movq	%r15, %rdi
	call	*2032(%r15)
	xorl	%r10d, %r10d
	jmp	.L27105
.L27740:
	testw	%r10w, %r10w
	je	.L27349
.L27053:
	movl	$56, %eax
	movl	$56, %esi
	movw	%ax, 992(%r15)
	jmp	.L27081
.L27723:
	movq	432(%r15), %rax
	movl	$3, 976(%r15)
	movq	%rax, %rdx
	movq	%rax, 968(%r15)
	andl	$288, %edx
	jmp	.L27155
.L27006:
	testb	%dl, %dl
	jne	.L27327
	movl	588(%r15), %r11d
	jmp	.L27011
.L27718:
	cmpb	$0, 44216(%r15,%r8)
	je	.L27744
	andl	$1, %edx
	jne	.L27049
.L27048:
	movzbl	45240(%r15,%r8), %eax
	movq	18616(%r9), %r10
	testb	%al, %al
	je	.L27050
	andl	$3, %eax
	leal	(%rax,%rax), %edx
	movzbl	994(%r15), %eax
	andl	$-7, %eax
	orl	%edx, %eax
	movb	%al, 994(%r15)
	jmp	.L27050
	.p2align 4,,10
	.p2align 3
.L27147:
	testb	%dl, %dl
	jne	.L27329
	movl	588(%r15), %edx
	movl	%edx, 8(%rsp)
	jmp	.L27152
.L27711:
	movq	(%rsp), %rdx
	call	memcpy
	jmp	.L27297
.L27713:
	cmpb	$0, 44216(%r15,%r8)
	je	.L27745
	andl	$1, %edx
	jne	.L27190
.L27189:
	movzbl	45240(%r15,%r8), %eax
	movq	18616(%rcx), %r10
	testb	%al, %al
	je	.L27191
	andl	$3, %eax
	leal	(%rax,%rax), %edx
	movzbl	994(%r15), %eax
	andl	$-7, %eax
	orl	%edx, %eax
	movb	%al, 994(%r15)
	jmp	.L27191
	.p2align 4,,10
	.p2align 3
.L27722:
	movq	432(%r15), %rax
	movl	$3, 976(%r15)
	movq	%rax, %rdx
	movq	%rax, 968(%r15)
	andl	$288, %edx
	jmp	.L27014
.L27744:
	cmpq	2232(%r9), %rax
	jne	.L27049
	jmp	.L27048
	.p2align 4,,10
	.p2align 3
.L27745:
	cmpq	%rax, 2232(%rcx)
	jne	.L27190
	.p2align 4,,4
	jmp	.L27189
.L27725:
	cmpb	%r11b, 43192(%r15,%rax)
	je	.L27125
.L27687:
	movl	64(%rsp), %eax
	leaq	(%rax,%rbp), %rdi
	movq	%rax, 8(%rsp)
	andq	%rdx, %rdi
.L27124:
	movzbl	%r11b, %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%r15, %rdx
	movl	$1, %esi
	movq	%r10, 72(%rsp)
	call	z900_logical_to_main_l
	movl	1916(%r15), %r8d
	movq	%rax, %rbp
	movzbl	97(%r15), %r11d
	movq	72(%rsp), %r10
	jmp	.L27126
.L27724:
	movzbl	44216(%r15,%rax), %edi
	testb	%dil, 1976(%r15,%rsi)
	jne	.L27123
	jmp	.L27687
.L27734:
	movq	%rbp, %rdx
	movl	%r11d, 8(%rsp)
	call	memcpy
	movl	8(%rsp), %r11d
	jmp	.L27270
.L27199:
	movl	%r9d, %edx
	shrw	$12, %dx
.L27320:
	movzbl	%dil, %edi
	cmpw	%di, %dx
	ja	.L27206
	movzwl	%r9w, %edx
	addq	%rdx, %rax
	cmpq	1040(%r15), %rax
	movq	%rax, 8(%rsp)
	ja	.L27203
	movq	%r15, %rsi
	movq	%rax, %rdi
	movq	%r8, 104(%rsp)
	movq	%rcx, 96(%rsp)
	movl	%r11d, 88(%rsp)
	call	z900_fetch_main_absolute
	movl	88(%rsp), %r11d
	movq	(%rax), %rsi
	movq	96(%rsp), %rcx
	movq	104(%rsp), %r8
	bswap	%rsi
	testb	$32, %sil
	jne	.L27206
	movq	%rsi, %rax
	andl	$12, %eax
	cmpq	$8, %rax
	je	.L27746
.L27204:
	movl	$18, %r11d
	movl	$18, %esi
	movw	%r11w, 992(%r15)
	jmp	.L27221
.L27327:
	movq	1064(%r15), %rdx
	movq	1080(%rdx), %rcx
	testb	$1, 2(%rcx)
	je	.L27046
	testb	$64, 99(%rdx)
	je	.L27046
	jmp	.L27008
.L27746:
	cmpb	$0, 2049(%r15)
	js	.L27747
.L27207:
	movzwl	64(%rsp), %edx
	movq	%rsi, %rax
	movl	%esi, %edi
	andl	$192, %esi
	andq	$-4096, %rax
	andl	$3, %edi
	shrq	$6, %rsi
	shrw	$12, %dx
	cmpw	%si, %dx
	jb	.L27208
.L27321:
	movzbl	%dil, %edi
	cmpw	%di, %dx
	ja	.L27208
	movzwl	64(%rsp), %edx
	addq	%rdx, %rax
	cmpq	1040(%r15), %rax
	movq	%rax, 8(%rsp)
	ja	.L27203
	movq	%r15, %rsi
	movq	%rax, %rdi
	movq	%r8, 96(%rsp)
	movq	%rcx, 88(%rsp)
	movl	%r11d, 64(%rsp)
	call	z900_fetch_main_absolute
	movl	64(%rsp), %r11d
	movq	(%rax), %rax
	movq	88(%rsp), %rcx
	movq	96(%rsp), %r8
	bswap	%rax
	testb	$32, %al
	jne	.L27208
	movq	%rax, %rsi
	andl	$12, %esi
	cmpq	$4, %rsi
	jne	.L27204
	cmpb	$0, 2049(%r15)
	js	.L27748
.L27209:
	movzwl	80(%rsp), %r9d
	movq	%rax, %rsi
	movl	%eax, %edi
	andq	$-4096, %rsi
	andl	$192, %eax
	andl	$3, %edi
	shrq	$6, %rax
	movzwl	%r9w, %edx
	addq	%rsi, %rdx
	movl	%r9d, %esi
	shrw	$12, %si
	movq	%rdx, 8(%rsp)
	cmpw	%ax, %si
	jb	.L27210
	jmp	.L27322
.L27200:
	movl	%esi, %edx
	movzbl	%dil, %edi
	shrw	$12, %dx
	cmpw	%dx, %di
	jb	.L27202
	movzwl	%si, %edx
	addq	%rdx, %rax
	cmpq	1040(%r15), %rax
	movq	%rax, 8(%rsp)
	ja	.L27203
	movq	%r15, %rsi
	movq	%rax, %rdi
	movq	%r8, 112(%rsp)
	movl	%r9d, 104(%rsp)
	movq	%rcx, 96(%rsp)
	movl	%r11d, 88(%rsp)
	call	z900_fetch_main_absolute
	movl	88(%rsp), %r11d
	movq	(%rax), %rsi
	movq	96(%rsp), %rcx
	movl	104(%rsp), %r9d
	movq	112(%rsp), %r8
	bswap	%rsi
	testb	$32, %sil
	jne	.L27202
	movq	%rsi, %rax
	andl	$12, %eax
	cmpq	$12, %rax
	jne	.L27204
	cmpb	$0, 2049(%r15)
	js	.L27749
.L27205:
	movq	%rsi, %rax
	movl	%esi, %edi
	movl	%r9d, %edx
	andl	$192, %esi
	shrw	$12, %dx
	andq	$-4096, %rax
	shrq	$6, %rsi
	andl	$3, %edi
	cmpw	%si, %dx
	jae	.L27320
.L27206:
	movl	$58, %esi
	movw	%si, 992(%r15)
	movl	$58, %esi
	jmp	.L27222
.L27748:
	testb	$-128, 330(%r15)
	je	.L27209
	testb	$2, %ah
	je	.L27209
	orb	$2, 994(%r15)
	jmp	.L27209
.L27208:
	movl	$59, %ecx
	movl	$59, %esi
	movw	%cx, 992(%r15)
	jmp	.L27222
.L27747:
	testb	$-128, 330(%r15)
	je	.L27207
	testl	$512, %esi
	je	.L27207
	orb	$2, 994(%r15)
	jmp	.L27207
.L27122:
	movl	64(%rsp), %eax
	leaq	(%rax,%rbp), %rdi
	movq	%rax, 8(%rsp)
	andq	120(%r15), %rdi
	jmp	.L27124
.L27732:
	call	memcpy
	jmp	.L27262
.L27729:
	cmpb	43192(%r15,%rax), %r8b
	je	.L27266
.L27265:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%r15, %rdx
	movl	$1, %esi
	movl	%r11d, 64(%rsp)
	movq	%r10, 8(%rsp)
	call	z900_logical_to_main_l
	movl	64(%rsp), %r11d
	movq	%rax, %rbx
	movq	8(%rsp), %r10
	jmp	.L27267
.L27739:
	movq	968(%r15), %rdx
	movq	%rcx, %rax
	movq	%rdx, %rdi
	xorq	336(%r15), %rdi
	testq	$-4096, %rdi
	je	.L27224
	movq	%rdx, %rcx
	xorq	384(%r15), %rcx
	testq	$-4096, %rcx
	jne	.L27225
	orq	$2, %rax
	jmp	.L27224
.L27738:
	movq	%r15, %rsi
	movq	%rax, %rdi
	movq	%r8, 88(%rsp)
	movq	%rcx, 80(%rsp)
	movl	%r11d, 64(%rsp)
	call	z900_fetch_main_absolute
	movl	64(%rsp), %r11d
	movq	(%rax), %r9
	movq	80(%rsp), %rcx
	movq	88(%rsp), %r8
	bswap	%r9
	testb	$32, %r9b
	jne	.L27210
	testb	$12, %r9b
	jne	.L27204
	movzbl	994(%r15), %eax
	testb	$1, %al
	je	.L27212
	testb	$16, %r9b
	jne	.L27204
.L27212:
	cmpb	$0, 2049(%r15)
	js	.L27750
.L27213:
	movq	%rbx, %rax
	movq	%r9, %rsi
	shrq	$9, %rax
	andq	$-2048, %rsi
	andl	$2040, %eax
	leaq	(%rsi,%rax), %rdx
	cmpq	1040(%r15), %rdx
	ja	.L27203
	movq	%rdx, %rdi
	movq	%r15, %rsi
	movq	%r8, 104(%rsp)
	movq	%r9, 96(%rsp)
	movq	%rcx, 88(%rsp)
	movl	%r11d, 80(%rsp)
	movq	%rdx, 64(%rsp)
	call	z900_fetch_main_absolute
	movq	64(%rsp), %rdx
	movq	(%rax), %r10
	movl	80(%rsp), %r11d
	movq	88(%rsp), %rcx
	movq	96(%rsp), %r9
	bswap	%r10
	testl	$1024, %r10d
	movq	104(%rsp), %r8
	jne	.L27217
	testl	$2048, %r10d
	jne	.L27204
	movl	2224(%r15), %esi
	movq	968(%r15), %rax
	orq	72(%rsp), %rsi
	testl	$512, %r9d
	je	.L27218
	shrq	$4, %r9
	andl	$1, %r9d
.L27219:
	movzbl	994(%r15), %edi
	movl	%edi, %edx
	movb	%dil, 8(%rsp)
	shrb	%dl
	andl	$3, %edx
	orl	$1, %edx
	leal	(%rdx,%rdx), %edi
	movb	%dil, 64(%rsp)
	movzbl	8(%rsp), %edi
	andl	$-7, %edi
	orb	64(%rsp), %dil
	movb	%dil, 994(%r15)
	jmp	.L27220
.L27218:
	shrq	$4, %r9
	andl	$1, %r9d
	jmp	.L27193
.L27217:
	movl	$17, %r10d
	movq	%rdx, 944(%r15)
	movl	$17, %esi
	movw	%r10w, 992(%r15)
	jmp	.L27222
.L27750:
	testb	$-128, 330(%r15)
	je	.L27213
	testl	$1024, %r9d
	je	.L27213
	testl	$512, %r9d
	jne	.L27214
	shrb	%al
	movl	%eax, %edx
	andl	$3, %edx
.L27215:
	movq	%r9, %rax
	movq	%rbx, %rsi
	movq	968(%r15), %rdi
	andl	$1048575, %esi
	andq	$-1048576, %rax
	orq	%rsi, %rax
	movq	%rax, %rsi
	movq	%rax, 944(%r15)
	andq	$-4096, %rsi
	movq	%rsi, 960(%r15)
	movq	%rdi, 2232(%rcx)
	movl	2224(%r15), %edi
	movq	%rsi, 18616(%rcx)
	orq	72(%rsp), %rdi
	movq	%rdi, 10424(%rcx)
	movq	%r9, %rdi
	shrq	$4, %rdi
	movb	%dl, 45240(%r15,%r8)
	movb	$0, 46264(%r15,%r8)
	andl	$1, %edi
	movb	%dil, 44216(%r15,%r8)
	movq	$0, 26808(%rcx)
	xorl	%ecx, %ecx
	movw	%cx, 992(%r15)
	movq	%rsi, %rcx
	jmp	.L27216
.L27263:
	movl	%r11d, %ebp
	movzbl	97(%r15), %r8d
	leaq	0(%rbp,%rbx), %rdi
	andq	120(%r15), %rdi
	jmp	.L27265
.L27156:
	movzwl	394(%r15), %edx
	testl	$-33554432, 8(%rsp)
	movw	%dx, 72(%rsp)
	je	.L27751
.L27157:
	movl	$40, %r10d
	movl	$40, %esi
	movw	%r10w, 992(%r15)
	jmp	.L27185
.L27214:
	movl	%eax, %edx
	andl	$-7, %eax
	shrb	%dl
	andl	$3, %edx
	orl	$1, %edx
	leal	(%rdx,%rdx), %esi
	orl	%esi, %eax
	movb	%al, 994(%r15)
	jmp	.L27215
.L27751:
	testl	$16777216, 8(%rsp)
	je	.L27158
	movl	368(%r15), %edx
	andl	$2147483584, %edx
.L27159:
	movl	%edx, %ecx
	cmpq	1040(%r15), %rcx
	ja	.L27160
	andq	$-8192, %rcx
	movq	%rcx, %rdi
	movl	88(%r15), %ecx
	je	.L27162
	movl	%ecx, %esi
	cmpq	%rsi, %rdi
	je	.L27162
.L27163:
	leal	16(%rdx), %ecx
	testb	$2, %al
	jne	.L27752
.L27164:
	movq	%rcx, %rax
	movzwl	8(%rsp), %edx
	shrq	$11, %rax
	addq	1032(%r15), %rax
	movl	%edx, %esi
	shrl	$3, %esi
	orb	$4, (%rax)
	movq	1024(%r15), %rax
	movl	(%rax,%rcx), %eax
	bswap	%eax
	movl	%eax, %ecx
	andl	$127, %eax
	andl	$2147483520, %ecx
	cmpl	%esi, %eax
	jae	.L27753
.L27165:
	movl	$41, %r9d
	movl	$41, %esi
	movw	%r9w, 992(%r15)
	jmp	.L27185
.L27728:
	movzbl	44216(%r15,%rax), %edi
	testb	%dil, 1976(%r15,%rsi)
	jne	.L27264
	movl	%r11d, %ebp
	movzbl	97(%r15), %r8d
	leaq	0(%rbp,%rbx), %rdi
	andq	%rdx, %rdi
	jmp	.L27265
.L27716:
	movl	%esi, %edi
	andl	$-16, %edi
	cmpb	%dil, %r11b
	je	.L27247
	testb	$8, %sil
	je	.L27247
	cmpq	$2047, %rbx
	ja	.L27249
	testb	$2, 331(%r15)
	je	.L27249
	testb	$1, 994(%r15)
	je	.L27247
.L27249:
	cmpb	$-112, %dil
	je	.L27754
.L27250:
	testb	$2, %al
	jne	.L27755
	movslq	976(%r15), %rdx
	movq	%rbx, %rax
	movb	$1, 1012(%r15)
	andq	$-4096, %rax
	orq	%rdx, %rax
	movq	%rax, 792(%r15)
.L27252:
	movl	$4, %esi
	movq	%r15, %rdi
	call	*2032(%r15)
	movzwl	992(%r15), %esi
	jmp	.L27254
.L27715:
	addq	1024(%r15), %r10
	jmp	.L27143
.L27755:
	movslq	976(%r15), %rcx
	movq	%rbx, %rdx
	movq	1056(%r15), %rax
	andq	$-4096, %rdx
	orq	%rcx, %rdx
	andb	$-7, 994(%rax)
	movq	%rdx, 792(%r15)
	movb	$1, 1012(%r15)
.L27251:
	testb	$6, 994(%rax)
	je	.L27252
	movl	$4, %esi
	movq	%rdx, 792(%rax)
	movq	%rax, %rdi
	movb	$1, 1012(%rax)
	call	*2032(%rax)
	movzwl	992(%r15), %esi
	jmp	.L27254
.L27754:
	testb	$1, 331(%r15)
	je	.L27250
	jmp	.L27247
.L27714:
	movq	1056(%r15), %rdx
	andb	$-7, 994(%rdx)
	testb	$4, %al
	jne	.L27235
	movq	1080(%r15), %rax
	movl	$-3, %esi
	testb	$1, 2(%rax)
	je	.L27236
	movzbl	99(%r15), %eax
	andl	$64, %eax
	cmpb	$1, %al
	sbbl	%esi, %esi
	andl	$-4, %esi
	addl	$1, %esi
.L27236:
	movq	%r10, %rdi
	xorl	%ecx, %ecx
	movq	%r8, 64(%rsp)
	addq	1096(%r15), %rdi
	movl	%r11d, 8(%rsp)
	call	z900_translate_addr
	movl	8(%rsp), %r11d
	testl	%eax, %eax
	movq	64(%rsp), %r8
	je	.L27237
	movq	1056(%r15), %rax
	movzwl	992(%rax), %esi
	movq	%rax, %rdi
	call	*2032(%rax)
	movq	64(%rsp), %r8
	movl	8(%rsp), %r11d
.L27237:
	movzbl	994(%r15), %edx
	movq	1056(%r15), %rax
	movl	%edx, %ecx
	andl	$-7, %edx
	orb	994(%rax), %cl
	andl	$6, %ecx
	orl	%ecx, %edx
	movb	%dl, 994(%r15)
	movzbl	994(%rax), %edx
	shrb	%dl
	andl	$3, %edx
	orb	%dl, 45240(%r15,%r8)
	testb	$4, 96(%r15)
	jne	.L27238
	movq	%rbx, %rcx
	andq	$-4194304, %rcx
	movq	%rcx, 18616(%r15,%r8,8)
.L27238:
	movq	1080(%r15), %rcx
	testb	$1, 2(%rcx)
	je	.L27239
	testb	$64, 99(%r15)
	je	.L27239
	movq	968(%r15), %rcx
	movq	%rcx, 2232(%r15,%r8,8)
	movzbl	994(%rax), %esi
	movzbl	994(%r15), %ecx
	andl	$1, %esi
	andl	$-2, %ecx
	orl	%esi, %ecx
	movb	%cl, 994(%r15)
	movq	968(%rax), %rcx
	movl	$17, 1916(%r15)
	xorb	$8, %ch
	testl	$288, %ecx
	movq	%rcx, 968(%r15)
	sete	1994(%r15)
	andl	$2, %edx
	movq	%rcx, 464(%r15)
	movb	%dl, 2010(%r15)
.L27239:
	movq	944(%rax), %r10
	movl	88(%rax), %edx
	movq	%r10, %rcx
	andq	$-8192, %rcx
	je	.L27241
	cmpq	%rdx, %rcx
	je	.L27241
.L27242:
	movq	960(%rax), %rcx
	movq	%r10, 952(%rax)
	movq	%rcx, %rsi
	andq	$-8192, %rsi
	je	.L27243
	cmpq	%rsi, %rdx
	je	.L27243
.L27244:
	cmpq	1040(%rax), %r10
	ja	.L27234
	movzbl	1144(%r15), %eax
	jmp	.L27235
.L27234:
	movl	$5, %esi
	movq	%r15, %rdi
	call	*2032(%r15)
	movslq	976(%r15), %rax
	movq	%rbx, %rdx
	andq	$-4096, %rdx
	movb	$1, 1012(%r15)
	orq	%rax, %rdx
	testb	$2, 1144(%r15)
	movq	%rdx, 792(%r15)
	je	.L27252
	movq	1056(%r15), %rax
	jmp	.L27251
.L27243:
	xorq	%rdx, %rcx
	jmp	.L27244
.L27241:
	xorq	%rdx, %r10
	jmp	.L27242
.L27225:
	xorq	432(%r15), %rdx
	testq	$-4096, %rdx
	jne	.L27226
	orq	$3, %rax
	jmp	.L27224
.L27735:
	movq	8(%rsp), %rdx
	movl	%r8d, 80(%rsp)
	movl	%r11d, 72(%rsp)
	call	memcpy
	movl	72(%rsp), %r11d
	movl	80(%rsp), %r8d
	jmp	.L27129
.L27226:
	orq	$1, %rax
	jmp	.L27224
.L27733:
	movl	%r8d, 64(%rsp)
	movl	%r11d, 8(%rsp)
	call	memcpy
	movl	8(%rsp), %r11d
	movl	64(%rsp), %r8d
	jmp	.L27121
.L27753:
	sall	$4, %edx
	leal	(%rcx,%rdx), %eax
	movl	%eax, %edi
	cmpq	1040(%r15), %rdi
	jbe	.L27756
.L27160:
	movl	$5, %r11d
	movl	$5, %esi
	movq	%r15, %rdi
	movw	%r11w, 992(%r15)
	call	*2032(%r15)
	jmp	.L27157
.L27756:
	movq	%rdi, %rsi
	andq	$-8192, %rsi
	jne	.L27166
	movl	88(%r15), %edi
.L27167:
	xorl	%eax, %edi
.L27168:
	movq	%r15, %rsi
	movl	%r11d, 80(%rsp)
	call	z900_fetch_main_absolute
	movl	(%rax), %r10d
	movl	8(%rax), %edx
	movl	12(%rax), %ecx
	bswap	%r10d
	testl	%r10d, %r10d
	bswap	%edx
	bswap	%ecx
	js	.L27165
	movl	8(%rsp), %eax
	movl	80(%rsp), %r11d
	xorl	%r10d, %eax
	testl	$16711680, %eax
	je	.L27757
.L27169:
	movl	$42, %r8d
	movl	$42, %esi
	movw	%r8w, 992(%r15)
	jmp	.L27185
.L27158:
	movl	344(%r15), %edx
	andl	$2147483584, %edx
	jmp	.L27159
.L27757:
	movl	%edx, %eax
	andl	$2147483584, %eax
	movl	%eax, %edi
	movq	%rdi, %r8
	andq	$-8192, %r8
	jne	.L27170
	movl	88(%r15), %edi
.L27171:
	xorl	%eax, %edi
.L27172:
	cmpq	1040(%r15), %rdi
	ja	.L27160
	movq	%r15, %rsi
	movl	%ecx, 104(%rsp)
	movl	%r10d, 96(%rsp)
	movl	%r11d, 88(%rsp)
	call	z900_fetch_main_absolute
	movl	8(%rax), %ecx
	movl	(%rax), %edx
	movl	4(%rax), %esi
	bswap	%ecx
	movl	%ecx, 8(%rsp)
	movl	12(%rax), %ecx
	movl	20(%rax), %eax
	bswap	%edx
	testl	%edx, %edx
	bswap	%esi
	bswap	%ecx
	movl	%ecx, 80(%rsp)
	bswap	%eax
	js	.L27173
	movl	104(%rsp), %ecx
	movl	88(%rsp), %r11d
	movl	96(%rsp), %r10d
	cmpl	%ecx, %eax
	je	.L27758
.L27174:
	movl	$44, %esi
	movw	%si, 992(%r15)
	movl	$44, %esi
	jmp	.L27185
.L27166:
	movl	88(%r15), %edx
	movl	%edx, %ecx
	cmpq	%rcx, %rsi
	jne	.L27168
	movl	%edx, %edi
	jmp	.L27167
.L27758:
	testl	$16777216, %r10d
	je	.L27175
	movzwl	72(%rsp), %ecx
	cmpw	%r10w, %cx
	je	.L27175
	movl	%esi, %eax
	movl	%ecx, %esi
	andl	$2147483644, %edx
	movl	%esi, %ecx
	andl	$65520, %eax
	andl	$65520, %ecx
	cmpl	%ecx, %eax
	jl	.L27182
	movl	%esi, %eax
	shrw	$2, %ax
	movzwl	%ax, %eax
	addl	%edx, %eax
	andl	$2147483647, %eax
	movl	%eax, %edx
	cmpq	1040(%r15), %rdx
	ja	.L27177
	movq	%rdx, %rdi
	andq	$-8192, %rdi
	jne	.L27178
	movl	88(%r15), %edx
.L27179:
	xorl	%edx, %eax
	movl	%eax, %edx
.L27180:
	movzbl	1144(%r15), %ecx
	testb	$2, %cl
	jne	.L27759
.L27181:
	movq	1024(%r15), %rcx
	shrl	$11, %eax
	addq	1032(%r15), %rax
	movzbl	(%rcx,%rdx), %edx
	movl	72(%rsp), %ecx
	orb	$4, (%rax)
	andl	$3, %ecx
	addl	%ecx, %ecx
	sall	%cl, %edx
	andl	$64, %edx
	jne	.L27175
.L27182:
	movl	$45, %eax
	movl	$45, %esi
	movw	%ax, 992(%r15)
	jmp	.L27185
.L27175:
	andl	$33554432, %r10d
	je	.L27183
	movzbl	994(%r15), %eax
	movl	$2, %ecx
	movl	$1, 976(%r15)
	movl	80(%rsp), %edx
	andl	$-7, %eax
	orl	$4, %eax
	movb	%al, 994(%r15)
	movq	8(%rsp), %rax
	salq	$32, %rax
	orq	%rdx, %rax
.L27184:
	xorq	$3088, %rax
	orb	$1, %ah
	movq	%rax, 968(%r15)
.L27318:
	movq	%rax, %rdx
	movq	%rax, 464(%r15)
	andl	$288, %edx
	movb	%cl, 2010(%r15)
	movl	$17, 1916(%r15)
	sete	1994(%r15)
	jmp	.L27155
.L27759:
	andl	$4, %ecx
	jne	.L27181
	addq	1096(%r15), %rdx
	movl	$1, %r9d
	xorl	%r8d, %r8d
	xorl	%ecx, %ecx
	movl	$-3, %esi
	movl	%r10d, 96(%rsp)
	movl	%r11d, 88(%rsp)
	movq	%rdx, %rdi
	movq	1056(%r15), %rdx
	call	z900_logical_to_main_l
	movq	1056(%r15), %rax
	movl	88(%rsp), %r11d
	movl	96(%rsp), %r10d
	movq	952(%rax), %rdx
	movl	%edx, %eax
	movl	%edx, %edx
	jmp	.L27181
.L27183:
	movzbl	994(%r15), %edx
	movl	$1, 976(%r15)
	movq	8(%rsp), %rax
	movl	80(%rsp), %ecx
	shrb	%dl
	salq	$32, %rax
	orq	%rcx, %rax
	andl	$2, %edx
	movq	%rax, 968(%r15)
	movl	%edx, %ecx
	jne	.L27184
	jmp	.L27318
.L27178:
	movl	88(%r15), %ecx
	movl	%ecx, %esi
	cmpq	%rsi, %rdi
	jne	.L27180
	movl	%ecx, %edx
	jmp	.L27179
.L27177:
	movl	$5, %esi
	movq	%r15, %rdi
	call	*2032(%r15)
	jmp	.L27182
.L27173:
	movl	$43, %edi
	movl	$43, %esi
	movw	%di, 992(%r15)
	jmp	.L27185
.L27170:
	movl	88(%r15), %edx
	movl	%edx, %esi
	cmpq	%rsi, %r8
	jne	.L27172
	movl	%edx, %edi
	jmp	.L27171
.L27752:
	testb	$4, %al
	jne	.L27164
	addq	1096(%r15), %rcx
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movq	1056(%r15), %rdx
	movl	$-3, %esi
	movl	%r11d, 80(%rsp)
	movq	%rcx, %rdi
	movl	$4, %ecx
	call	z900_logical_to_main_l
	movq	1056(%r15), %rax
	movl	80(%rsp), %r11d
	movq	952(%rax), %rcx
	jmp	.L27164
.L27162:
	xorl	%ecx, %edx
	jmp	.L27163
.L27742:
	movq	%rdx, %rdi
	movq	%r15, %rsi
	movq	%r8, 96(%rsp)
	movq	%r9, 88(%rsp)
	movq	%rdx, 80(%rsp)
	call	z900_fetch_main_absolute
	movq	80(%rsp), %rdx
	movq	(%rax), %rcx
	movq	88(%rsp), %r9
	movq	96(%rsp), %r8
	bswap	%rcx
	testb	$32, %cl
	jne	.L27069
	testb	$12, %cl
	jne	.L27063
	movzbl	994(%r15), %eax
	testb	$1, %al
	je	.L27071
	testb	$16, %cl
	jne	.L27063
.L27071:
	cmpb	$0, 2049(%r15)
	js	.L27760
.L27072:
	movq	%rbp, %rax
	movq	%rcx, %r11
	shrq	$9, %rax
	andq	$-2048, %r11
	andl	$2040, %eax
	addq	%rax, %r11
	cmpq	1040(%r15), %r11
	ja	.L27062
	movq	%r11, %rdi
	movq	%r15, %rsi
	movq	%r8, 112(%rsp)
	movq	%r9, 104(%rsp)
	movq	%rcx, 96(%rsp)
	movq	%rdx, 88(%rsp)
	movq	%r11, 80(%rsp)
	call	z900_fetch_main_absolute
	movq	80(%rsp), %r11
	movq	(%rax), %r10
	movq	88(%rsp), %rdx
	movq	96(%rsp), %rcx
	movq	104(%rsp), %r9
	bswap	%r10
	testl	$1024, %r10d
	movq	112(%rsp), %r8
	jne	.L27076
	testl	$2048, %r10d
	jne	.L27063
	movl	2224(%r15), %esi
	movq	968(%r15), %rax
	orq	72(%rsp), %rsi
	testb	$2, %ch
	je	.L27077
	shrq	$4, %rcx
	movl	%ecx, %r11d
	andl	$1, %r11d
.L27078:
	movzbl	994(%r15), %ecx
	movl	%ecx, %edx
	andl	$-7, %ecx
	shrb	%dl
	andl	$3, %edx
	orl	$1, %edx
	leal	(%rdx,%rdx), %edi
	orl	%edi, %ecx
	movb	%cl, 994(%r15)
	jmp	.L27079
	.p2align 4,,10
	.p2align 3
.L27063:
	movl	$18, %ecx
	movl	$18, %esi
	movw	%cx, 992(%r15)
	jmp	.L27080
.L27077:
	shrq	$4, %rcx
	movl	%ecx, %r11d
	andl	$1, %r11d
	jmp	.L27052
.L27076:
	movl	$17, %eax
	movq	%r11, 944(%r15)
	movl	$17, %esi
	movw	%ax, 992(%r15)
	jmp	.L27081
.L27760:
	testb	$-128, 330(%r15)
	je	.L27072
	testb	$4, %ch
	je	.L27072
	testb	$2, %ch
	jne	.L27073
	shrb	%al
	movl	%eax, %edx
	andl	$3, %edx
.L27074:
	movq	%rcx, %rax
	movq	%rbp, %rsi
	movq	968(%r15), %rdi
	andl	$1048575, %esi
	andq	$-1048576, %rax
	shrq	$4, %rcx
	orq	%rsi, %rax
	andl	$1, %ecx
	movq	%rax, %rsi
	movq	%rax, 944(%r15)
	andq	$-4096, %rsi
	movq	%rsi, 960(%r15)
	movq	%rdi, 2232(%r9)
	movl	2224(%r15), %edi
	movq	%rsi, 18616(%r9)
	orq	72(%rsp), %rdi
	movq	%rdi, 10424(%r9)
	movb	%cl, 44216(%r15,%r8)
	movq	%rsi, %rcx
	movb	%dl, 45240(%r15,%r8)
	movb	$0, 46264(%r15,%r8)
	movq	$0, 26808(%r9)
	xorl	%r9d, %r9d
	movw	%r9w, 992(%r15)
	jmp	.L27075
.L27743:
	movq	968(%r15), %rdx
	movq	%rcx, %rax
	movq	%rdx, %rdi
	xorq	336(%r15), %rdi
	testq	$-4096, %rdi
	je	.L27083
	movq	%rdx, %rcx
	xorq	384(%r15), %rcx
	testq	$-4096, %rcx
	jne	.L27084
	orq	$2, %rax
	jmp	.L27083
.L27059:
	movl	%r11d, %edx
	movzbl	%dil, %edi
	shrw	$12, %dx
	cmpw	%dx, %di
	jb	.L27061
	movzwl	%r11w, %edx
	addq	%rax, %rdx
	cmpq	1040(%r15), %rdx
	ja	.L27062
	movq	%r15, %rsi
	movq	%rdx, %rdi
	movq	%r8, 120(%rsp)
	movq	%r9, 112(%rsp)
	movl	%r10d, 104(%rsp)
	movl	%ecx, 96(%rsp)
	movq	%rdx, 88(%rsp)
	call	z900_fetch_main_absolute
	movq	88(%rsp), %rdx
	movq	(%rax), %rsi
	movl	96(%rsp), %ecx
	movl	104(%rsp), %r10d
	movq	112(%rsp), %r9
	bswap	%rsi
	testb	$32, %sil
	movq	120(%rsp), %r8
	jne	.L27061
	movq	%rsi, %rax
	andl	$12, %eax
	cmpq	$12, %rax
	jne	.L27063
	cmpb	$0, 2049(%r15)
	js	.L27761
.L27064:
	movq	%rsi, %rax
	movl	%esi, %edi
	movl	%ecx, %edx
	andl	$192, %esi
	shrw	$12, %dx
	andq	$-4096, %rax
	shrq	$6, %rsi
	andl	$3, %edi
	cmpw	%si, %dx
	jb	.L27065
.L27312:
	movzbl	%dil, %edi
	cmpw	%di, %dx
	ja	.L27065
	movzwl	%cx, %edx
	addq	%rax, %rdx
	cmpq	1040(%r15), %rdx
	ja	.L27062
	movq	%rdx, %rdi
	movq	%r15, %rsi
	movq	%r8, 112(%rsp)
	movq	%r9, 104(%rsp)
	movl	%r10d, 96(%rsp)
	movq	%rdx, 88(%rsp)
	call	z900_fetch_main_absolute
	movq	88(%rsp), %rdx
	movq	(%rax), %rcx
	movl	96(%rsp), %r10d
	movq	104(%rsp), %r9
	movq	112(%rsp), %r8
	bswap	%rcx
	testb	$32, %cl
	jne	.L27065
	movq	%rcx, %rax
	andl	$12, %eax
	cmpq	$8, %rax
	jne	.L27063
	cmpb	$0, 2049(%r15)
	js	.L27762
.L27066:
	movq	%rcx, %rax
	movl	%ecx, %edi
	movl	%r10d, %edx
	andl	$192, %ecx
	shrw	$12, %dx
	andq	$-4096, %rax
	shrq	$6, %rcx
	andl	$3, %edi
	cmpw	%cx, %dx
	jb	.L27067
.L27313:
	movzbl	%dil, %edi
	cmpw	%di, %dx
	ja	.L27067
	movzwl	%r10w, %edx
	addq	%rax, %rdx
	cmpq	1040(%r15), %rdx
	ja	.L27062
	movq	%rdx, %rdi
	movq	%r15, %rsi
	movq	%r8, 104(%rsp)
	movq	%r9, 96(%rsp)
	movq	%rdx, 88(%rsp)
	call	z900_fetch_main_absolute
	movq	88(%rsp), %rdx
	movq	(%rax), %rax
	movq	96(%rsp), %r9
	movq	104(%rsp), %r8
	bswap	%rax
	testb	$32, %al
	jne	.L27067
	movq	%rax, %rcx
	andl	$12, %ecx
	cmpq	$4, %rcx
	jne	.L27063
	cmpb	$0, 2049(%r15)
	js	.L27763
.L27068:
	movzwl	80(%rsp), %esi
	movq	%rax, %rcx
	movl	%eax, %edi
	andl	$192, %eax
	andq	$-4096, %rcx
	andl	$3, %edi
	shrq	$6, %rax
	movzwl	%si, %edx
	shrw	$12, %si
	addq	%rcx, %rdx
	cmpw	%ax, %si
	jb	.L27069
	jmp	.L27314
.L27741:
	movl	%r10d, %edx
	shrw	$12, %dx
	jmp	.L27313
.L27073:
	movl	%eax, %edx
	andl	$-7, %eax
	shrb	%dl
	andl	$3, %edx
	orl	$1, %edx
	leal	(%rdx,%rdx), %esi
	orl	%esi, %eax
	movb	%al, 994(%r15)
	jmp	.L27074
.L27058:
	movl	%ecx, %edx
	shrw	$12, %dx
	jmp	.L27312
.L27084:
	xorq	432(%r15), %rdx
	testq	$-4096, %rdx
	jne	.L27085
	orq	$3, %rax
	jmp	.L27083
.L27763:
	testb	$-128, 330(%r15)
	je	.L27068
	testb	$2, %ah
	je	.L27068
	orb	$2, 994(%r15)
	jmp	.L27068
.L27067:
	movl	$59, %eax
	movl	$59, %esi
	movw	%ax, 992(%r15)
	jmp	.L27081
.L27085:
	orq	$1, %rax
	jmp	.L27083
.L27762:
	testb	$-128, 330(%r15)
	je	.L27066
	testb	$2, %ch
	je	.L27066
	orb	$2, 994(%r15)
	jmp	.L27066
.L27065:
	movl	$58, %eax
	movl	$58, %esi
	movw	%ax, 992(%r15)
	jmp	.L27081
.L27761:
	testb	$-128, 330(%r15)
	je	.L27064
	testl	$512, %esi
	je	.L27064
	orb	$2, 994(%r15)
	jmp	.L27064
.L27061:
	movl	$57, %eax
	movl	$57, %esi
	movw	%ax, 992(%r15)
	jmp	.L27081
.L27015:
	movzwl	394(%r15), %edx
	testl	$-33554432, %r11d
	movw	%dx, 72(%rsp)
	je	.L27764
.L27016:
	movl	$40, %eax
	movl	$40, %esi
	movw	%ax, 992(%r15)
	jmp	.L27044
.L27329:
	movq	1064(%r15), %rdx
	movq	1080(%rdx), %rcx
	testb	$1, 2(%rcx)
	je	.L27187
	testb	$64, 99(%rdx)
	je	.L27187
	jmp	.L27149
.L27764:
	testl	$16777216, %r11d
	je	.L27017
	movl	368(%r15), %edx
	andl	$2147483584, %edx
.L27018:
	movl	%edx, %ecx
	cmpq	1040(%r15), %rcx
	ja	.L27019
	andq	$-8192, %rcx
	movq	%rcx, %rdi
	movl	88(%r15), %ecx
	je	.L27021
	movl	%ecx, %esi
	cmpq	%rsi, %rdi
	je	.L27021
.L27022:
	leal	16(%rdx), %ecx
	testb	$2, %al
	jne	.L27765
.L27023:
	movq	%rcx, %rax
	movzwl	%r11w, %edx
	shrq	$11, %rax
	movl	%edx, %esi
	addq	1032(%r15), %rax
	shrl	$3, %esi
	orb	$4, (%rax)
	movq	1024(%r15), %rax
	movl	(%rax,%rcx), %eax
	bswap	%eax
	movl	%eax, %ecx
	andl	$127, %eax
	andl	$2147483520, %ecx
	cmpl	%esi, %eax
	jae	.L27766
.L27024:
	movl	$41, %eax
	movl	$41, %esi
	movw	%ax, 992(%r15)
	jmp	.L27044
.L27737:
	movzwl	64(%rsp), %edx
	shrw	$12, %dx
	jmp	.L27321
.L27766:
	sall	$4, %edx
	leal	(%rcx,%rdx), %eax
	movl	%eax, %edi
	cmpq	1040(%r15), %rdi
	jbe	.L27767
.L27019:
	movl	$5, %eax
	movl	$5, %esi
	movq	%r15, %rdi
	movw	%ax, 992(%r15)
	call	*2032(%r15)
	jmp	.L27016
.L27767:
	movq	%rdi, %rsi
	andq	$-8192, %rsi
	jne	.L27025
	movl	88(%r15), %edi
.L27026:
	xorl	%eax, %edi
.L27027:
	movq	%r15, %rsi
	movl	%r11d, 88(%rsp)
	call	z900_fetch_main_absolute
	movl	(%rax), %r10d
	movl	8(%rax), %edx
	movl	12(%rax), %ecx
	bswap	%r10d
	testl	%r10d, %r10d
	bswap	%edx
	bswap	%ecx
	js	.L27024
	movl	88(%rsp), %r11d
	xorl	%r10d, %r11d
	andl	$16711680, %r11d
	je	.L27768
.L27028:
	movl	$42, %eax
	movl	$42, %esi
	movw	%ax, 992(%r15)
	jmp	.L27044
.L27017:
	movl	344(%r15), %edx
	andl	$2147483584, %edx
	jmp	.L27018
.L27768:
	movl	%edx, %eax
	andl	$2147483584, %eax
	movl	%eax, %edi
	movq	%rdi, %r8
	andq	$-8192, %r8
	jne	.L27029
	movl	88(%r15), %edi
.L27030:
	xorl	%eax, %edi
.L27031:
	cmpq	1040(%r15), %rdi
	ja	.L27019
	movq	%r15, %rsi
	movl	%ecx, 104(%rsp)
	movl	%r10d, 96(%rsp)
	call	z900_fetch_main_absolute
	movl	(%rax), %edx
	movl	4(%rax), %esi
	movl	8(%rax), %r11d
	movl	12(%rax), %ecx
	movl	20(%rax), %eax
	bswap	%edx
	testl	%edx, %edx
	bswap	%esi
	bswap	%r11d
	bswap	%ecx
	movl	%ecx, 88(%rsp)
	bswap	%eax
	js	.L27032
	movl	104(%rsp), %ecx
	movl	96(%rsp), %r10d
	cmpl	%ecx, %eax
	je	.L27769
.L27033:
	movl	$44, %r10d
	movl	$44, %esi
	movw	%r10w, 992(%r15)
	jmp	.L27044
.L27025:
	movl	88(%r15), %edx
	movl	%edx, %ecx
	cmpq	%rcx, %rsi
	jne	.L27027
	movl	%edx, %edi
	jmp	.L27026
.L27769:
	testl	$16777216, %r10d
	je	.L27034
	movzwl	72(%rsp), %ecx
	cmpw	%r10w, %cx
	je	.L27034
	movl	%esi, %eax
	movl	%ecx, %esi
	andl	$2147483644, %edx
	movl	%esi, %ecx
	andl	$65520, %eax
	andl	$65520, %ecx
	cmpl	%ecx, %eax
	jl	.L27041
	movl	%esi, %eax
	shrw	$2, %ax
	movzwl	%ax, %eax
	addl	%edx, %eax
	andl	$2147483647, %eax
	movl	%eax, %edx
	cmpq	1040(%r15), %rdx
	ja	.L27036
	movq	%rdx, %rdi
	andq	$-8192, %rdi
	jne	.L27037
	movl	88(%r15), %edx
.L27038:
	xorl	%edx, %eax
	movl	%eax, %edx
.L27039:
	movzbl	1144(%r15), %ecx
	testb	$2, %cl
	jne	.L27770
.L27040:
	movq	1024(%r15), %rcx
	shrl	$11, %eax
	addq	1032(%r15), %rax
	movzbl	(%rcx,%rdx), %edx
	movl	72(%rsp), %ecx
	orb	$4, (%rax)
	andl	$3, %ecx
	addl	%ecx, %ecx
	sall	%cl, %edx
	andl	$64, %edx
	jne	.L27034
.L27041:
	movl	$45, %edx
	movl	$45, %esi
	movw	%dx, 992(%r15)
	jmp	.L27044
.L27034:
	andl	$33554432, %r10d
	movzbl	994(%r15), %eax
	je	.L27042
	andl	$-7, %eax
	salq	$32, %r11
	movl	$2, %ecx
	movl	$1, 976(%r15)
	orl	$4, %eax
	movb	%al, 994(%r15)
	movl	88(%rsp), %eax
	orq	%rax, %r11
.L27043:
	xorq	$3088, %r11
	orq	$256, %r11
	movq	%r11, 968(%r15)
.L27686:
	movq	%r11, %rdx
	movq	%r11, %rax
	movq	%r11, 464(%r15)
	andl	$288, %edx
	movb	%cl, 2010(%r15)
	movl	$17, 1916(%r15)
	sete	1994(%r15)
	jmp	.L27014
.L27770:
	andl	$4, %ecx
	jne	.L27040
	addq	1096(%r15), %rdx
	movl	$1, %r9d
	xorl	%r8d, %r8d
	xorl	%ecx, %ecx
	movl	$-3, %esi
	movl	%r10d, 104(%rsp)
	movl	%r11d, 96(%rsp)
	movq	%rdx, %rdi
	movq	1056(%r15), %rdx
	call	z900_logical_to_main_l
	movq	1056(%r15), %rax
	movl	96(%rsp), %r11d
	movl	104(%rsp), %r10d
	movq	952(%rax), %rdx
	movl	%edx, %eax
	movl	%edx, %edx
	jmp	.L27040
.L27042:
	movl	88(%rsp), %edx
	salq	$32, %r11
	shrb	%al
	movl	$1, 976(%r15)
	orq	%rdx, %r11
	andl	$2, %eax
	movq	%r11, 968(%r15)
	movl	%eax, %ecx
	jne	.L27043
	jmp	.L27686
.L27037:
	movl	88(%r15), %ecx
	movl	%ecx, %esi
	cmpq	%rsi, %rdi
	jne	.L27039
	movl	%ecx, %edx
	jmp	.L27038
.L27036:
	movl	$5, %esi
	movq	%r15, %rdi
	call	*2032(%r15)
	jmp	.L27041
.L27032:
	movl	$43, %r11d
	movl	$43, %esi
	movw	%r11w, 992(%r15)
	jmp	.L27044
.L27029:
	movl	88(%r15), %edx
	movl	%edx, %esi
	cmpq	%rsi, %r8
	jne	.L27031
	movl	%edx, %edi
	jmp	.L27030
.L27749:
	testb	$-128, 330(%r15)
	je	.L27205
	testl	$512, %esi
	je	.L27205
	orb	$2, 994(%r15)
	jmp	.L27205
.L27202:
	movl	$57, %edi
	movl	$57, %esi
	movw	%di, 992(%r15)
	jmp	.L27222
.L27765:
	testb	$4, %al
	jne	.L27023
	addq	1096(%r15), %rcx
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movq	1056(%r15), %rdx
	movl	$-3, %esi
	movl	%r11d, 88(%rsp)
	movq	%rcx, %rdi
	movl	$4, %ecx
	call	z900_logical_to_main_l
	movq	1056(%r15), %rax
	movl	88(%rsp), %r11d
	movq	952(%rax), %rcx
	jmp	.L27023
.L27021:
	xorl	%ecx, %edx
	jmp	.L27022
.L27721:
	movl	%esi, %edi
	andl	$-16, %edi
	cmpb	64(%rsp), %dil
	je	.L27106
	testb	$8, %sil
	je	.L27106
	cmpq	$2047, %rbp
	ja	.L27108
	testb	$2, 331(%r15)
	je	.L27108
	testb	$1, 994(%r15)
	je	.L27106
.L27108:
	cmpb	$-112, %dil
	je	.L27771
.L27109:
	testb	$2, %al
	jne	.L27772
	movslq	976(%r15), %rdx
	movq	%rbp, %rax
	movb	$1, 1012(%r15)
	andq	$-4096, %rax
	orq	%rdx, %rax
	movq	%rax, 792(%r15)
.L27111:
	movl	$4, %esi
	movq	%r15, %rdi
	call	*2032(%r15)
	movzwl	992(%r15), %esi
	jmp	.L27113
.L27720:
	addq	1024(%r15), %r10
	jmp	.L27105
.L27772:
	movslq	976(%r15), %rcx
	movq	%rbp, %rdx
	movq	1056(%r15), %rax
	andq	$-4096, %rdx
	orq	%rcx, %rdx
	andb	$-7, 994(%rax)
	movq	%rdx, 792(%r15)
	movb	$1, 1012(%r15)
.L27110:
	testb	$6, 994(%rax)
	je	.L27111
	movl	$4, %esi
	movq	%rdx, 792(%rax)
	movq	%rax, %rdi
	movb	$1, 1012(%rax)
	call	*2032(%rax)
	movzwl	992(%r15), %esi
	jmp	.L27113
.L27771:
	testb	$1, 331(%r15)
	je	.L27109
	jmp	.L27106
.L27719:
	movq	1056(%r15), %rdx
	andb	$-7, 994(%rdx)
	testb	$4, %al
	jne	.L27094
	movq	1080(%r15), %rax
	movl	$-3, %esi
	testb	$1, 2(%rax)
	je	.L27095
	movzbl	99(%r15), %eax
	andl	$64, %eax
	cmpb	$1, %al
	sbbl	%esi, %esi
	andl	$-4, %esi
	addl	$1, %esi
.L27095:
	movq	%r10, %rdi
	xorl	%ecx, %ecx
	movq	%r8, 72(%rsp)
	addq	1096(%r15), %rdi
	call	z900_translate_addr
	movq	72(%rsp), %r8
	testl	%eax, %eax
	je	.L27096
	movq	1056(%r15), %rax
	movzwl	992(%rax), %esi
	movq	%rax, %rdi
	call	*2032(%rax)
	movq	72(%rsp), %r8
.L27096:
	movzbl	994(%r15), %edx
	movq	1056(%r15), %rax
	movl	%edx, %ecx
	andl	$-7, %edx
	orb	994(%rax), %cl
	andl	$6, %ecx
	orl	%ecx, %edx
	movb	%dl, 994(%r15)
	movzbl	994(%rax), %edx
	shrb	%dl
	andl	$3, %edx
	orb	%dl, 45240(%r15,%r8)
	testb	$4, 96(%r15)
	jne	.L27097
	movq	%rbp, %rcx
	andq	$-4194304, %rcx
	movq	%rcx, 18616(%r15,%r8,8)
.L27097:
	movq	1080(%r15), %rcx
	testb	$1, 2(%rcx)
	je	.L27098
	testb	$64, 99(%r15)
	je	.L27098
	movq	968(%r15), %rcx
	movq	%rcx, 2232(%r15,%r8,8)
	movzbl	994(%rax), %esi
	movzbl	994(%r15), %ecx
	andl	$1, %esi
	andl	$-2, %ecx
	orl	%esi, %ecx
	movb	%cl, 994(%r15)
	movq	968(%rax), %rcx
	movl	$17, 1916(%r15)
	xorb	$8, %ch
	testl	$288, %ecx
	movq	%rcx, 968(%r15)
	sete	1994(%r15)
	andl	$2, %edx
	movq	%rcx, 464(%r15)
	movb	%dl, 2010(%r15)
.L27098:
	movq	944(%rax), %r10
	movl	88(%rax), %edx
	movq	%r10, %rcx
	andq	$-8192, %rcx
	je	.L27100
	cmpq	%rdx, %rcx
	je	.L27100
.L27101:
	movq	960(%rax), %rcx
	movq	%r10, 952(%rax)
	movq	%rcx, %rsi
	andq	$-8192, %rsi
	je	.L27102
	cmpq	%rdx, %rsi
	je	.L27102
.L27103:
	cmpq	1040(%rax), %r10
	ja	.L27093
	movzbl	1144(%r15), %eax
	jmp	.L27094
.L27093:
	movl	$5, %esi
	movq	%r15, %rdi
	call	*2032(%r15)
	movslq	976(%r15), %rax
	movq	%rbp, %rdx
	andq	$-4096, %rdx
	movb	$1, 1012(%r15)
	orq	%rax, %rdx
	testb	$2, 1144(%r15)
	movq	%rdx, 792(%r15)
	je	.L27111
	movq	1056(%r15), %rax
	jmp	.L27110
.L27102:
	xorq	%rdx, %rcx
	jmp	.L27103
.L27100:
	xorq	%rdx, %r10
	jmp	.L27101
	.cfi_endproc
.LFE2559:
	.size	z900_compare_and_form_codeword, .-z900_compare_and_form_codeword
	.p2align 4,,15
	.globl	z900_compare_and_swap
	.type	z900_compare_and_swap, @function
z900_compare_and_swap:
.LFB2560:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 64
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %r12d
	movl	%ebp, %r13d
	shrl	$20, %r12d
	movl	%ebp, %esi
	shrl	$16, %r13d
	shrl	$12, %esi
	andl	$15, %r12d
	andl	$15, %r13d
	andl	$4095, %ebp
	andl	$15, %esi
	movl	%esi, %r14d
	je	.L27774
	movslq	%esi, %rax
	addq	192(%rbx,%rax,8), %rbp
	andq	120(%rbx), %rbp
.L27774:
	addq	$4, 136(%rbx)
	testb	$3, %bpl
	movb	$4, 130(%rbx)
	jne	.L27817
.L27775:
	leal	5(%r14), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L27776
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L27818
.L27777:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L27819
.L27778:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L27776
	testb	$2, 46264(%rbx,%rcx)
	je	.L27776
	movq	%rbp, %r15
	xorq	26808(%rdx), %r15
.L27779:
	movq	40(%rbx), %rdi
	movslq	%r12d, %r12
	movq	1056(%rbx), %rcx
	leaq	(%rbx,%r12,8), %r14
	movl	192(%r14), %r12d
	movl	3000(%rdi), %eax
	bswap	%r12d
	cmpl	%eax, 48(%rcx)
	je	.L27780
	addq	$1936, %rdi
	movl	$.LC0, %esi
	call	ptt_pthread_mutex_lock
	movq	1056(%rbx), %rcx
	movq	40(%rbx), %rdi
	movzwl	1010(%rcx), %eax
	movw	%ax, 1928(%rdi)
.L27780:
	movslq	%r13d, %r13
	movl	%r12d, %eax
	leaq	(%rbx,%r13,8), %r13
	movl	192(%r13), %edx
	bswap	%edx
#APP
# 406 "machdep.h" 1
	lock;   cmpxchgl %edx,(%r15)
	setnz   %dl
	
# 0 "" 2
#NO_APP
	movl	%eax, %r12d
	movzwl	1010(%rcx), %eax
	movb	%dl, 100(%rbx)
	cmpw	%ax, 1928(%rdi)
	je	.L27820
.L27781:
	cmpb	$1, %dl
	je	.L27821
.L27773:
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L27821:
	.cfi_restore_state
	testb	$8, pttclass+1(%rip)
	jne	.L27822
.L27784:
	bswap	%r12d
	movl	%r12d, 192(%r14)
	testb	$2, 1144(%rbx)
	jne	.L27823
.L27785:
	cmpl	$1, sysblk+236(%rip)
	jle	.L27773
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	sched_yield
	.p2align 4,,10
	.p2align 3
.L27817:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L27775
	.p2align 4,,10
	.p2align 3
.L27820:
	movl	$-1, %eax
	addq	$1936, %rdi
	movl	$.LC1, %esi
	movw	%ax, -8(%rdi)
	call	ptt_pthread_mutex_unlock
	movzbl	100(%rbx), %edx
	jmp	.L27781
	.p2align 4,,10
	.p2align 3
.L27822:
	movl	192(%r13), %ecx
	movl	%ebp, %r9d
	movl	$.LC2, %r8d
	movl	192(%r14), %edx
	movl	$.LC3, %esi
	movl	$2048, %edi
	call	ptt_pthread_trace
	jmp	.L27784
.L27818:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L27777
.L27776:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
	movq	%rax, %r15
	jmp	.L27779
.L27819:
	cmpb	43192(%rbx,%rcx), %al
	je	.L27778
	jmp	.L27776
.L27823:
	movq	1080(%rbx), %rax
	testb	$4, 72(%rax)
	je	.L27785
	movl	52(%rbx), %eax
	leaq	1232(%rbx), %rdi
	andl	56(%rbx), %eax
	testl	$16318464, %eax
	jne	.L27786
	movl	$-4, %esi
	call	longjmp
.L27786:
	movl	$-5, %esi
	call	longjmp
	.cfi_endproc
.LFE2560:
	.size	z900_compare_and_swap, .-z900_compare_and_swap
	.p2align 4,,15
	.globl	z900_compare_double_and_swap
	.type	z900_compare_double_and_swap, @function
z900_compare_double_and_swap:
.LFB2561:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	movl	(%rdi), %r13d
	bswap	%r13d
	movl	%r13d, %eax
	movl	%r13d, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%r13d, %esi
	movl	%eax, %ebp
	movl	%edx, %r10d
	shrl	$12, %esi
	andl	$15, %ebp
	andl	$15, %r10d
	andl	$4095, %r13d
	andl	$15, %esi
	movl	%esi, %r12d
	je	.L27825
	movslq	%esi, %rcx
	addq	192(%rbx,%rcx,8), %r13
	andq	120(%rbx), %r13
.L27825:
	orl	%edx, %eax
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %al
	je	.L27826
	movl	$6, %esi
	movq	%rbx, %rdi
	movl	%r10d, (%rsp)
	call	*2032(%rbx)
	movl	(%rsp), %r10d
.L27826:
	testb	$7, %r13b
	jne	.L27872
.L27827:
	leal	5(%r12), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L27828
	movl	%r13d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L27873
.L27829:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L27874
.L27830:
	movl	2224(%rbx), %esi
	movq	%r13, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L27828
	testb	$2, 46264(%rbx,%rcx)
	je	.L27828
	movq	%r13, %rcx
	xorq	26808(%rdx), %rcx
.L27831:
	movslq	%ebp, %rax
	addl	$1, %ebp
	movq	40(%rbx), %rdi
	leaq	(%rbx,%rax,8), %r14
	movslq	%ebp, %rbp
	movq	1056(%rbx), %rdx
	leaq	(%rbx,%rbp,8), %r15
	movl	192(%r14), %r12d
	movl	192(%r15), %eax
	salq	$32, %r12
	orq	%rax, %r12
	movslq	%r10d, %rax
	addl	$1, %r10d
	leaq	(%rbx,%rax,8), %r8
	movslq	%r10d, %r10
	bswap	%r12
	movl	192(%r8), %ebp
	movl	192(%rbx,%r10,8), %eax
	salq	$32, %rbp
	orq	%rax, %rbp
	movl	3000(%rdi), %eax
	bswap	%rbp
	cmpl	%eax, 48(%rdx)
	je	.L27832
	addq	$1936, %rdi
	movl	$.LC4, %esi
	movq	%rcx, (%rsp)
	movq	%r8, 8(%rsp)
	call	ptt_pthread_mutex_lock
	movq	1056(%rbx), %rdx
	movq	40(%rbx), %rdi
	movq	8(%rsp), %r8
	movq	(%rsp), %rcx
	movzwl	1010(%rdx), %eax
	movw	%ax, 1928(%rdi)
.L27832:
	movq	%r12, %rax
#APP
# 422 "machdep.h" 1
	lock;   cmpxchgq %rbp,(%rcx)
	setnz   %bpl
	
# 0 "" 2
#NO_APP
	movq	%rax, %r12
	movzwl	1010(%rdx), %eax
	movb	%bpl, 100(%rbx)
	cmpw	%ax, 1928(%rdi)
	je	.L27875
.L27833:
	cmpb	$1, %bpl
	je	.L27876
.L27824:
	addq	$24, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L27876:
	.cfi_restore_state
	testb	$8, pttclass+1(%rip)
	jne	.L27877
.L27836:
	bswap	%r12
	movq	%r12, %rax
	shrq	$32, %rax
	movl	%eax, 192(%r14)
	movl	%r12d, 192(%r15)
	testb	$2, 1144(%rbx)
	jne	.L27878
.L27837:
	cmpl	$1, sysblk+236(%rip)
	jle	.L27824
	addq	$24, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	sched_yield
	.p2align 4,,10
	.p2align 3
.L27872:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	movl	%r10d, (%rsp)
	call	*2032(%rbx)
	movl	(%rsp), %r10d
	jmp	.L27827
	.p2align 4,,10
	.p2align 3
.L27875:
	movl	$-1, %eax
	addq	$1936, %rdi
	movq	%r8, (%rsp)
	movw	%ax, -8(%rdi)
	movl	$.LC5, %esi
	call	ptt_pthread_mutex_unlock
	movzbl	100(%rbx), %ebp
	movq	(%rsp), %r8
	jmp	.L27833
	.p2align 4,,10
	.p2align 3
.L27877:
	movl	192(%r8), %ecx
	movl	%r13d, %r9d
	movl	$.LC6, %r8d
	movl	192(%r14), %edx
	movl	$.LC7, %esi
	movl	$2048, %edi
	call	ptt_pthread_trace
	jmp	.L27836
.L27873:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L27829
.L27828:
	movzbl	97(%rbx), %r8d
	movl	$2, %ecx
	movl	$8, %r9d
	movq	%rbx, %rdx
	movl	%r12d, %esi
	movq	%r13, %rdi
	movl	%r10d, (%rsp)
	call	z900_logical_to_main_l
	movl	(%rsp), %r10d
	movq	%rax, %rcx
	jmp	.L27831
.L27874:
	cmpb	43192(%rbx,%rcx), %al
	je	.L27830
	jmp	.L27828
.L27878:
	movq	1080(%rbx), %rax
	testb	$4, 72(%rax)
	je	.L27837
	movl	52(%rbx), %eax
	leaq	1232(%rbx), %rdi
	andl	56(%rbx), %eax
	testl	$16318464, %eax
	jne	.L27838
	movl	$-4, %esi
	call	longjmp
.L27838:
	movl	$-5, %esi
	call	longjmp
	.cfi_endproc
.LFE2561:
	.size	z900_compare_double_and_swap, .-z900_compare_double_and_swap
	.section	.rodata.str1.1
.LC10:
	.string	"general1.c:2276"
.LC11:
	.string	"general1.c:2389"
	.text
	.p2align 4,,15
	.globl	z900_compare_and_swap_and_store
	.type	z900_compare_and_swap_and_store, @function
z900_compare_and_swap_and_store:
.LFB2562:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$104, %rsp
	.cfi_def_cfa_offset 160
	movl	2(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	movl	%edx, %ecx
	shrl	$16, %eax
	shrl	$28, %ecx
	movl	%eax, %r14d
	andl	$4095, %r14d
	testl	%ecx, %ecx
	je	.L27880
	movslq	%ecx, %rcx
	addq	192(%rsi,%rcx,8), %r14
	andq	120(%rsi), %r14
.L27880:
	movl	%edx, %r12d
	shrl	$12, %edx
	andl	$4095, %r12d
	andl	$15, %edx
	movl	%edx, 4(%rsp)
	je	.L27881
	movslq	%edx, %rdx
	addq	192(%rbx,%rdx,8), %r12
	andq	120(%rbx), %r12
.L27881:
	movzbl	1(%rdi), %r13d
	movb	$6, 130(%rbx)
	movzbl	192(%rbx), %r15d
	addq	$6, 136(%rbx)
	movzbl	193(%rbx), %ebp
	movl	%r13d, %eax
	shrb	$4, %r13b
	andl	$15, %eax
	cmpb	$2, %r15b
	movl	%eax, 16(%rsp)
	movzbl	%r13b, %eax
	movl	%eax, 8(%rsp)
	ja	.L28293
.L27882:
	cmpb	$4, %bpl
	ja	.L28294
.L27883:
	movl	$1, %r11d
	movl	%ebp, %ecx
	sall	%cl, %r11d
	cmpb	$1, %r15b
	je	.L27885
	jb	.L27886
	cmpb	$2, %r15b
	je	.L27887
.L27884:
	andl	$1, %r13d
	.p2align 4,,3
	jne	.L28295
.L27888:
	cmpb	$2, %bpl
	je	.L27890
.L28307:
	.p2align 4,,3
	jbe	.L28296
	cmpb	$3, %bpl
	.p2align 4,,3
	je	.L27893
	cmpb	$4, %bpl
	.p2align 4,,3
	jne	.L27889
	testb	$15, %r12b
	jne	.L28291
	.p2align 4,,10
	.p2align 3
.L27889:
	movl	16(%rsp), %eax
	movq	120(%rbx), %r13
	leal	5(%rax), %edx
	andq	200(%rbx), %r13
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	movq	%r13, %r10
	andq	$-16, %r10
	testl	%edx, %edx
	je	.L27895
	movl	%r14d, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %rax
	cmpq	%rax, 320(%rbx,%rdx,8)
	jne	.L28297
.L27896:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L28298
.L27897:
	movl	2224(%rbx), %r8d
	movq	%r14, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L27895
	testb	$2, 46264(%rbx,%rsi)
	je	.L27895
	xorq	26808(%rcx), %r14
	movzbl	%dil, %r8d
	movq	%r14, 16(%rsp)
.L27898:
	movl	4(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %r14
	movq	%rax, 40(%rsp)
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L27899
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L28299
.L27900:
	testb	%r8b, %r8b
	jne	.L28300
.L27901:
	movl	2224(%rbx), %esi
	movq	%r12, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L27899
	testb	$1, 46264(%rbx,%rcx)
	je	.L27899
	movq	35000(%rdx), %rax
	movq	%rax, 984(%rbx)
.L27902:
	movl	%r12d, %edx
	movl	$2048, %eax
	andl	$2047, %edx
	subl	%r11d, %eax
	cmpl	%eax, %edx
	jg	.L28301
.L27903:
	movq	40(%rbx), %rdi
	movq	1056(%rbx), %rax
	movl	3000(%rdi), %esi
	cmpl	%esi, 48(%rax)
	je	.L27907
	addq	$1936, %rdi
	movl	$.LC10, %esi
	movq	%r10, 24(%rsp)
	call	ptt_pthread_mutex_lock
	movq	1056(%rbx), %rdx
	movq	40(%rbx), %rax
	movq	24(%rsp), %r10
	movzwl	1010(%rdx), %edx
	movw	%dx, 1928(%rax)
.L27907:
	cmpb	$1, %r15b
	je	.L27909
	jb	.L27910
	cmpb	$2, %r15b
	jne	.L28302
	movl	8(%rsp), %edi
	movslq	%edi, %rax
	movq	192(%rbx,%rax,8), %r14
	movl	%edi, %eax
	addl	$1, %eax
	cltq
	movq	192(%rbx,%rax,8), %rax
	bswap	%r14
	bswap	%rax
	movq	%rax, 48(%rsp)
	movl	1916(%rbx), %eax
	testl	%eax, %eax
	je	.L27920
	leal	1(%rax), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rcx,8)
	jne	.L28303
.L27921:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L28304
.L27922:
	movl	2224(%rbx), %ecx
	andq	$-4194304, %r13
	orq	%rcx, %r13
	cmpq	10424(%rax), %r13
	jne	.L27920
	testb	$4, 46264(%rbx,%rdx)
	je	.L27920
	movq	%r10, %rdi
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L27923:
	movq	(%rax), %r13
	leaq	8(%r10), %rdi
	movl	1916(%rbx), %eax
	bswap	%r13
	testl	%eax, %eax
	je	.L27925
	leal	1(%rax), %edx
	movl	%edi, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L28305
.L27926:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28306
.L27927:
	movl	2224(%rbx), %esi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L27925
	testb	$4, 46264(%rbx,%rcx)
	je	.L27925
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L27928:
	movq	(%rax), %r11
	bswap	%r13
	movl	$0, 24(%rsp)
	movq	%r13, 64(%rsp)
	movq	$0, 32(%rsp)
	movl	$0, 88(%rsp)
	movq	$0, 56(%rsp)
	bswap	%r11
	bswap	%r11
.L27908:
	leaq	16(%r10), %r13
	andq	120(%rbx), %r13
	cmpb	$4, %bpl
	ja	.L28014
.L28308:
	movzbl	%bpl, %eax
	jmp	*.L27932(,%rax,8)
	.section	.rodata
	.align 8
	.align 4
.L27932:
	.quad	.L27931
	.quad	.L27933
	.quad	.L27934
	.quad	.L27935
	.quad	.L27936
	.text
	.p2align 4,,10
	.p2align 3
.L27887:
	testb	$15, %r14b
	je	.L27884
.L28290:
	movl	%r11d, 24(%rsp)
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	andl	$1, %r13d
	movl	24(%rsp), %r11d
	je	.L27888
.L28295:
	movl	$6, %esi
	movq	%rbx, %rdi
	movl	%r11d, 24(%rsp)
	call	*2032(%rbx)
	cmpb	$2, %bpl
	movl	24(%rsp), %r11d
	jne	.L28307
.L27890:
	testb	$3, %r12b
	je	.L27889
.L28291:
	movl	%r11d, 24(%rsp)
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movl	24(%rsp), %r11d
	jmp	.L27889
	.p2align 4,,10
	.p2align 3
.L27893:
	testb	$7, %r12b
	je	.L27889
	jmp	.L28291
	.p2align 4,,10
	.p2align 3
.L28296:
	cmpb	$1, %bpl
	jne	.L27889
	testb	$1, %r12b
	.p2align 4,,3
	je	.L27889
	.p2align 4,,3
	jmp	.L28291
	.p2align 4,,10
	.p2align 3
.L28294:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L27883
	.p2align 4,,10
	.p2align 3
.L28293:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L27882
	.p2align 4,,10
	.p2align 3
.L27886:
	testb	$3, %r14b
	je	.L27884
	.p2align 4,,7
	jmp	.L28290
	.p2align 4,,10
	.p2align 3
.L27885:
	testb	$7, %r14b
	je	.L27884
	.p2align 4,,7
	jmp	.L28290
	.p2align 4,,10
	.p2align 3
.L28302:
	leaq	16(%r10), %r13
	xorl	%r14d, %r14d
	xorl	%r11d, %r11d
	andq	120(%rbx), %r13
	cmpb	$4, %bpl
	movl	$0, 24(%rsp)
	movq	$0, 32(%rsp)
	movq	$0, 48(%rsp)
	movl	$0, 88(%rsp)
	movq	$0, 56(%rsp)
	movq	$0, 64(%rsp)
	jbe	.L28308
.L28014:
	movb	$0, 95(%rsp)
	jmp	.L28292
	.p2align 4,,10
	.p2align 3
.L27910:
	movslq	8(%rsp), %rax
	movl	192(%rbx,%rax,8), %eax
	bswap	%eax
	movl	%eax, 24(%rsp)
	movl	1916(%rbx), %eax
	testl	%eax, %eax
	je	.L27912
	leal	1(%rax), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rcx,8)
	jne	.L28309
.L27913:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L28310
.L27914:
	movl	2224(%rbx), %ecx
	andq	$-4194304, %r13
	orq	%rcx, %r13
	cmpq	10424(%rax), %r13
	jne	.L27912
	testb	$4, 46264(%rbx,%rdx)
	je	.L27912
	movq	%r10, %rdi
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L27915:
	movl	(%rax), %eax
	xorl	%r14d, %r14d
	xorl	%r11d, %r11d
	movq	$0, 32(%rsp)
	movq	$0, 48(%rsp)
	movq	$0, 56(%rsp)
	movl	%eax, 88(%rsp)
	movq	$0, 64(%rsp)
	jmp	.L27908
	.p2align 4,,10
	.p2align 3
.L27909:
	movslq	8(%rsp), %rax
	movq	192(%rbx,%rax,8), %rax
	bswap	%rax
	movq	%rax, 32(%rsp)
	movl	1916(%rbx), %eax
	testl	%eax, %eax
	je	.L27916
	leal	1(%rax), %ecx
	movl	%r10d, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rcx,8)
	jne	.L28311
.L27917:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L28312
.L27918:
	movl	2224(%rbx), %ecx
	andq	$-4194304, %r13
	orq	%rcx, %r13
	cmpq	10424(%rax), %r13
	jne	.L27916
	testb	$4, 46264(%rbx,%rdx)
	je	.L27916
	movq	%r10, %rdi
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L27919:
	movq	(%rax), %rax
	movl	$0, 24(%rsp)
	xorl	%r14d, %r14d
	movq	$0, 48(%rsp)
	xorl	%r11d, %r11d
	movl	$0, 88(%rsp)
	movq	$0, 64(%rsp)
	movq	%rax, 56(%rsp)
	jmp	.L27908
	.p2align 4,,10
	.p2align 3
.L27935:
	movl	1916(%rbx), %eax
	testl	%eax, %eax
	je	.L27949
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L28313
.L27950:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28314
.L27951:
	movl	2224(%rbx), %esi
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L27949
	testb	$4, 46264(%rbx,%rcx)
	je	.L27949
	xorq	26808(%rax), %r13
	movq	%r13, %rax
.L27952:
	movq	(%rax), %r10
	xorl	%esi, %esi
	movb	$0, 95(%rsp)
	movw	%si, 92(%rsp)
	xorl	%r13d, %r13d
	movl	$0, 80(%rsp)
	movq	$0, 72(%rsp)
	bswap	%r10
.L27930:
	cmpb	$1, %r15b
	je	.L27964
.L28320:
	jb	.L27965
	cmpb	$2, %r15b
	jne	.L28315
	movq	16(%rsp), %rax
	movq	(%rax), %rax
	cmpq	%rax, %r14
	je	.L28316
	movq	16(%rsp), %rsi
	movq	8(%rsi), %rdi
	movq	%rdi, 48(%rsp)
.L27978:
	movb	$1, 100(%rbx)
	movq	%rax, %r14
.L27979:
	movl	8(%rsp), %esi
	movq	%r14, %rdx
	bswap	%rdx
	movslq	%esi, %rax
	movq	%rdx, 192(%rbx,%rax,8)
	movq	48(%rsp), %rdx
	movl	%esi, %eax
	addl	$1, %eax
	cltq
	bswap	%rdx
	movq	%rdx, 192(%rbx,%rax,8)
	.p2align 4,,10
	.p2align 3
.L27968:
	movq	1056(%rbx), %rax
	movq	40(%rbx), %rdi
	movzwl	1010(%rax), %eax
	cmpw	%ax, 1928(%rdi)
	je	.L28317
	addq	$104, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L27934:
	.cfi_restore_state
	movl	1916(%rbx), %eax
	testl	%eax, %eax
	je	.L27945
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L28318
.L27946:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28319
.L27947:
	movl	2224(%rbx), %esi
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L27945
	testb	$4, 46264(%rbx,%rcx)
	je	.L27945
	xorq	26808(%rax), %r13
	movq	%r13, %rax
.L27948:
	movl	(%rax), %eax
	xorl	%edi, %edi
	xorl	%r10d, %r10d
	xorl	%r13d, %r13d
	cmpb	$1, %r15b
	movb	$0, 95(%rsp)
	movw	%di, 92(%rsp)
	movq	$0, 72(%rsp)
	bswap	%eax
	movl	%eax, 80(%rsp)
	jne	.L28320
	.p2align 4,,10
	.p2align 3
.L27964:
	movq	16(%rsp), %rsi
	movq	32(%rsp), %rax
	movq	56(%rsp), %rdi
#APP
# 422 "machdep.h" 1
	lock;   cmpxchgq %rdi,(%rsi)
	setnz   %dl
	
# 0 "" 2
#NO_APP
	testb	%dl, %dl
	movq	%rax, 32(%rsp)
	movb	%dl, 100(%rbx)
	je	.L27975
.L27976:
	movq	32(%rsp), %rdx
	movslq	8(%rsp), %rax
	bswap	%rdx
	movq	%rdx, 192(%rbx,%rax,8)
	jmp	.L27968
	.p2align 4,,10
	.p2align 3
.L27931:
	movl	1916(%rbx), %eax
	testl	%eax, %eax
	je	.L27937
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L28321
.L27938:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28322
.L27939:
	movl	2224(%rbx), %esi
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L27937
	testb	$4, 46264(%rbx,%rcx)
	je	.L27937
	xorq	26808(%rax), %r13
	movq	%r13, %rax
.L27940:
	movzbl	(%rax), %eax
	movb	%al, 95(%rsp)
.L28292:
	xorl	%edx, %edx
	movl	$0, 80(%rsp)
	xorl	%r10d, %r10d
	movw	%dx, 92(%rsp)
	xorl	%r13d, %r13d
	movq	$0, 72(%rsp)
	jmp	.L27930
	.p2align 4,,10
	.p2align 3
.L27936:
	movl	1916(%rbx), %eax
	testl	%eax, %eax
	je	.L27953
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L28323
.L27954:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28324
.L27955:
	movl	2224(%rbx), %esi
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L27953
	testb	$4, 46264(%rbx,%rcx)
	je	.L27953
	movq	%r13, %rdi
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L27956:
	movq	(%rax), %rax
	leaq	8(%r13), %rdi
	bswap	%rax
	movq	%rax, 72(%rsp)
	movl	1916(%rbx), %eax
	testl	%eax, %eax
	je	.L27958
	leal	1(%rax), %edx
	movl	%edi, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L28325
.L27959:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28326
.L27960:
	movl	2224(%rbx), %esi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L27958
	testb	$4, 46264(%rbx,%rcx)
	je	.L27958
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L27961:
	movq	(%rax), %r13
	xorl	%ecx, %ecx
	movb	$0, 95(%rsp)
	movw	%cx, 92(%rsp)
	xorl	%r10d, %r10d
	movl	$0, 80(%rsp)
	bswap	%r13
	jmp	.L27930
	.p2align 4,,10
	.p2align 3
.L27933:
	movl	1916(%rbx), %eax
	testl	%eax, %eax
	je	.L27941
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L28327
.L27942:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28328
.L27943:
	movl	2224(%rbx), %esi
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L27941
	testb	$4, 46264(%rbx,%rcx)
	je	.L27941
	xorq	26808(%rax), %r13
	movq	%r13, %rax
.L27944:
	movzwl	(%rax), %eax
	movb	$0, 95(%rsp)
	xorl	%r10d, %r10d
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
	movl	$0, 80(%rsp)
	xorl	%r13d, %r13d
	movw	%ax, 92(%rsp)
	movq	$0, 72(%rsp)
	jmp	.L27930
	.p2align 4,,10
	.p2align 3
.L28315:
	cmpb	$0, 100(%rbx)
	je	.L27975
	cmpb	$1, %r15b
	je	.L27976
	.p2align 4,,3
	jb	.L27967
	cmpb	$2, %r15b
	.p2align 4,,3
	je	.L27979
	.p2align 4,,7
	jmp	.L27968
	.p2align 4,,10
	.p2align 3
.L28342:
	movq	64(%rsp), %rsi
	movq	%r11, 8(%rdi)
	movq	%rsi, (%rdi)
	movb	$0, 100(%rbx)
	.p2align 4,,10
	.p2align 3
.L27975:
	cmpb	$4, %bpl
	ja	.L27968
	jmp	*.L27970(,%rbp,8)
	.section	.rodata
	.align 8
	.align 4
.L27970:
	.quad	.L27969
	.quad	.L27971
	.quad	.L27972
	.quad	.L27973
	.quad	.L27974
	.text
	.p2align 4,,10
	.p2align 3
.L27973:
	movl	%r12d, %eax
	movl	%r12d, %ecx
	andl	$2047, %eax
	cmpl	$2040, %eax
	ja	.L27996
	movq	40(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L27997
	leal	1(%rax), %edx
	shrl	$12, %ecx
	andl	$1023, %ecx
	movslq	%edx, %rdx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L28329
.L27998:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28330
.L27999:
	movl	2224(%rbx), %esi
	movq	%r12, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L27997
	testb	$2, 46264(%rbx,%rcx)
	je	.L27997
	xorq	26808(%rax), %r12
	movq	%r12, %rax
.L28000:
	bswap	%r10
	movq	%r10, (%rax)
	jmp	.L27968
	.p2align 4,,10
	.p2align 3
.L27972:
	testb	$3, %r12b
	movl	%r12d, %ecx
	jne	.L28331
.L27990:
	movq	40(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L27992
	leal	1(%rax), %edx
	shrl	$12, %ecx
	andl	$1023, %ecx
	movslq	%edx, %rdx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L28332
.L27993:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28333
.L27994:
	movl	2224(%rbx), %esi
	movq	%r12, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L27992
	testb	$2, 46264(%rbx,%rcx)
	je	.L27992
	xorq	26808(%rax), %r12
	movq	%r12, %rax
.L27995:
	movl	80(%rsp), %r15d
	bswap	%r15d
	movl	%r15d, (%rax)
	jmp	.L27968
	.p2align 4,,10
	.p2align 3
.L27971:
	movl	%r12d, %eax
	movl	%r12d, %ecx
	andl	$2047, %eax
	cmpl	$2047, %eax
	je	.L27985
	movq	40(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L27986
	leal	1(%rax), %edx
	shrl	$12, %ecx
	andl	$1023, %ecx
	movslq	%edx, %rdx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L28334
.L27987:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28335
.L27988:
	movl	2224(%rbx), %esi
	movq	%r12, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L27986
	testb	$2, 46264(%rbx,%rcx)
	je	.L27986
	xorq	26808(%rax), %r12
	movq	%r12, %rax
.L27989:
	movzwl	92(%rsp), %r10d
#APP
# 248 "vstore.h" 1
	rorw $8, %r10w
# 0 "" 2
#NO_APP
	movw	%r10w, (%rax)
	jmp	.L27968
	.p2align 4,,10
	.p2align 3
.L27969:
	movq	40(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L27981
	leal	1(%rax), %edx
	movl	%r12d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L28336
.L27982:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28337
.L27983:
	movl	2224(%rbx), %esi
	movq	%r12, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L27981
	testb	$2, 46264(%rbx,%rcx)
	je	.L27981
	xorq	26808(%rax), %r12
	movq	%r12, %rax
.L27984:
	movzbl	95(%rsp), %edi
	movb	%dil, (%rax)
	jmp	.L27968
	.p2align 4,,10
	.p2align 3
.L27974:
	movl	%r12d, %eax
	movl	%r12d, %ecx
	andl	$2047, %eax
	cmpl	$2040, %eax
	ja	.L28001
	movq	40(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L28002
	leal	1(%rax), %edx
	shrl	$12, %ecx
	andl	$1023, %ecx
	movslq	%edx, %rdx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L28338
.L28003:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28339
.L28004:
	movl	2224(%rbx), %esi
	movq	%r12, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L28002
	testb	$2, 46264(%rbx,%rcx)
	je	.L28002
	movq	%r12, %rdi
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L28005:
	movq	72(%rsp), %rdx
	bswap	%rdx
	movq	%rdx, (%rax)
.L28006:
	leaq	8(%r12), %rdi
	movl	%edi, %eax
	andl	$2047, %eax
	cmpl	$2040, %eax
	ja	.L28007
	movq	40(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L28008
	leal	1(%rax), %edx
	movl	%edi, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L28340
.L28009:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28341
.L28010:
	movl	2224(%rbx), %esi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L28008
	testb	$2, 46264(%rbx,%rcx)
	je	.L28008
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L28011:
	bswap	%r13
	movq	%r13, (%rax)
	jmp	.L27968
	.p2align 4,,10
	.p2align 3
.L27965:
	movq	16(%rsp), %rsi
	movl	24(%rsp), %eax
	movl	88(%rsp), %edi
#APP
# 406 "machdep.h" 1
	lock;   cmpxchgl %edi,(%rsi)
	setnz   %dl
	
# 0 "" 2
#NO_APP
	testb	%dl, %dl
	movl	%eax, 24(%rsp)
	movb	%dl, 100(%rbx)
	je	.L27975
.L27967:
	movl	24(%rsp), %edx
	movslq	8(%rsp), %rax
	bswap	%edx
	movl	%edx, 192(%rbx,%rax,8)
	jmp	.L27968
	.p2align 4,,10
	.p2align 3
.L28317:
	movl	$-1, %eax
	addq	$1936, %rdi
	movl	$.LC11, %esi
	movw	%ax, -8(%rdi)
	addq	$104, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	ptt_pthread_mutex_unlock
	.p2align 4,,10
	.p2align 3
.L28316:
	.cfi_restore_state
	movq	16(%rsp), %rdi
	movq	8(%rdi), %rdx
	cmpq	%rdx, 48(%rsp)
	je	.L28342
	movq	%rdx, 48(%rsp)
	jmp	.L27978
.L28297:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L27896
.L27895:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movl	16(%rsp), %esi
	movq	%rbx, %rdx
	movq	%r14, %rdi
	movq	%r10, 32(%rsp)
	movl	%r11d, 24(%rsp)
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, 16(%rsp)
	movq	32(%rsp), %r10
	movl	24(%rsp), %r11d
	jmp	.L27898
.L28299:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L27900
.L27899:
	movl	4(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movq	%r12, %rdi
	movq	%r10, 32(%rsp)
	movl	%r11d, 24(%rsp)
	call	z900_logical_to_main_l
	movq	32(%rsp), %r10
	movl	24(%rsp), %r11d
	jmp	.L27902
.L28300:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L27901
	jmp	.L27899
.L28301:
	movl	1892(%r14), %eax
	leal	-1(%r11), %edx
	testl	%eax, %eax
	je	.L27904
	leal	1(%rax), %edi
	movq	120(%rbx), %rax
	leal	(%rdx,%r12), %ecx
	movslq	%edi, %rdi
	andl	%eax, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rsi
	movq	2232(%rsi), %r9
	cmpq	%r9, 320(%rbx,%rdi,8)
	jne	.L28343
.L27905:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L28344
.L27906:
	movslq	%edx, %rdi
	andq	$-4194304, %rax
	addq	%r12, %rdi
	andq	%rdi, %rax
	movl	2224(%rbx), %edi
	orq	%rdi, %rax
	cmpq	10424(%rsi), %rax
	jne	.L27904
	testb	$1, 46264(%rbx,%rcx)
	je	.L27904
	movq	35000(%rsi), %rax
	movq	%rax, 984(%rbx)
	jmp	.L27903
.L28298:
	cmpb	43192(%rbx,%rsi), %dil
	je	.L27897
	jmp	.L27895
.L28303:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L27921
.L27920:
	movzbl	97(%rbx), %r8d
	movq	%r10, %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	movq	%r10, 24(%rsp)
	call	z900_logical_to_main_l
	movq	24(%rsp), %r10
	jmp	.L27923
.L28305:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L27926
.L27925:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	movq	%r10, 24(%rsp)
	call	z900_logical_to_main_l
	movq	24(%rsp), %r10
	jmp	.L27928
.L28309:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L27913
.L27912:
	movzbl	97(%rbx), %r8d
	movq	%r10, %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	movq	%r10, 32(%rsp)
	call	z900_logical_to_main_l
	movq	32(%rsp), %r10
	jmp	.L27915
.L28311:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L27917
.L27916:
	movzbl	97(%rbx), %r8d
	movq	%r10, %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	movq	%r10, 24(%rsp)
	call	z900_logical_to_main_l
	movq	24(%rsp), %r10
	jmp	.L27919
.L28327:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L27942
.L27941:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	movq	%r13, %rdi
	movq	%r11, 72(%rsp)
	call	z900_logical_to_main_l
	movq	72(%rsp), %r11
	jmp	.L27944
.L28325:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L27959
.L27958:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	movq	%r11, 80(%rsp)
	call	z900_logical_to_main_l
	movq	80(%rsp), %r11
	jmp	.L27961
.L28323:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L27954
.L27953:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	movq	%r13, %rdi
	movq	%r11, 72(%rsp)
	call	z900_logical_to_main_l
	movq	72(%rsp), %r11
	jmp	.L27956
.L28321:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L27938
.L27937:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	movq	%r13, %rdi
	movq	%r11, 72(%rsp)
	call	z900_logical_to_main_l
	movq	72(%rsp), %r11
	jmp	.L27940
.L28318:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L27946
.L27945:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	movq	%r13, %rdi
	movq	%r11, 72(%rsp)
	call	z900_logical_to_main_l
	movq	72(%rsp), %r11
	jmp	.L27948
.L28313:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L27950
.L27949:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %esi
	movq	%r13, %rdi
	movq	%r11, 72(%rsp)
	call	z900_logical_to_main_l
	movq	72(%rsp), %r11
	jmp	.L27952
.L28314:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L27951
	jmp	.L27949
.L28304:
	cmpb	43192(%rbx,%rdx), %cl
	je	.L27922
	.p2align 4,,4
	jmp	.L27920
.L28326:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L27960
	.p2align 4,,4
	jmp	.L27958
.L28319:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L27947
	.p2align 4,,4
	jmp	.L27945
.L28322:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L27939
	.p2align 4,,4
	jmp	.L27937
.L28324:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L27955
	.p2align 4,,4
	jmp	.L27953
.L28312:
	cmpb	43192(%rbx,%rdx), %cl
	je	.L27918
	.p2align 4,,4
	jmp	.L27916
.L28306:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L27927
	.p2align 4,,4
	jmp	.L27925
.L28310:
	cmpb	43192(%rbx,%rdx), %cl
	je	.L27914
	.p2align 4,,4
	jmp	.L27912
.L28329:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L27998
.L27997:
	movzbl	97(%rbx), %r8d
	movl	$8, %r9d
	movl	$2, %ecx
	movl	4(%rsp), %esi
	movq	%rbx, %rdx
	movq	%r12, %rdi
	movq	%r10, 8(%rsp)
	call	z900_logical_to_main_l
	movq	8(%rsp), %r10
	jmp	.L28000
.L28328:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L27943
	jmp	.L27941
.L28334:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L27987
.L27986:
	movzbl	97(%rbx), %r8d
	movl	$2, %r9d
	movl	$2, %ecx
	movl	4(%rsp), %esi
	movq	%rbx, %rdx
	movq	%r12, %rdi
	call	z900_logical_to_main_l
	jmp	.L27989
.L28332:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L27993
.L27992:
	movzbl	97(%rbx), %r8d
	movl	$4, %r9d
	movl	$2, %ecx
	movl	4(%rsp), %esi
	movq	%rbx, %rdx
	movq	%r12, %rdi
	call	z900_logical_to_main_l
	jmp	.L27995
.L28338:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L28003
.L28002:
	movzbl	97(%rbx), %r8d
	movl	$8, %r9d
	movl	$2, %ecx
	movl	4(%rsp), %esi
	movq	%rbx, %rdx
	movq	%r12, %rdi
	call	z900_logical_to_main_l
	jmp	.L28005
.L28336:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L27982
.L27981:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$2, %ecx
	movl	4(%rsp), %esi
	movq	%rbx, %rdx
	movq	%r12, %rdi
	call	z900_logical_to_main_l
	jmp	.L27984
.L28340:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L28009
.L28008:
	movzbl	97(%rbx), %r8d
	movl	$8, %r9d
	movl	$2, %ecx
	movl	4(%rsp), %esi
	movq	%rbx, %rdx
	call	z900_logical_to_main_l
	jmp	.L28011
.L28335:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L27988
	.p2align 4,,4
	jmp	.L27986
.L28001:
	movl	4(%rsp), %edx
	movq	%rbx, %rcx
	movq	%r12, %rsi
	movq	72(%rsp), %rdi
	call	z900_vstore8_full
	jmp	.L28006
.L28337:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L27983
	.p2align 4,,4
	jmp	.L27981
.L28007:
	movl	4(%rsp), %edx
	movq	%rdi, %rsi
	movq	%rbx, %rcx
	movq	%r13, %rdi
	call	z900_vstore8_full
	jmp	.L27968
.L28339:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L28004
	.p2align 4,,4
	jmp	.L28002
.L28344:
	cmpb	43192(%rbx,%rcx), %dil
	je	.L27906
.L27904:
	movl	4(%rsp), %esi
	movq	%rbx, %r8
	movl	$1, %ecx
	movq	%r12, %rdi
	movq	%r10, 24(%rsp)
	call	z900_validate_operand.part.9
	movq	24(%rsp), %r10
	jmp	.L27903
.L28343:
	movzbl	44216(%rbx,%rcx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L27905
	jmp	.L27904
.L28341:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L28010
	.p2align 4,,4
	jmp	.L28008
.L27985:
	movzwl	92(%rsp), %edi
	movq	%rbx, %rcx
	movq	%r12, %rsi
	movl	4(%rsp), %edx
	call	z900_vstore2_full
	jmp	.L27968
.L28331:
	movl	%r12d, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L27990
	movl	4(%rsp), %edx
	movq	%rbx, %rcx
	movq	%r12, %rsi
	movl	80(%rsp), %edi
	call	z900_vstore4_full
	jmp	.L27968
.L28330:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L27999
	.p2align 4,,4
	jmp	.L27997
.L27996:
	movl	4(%rsp), %edx
	movq	%rbx, %rcx
	movq	%r12, %rsi
	movq	%r10, %rdi
	call	z900_vstore8_full
	jmp	.L27968
.L28333:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L27994
	.p2align 4,,4
	jmp	.L27992
	.cfi_endproc
.LFE2562:
	.size	z900_compare_and_swap_and_store, .-z900_compare_and_swap_and_store
	.p2align 4,,15
	.globl	z900_compare_halfword
	.type	z900_compare_halfword, @function
z900_compare_halfword:
.LFB2563:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L28380
.L28346:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L28347
	movslq	%eax, %rdx
	addq	192(%rbx,%rdx,8), %rdi
.L28347:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %dil
	jne	.L28381
.L28348:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L28350
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L28382
.L28351:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L28383
.L28352:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L28350
	testb	$4, 46264(%rbx,%rsi)
	je	.L28350
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L28353:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L28354:
	cwtl
	movslq	%ebp, %rbp
	movl	$1, %edx
	cmpl	192(%rbx,%rbp,8), %eax
	jg	.L28355
	setl	%dl
	addl	%edx, %edx
.L28355:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L28382:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L28351
.L28350:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L28353
.L28381:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2047, %edx
	jne	.L28348
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch2_full
	jmp	.L28354
.L28380:
	movslq	%edx, %rdx
	addq	192(%rsi,%rdx,8), %rdi
	jmp	.L28346
.L28383:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L28352
	jmp	.L28350
	.cfi_endproc
.LFE2563:
	.size	z900_compare_halfword, .-z900_compare_halfword
	.p2align 4,,15
	.globl	z900_compare_halfword_immediate
	.type	z900_compare_halfword_immediate, @function
z900_compare_halfword_immediate:
.LFB2564:
	.cfi_startproc
	movl	(%rdi), %eax
	movl	$1, %edx
	addq	$4, 136(%rsi)
	bswap	%eax
	movl	%eax, %ecx
	cwtl
	shrl	$20, %ecx
	andl	$15, %ecx
	cmpl	%eax, 192(%rsi,%rcx,8)
	jl	.L28385
	setg	%dl
	addl	%edx, %edx
.L28385:
	movb	%dl, 100(%rsi)
	ret
	.cfi_endproc
.LFE2564:
	.size	z900_compare_halfword_immediate, .-z900_compare_halfword_immediate
	.p2align 4,,15
	.globl	z900_compare_logical_register
	.type	z900_compare_logical_register, @function
z900_compare_logical_register:
.LFB2565:
	.cfi_startproc
	movzbl	1(%rdi), %edx
	addq	$2, 136(%rsi)
	movq	%rdx, %rax
	andl	$15, %edx
	shrq	$4, %rax
	movl	192(%rsi,%rdx,8), %edx
	andl	$15, %eax
	movl	192(%rsi,%rax,8), %ecx
	movl	$1, %eax
	cmpl	%edx, %ecx
	jb	.L28389
	cmpl	%ecx, %edx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28389:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2565:
	.size	z900_compare_logical_register, .-z900_compare_logical_register
	.p2align 4,,15
	.globl	z900_1500
	.type	z900_1500, @function
z900_1500:
.LFB2566:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2566:
	.size	z900_1500, .-z900_1500
	.p2align 4,,15
	.globl	z900_1501
	.type	z900_1501, @function
z900_1501:
.LFB2567:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28394
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28394:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2567:
	.size	z900_1501, .-z900_1501
	.p2align 4,,15
	.globl	z900_1502
	.type	z900_1502, @function
z900_1502:
.LFB2568:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28398
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28398:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2568:
	.size	z900_1502, .-z900_1502
	.p2align 4,,15
	.globl	z900_1503
	.type	z900_1503, @function
z900_1503:
.LFB2569:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28402
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28402:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2569:
	.size	z900_1503, .-z900_1503
	.p2align 4,,15
	.globl	z900_1504
	.type	z900_1504, @function
z900_1504:
.LFB2570:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28406
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28406:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2570:
	.size	z900_1504, .-z900_1504
	.p2align 4,,15
	.globl	z900_1505
	.type	z900_1505, @function
z900_1505:
.LFB2571:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28410
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28410:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2571:
	.size	z900_1505, .-z900_1505
	.p2align 4,,15
	.globl	z900_1506
	.type	z900_1506, @function
z900_1506:
.LFB2572:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28414
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28414:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2572:
	.size	z900_1506, .-z900_1506
	.p2align 4,,15
	.globl	z900_1507
	.type	z900_1507, @function
z900_1507:
.LFB2573:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28418
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28418:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2573:
	.size	z900_1507, .-z900_1507
	.p2align 4,,15
	.globl	z900_1508
	.type	z900_1508, @function
z900_1508:
.LFB2574:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28422
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28422:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2574:
	.size	z900_1508, .-z900_1508
	.p2align 4,,15
	.globl	z900_1509
	.type	z900_1509, @function
z900_1509:
.LFB2575:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28426
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28426:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2575:
	.size	z900_1509, .-z900_1509
	.p2align 4,,15
	.globl	z900_150A
	.type	z900_150A, @function
z900_150A:
.LFB2576:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28430
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28430:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2576:
	.size	z900_150A, .-z900_150A
	.p2align 4,,15
	.globl	z900_150B
	.type	z900_150B, @function
z900_150B:
.LFB2577:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28434
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28434:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2577:
	.size	z900_150B, .-z900_150B
	.p2align 4,,15
	.globl	z900_150C
	.type	z900_150C, @function
z900_150C:
.LFB2578:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28438
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28438:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2578:
	.size	z900_150C, .-z900_150C
	.p2align 4,,15
	.globl	z900_150D
	.type	z900_150D, @function
z900_150D:
.LFB2579:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28442
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28442:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2579:
	.size	z900_150D, .-z900_150D
	.p2align 4,,15
	.globl	z900_150E
	.type	z900_150E, @function
z900_150E:
.LFB2580:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28446
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28446:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2580:
	.size	z900_150E, .-z900_150E
	.p2align 4,,15
	.globl	z900_150F
	.type	z900_150F, @function
z900_150F:
.LFB2581:
	.cfi_startproc
	movl	192(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28450
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28450:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2581:
	.size	z900_150F, .-z900_150F
	.p2align 4,,15
	.globl	z900_1510
	.type	z900_1510, @function
z900_1510:
.LFB2582:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28454
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28454:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2582:
	.size	z900_1510, .-z900_1510
	.p2align 4,,15
	.globl	z900_1511
	.type	z900_1511, @function
z900_1511:
.LFB2583:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2583:
	.size	z900_1511, .-z900_1511
	.p2align 4,,15
	.globl	z900_1512
	.type	z900_1512, @function
z900_1512:
.LFB2584:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28459
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28459:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2584:
	.size	z900_1512, .-z900_1512
	.p2align 4,,15
	.globl	z900_1513
	.type	z900_1513, @function
z900_1513:
.LFB2585:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28463
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28463:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2585:
	.size	z900_1513, .-z900_1513
	.p2align 4,,15
	.globl	z900_1514
	.type	z900_1514, @function
z900_1514:
.LFB2586:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28467
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28467:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2586:
	.size	z900_1514, .-z900_1514
	.p2align 4,,15
	.globl	z900_1515
	.type	z900_1515, @function
z900_1515:
.LFB2587:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28471
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28471:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2587:
	.size	z900_1515, .-z900_1515
	.p2align 4,,15
	.globl	z900_1516
	.type	z900_1516, @function
z900_1516:
.LFB2588:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28475
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28475:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2588:
	.size	z900_1516, .-z900_1516
	.p2align 4,,15
	.globl	z900_1517
	.type	z900_1517, @function
z900_1517:
.LFB2589:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28479
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28479:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2589:
	.size	z900_1517, .-z900_1517
	.p2align 4,,15
	.globl	z900_1518
	.type	z900_1518, @function
z900_1518:
.LFB2590:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28483
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28483:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2590:
	.size	z900_1518, .-z900_1518
	.p2align 4,,15
	.globl	z900_1519
	.type	z900_1519, @function
z900_1519:
.LFB2591:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28487
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28487:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2591:
	.size	z900_1519, .-z900_1519
	.p2align 4,,15
	.globl	z900_151A
	.type	z900_151A, @function
z900_151A:
.LFB2592:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28491
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28491:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2592:
	.size	z900_151A, .-z900_151A
	.p2align 4,,15
	.globl	z900_151B
	.type	z900_151B, @function
z900_151B:
.LFB2593:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28495
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28495:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2593:
	.size	z900_151B, .-z900_151B
	.p2align 4,,15
	.globl	z900_151C
	.type	z900_151C, @function
z900_151C:
.LFB2594:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28499
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28499:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2594:
	.size	z900_151C, .-z900_151C
	.p2align 4,,15
	.globl	z900_151D
	.type	z900_151D, @function
z900_151D:
.LFB2595:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28503
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28503:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2595:
	.size	z900_151D, .-z900_151D
	.p2align 4,,15
	.globl	z900_151E
	.type	z900_151E, @function
z900_151E:
.LFB2596:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28507
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28507:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2596:
	.size	z900_151E, .-z900_151E
	.p2align 4,,15
	.globl	z900_151F
	.type	z900_151F, @function
z900_151F:
.LFB2597:
	.cfi_startproc
	movl	200(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28511
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28511:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2597:
	.size	z900_151F, .-z900_151F
	.p2align 4,,15
	.globl	z900_1520
	.type	z900_1520, @function
z900_1520:
.LFB2598:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28515
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28515:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2598:
	.size	z900_1520, .-z900_1520
	.p2align 4,,15
	.globl	z900_1521
	.type	z900_1521, @function
z900_1521:
.LFB2599:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28519
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28519:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2599:
	.size	z900_1521, .-z900_1521
	.p2align 4,,15
	.globl	z900_1522
	.type	z900_1522, @function
z900_1522:
.LFB2600:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2600:
	.size	z900_1522, .-z900_1522
	.p2align 4,,15
	.globl	z900_1523
	.type	z900_1523, @function
z900_1523:
.LFB2601:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28524
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28524:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2601:
	.size	z900_1523, .-z900_1523
	.p2align 4,,15
	.globl	z900_1524
	.type	z900_1524, @function
z900_1524:
.LFB2602:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28528
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28528:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2602:
	.size	z900_1524, .-z900_1524
	.p2align 4,,15
	.globl	z900_1525
	.type	z900_1525, @function
z900_1525:
.LFB2603:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28532
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28532:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2603:
	.size	z900_1525, .-z900_1525
	.p2align 4,,15
	.globl	z900_1526
	.type	z900_1526, @function
z900_1526:
.LFB2604:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28536
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28536:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2604:
	.size	z900_1526, .-z900_1526
	.p2align 4,,15
	.globl	z900_1527
	.type	z900_1527, @function
z900_1527:
.LFB2605:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28540
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28540:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2605:
	.size	z900_1527, .-z900_1527
	.p2align 4,,15
	.globl	z900_1528
	.type	z900_1528, @function
z900_1528:
.LFB2606:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28544
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28544:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2606:
	.size	z900_1528, .-z900_1528
	.p2align 4,,15
	.globl	z900_1529
	.type	z900_1529, @function
z900_1529:
.LFB2607:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28548
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28548:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2607:
	.size	z900_1529, .-z900_1529
	.p2align 4,,15
	.globl	z900_152A
	.type	z900_152A, @function
z900_152A:
.LFB2608:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28552
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28552:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2608:
	.size	z900_152A, .-z900_152A
	.p2align 4,,15
	.globl	z900_152B
	.type	z900_152B, @function
z900_152B:
.LFB2609:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28556
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28556:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2609:
	.size	z900_152B, .-z900_152B
	.p2align 4,,15
	.globl	z900_152C
	.type	z900_152C, @function
z900_152C:
.LFB2610:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28560
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28560:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2610:
	.size	z900_152C, .-z900_152C
	.p2align 4,,15
	.globl	z900_152D
	.type	z900_152D, @function
z900_152D:
.LFB2611:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28564
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28564:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2611:
	.size	z900_152D, .-z900_152D
	.p2align 4,,15
	.globl	z900_152E
	.type	z900_152E, @function
z900_152E:
.LFB2612:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28568
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28568:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2612:
	.size	z900_152E, .-z900_152E
	.p2align 4,,15
	.globl	z900_152F
	.type	z900_152F, @function
z900_152F:
.LFB2613:
	.cfi_startproc
	movl	208(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28572
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28572:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2613:
	.size	z900_152F, .-z900_152F
	.p2align 4,,15
	.globl	z900_1530
	.type	z900_1530, @function
z900_1530:
.LFB2614:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28576
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28576:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2614:
	.size	z900_1530, .-z900_1530
	.p2align 4,,15
	.globl	z900_1531
	.type	z900_1531, @function
z900_1531:
.LFB2615:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28580
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28580:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2615:
	.size	z900_1531, .-z900_1531
	.p2align 4,,15
	.globl	z900_1532
	.type	z900_1532, @function
z900_1532:
.LFB2616:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28584
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28584:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2616:
	.size	z900_1532, .-z900_1532
	.p2align 4,,15
	.globl	z900_1533
	.type	z900_1533, @function
z900_1533:
.LFB2617:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2617:
	.size	z900_1533, .-z900_1533
	.p2align 4,,15
	.globl	z900_1534
	.type	z900_1534, @function
z900_1534:
.LFB2618:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28589
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28589:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2618:
	.size	z900_1534, .-z900_1534
	.p2align 4,,15
	.globl	z900_1535
	.type	z900_1535, @function
z900_1535:
.LFB2619:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28593
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28593:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2619:
	.size	z900_1535, .-z900_1535
	.p2align 4,,15
	.globl	z900_1536
	.type	z900_1536, @function
z900_1536:
.LFB2620:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28597
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28597:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2620:
	.size	z900_1536, .-z900_1536
	.p2align 4,,15
	.globl	z900_1537
	.type	z900_1537, @function
z900_1537:
.LFB2621:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28601
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28601:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2621:
	.size	z900_1537, .-z900_1537
	.p2align 4,,15
	.globl	z900_1538
	.type	z900_1538, @function
z900_1538:
.LFB2622:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28605
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28605:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2622:
	.size	z900_1538, .-z900_1538
	.p2align 4,,15
	.globl	z900_1539
	.type	z900_1539, @function
z900_1539:
.LFB2623:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28609
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28609:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2623:
	.size	z900_1539, .-z900_1539
	.p2align 4,,15
	.globl	z900_153A
	.type	z900_153A, @function
z900_153A:
.LFB2624:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28613
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28613:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2624:
	.size	z900_153A, .-z900_153A
	.p2align 4,,15
	.globl	z900_153B
	.type	z900_153B, @function
z900_153B:
.LFB2625:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28617
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28617:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2625:
	.size	z900_153B, .-z900_153B
	.p2align 4,,15
	.globl	z900_153C
	.type	z900_153C, @function
z900_153C:
.LFB2626:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28621
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28621:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2626:
	.size	z900_153C, .-z900_153C
	.p2align 4,,15
	.globl	z900_153D
	.type	z900_153D, @function
z900_153D:
.LFB2627:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28625
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28625:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2627:
	.size	z900_153D, .-z900_153D
	.p2align 4,,15
	.globl	z900_153E
	.type	z900_153E, @function
z900_153E:
.LFB2628:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28629
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28629:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2628:
	.size	z900_153E, .-z900_153E
	.p2align 4,,15
	.globl	z900_153F
	.type	z900_153F, @function
z900_153F:
.LFB2629:
	.cfi_startproc
	movl	216(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28633
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28633:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2629:
	.size	z900_153F, .-z900_153F
	.p2align 4,,15
	.globl	z900_1540
	.type	z900_1540, @function
z900_1540:
.LFB2630:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28637
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28637:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2630:
	.size	z900_1540, .-z900_1540
	.p2align 4,,15
	.globl	z900_1541
	.type	z900_1541, @function
z900_1541:
.LFB2631:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28641
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28641:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2631:
	.size	z900_1541, .-z900_1541
	.p2align 4,,15
	.globl	z900_1542
	.type	z900_1542, @function
z900_1542:
.LFB2632:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28645
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28645:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2632:
	.size	z900_1542, .-z900_1542
	.p2align 4,,15
	.globl	z900_1543
	.type	z900_1543, @function
z900_1543:
.LFB2633:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28649
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28649:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2633:
	.size	z900_1543, .-z900_1543
	.p2align 4,,15
	.globl	z900_1544
	.type	z900_1544, @function
z900_1544:
.LFB2634:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2634:
	.size	z900_1544, .-z900_1544
	.p2align 4,,15
	.globl	z900_1545
	.type	z900_1545, @function
z900_1545:
.LFB2635:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28654
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28654:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2635:
	.size	z900_1545, .-z900_1545
	.p2align 4,,15
	.globl	z900_1546
	.type	z900_1546, @function
z900_1546:
.LFB2636:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28658
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28658:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2636:
	.size	z900_1546, .-z900_1546
	.p2align 4,,15
	.globl	z900_1547
	.type	z900_1547, @function
z900_1547:
.LFB2637:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28662
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28662:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2637:
	.size	z900_1547, .-z900_1547
	.p2align 4,,15
	.globl	z900_1548
	.type	z900_1548, @function
z900_1548:
.LFB2638:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28666
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28666:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2638:
	.size	z900_1548, .-z900_1548
	.p2align 4,,15
	.globl	z900_1549
	.type	z900_1549, @function
z900_1549:
.LFB2639:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28670
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28670:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2639:
	.size	z900_1549, .-z900_1549
	.p2align 4,,15
	.globl	z900_154A
	.type	z900_154A, @function
z900_154A:
.LFB2640:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28674
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28674:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2640:
	.size	z900_154A, .-z900_154A
	.p2align 4,,15
	.globl	z900_154B
	.type	z900_154B, @function
z900_154B:
.LFB2641:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28678
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28678:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2641:
	.size	z900_154B, .-z900_154B
	.p2align 4,,15
	.globl	z900_154C
	.type	z900_154C, @function
z900_154C:
.LFB2642:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28682
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28682:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2642:
	.size	z900_154C, .-z900_154C
	.p2align 4,,15
	.globl	z900_154D
	.type	z900_154D, @function
z900_154D:
.LFB2643:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28686
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28686:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2643:
	.size	z900_154D, .-z900_154D
	.p2align 4,,15
	.globl	z900_154E
	.type	z900_154E, @function
z900_154E:
.LFB2644:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28690
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28690:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2644:
	.size	z900_154E, .-z900_154E
	.p2align 4,,15
	.globl	z900_154F
	.type	z900_154F, @function
z900_154F:
.LFB2645:
	.cfi_startproc
	movl	224(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28694
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28694:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2645:
	.size	z900_154F, .-z900_154F
	.p2align 4,,15
	.globl	z900_1550
	.type	z900_1550, @function
z900_1550:
.LFB2646:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28698
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28698:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2646:
	.size	z900_1550, .-z900_1550
	.p2align 4,,15
	.globl	z900_1551
	.type	z900_1551, @function
z900_1551:
.LFB2647:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28702
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28702:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2647:
	.size	z900_1551, .-z900_1551
	.p2align 4,,15
	.globl	z900_1552
	.type	z900_1552, @function
z900_1552:
.LFB2648:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28706
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28706:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2648:
	.size	z900_1552, .-z900_1552
	.p2align 4,,15
	.globl	z900_1553
	.type	z900_1553, @function
z900_1553:
.LFB2649:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28710
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28710:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2649:
	.size	z900_1553, .-z900_1553
	.p2align 4,,15
	.globl	z900_1554
	.type	z900_1554, @function
z900_1554:
.LFB2650:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28714
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28714:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2650:
	.size	z900_1554, .-z900_1554
	.p2align 4,,15
	.globl	z900_1555
	.type	z900_1555, @function
z900_1555:
.LFB2651:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2651:
	.size	z900_1555, .-z900_1555
	.p2align 4,,15
	.globl	z900_1556
	.type	z900_1556, @function
z900_1556:
.LFB2652:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28719
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28719:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2652:
	.size	z900_1556, .-z900_1556
	.p2align 4,,15
	.globl	z900_1557
	.type	z900_1557, @function
z900_1557:
.LFB2653:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28723
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28723:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2653:
	.size	z900_1557, .-z900_1557
	.p2align 4,,15
	.globl	z900_1558
	.type	z900_1558, @function
z900_1558:
.LFB2654:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28727
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28727:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2654:
	.size	z900_1558, .-z900_1558
	.p2align 4,,15
	.globl	z900_1559
	.type	z900_1559, @function
z900_1559:
.LFB2655:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28731
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28731:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2655:
	.size	z900_1559, .-z900_1559
	.p2align 4,,15
	.globl	z900_155A
	.type	z900_155A, @function
z900_155A:
.LFB2656:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28735
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28735:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2656:
	.size	z900_155A, .-z900_155A
	.p2align 4,,15
	.globl	z900_155B
	.type	z900_155B, @function
z900_155B:
.LFB2657:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28739
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28739:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2657:
	.size	z900_155B, .-z900_155B
	.p2align 4,,15
	.globl	z900_155C
	.type	z900_155C, @function
z900_155C:
.LFB2658:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28743
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28743:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2658:
	.size	z900_155C, .-z900_155C
	.p2align 4,,15
	.globl	z900_155D
	.type	z900_155D, @function
z900_155D:
.LFB2659:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28747
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28747:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2659:
	.size	z900_155D, .-z900_155D
	.p2align 4,,15
	.globl	z900_155E
	.type	z900_155E, @function
z900_155E:
.LFB2660:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28751
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28751:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2660:
	.size	z900_155E, .-z900_155E
	.p2align 4,,15
	.globl	z900_155F
	.type	z900_155F, @function
z900_155F:
.LFB2661:
	.cfi_startproc
	movl	232(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28755
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28755:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2661:
	.size	z900_155F, .-z900_155F
	.p2align 4,,15
	.globl	z900_1560
	.type	z900_1560, @function
z900_1560:
.LFB2662:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28759
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28759:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2662:
	.size	z900_1560, .-z900_1560
	.p2align 4,,15
	.globl	z900_1561
	.type	z900_1561, @function
z900_1561:
.LFB2663:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28763
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28763:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2663:
	.size	z900_1561, .-z900_1561
	.p2align 4,,15
	.globl	z900_1562
	.type	z900_1562, @function
z900_1562:
.LFB2664:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28767
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28767:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2664:
	.size	z900_1562, .-z900_1562
	.p2align 4,,15
	.globl	z900_1563
	.type	z900_1563, @function
z900_1563:
.LFB2665:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28771
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28771:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2665:
	.size	z900_1563, .-z900_1563
	.p2align 4,,15
	.globl	z900_1564
	.type	z900_1564, @function
z900_1564:
.LFB2666:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28775
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28775:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2666:
	.size	z900_1564, .-z900_1564
	.p2align 4,,15
	.globl	z900_1565
	.type	z900_1565, @function
z900_1565:
.LFB2667:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28779
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28779:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2667:
	.size	z900_1565, .-z900_1565
	.p2align 4,,15
	.globl	z900_1566
	.type	z900_1566, @function
z900_1566:
.LFB2668:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2668:
	.size	z900_1566, .-z900_1566
	.p2align 4,,15
	.globl	z900_1567
	.type	z900_1567, @function
z900_1567:
.LFB2669:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28784
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28784:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2669:
	.size	z900_1567, .-z900_1567
	.p2align 4,,15
	.globl	z900_1568
	.type	z900_1568, @function
z900_1568:
.LFB2670:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28788
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28788:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2670:
	.size	z900_1568, .-z900_1568
	.p2align 4,,15
	.globl	z900_1569
	.type	z900_1569, @function
z900_1569:
.LFB2671:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28792
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28792:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2671:
	.size	z900_1569, .-z900_1569
	.p2align 4,,15
	.globl	z900_156A
	.type	z900_156A, @function
z900_156A:
.LFB2672:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28796
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28796:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2672:
	.size	z900_156A, .-z900_156A
	.p2align 4,,15
	.globl	z900_156B
	.type	z900_156B, @function
z900_156B:
.LFB2673:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28800
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28800:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2673:
	.size	z900_156B, .-z900_156B
	.p2align 4,,15
	.globl	z900_156C
	.type	z900_156C, @function
z900_156C:
.LFB2674:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28804
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28804:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2674:
	.size	z900_156C, .-z900_156C
	.p2align 4,,15
	.globl	z900_156D
	.type	z900_156D, @function
z900_156D:
.LFB2675:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28808
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28808:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2675:
	.size	z900_156D, .-z900_156D
	.p2align 4,,15
	.globl	z900_156E
	.type	z900_156E, @function
z900_156E:
.LFB2676:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28812
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28812:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2676:
	.size	z900_156E, .-z900_156E
	.p2align 4,,15
	.globl	z900_156F
	.type	z900_156F, @function
z900_156F:
.LFB2677:
	.cfi_startproc
	movl	240(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28816
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28816:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2677:
	.size	z900_156F, .-z900_156F
	.p2align 4,,15
	.globl	z900_1570
	.type	z900_1570, @function
z900_1570:
.LFB2678:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28820
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28820:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2678:
	.size	z900_1570, .-z900_1570
	.p2align 4,,15
	.globl	z900_1571
	.type	z900_1571, @function
z900_1571:
.LFB2679:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28824
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28824:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2679:
	.size	z900_1571, .-z900_1571
	.p2align 4,,15
	.globl	z900_1572
	.type	z900_1572, @function
z900_1572:
.LFB2680:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28828
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28828:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2680:
	.size	z900_1572, .-z900_1572
	.p2align 4,,15
	.globl	z900_1573
	.type	z900_1573, @function
z900_1573:
.LFB2681:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28832
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28832:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2681:
	.size	z900_1573, .-z900_1573
	.p2align 4,,15
	.globl	z900_1574
	.type	z900_1574, @function
z900_1574:
.LFB2682:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28836
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28836:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2682:
	.size	z900_1574, .-z900_1574
	.p2align 4,,15
	.globl	z900_1575
	.type	z900_1575, @function
z900_1575:
.LFB2683:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28840
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28840:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2683:
	.size	z900_1575, .-z900_1575
	.p2align 4,,15
	.globl	z900_1576
	.type	z900_1576, @function
z900_1576:
.LFB2684:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28844
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28844:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2684:
	.size	z900_1576, .-z900_1576
	.p2align 4,,15
	.globl	z900_1577
	.type	z900_1577, @function
z900_1577:
.LFB2685:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2685:
	.size	z900_1577, .-z900_1577
	.p2align 4,,15
	.globl	z900_1578
	.type	z900_1578, @function
z900_1578:
.LFB2686:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28849
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28849:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2686:
	.size	z900_1578, .-z900_1578
	.p2align 4,,15
	.globl	z900_1579
	.type	z900_1579, @function
z900_1579:
.LFB2687:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28853
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28853:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2687:
	.size	z900_1579, .-z900_1579
	.p2align 4,,15
	.globl	z900_157A
	.type	z900_157A, @function
z900_157A:
.LFB2688:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28857
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28857:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2688:
	.size	z900_157A, .-z900_157A
	.p2align 4,,15
	.globl	z900_157B
	.type	z900_157B, @function
z900_157B:
.LFB2689:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28861
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28861:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2689:
	.size	z900_157B, .-z900_157B
	.p2align 4,,15
	.globl	z900_157C
	.type	z900_157C, @function
z900_157C:
.LFB2690:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28865
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28865:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2690:
	.size	z900_157C, .-z900_157C
	.p2align 4,,15
	.globl	z900_157D
	.type	z900_157D, @function
z900_157D:
.LFB2691:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28869
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28869:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2691:
	.size	z900_157D, .-z900_157D
	.p2align 4,,15
	.globl	z900_157E
	.type	z900_157E, @function
z900_157E:
.LFB2692:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28873
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28873:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2692:
	.size	z900_157E, .-z900_157E
	.p2align 4,,15
	.globl	z900_157F
	.type	z900_157F, @function
z900_157F:
.LFB2693:
	.cfi_startproc
	movl	248(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28877
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28877:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2693:
	.size	z900_157F, .-z900_157F
	.p2align 4,,15
	.globl	z900_1580
	.type	z900_1580, @function
z900_1580:
.LFB2694:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28881
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28881:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2694:
	.size	z900_1580, .-z900_1580
	.p2align 4,,15
	.globl	z900_1581
	.type	z900_1581, @function
z900_1581:
.LFB2695:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28885
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28885:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2695:
	.size	z900_1581, .-z900_1581
	.p2align 4,,15
	.globl	z900_1582
	.type	z900_1582, @function
z900_1582:
.LFB2696:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28889
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28889:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2696:
	.size	z900_1582, .-z900_1582
	.p2align 4,,15
	.globl	z900_1583
	.type	z900_1583, @function
z900_1583:
.LFB2697:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28893
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28893:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2697:
	.size	z900_1583, .-z900_1583
	.p2align 4,,15
	.globl	z900_1584
	.type	z900_1584, @function
z900_1584:
.LFB2698:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28897
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28897:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2698:
	.size	z900_1584, .-z900_1584
	.p2align 4,,15
	.globl	z900_1585
	.type	z900_1585, @function
z900_1585:
.LFB2699:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28901
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28901:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2699:
	.size	z900_1585, .-z900_1585
	.p2align 4,,15
	.globl	z900_1586
	.type	z900_1586, @function
z900_1586:
.LFB2700:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28905
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28905:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2700:
	.size	z900_1586, .-z900_1586
	.p2align 4,,15
	.globl	z900_1587
	.type	z900_1587, @function
z900_1587:
.LFB2701:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28909
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28909:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2701:
	.size	z900_1587, .-z900_1587
	.p2align 4,,15
	.globl	z900_1588
	.type	z900_1588, @function
z900_1588:
.LFB2702:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2702:
	.size	z900_1588, .-z900_1588
	.p2align 4,,15
	.globl	z900_1589
	.type	z900_1589, @function
z900_1589:
.LFB2703:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28914
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28914:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2703:
	.size	z900_1589, .-z900_1589
	.p2align 4,,15
	.globl	z900_158A
	.type	z900_158A, @function
z900_158A:
.LFB2704:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28918
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28918:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2704:
	.size	z900_158A, .-z900_158A
	.p2align 4,,15
	.globl	z900_158B
	.type	z900_158B, @function
z900_158B:
.LFB2705:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28922
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28922:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2705:
	.size	z900_158B, .-z900_158B
	.p2align 4,,15
	.globl	z900_158C
	.type	z900_158C, @function
z900_158C:
.LFB2706:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28926
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28926:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2706:
	.size	z900_158C, .-z900_158C
	.p2align 4,,15
	.globl	z900_158D
	.type	z900_158D, @function
z900_158D:
.LFB2707:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28930
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28930:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2707:
	.size	z900_158D, .-z900_158D
	.p2align 4,,15
	.globl	z900_158E
	.type	z900_158E, @function
z900_158E:
.LFB2708:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28934
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28934:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2708:
	.size	z900_158E, .-z900_158E
	.p2align 4,,15
	.globl	z900_158F
	.type	z900_158F, @function
z900_158F:
.LFB2709:
	.cfi_startproc
	movl	256(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28938
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28938:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2709:
	.size	z900_158F, .-z900_158F
	.p2align 4,,15
	.globl	z900_1590
	.type	z900_1590, @function
z900_1590:
.LFB2710:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28942
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28942:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2710:
	.size	z900_1590, .-z900_1590
	.p2align 4,,15
	.globl	z900_1591
	.type	z900_1591, @function
z900_1591:
.LFB2711:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28946
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28946:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2711:
	.size	z900_1591, .-z900_1591
	.p2align 4,,15
	.globl	z900_1592
	.type	z900_1592, @function
z900_1592:
.LFB2712:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28950
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28950:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2712:
	.size	z900_1592, .-z900_1592
	.p2align 4,,15
	.globl	z900_1593
	.type	z900_1593, @function
z900_1593:
.LFB2713:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28954
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28954:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2713:
	.size	z900_1593, .-z900_1593
	.p2align 4,,15
	.globl	z900_1594
	.type	z900_1594, @function
z900_1594:
.LFB2714:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28958
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28958:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2714:
	.size	z900_1594, .-z900_1594
	.p2align 4,,15
	.globl	z900_1595
	.type	z900_1595, @function
z900_1595:
.LFB2715:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28962
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28962:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2715:
	.size	z900_1595, .-z900_1595
	.p2align 4,,15
	.globl	z900_1596
	.type	z900_1596, @function
z900_1596:
.LFB2716:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28966
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28966:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2716:
	.size	z900_1596, .-z900_1596
	.p2align 4,,15
	.globl	z900_1597
	.type	z900_1597, @function
z900_1597:
.LFB2717:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28970
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28970:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2717:
	.size	z900_1597, .-z900_1597
	.p2align 4,,15
	.globl	z900_1598
	.type	z900_1598, @function
z900_1598:
.LFB2718:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28974
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28974:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2718:
	.size	z900_1598, .-z900_1598
	.p2align 4,,15
	.globl	z900_1599
	.type	z900_1599, @function
z900_1599:
.LFB2719:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2719:
	.size	z900_1599, .-z900_1599
	.p2align 4,,15
	.globl	z900_159A
	.type	z900_159A, @function
z900_159A:
.LFB2720:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28979
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28979:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2720:
	.size	z900_159A, .-z900_159A
	.p2align 4,,15
	.globl	z900_159B
	.type	z900_159B, @function
z900_159B:
.LFB2721:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28983
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28983:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2721:
	.size	z900_159B, .-z900_159B
	.p2align 4,,15
	.globl	z900_159C
	.type	z900_159C, @function
z900_159C:
.LFB2722:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28987
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28987:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2722:
	.size	z900_159C, .-z900_159C
	.p2align 4,,15
	.globl	z900_159D
	.type	z900_159D, @function
z900_159D:
.LFB2723:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28991
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28991:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2723:
	.size	z900_159D, .-z900_159D
	.p2align 4,,15
	.globl	z900_159E
	.type	z900_159E, @function
z900_159E:
.LFB2724:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28995
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28995:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2724:
	.size	z900_159E, .-z900_159E
	.p2align 4,,15
	.globl	z900_159F
	.type	z900_159F, @function
z900_159F:
.LFB2725:
	.cfi_startproc
	movl	264(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L28999
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L28999:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2725:
	.size	z900_159F, .-z900_159F
	.p2align 4,,15
	.globl	z900_15A0
	.type	z900_15A0, @function
z900_15A0:
.LFB2726:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29003
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29003:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2726:
	.size	z900_15A0, .-z900_15A0
	.p2align 4,,15
	.globl	z900_15A1
	.type	z900_15A1, @function
z900_15A1:
.LFB2727:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29007
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29007:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2727:
	.size	z900_15A1, .-z900_15A1
	.p2align 4,,15
	.globl	z900_15A2
	.type	z900_15A2, @function
z900_15A2:
.LFB2728:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29011
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29011:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2728:
	.size	z900_15A2, .-z900_15A2
	.p2align 4,,15
	.globl	z900_15A3
	.type	z900_15A3, @function
z900_15A3:
.LFB2729:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29015
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29015:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2729:
	.size	z900_15A3, .-z900_15A3
	.p2align 4,,15
	.globl	z900_15A4
	.type	z900_15A4, @function
z900_15A4:
.LFB2730:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29019
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29019:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2730:
	.size	z900_15A4, .-z900_15A4
	.p2align 4,,15
	.globl	z900_15A5
	.type	z900_15A5, @function
z900_15A5:
.LFB2731:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29023
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29023:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2731:
	.size	z900_15A5, .-z900_15A5
	.p2align 4,,15
	.globl	z900_15A6
	.type	z900_15A6, @function
z900_15A6:
.LFB2732:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29027
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29027:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2732:
	.size	z900_15A6, .-z900_15A6
	.p2align 4,,15
	.globl	z900_15A7
	.type	z900_15A7, @function
z900_15A7:
.LFB2733:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29031
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29031:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2733:
	.size	z900_15A7, .-z900_15A7
	.p2align 4,,15
	.globl	z900_15A8
	.type	z900_15A8, @function
z900_15A8:
.LFB2734:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29035
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29035:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2734:
	.size	z900_15A8, .-z900_15A8
	.p2align 4,,15
	.globl	z900_15A9
	.type	z900_15A9, @function
z900_15A9:
.LFB2735:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29039
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29039:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2735:
	.size	z900_15A9, .-z900_15A9
	.p2align 4,,15
	.globl	z900_15AA
	.type	z900_15AA, @function
z900_15AA:
.LFB2736:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2736:
	.size	z900_15AA, .-z900_15AA
	.p2align 4,,15
	.globl	z900_15AB
	.type	z900_15AB, @function
z900_15AB:
.LFB2737:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29044
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29044:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2737:
	.size	z900_15AB, .-z900_15AB
	.p2align 4,,15
	.globl	z900_15AC
	.type	z900_15AC, @function
z900_15AC:
.LFB2738:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29048
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29048:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2738:
	.size	z900_15AC, .-z900_15AC
	.p2align 4,,15
	.globl	z900_15AD
	.type	z900_15AD, @function
z900_15AD:
.LFB2739:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29052
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29052:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2739:
	.size	z900_15AD, .-z900_15AD
	.p2align 4,,15
	.globl	z900_15AE
	.type	z900_15AE, @function
z900_15AE:
.LFB2740:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29056
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29056:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2740:
	.size	z900_15AE, .-z900_15AE
	.p2align 4,,15
	.globl	z900_15AF
	.type	z900_15AF, @function
z900_15AF:
.LFB2741:
	.cfi_startproc
	movl	272(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29060
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29060:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2741:
	.size	z900_15AF, .-z900_15AF
	.p2align 4,,15
	.globl	z900_15B0
	.type	z900_15B0, @function
z900_15B0:
.LFB2742:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29064
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29064:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2742:
	.size	z900_15B0, .-z900_15B0
	.p2align 4,,15
	.globl	z900_15B1
	.type	z900_15B1, @function
z900_15B1:
.LFB2743:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29068
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29068:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2743:
	.size	z900_15B1, .-z900_15B1
	.p2align 4,,15
	.globl	z900_15B2
	.type	z900_15B2, @function
z900_15B2:
.LFB2744:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29072
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29072:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2744:
	.size	z900_15B2, .-z900_15B2
	.p2align 4,,15
	.globl	z900_15B3
	.type	z900_15B3, @function
z900_15B3:
.LFB2745:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29076
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29076:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2745:
	.size	z900_15B3, .-z900_15B3
	.p2align 4,,15
	.globl	z900_15B4
	.type	z900_15B4, @function
z900_15B4:
.LFB2746:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29080
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29080:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2746:
	.size	z900_15B4, .-z900_15B4
	.p2align 4,,15
	.globl	z900_15B5
	.type	z900_15B5, @function
z900_15B5:
.LFB2747:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29084
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29084:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2747:
	.size	z900_15B5, .-z900_15B5
	.p2align 4,,15
	.globl	z900_15B6
	.type	z900_15B6, @function
z900_15B6:
.LFB2748:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29088
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29088:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2748:
	.size	z900_15B6, .-z900_15B6
	.p2align 4,,15
	.globl	z900_15B7
	.type	z900_15B7, @function
z900_15B7:
.LFB2749:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29092
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29092:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2749:
	.size	z900_15B7, .-z900_15B7
	.p2align 4,,15
	.globl	z900_15B8
	.type	z900_15B8, @function
z900_15B8:
.LFB2750:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29096
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29096:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2750:
	.size	z900_15B8, .-z900_15B8
	.p2align 4,,15
	.globl	z900_15B9
	.type	z900_15B9, @function
z900_15B9:
.LFB2751:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29100
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29100:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2751:
	.size	z900_15B9, .-z900_15B9
	.p2align 4,,15
	.globl	z900_15BA
	.type	z900_15BA, @function
z900_15BA:
.LFB2752:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29104
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29104:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2752:
	.size	z900_15BA, .-z900_15BA
	.p2align 4,,15
	.globl	z900_15BB
	.type	z900_15BB, @function
z900_15BB:
.LFB2753:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2753:
	.size	z900_15BB, .-z900_15BB
	.p2align 4,,15
	.globl	z900_15BC
	.type	z900_15BC, @function
z900_15BC:
.LFB2754:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29109
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29109:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2754:
	.size	z900_15BC, .-z900_15BC
	.p2align 4,,15
	.globl	z900_15BD
	.type	z900_15BD, @function
z900_15BD:
.LFB2755:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29113
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29113:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2755:
	.size	z900_15BD, .-z900_15BD
	.p2align 4,,15
	.globl	z900_15BE
	.type	z900_15BE, @function
z900_15BE:
.LFB2756:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29117
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29117:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2756:
	.size	z900_15BE, .-z900_15BE
	.p2align 4,,15
	.globl	z900_15BF
	.type	z900_15BF, @function
z900_15BF:
.LFB2757:
	.cfi_startproc
	movl	280(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29121
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29121:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2757:
	.size	z900_15BF, .-z900_15BF
	.p2align 4,,15
	.globl	z900_15C0
	.type	z900_15C0, @function
z900_15C0:
.LFB2758:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29125
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29125:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2758:
	.size	z900_15C0, .-z900_15C0
	.p2align 4,,15
	.globl	z900_15C1
	.type	z900_15C1, @function
z900_15C1:
.LFB2759:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29129
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29129:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2759:
	.size	z900_15C1, .-z900_15C1
	.p2align 4,,15
	.globl	z900_15C2
	.type	z900_15C2, @function
z900_15C2:
.LFB2760:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29133
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29133:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2760:
	.size	z900_15C2, .-z900_15C2
	.p2align 4,,15
	.globl	z900_15C3
	.type	z900_15C3, @function
z900_15C3:
.LFB2761:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29137
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29137:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2761:
	.size	z900_15C3, .-z900_15C3
	.p2align 4,,15
	.globl	z900_15C4
	.type	z900_15C4, @function
z900_15C4:
.LFB2762:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29141
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29141:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2762:
	.size	z900_15C4, .-z900_15C4
	.p2align 4,,15
	.globl	z900_15C5
	.type	z900_15C5, @function
z900_15C5:
.LFB2763:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29145
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29145:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2763:
	.size	z900_15C5, .-z900_15C5
	.p2align 4,,15
	.globl	z900_15C6
	.type	z900_15C6, @function
z900_15C6:
.LFB2764:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29149
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29149:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2764:
	.size	z900_15C6, .-z900_15C6
	.p2align 4,,15
	.globl	z900_15C7
	.type	z900_15C7, @function
z900_15C7:
.LFB2765:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29153
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29153:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2765:
	.size	z900_15C7, .-z900_15C7
	.p2align 4,,15
	.globl	z900_15C8
	.type	z900_15C8, @function
z900_15C8:
.LFB2766:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29157
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29157:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2766:
	.size	z900_15C8, .-z900_15C8
	.p2align 4,,15
	.globl	z900_15C9
	.type	z900_15C9, @function
z900_15C9:
.LFB2767:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29161
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29161:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2767:
	.size	z900_15C9, .-z900_15C9
	.p2align 4,,15
	.globl	z900_15CA
	.type	z900_15CA, @function
z900_15CA:
.LFB2768:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29165
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29165:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2768:
	.size	z900_15CA, .-z900_15CA
	.p2align 4,,15
	.globl	z900_15CB
	.type	z900_15CB, @function
z900_15CB:
.LFB2769:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29169
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29169:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2769:
	.size	z900_15CB, .-z900_15CB
	.p2align 4,,15
	.globl	z900_15CC
	.type	z900_15CC, @function
z900_15CC:
.LFB2770:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2770:
	.size	z900_15CC, .-z900_15CC
	.p2align 4,,15
	.globl	z900_15CD
	.type	z900_15CD, @function
z900_15CD:
.LFB2771:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29174
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29174:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2771:
	.size	z900_15CD, .-z900_15CD
	.p2align 4,,15
	.globl	z900_15CE
	.type	z900_15CE, @function
z900_15CE:
.LFB2772:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29178
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29178:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2772:
	.size	z900_15CE, .-z900_15CE
	.p2align 4,,15
	.globl	z900_15CF
	.type	z900_15CF, @function
z900_15CF:
.LFB2773:
	.cfi_startproc
	movl	288(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29182
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29182:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2773:
	.size	z900_15CF, .-z900_15CF
	.p2align 4,,15
	.globl	z900_15D0
	.type	z900_15D0, @function
z900_15D0:
.LFB2774:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29186
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29186:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2774:
	.size	z900_15D0, .-z900_15D0
	.p2align 4,,15
	.globl	z900_15D1
	.type	z900_15D1, @function
z900_15D1:
.LFB2775:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29190
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29190:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2775:
	.size	z900_15D1, .-z900_15D1
	.p2align 4,,15
	.globl	z900_15D2
	.type	z900_15D2, @function
z900_15D2:
.LFB2776:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29194
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29194:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2776:
	.size	z900_15D2, .-z900_15D2
	.p2align 4,,15
	.globl	z900_15D3
	.type	z900_15D3, @function
z900_15D3:
.LFB2777:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29198
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29198:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2777:
	.size	z900_15D3, .-z900_15D3
	.p2align 4,,15
	.globl	z900_15D4
	.type	z900_15D4, @function
z900_15D4:
.LFB2778:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29202
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29202:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2778:
	.size	z900_15D4, .-z900_15D4
	.p2align 4,,15
	.globl	z900_15D5
	.type	z900_15D5, @function
z900_15D5:
.LFB2779:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29206
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29206:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2779:
	.size	z900_15D5, .-z900_15D5
	.p2align 4,,15
	.globl	z900_15D6
	.type	z900_15D6, @function
z900_15D6:
.LFB2780:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29210
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29210:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2780:
	.size	z900_15D6, .-z900_15D6
	.p2align 4,,15
	.globl	z900_15D7
	.type	z900_15D7, @function
z900_15D7:
.LFB2781:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29214
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29214:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2781:
	.size	z900_15D7, .-z900_15D7
	.p2align 4,,15
	.globl	z900_15D8
	.type	z900_15D8, @function
z900_15D8:
.LFB2782:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29218
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29218:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2782:
	.size	z900_15D8, .-z900_15D8
	.p2align 4,,15
	.globl	z900_15D9
	.type	z900_15D9, @function
z900_15D9:
.LFB2783:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29222
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29222:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2783:
	.size	z900_15D9, .-z900_15D9
	.p2align 4,,15
	.globl	z900_15DA
	.type	z900_15DA, @function
z900_15DA:
.LFB2784:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29226
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29226:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2784:
	.size	z900_15DA, .-z900_15DA
	.p2align 4,,15
	.globl	z900_15DB
	.type	z900_15DB, @function
z900_15DB:
.LFB2785:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29230
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29230:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2785:
	.size	z900_15DB, .-z900_15DB
	.p2align 4,,15
	.globl	z900_15DC
	.type	z900_15DC, @function
z900_15DC:
.LFB2786:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29234
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29234:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2786:
	.size	z900_15DC, .-z900_15DC
	.p2align 4,,15
	.globl	z900_15DD
	.type	z900_15DD, @function
z900_15DD:
.LFB2787:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2787:
	.size	z900_15DD, .-z900_15DD
	.p2align 4,,15
	.globl	z900_15DE
	.type	z900_15DE, @function
z900_15DE:
.LFB2788:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29239
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29239:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2788:
	.size	z900_15DE, .-z900_15DE
	.p2align 4,,15
	.globl	z900_15DF
	.type	z900_15DF, @function
z900_15DF:
.LFB2789:
	.cfi_startproc
	movl	296(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29243
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29243:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2789:
	.size	z900_15DF, .-z900_15DF
	.p2align 4,,15
	.globl	z900_15E0
	.type	z900_15E0, @function
z900_15E0:
.LFB2790:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29247
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29247:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2790:
	.size	z900_15E0, .-z900_15E0
	.p2align 4,,15
	.globl	z900_15E1
	.type	z900_15E1, @function
z900_15E1:
.LFB2791:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29251
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29251:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2791:
	.size	z900_15E1, .-z900_15E1
	.p2align 4,,15
	.globl	z900_15E2
	.type	z900_15E2, @function
z900_15E2:
.LFB2792:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29255
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29255:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2792:
	.size	z900_15E2, .-z900_15E2
	.p2align 4,,15
	.globl	z900_15E3
	.type	z900_15E3, @function
z900_15E3:
.LFB2793:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29259
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29259:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2793:
	.size	z900_15E3, .-z900_15E3
	.p2align 4,,15
	.globl	z900_15E4
	.type	z900_15E4, @function
z900_15E4:
.LFB2794:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29263
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29263:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2794:
	.size	z900_15E4, .-z900_15E4
	.p2align 4,,15
	.globl	z900_15E5
	.type	z900_15E5, @function
z900_15E5:
.LFB2795:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29267
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29267:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2795:
	.size	z900_15E5, .-z900_15E5
	.p2align 4,,15
	.globl	z900_15E6
	.type	z900_15E6, @function
z900_15E6:
.LFB2796:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29271
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29271:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2796:
	.size	z900_15E6, .-z900_15E6
	.p2align 4,,15
	.globl	z900_15E7
	.type	z900_15E7, @function
z900_15E7:
.LFB2797:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29275
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29275:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2797:
	.size	z900_15E7, .-z900_15E7
	.p2align 4,,15
	.globl	z900_15E8
	.type	z900_15E8, @function
z900_15E8:
.LFB2798:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29279
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29279:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2798:
	.size	z900_15E8, .-z900_15E8
	.p2align 4,,15
	.globl	z900_15E9
	.type	z900_15E9, @function
z900_15E9:
.LFB2799:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29283
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29283:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2799:
	.size	z900_15E9, .-z900_15E9
	.p2align 4,,15
	.globl	z900_15EA
	.type	z900_15EA, @function
z900_15EA:
.LFB2800:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29287
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29287:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2800:
	.size	z900_15EA, .-z900_15EA
	.p2align 4,,15
	.globl	z900_15EB
	.type	z900_15EB, @function
z900_15EB:
.LFB2801:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29291
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29291:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2801:
	.size	z900_15EB, .-z900_15EB
	.p2align 4,,15
	.globl	z900_15EC
	.type	z900_15EC, @function
z900_15EC:
.LFB2802:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29295
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29295:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2802:
	.size	z900_15EC, .-z900_15EC
	.p2align 4,,15
	.globl	z900_15ED
	.type	z900_15ED, @function
z900_15ED:
.LFB2803:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29299
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29299:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2803:
	.size	z900_15ED, .-z900_15ED
	.p2align 4,,15
	.globl	z900_15EE
	.type	z900_15EE, @function
z900_15EE:
.LFB2804:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2804:
	.size	z900_15EE, .-z900_15EE
	.p2align 4,,15
	.globl	z900_15EF
	.type	z900_15EF, @function
z900_15EF:
.LFB2805:
	.cfi_startproc
	movl	304(%rsi), %edx
	movl	$1, %eax
	movl	312(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29304
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29304:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2805:
	.size	z900_15EF, .-z900_15EF
	.p2align 4,,15
	.globl	z900_15F0
	.type	z900_15F0, @function
z900_15F0:
.LFB2806:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	192(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29308
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29308:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2806:
	.size	z900_15F0, .-z900_15F0
	.p2align 4,,15
	.globl	z900_15F1
	.type	z900_15F1, @function
z900_15F1:
.LFB2807:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	200(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29312
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29312:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2807:
	.size	z900_15F1, .-z900_15F1
	.p2align 4,,15
	.globl	z900_15F2
	.type	z900_15F2, @function
z900_15F2:
.LFB2808:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	208(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29316
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29316:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2808:
	.size	z900_15F2, .-z900_15F2
	.p2align 4,,15
	.globl	z900_15F3
	.type	z900_15F3, @function
z900_15F3:
.LFB2809:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	216(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29320
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29320:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2809:
	.size	z900_15F3, .-z900_15F3
	.p2align 4,,15
	.globl	z900_15F4
	.type	z900_15F4, @function
z900_15F4:
.LFB2810:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	224(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29324
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29324:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2810:
	.size	z900_15F4, .-z900_15F4
	.p2align 4,,15
	.globl	z900_15F5
	.type	z900_15F5, @function
z900_15F5:
.LFB2811:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	232(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29328
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29328:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2811:
	.size	z900_15F5, .-z900_15F5
	.p2align 4,,15
	.globl	z900_15F6
	.type	z900_15F6, @function
z900_15F6:
.LFB2812:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	240(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29332
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29332:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2812:
	.size	z900_15F6, .-z900_15F6
	.p2align 4,,15
	.globl	z900_15F7
	.type	z900_15F7, @function
z900_15F7:
.LFB2813:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	248(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29336
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29336:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2813:
	.size	z900_15F7, .-z900_15F7
	.p2align 4,,15
	.globl	z900_15F8
	.type	z900_15F8, @function
z900_15F8:
.LFB2814:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	256(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29340
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29340:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2814:
	.size	z900_15F8, .-z900_15F8
	.p2align 4,,15
	.globl	z900_15F9
	.type	z900_15F9, @function
z900_15F9:
.LFB2815:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	264(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29344
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29344:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2815:
	.size	z900_15F9, .-z900_15F9
	.p2align 4,,15
	.globl	z900_15FA
	.type	z900_15FA, @function
z900_15FA:
.LFB2816:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	272(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29348
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29348:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2816:
	.size	z900_15FA, .-z900_15FA
	.p2align 4,,15
	.globl	z900_15FB
	.type	z900_15FB, @function
z900_15FB:
.LFB2817:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	280(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29352
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29352:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2817:
	.size	z900_15FB, .-z900_15FB
	.p2align 4,,15
	.globl	z900_15FC
	.type	z900_15FC, @function
z900_15FC:
.LFB2818:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	288(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29356
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29356:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2818:
	.size	z900_15FC, .-z900_15FC
	.p2align 4,,15
	.globl	z900_15FD
	.type	z900_15FD, @function
z900_15FD:
.LFB2819:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	296(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29360
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29360:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2819:
	.size	z900_15FD, .-z900_15FD
	.p2align 4,,15
	.globl	z900_15FE
	.type	z900_15FE, @function
z900_15FE:
.LFB2820:
	.cfi_startproc
	movl	312(%rsi), %edx
	movl	$1, %eax
	movl	304(%rsi), %ecx
	addq	$2, 136(%rsi)
	cmpl	%ecx, %edx
	jb	.L29364
	cmpl	%edx, %ecx
	sbbl	%eax, %eax
	andl	$2, %eax
.L29364:
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE2820:
	.size	z900_15FE, .-z900_15FE
	.p2align 4,,15
	.globl	z900_15FF
	.type	z900_15FF, @function
z900_15FF:
.LFB2821:
	.cfi_startproc
	addq	$2, 136(%rsi)
	movb	$0, 100(%rsi)
	ret
	.cfi_endproc
.LFE2821:
	.size	z900_15FF, .-z900_15FF
	.p2align 4,,15
	.globl	z900_compare_logical_immediate
	.type	z900_compare_logical_immediate, @function
z900_compare_logical_immediate:
.LFB2822:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %ebp
	shrl	$12, %edx
	shrl	$16, %ebp
	andl	$4095, %eax
	movl	%edx, %esi
	andl	$15, %esi
	je	.L29369
	movslq	%esi, %rdx
	addq	192(%rbx,%rdx,8), %rax
	andq	120(%rbx), %rax
.L29369:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %ecx
	testl	%ecx, %ecx
	je	.L29370
	leal	1(%rcx), %edx
	movl	%eax, %edi
	shrl	$12, %edi
	movslq	%edx, %rdx
	andl	$1023, %edi
	leaq	(%rbx,%rdi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L29393
.L29371:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L29394
.L29372:
	movl	2224(%rbx), %r8d
	movq	%rax, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L29370
	testb	$4, 46264(%rbx,%rdi)
	je	.L29370
	xorq	26808(%rcx), %rax
.L29373:
	cmpb	(%rax), %bpl
	movl	$1, %edx
	ja	.L29374
	sbbl	%edx, %edx
	andl	$2, %edx
.L29374:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L29393:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L29371
.L29370:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rax, %rdi
	call	z900_logical_to_main_l
	jmp	.L29373
.L29394:
	cmpb	43192(%rbx,%rdi), %dl
	je	.L29372
	.p2align 4,,4
	jmp	.L29370
	.cfi_endproc
.LFE2822:
	.size	z900_compare_logical_immediate, .-z900_compare_logical_immediate
	.p2align 4,,15
	.globl	z900_compare_logical_character
	.type	z900_compare_logical_character, @function
z900_compare_logical_character:
.LFB2823:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %r13d
	shrl	$16, %ebp
	shrl	$28, %r13d
	andl	$4095, %ebp
	testl	%r13d, %r13d
	je	.L29396
	movslq	%r13d, %rdx
	addq	192(%rsi,%rdx,8), %rbp
	andq	120(%rsi), %rbp
.L29396:
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, 8(%rsp)
	je	.L29397
	cltq
	addq	192(%rbx,%rax,8), %r12
	andq	120(%rbx), %r12
.L29397:
	movzbl	1(%rdi), %eax
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	movl	%eax, 4(%rsp)
	leal	5(%r13), %eax
	cltq
	leaq	(%rbx,%rax,4), %r14
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L29398
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L29591
.L29399:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L29592
.L29400:
	movl	2224(%rbx), %edi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L29398
	testb	$4, 46264(%rbx,%rcx)
	je	.L29398
	movq	%rbp, %r10
	movzbl	%sil, %r8d
	xorq	26808(%rdx), %r10
.L29401:
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %r15
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L29402
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L29593
.L29403:
	testb	%r8b, %r8b
	jne	.L29594
.L29404:
	movl	2224(%rbx), %edi
	movq	%r12, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L29402
	testb	$4, 46264(%rbx,%rcx)
	je	.L29402
	movq	%r12, %r11
	xorq	26808(%rdx), %r11
.L29405:
	movl	$2047, %eax
	movq	%rbp, %rdx
	subl	4(%rsp), %eax
	andl	$2047, %edx
	cmpq	%rax, %rdx
	ja	.L29406
	movq	%r12, %rdx
	andl	$2047, %edx
	cmpq	%rdx, %rax
	jb	.L29407
	movl	4(%rsp), %edx
	movq	%r11, %rsi
	movq	%r10, %rdi
	addl	$1, %edx
	call	memcmp
.L29408:
	xorl	%edx, %edx
	testl	%eax, %eax
	jne	.L29446
.L29445:
	movb	%dl, 100(%rbx)
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L29406:
	.cfi_restore_state
	movl	$2048, %ecx
	movl	%ebp, 24(%rsp)
	movl	%ecx, %edi
	subl	%edx, %edi
	movq	%r12, %rdx
	andl	$2047, %edx
	movl	%edi, 16(%rsp)
	cmpq	%rdx, %rax
	jb	.L29414
	movl	%edi, %r12d
	movq	%r11, %rsi
	movq	%r10, %rdi
	movq	%r12, %rdx
	movq	%r11, 8(%rsp)
	call	memcmp
	movq	8(%rsp), %r11
	testl	%eax, %eax
	jne	.L29446
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L29580
	leal	1(%rax), %ecx
	movl	24(%rsp), %eax
	movq	120(%rbx), %rdi
	movslq	%ecx, %rcx
	addl	16(%rsp), %eax
	andl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rcx,8)
	jne	.L29595
.L29416:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L29596
.L29417:
	addq	%r12, %rbp
	movl	2224(%rbx), %esi
	andq	%rbp, %rdi
	movq	%rdi, %rcx
	andq	$-4194304, %rcx
	orq	%rsi, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L29415
	testb	$4, 46264(%rbx,%rax)
	je	.L29415
	xorq	26808(%rdx), %rdi
.L29418:
	movl	4(%rsp), %edx
	leaq	(%r11,%r12), %rsi
	addl	$1, %edx
	subl	16(%rsp), %edx
	call	memcmp
	xorl	%edx, %edx
	testl	%eax, %eax
	je	.L29445
	.p2align 4,,10
	.p2align 3
.L29446:
	sarl	$31, %eax
	leal	2(%rax), %edx
	jmp	.L29445
	.p2align 4,,10
	.p2align 3
.L29414:
	subl	%edx, %ecx
	movl	%r12d, 40(%rsp)
	cmpl	%ecx, 16(%rsp)
	movl	%ecx, 32(%rsp)
	je	.L29597
	jae	.L29428
	movl	16(%rsp), %eax
	movq	%r11, %rsi
	movq	%r10, %rdi
	movq	%r11, 56(%rsp)
	movq	%rax, %rdx
	movq	%rax, 48(%rsp)
	call	memcmp
	movq	56(%rsp), %r11
	testl	%eax, %eax
	jne	.L29446
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L29586
	leal	1(%rax), %esi
	movl	24(%rsp), %eax
	movq	120(%rbx), %rdx
	movslq	%esi, %rsi
	addl	16(%rsp), %eax
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L29598
.L29430:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L29599
.L29431:
	movq	48(%rsp), %rdi
	leaq	(%rdi,%rbp), %rsi
	movl	2224(%rbx), %edi
	andq	%rsi, %rdx
	movq	%rdx, %rbp
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L29429
	testb	$4, 46264(%rbx,%rax)
	je	.L29429
	xorq	26808(%rcx), %rbp
.L29432:
	movl	32(%rsp), %edx
	movq	%rbp, %rdi
	movq	48(%rsp), %rax
	subl	16(%rsp), %edx
	leaq	(%r11,%rax), %rsi
	call	memcmp
	testl	%eax, %eax
	jne	.L29446
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L29587
	leal	1(%rax), %esi
	movl	40(%rsp), %eax
	movq	120(%rbx), %rdx
	movslq	%esi, %rsi
	addl	32(%rsp), %eax
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L29600
.L29434:
	movzbl	97(%rbx), %esi
	movl	32(%rsp), %r13d
	testb	%sil, %sil
	jne	.L29601
.L29435:
	leaq	0(%r13,%r12), %rsi
	movl	2224(%rbx), %edi
	andq	%rdx, %rsi
	movq	%rsi, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L29433
	testb	$4, 46264(%rbx,%rax)
	je	.L29433
	xorq	26808(%rcx), %rsi
.L29436:
	movl	4(%rsp), %edx
	subq	48(%rsp), %r13
	addl	$1, %edx
	subl	32(%rsp), %edx
	leaq	0(%rbp,%r13), %rdi
	call	memcmp
	jmp	.L29408
	.p2align 4,,10
	.p2align 3
.L29407:
	movl	$2048, %r13d
	movq	%r10, %rdi
	movq	%r11, %rsi
	subl	%edx, %r13d
	movq	%r10, 16(%rsp)
	movl	%r12d, %ebp
	movl	%r13d, %r14d
	movq	%r14, %rdx
	call	memcmp
	movq	16(%rsp), %r10
	testl	%eax, %eax
	jne	.L29446
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L29578
	movq	120(%rbx), %rsi
	leal	1(%rax), %edx
	addl	%r13d, %ebp
	movslq	%edx, %rdx
	andl	%esi, %ebp
	shrl	$12, %ebp
	andl	$1023, %ebp
	leaq	(%rbx,%rbp,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L29602
.L29411:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L29603
.L29412:
	addq	%r14, %r12
	movl	2224(%rbx), %ecx
	andq	%r12, %rsi
	movq	%rsi, %rdx
	andq	$-4194304, %rdx
	orq	%rcx, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L29410
	testb	$4, 46264(%rbx,%rbp)
	je	.L29410
	xorq	26808(%rax), %rsi
.L29413:
	movl	4(%rsp), %edx
	leaq	(%r10,%r14), %rdi
	addl	$1, %edx
	subl	%r13d, %edx
	call	memcmp
	jmp	.L29408
	.p2align 4,,10
	.p2align 3
.L29597:
	movl	16(%rsp), %eax
	movq	%r11, %rsi
	movq	%r10, %rdi
	movq	%rax, %rdx
	movq	%rax, 32(%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L29446
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L29582
	movl	24(%rsp), %esi
	leal	1(%rax), %ecx
	movq	120(%rbx), %rax
	movslq	%ecx, %rcx
	addl	16(%rsp), %esi
	andl	%eax, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rcx,8)
	jne	.L29604
.L29421:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L29605
.L29422:
	addq	32(%rsp), %rbp
	movl	2224(%rbx), %r8d
	movq	%rbp, %r9
	andq	%rax, %r9
	movq	%r9, %rcx
	andq	$-4194304, %rcx
	orq	%r8, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L29420
	testb	$4, 46264(%rbx,%rsi)
	je	.L29420
	xorq	26808(%rdx), %r9
	movq	%r9, %rbp
.L29423:
	movl	1892(%r15), %edx
	testl	%edx, %edx
	je	.L29584
	leal	1(%rdx), %esi
	movl	40(%rsp), %edx
	movslq	%esi, %rsi
	addl	16(%rsp), %edx
	andl	%eax, %edx
	shrl	$12, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movq	2232(%rcx), %r9
	cmpq	%r9, 320(%rbx,%rsi,8)
	jne	.L29606
.L29425:
	testb	%dil, %dil
	jne	.L29607
.L29426:
	addq	32(%rsp), %r12
	movq	%rax, %rsi
	movl	2224(%rbx), %r8d
	andq	%r12, %rsi
	movq	%rsi, %r9
	andq	$-4194304, %r9
	orq	%r8, %r9
	cmpq	10424(%rcx), %r9
	jne	.L29424
	testb	$4, 46264(%rbx,%rdx)
	je	.L29424
	xorq	26808(%rcx), %rsi
.L29427:
	movl	4(%rsp), %edx
	movq	%rbp, %rdi
	addl	$1, %edx
	subl	16(%rsp), %edx
	call	memcmp
	jmp	.L29408
	.p2align 4,,10
	.p2align 3
.L29428:
	movl	32(%rsp), %eax
	movq	%r10, %rdi
	movq	%r11, %rsi
	movq	%r10, 56(%rsp)
	movq	%rax, %rdx
	movq	%rax, 48(%rsp)
	call	memcmp
	movq	56(%rsp), %r10
	testl	%eax, %eax
	jne	.L29446
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L29589
	leal	1(%rax), %esi
	movl	40(%rsp), %eax
	movq	120(%rbx), %rdx
	movslq	%esi, %rsi
	addl	32(%rsp), %eax
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L29608
.L29438:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L29609
.L29439:
	movq	48(%rsp), %rdi
	leaq	(%rdi,%r12), %rsi
	movl	2224(%rbx), %edi
	andq	%rsi, %rdx
	movq	%rdx, %r12
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L29437
	testb	$4, 46264(%rbx,%rax)
	je	.L29437
	xorq	26808(%rcx), %r12
.L29440:
	movl	16(%rsp), %edx
	movq	%r12, %rsi
	movq	48(%rsp), %rax
	subl	32(%rsp), %edx
	leaq	(%r10,%rax), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L29446
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L29590
	leal	1(%rax), %esi
	movl	24(%rsp), %eax
	movq	120(%rbx), %rdx
	movslq	%esi, %rsi
	addl	16(%rsp), %eax
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L29610
.L29442:
	movzbl	97(%rbx), %esi
	movl	16(%rsp), %r14d
	testb	%sil, %sil
	jne	.L29611
.L29443:
	leaq	(%r14,%rbp), %rdi
	movl	2224(%rbx), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L29441
	testb	$4, 46264(%rbx,%rax)
	je	.L29441
	xorq	26808(%rcx), %rdi
.L29444:
	movl	4(%rsp), %edx
	subq	48(%rsp), %r14
	addl	$1, %edx
	subl	16(%rsp), %edx
	leaq	(%r12,%r14), %rsi
	call	memcmp
	jmp	.L29408
.L29593:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L29403
.L29402:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r12, %rdi
	movq	%r10, 16(%rsp)
	call	z900_logical_to_main_l
	movq	16(%rsp), %r10
	movq	%rax, %r11
	jmp	.L29405
.L29591:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L29399
.L29398:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r10
	jmp	.L29401
.L29592:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L29400
	jmp	.L29398
.L29594:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L29404
	.p2align 4,,3
	jmp	.L29402
.L29603:
	cmpb	43192(%rbx,%rbp), %dl
	je	.L29412
.L29578:
	addq	%r14, %r12
.L29410:
	movq	%r12, %rdi
	movl	8(%rsp), %esi
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movzbl	97(%rbx), %r8d
	movq	%r10, 16(%rsp)
	call	z900_logical_to_main_l
	movq	16(%rsp), %r10
	movq	%rax, %rsi
	jmp	.L29413
.L29596:
	cmpb	43192(%rbx,%rax), %cl
	je	.L29417
.L29580:
	addq	%r12, %rbp
.L29415:
	movq	%rbp, %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movq	%r11, 8(%rsp)
	call	z900_logical_to_main_l
	movq	8(%rsp), %r11
	movq	%rax, %rdi
	jmp	.L29418
.L29610:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L29442
.L29590:
	movl	16(%rsp), %r14d
.L29441:
	leaq	(%r14,%rbp), %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	call	z900_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L29444
.L29609:
	cmpb	43192(%rbx,%rax), %sil
	je	.L29439
.L29589:
	movq	48(%rsp), %rax
	leaq	(%rax,%r12), %rsi
.L29437:
	andq	120(%rbx), %rsi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movq	%r10, 40(%rsp)
	movq	%rsi, %rdi
	movl	8(%rsp), %esi
	call	z900_logical_to_main_l
	movq	40(%rsp), %r10
	movq	%rax, %r12
	jmp	.L29440
.L29600:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L29434
.L29587:
	movl	32(%rsp), %r13d
.L29433:
	leaq	0(%r13,%r12), %rdi
	movl	8(%rsp), %esi
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movzbl	97(%rbx), %r8d
	call	z900_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L29436
.L29599:
	cmpb	43192(%rbx,%rax), %sil
	je	.L29431
.L29586:
	movq	48(%rsp), %rax
	leaq	(%rax,%rbp), %rsi
.L29429:
	andq	120(%rbx), %rsi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movq	%r11, 24(%rsp)
	movq	%rsi, %rdi
	movl	%r13d, %esi
	call	z900_logical_to_main_l
	movq	24(%rsp), %r11
	movq	%rax, %rbp
	jmp	.L29432
.L29607:
	cmpb	%dil, 43192(%rbx,%rdx)
	je	.L29426
.L29584:
	movq	32(%rsp), %rsi
	addq	%rsi, %r12
.L29424:
	movl	8(%rsp), %esi
	andq	%r12, %rax
	movzbl	%dil, %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rax, %rdi
	call	z900_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L29427
.L29606:
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rsi)
	jne	.L29425
	jmp	.L29584
.L29605:
	cmpb	43192(%rbx,%rsi), %dil
	je	.L29422
.L29582:
	movq	32(%rsp), %rax
	addq	%rax, %rbp
.L29420:
	movq	%rbp, %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %edi
	movq	%rax, %rbp
	movq	120(%rbx), %rax
	jmp	.L29423
.L29604:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L29421
	jmp	.L29582
.L29601:
	cmpb	43192(%rbx,%rax), %sil
	je	.L29435
	.p2align 4,,3
	jmp	.L29433
.L29598:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L29430
	jmp	.L29586
.L29611:
	cmpb	43192(%rbx,%rax), %sil
	je	.L29443
	.p2align 4,,3
	jmp	.L29441
.L29608:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L29438
	jmp	.L29589
.L29595:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L29416
	jmp	.L29580
.L29602:
	movzbl	44216(%rbx,%rbp), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L29411
	jmp	.L29578
	.cfi_endproc
.LFE2823:
	.size	z900_compare_logical_character, .-z900_compare_logical_character
	.p2align 4,,15
	.globl	z900_D500
	.type	z900_D500, @function
z900_D500:
.LFB2824:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %eax
	shrl	$12, %edx
	movl	%edx, %esi
	andl	$4095, %eax
	andl	$15, %esi
	je	.L29613
	movslq	%esi, %rdx
	addq	192(%rbx,%rdx,8), %rax
	andq	120(%rbx), %rax
.L29613:
	movzbl	4(%rdi), %r12d
	movzbl	5(%rdi), %ecx
	movl	%r12d, %edx
	shrb	$4, %r12b
	andl	$15, %edx
	movzbl	%r12b, %r12d
	sall	$8, %edx
	orl	%ecx, %edx
	testl	%r12d, %r12d
	movslq	%edx, %rbp
	je	.L29614
	movslq	%r12d, %rdx
	addq	192(%rbx,%rdx,8), %rbp
	andq	120(%rbx), %rbp
.L29614:
	addq	$6, 136(%rbx)
	movb	$6, 130(%rbx)
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L29615
	movl	%eax, %r8d
	addl	$1, %edx
	shrl	$12, %r8d
	movslq	%edx, %rdx
	andl	$1023, %r8d
	leaq	(%rbx,%r8,8), %rdi
	movq	2232(%rdi), %rcx
	cmpq	%rcx, 320(%rbx,%rdx,8)
	jne	.L29658
.L29616:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L29659
.L29617:
	movl	2224(%rbx), %r9d
	movq	%rax, %rcx
	andq	$-4194304, %rcx
	orq	%r9, %rcx
	cmpq	10424(%rdi), %rcx
	jne	.L29615
	testb	$4, 46264(%rbx,%r8)
	je	.L29615
	xorq	26808(%rdi), %rax
	movzbl	%dl, %r8d
	movq	%rax, %r13
.L29618:
	leal	5(%r12), %eax
	cltq
	movl	1892(%rbx,%rax,4), %edx
	testl	%edx, %edx
	je	.L29619
	movl	%ebp, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %rax
	cmpq	%rax, 320(%rbx,%rdx,8)
	jne	.L29660
.L29620:
	testb	%r8b, %r8b
	jne	.L29661
.L29621:
	movl	2224(%rbx), %eax
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%rax, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L29619
	testb	$4, 46264(%rbx,%rsi)
	je	.L29619
	movq	%rbp, %rax
	xorq	26808(%rcx), %rax
.L29622:
	movzbl	0(%r13), %ecx
	xorl	%edx, %edx
	movzbl	(%rax), %eax
	subl	%eax, %ecx
	je	.L29623
	sarl	$31, %ecx
	leal	2(%rcx), %edx
.L29623:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L29658:
	.cfi_restore_state
	movzbl	44216(%rbx,%r8), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L29616
.L29615:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rax, %rdi
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r13
	jmp	.L29618
.L29660:
	movzbl	44216(%rbx,%rsi), %eax
	testb	%al, 1976(%rbx,%rdx)
	jne	.L29620
.L29619:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
	jmp	.L29622
.L29659:
	cmpb	43192(%rbx,%r8), %dl
	je	.L29617
	.p2align 4,,3
	jmp	.L29615
.L29661:
	cmpb	%r8b, 43192(%rbx,%rsi)
	je	.L29621
	.p2align 4,,3
	jmp	.L29619
	.cfi_endproc
.LFE2824:
	.size	z900_D500, .-z900_D500
	.p2align 4,,15
	.globl	z900_D501
	.type	z900_D501, @function
z900_D501:
.LFB2825:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, %r14d
	je	.L29663
	cltq
	addq	192(%rsi,%rax,8), %r12
	andq	120(%rsi), %r12
.L29663:
	movzbl	4(%rdi), %r11d
	movzbl	5(%rdi), %eax
	movl	%r11d, %ebp
	shrb	$4, %r11b
	andl	$15, %ebp
	movzbl	%r11b, %r15d
	sall	$8, %ebp
	orl	%eax, %ebp
	testl	%r15d, %r15d
	movslq	%ebp, %rbp
	je	.L29664
	movslq	%r15d, %rax
	addq	192(%rbx,%rax,8), %rbp
	andq	120(%rbx), %rbp
.L29664:
	addq	$6, 136(%rbx)
	movb	$6, 130(%rbx)
	leal	5(%r14), %eax
	cltq
	leaq	(%rbx,%rax,4), %r13
	movl	1892(%r13), %eax
	testl	%eax, %eax
	je	.L29665
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L29849
.L29666:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L29850
.L29667:
	movl	2224(%rbx), %edi
	movq	%r12, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L29665
	testb	$4, 46264(%rbx,%rcx)
	je	.L29665
	movq	%r12, %r11
	movzbl	%sil, %r8d
	xorq	26808(%rdx), %r11
.L29668:
	leal	5(%r15), %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, (%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L29669
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L29851
.L29670:
	testb	%r8b, %r8b
	jne	.L29852
.L29671:
	movl	2224(%rbx), %edi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L29669
	testb	$4, 46264(%rbx,%rcx)
	je	.L29669
	movq	%rbp, %r10
	xorq	26808(%rdx), %r10
.L29672:
	movq	%r12, %rax
	andl	$2047, %eax
	cmpq	$2047, %rax
	je	.L29673
	movq	%rbp, %rax
	andl	$2047, %eax
	cmpq	$2047, %rax
	je	.L29674
	movzwl	(%r11), %edx
	movzwl	(%r10), %eax
#APP
# 2762 "general1.c" 1
	rorw $8, %dx
# 0 "" 2
# 2763 "general1.c" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
	cmpw	%ax, %dx
	je	.L29718
	sbbl	%eax, %eax
	addl	$2, %eax
.L29714:
	movb	%al, 100(%rbx)
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L29673:
	.cfi_restore_state
	movq	%rbp, %rax
	movl	%r12d, 8(%rsp)
	andl	$2047, %eax
	cmpq	$2047, %rax
	je	.L29683
	movq	%r10, %rsi
	movl	$1, %edx
	movq	%r11, %rdi
	movq	%r10, (%rsp)
	movl	$1, %ebp
	call	memcmp
	movq	(%rsp), %r10
	testl	%eax, %eax
	jne	.L29715
	movl	1892(%r13), %eax
	testl	%eax, %eax
	je	.L29844
	movl	8(%rsp), %r15d
	leal	1(%rax), %edx
	movq	120(%rbx), %rdi
	movslq	%edx, %rdx
	addl	$1, %r15d
	andl	%edi, %r15d
	shrl	$12, %r15d
	andl	$1023, %r15d
	leaq	(%rbx,%r15,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L29853
.L29685:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L29854
.L29686:
	addq	%rbp, %r12
	movl	2224(%rbx), %ecx
	andq	%r12, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rcx, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L29684
	testb	$4, 46264(%rbx,%r15)
	je	.L29684
	xorq	26808(%rax), %rdi
.L29687:
	movl	$2047, %eax
	leal	-2046(%rax), %edx
	leaq	(%r10,%rbp), %rsi
	call	memcmp
	testl	%eax, %eax
	jne	.L29715
.L29718:
	xorl	%eax, %eax
	jmp	.L29714
	.p2align 4,,10
	.p2align 3
.L29683:
	movl	$1, %eax
	movq	%r10, %rsi
	movq	%r11, %rdi
	movq	%rax, %rdx
	movl	%ebp, 28(%rsp)
	movq	%rax, 16(%rsp)
	call	memcmp
	testl	%eax, %eax
	jne	.L29715
	movl	1892(%r13), %eax
	testl	%eax, %eax
	je	.L29846
	movl	8(%rsp), %edx
	leal	1(%rax), %ecx
	movq	120(%rbx), %rax
	movslq	%ecx, %rcx
	addl	$1, %edx
	andl	%eax, %edx
	shrl	$12, %edx
	movl	%edx, %r9d
	andl	$1023, %r9d
	leaq	(%rbx,%r9,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rcx,8)
	jne	.L29855
.L29690:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L29856
.L29691:
	addq	16(%rsp), %r12
	movl	2224(%rbx), %edi
	movq	%r12, %r8
	andq	%rax, %r8
	movq	%r8, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L29689
	testb	$4, 46264(%rbx,%r9)
	je	.L29689
	xorq	26808(%rdx), %r8
	movq	%r8, %r12
.L29692:
	movq	(%rsp), %rdi
	movl	1892(%rdi), %edx
	testl	%edx, %edx
	je	.L29848
	leal	1(%rdx), %edi
	movl	28(%rsp), %edx
	movslq	%edi, %rdi
	addl	$1, %edx
	andl	%eax, %edx
	shrl	$12, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movq	2232(%rcx), %r9
	cmpq	%r9, 320(%rbx,%rdi,8)
	jne	.L29857
.L29694:
	testb	%sil, %sil
	jne	.L29858
.L29695:
	addq	16(%rsp), %rbp
	movq	%rax, %r8
	movl	2224(%rbx), %r9d
	andq	%rbp, %r8
	movq	%r8, %rdi
	andq	$-4194304, %rdi
	orq	%r9, %rdi
	cmpq	10424(%rcx), %rdi
	jne	.L29693
	testb	$4, 46264(%rbx,%rdx)
	je	.L29693
	movq	%r8, %rsi
	xorq	26808(%rcx), %rsi
.L29696:
	movl	$2047, %eax
	movq	%r12, %rdi
	leal	-2046(%rax), %edx
	call	memcmp
	jmp	.L29682
	.p2align 4,,10
	.p2align 3
.L29674:
	movq	%r11, %rdi
	movl	$1, %edx
	movq	%r10, %rsi
	movq	%r11, 8(%rsp)
	movl	%ebp, %r13d
	movl	$1, %r12d
	call	memcmp
	movq	8(%rsp), %r11
	testl	%eax, %eax
	jne	.L29715
	movq	(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L29843
	movq	120(%rbx), %rsi
	leal	1(%rax), %edx
	addl	$1, %r13d
	movslq	%edx, %rdx
	andl	%esi, %r13d
	shrl	$12, %r13d
	andl	$1023, %r13d
	leaq	(%rbx,%r13,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L29859
.L29679:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L29860
.L29680:
	addq	%r12, %rbp
	movl	2224(%rbx), %ecx
	andq	%rbp, %rsi
	movq	%rsi, %rdx
	andq	$-4194304, %rdx
	orq	%rcx, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L29678
	testb	$4, 46264(%rbx,%r13)
	je	.L29678
	xorq	26808(%rax), %rsi
.L29681:
	movl	$2047, %edx
	leaq	(%r11,%r12), %rdi
	subl	$2046, %edx
	call	memcmp
.L29682:
	testl	%eax, %eax
	je	.L29718
	.p2align 4,,10
	.p2align 3
.L29715:
	sarl	$31, %eax
	addl	$2, %eax
	jmp	.L29714
.L29851:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L29670
.L29669:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movq	%rbp, %rdi
	movq	%r11, 8(%rsp)
	call	z900_logical_to_main_l
	movq	8(%rsp), %r11
	movq	%rax, %r10
	jmp	.L29672
.L29849:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L29666
.L29665:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movq	%r12, %rdi
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r11
	jmp	.L29668
.L29852:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L29671
	jmp	.L29669
.L29850:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L29667
	.p2align 4,,3
	jmp	.L29665
.L29854:
	cmpb	43192(%rbx,%r15), %dl
	je	.L29686
	addq	%rbp, %r12
.L29684:
	movq	%r12, %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movq	%r10, (%rsp)
	call	z900_logical_to_main_l
	movq	(%rsp), %r10
	movq	%rax, %rdi
	jmp	.L29687
.L29860:
	cmpb	43192(%rbx,%r13), %dl
	je	.L29680
.L29843:
	addq	%r12, %rbp
.L29678:
	movq	%rbp, %rdi
	movzbl	97(%rbx), %r8d
	movl	%r15d, %esi
	andq	120(%rbx), %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r11, (%rsp)
	call	z900_logical_to_main_l
	movq	(%rsp), %r11
	movq	%rax, %rsi
	jmp	.L29681
.L29853:
	movzbl	44216(%rbx,%r15), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L29685
.L29844:
	addq	$1, %r12
	jmp	.L29684
.L29859:
	movzbl	44216(%rbx,%r13), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L29679
	addq	$1, %rbp
	jmp	.L29678
.L29858:
	cmpb	%sil, 43192(%rbx,%rdx)
	je	.L29695
.L29848:
	movq	16(%rsp), %rdi
	addq	%rdi, %rbp
.L29693:
	andq	%rbp, %rax
	movzbl	%sil, %r8d
	movl	$1, %r9d
	movl	%r15d, %esi
	movq	%rax, %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	z900_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L29696
.L29857:
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rdi)
	jne	.L29694
	jmp	.L29848
.L29856:
	cmpb	43192(%rbx,%r9), %sil
	je	.L29691
.L29846:
	movq	16(%rsp), %rax
	addq	%rax, %r12
.L29689:
	movq	%r12, %rdi
	movzbl	97(%rbx), %r8d
	movl	%r14d, %esi
	andq	120(%rbx), %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %esi
	movq	%rax, %r12
	movq	120(%rbx), %rax
	jmp	.L29692
.L29855:
	movzbl	44216(%rbx,%r9), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L29690
	jmp	.L29846
	.cfi_endproc
.LFE2825:
	.size	z900_D501, .-z900_D501
	.p2align 4,,15
	.globl	z900_D503
	.type	z900_D503, @function
z900_D503:
.LFB2826:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	movl	(%rdi), %r11d
	bswap	%r11d
	movl	%r11d, %r15d
	shrl	$12, %r11d
	andl	$4095, %r15d
	andl	$15, %r11d
	je	.L29862
	movslq	%r11d, %rax
	addq	192(%rsi,%rax,8), %r15
	andq	120(%rsi), %r15
.L29862:
	movzbl	4(%rdi), %eax
	movzbl	5(%rdi), %edx
	movl	%eax, %ebp
	shrb	$4, %al
	andl	$15, %ebp
	movzbl	%al, %r14d
	sall	$8, %ebp
	orl	%edx, %ebp
	testl	%r14d, %r14d
	movslq	%ebp, %rbp
	je	.L29863
	movslq	%r14d, %rax
	addq	192(%rbx,%rax,8), %rbp
	andq	120(%rbx), %rbp
.L29863:
	addq	$6, 136(%rbx)
	movb	$6, 130(%rbx)
	leal	5(%r11), %eax
	cltq
	leaq	(%rbx,%rax,4), %r10
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L29864
	movl	%r15d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L30060
.L29865:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L30061
.L29866:
	movl	2224(%rbx), %edi
	movq	%r15, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L29864
	testb	$4, 46264(%rbx,%rcx)
	je	.L29864
	movq	%r15, %r13
	movzbl	%sil, %r8d
	xorq	26808(%rdx), %r13
.L29867:
	leal	5(%r14), %eax
	cltq
	leaq	(%rbx,%rax,4), %r12
	movl	1892(%r12), %eax
	testl	%eax, %eax
	je	.L29868
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L30062
.L29869:
	testb	%r8b, %r8b
	jne	.L30063
.L29870:
	movl	2224(%rbx), %edi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L29868
	testb	$4, 46264(%rbx,%rcx)
	je	.L29868
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
	movq	%rax, 8(%rsp)
.L29871:
	movq	%r15, %rax
	andl	$2047, %eax
	cmpq	$2044, %rax
	ja	.L29872
	movq	%rbp, %r11
	andl	$2047, %r11d
	cmpq	$2044, %r11
	ja	.L29873
	movq	8(%rsp), %rax
	movl	0(%r13), %edx
	movl	(%rax), %eax
	bswap	%edx
	bswap	%eax
	cmpl	%eax, %edx
	je	.L29917
	sbbl	%eax, %eax
	addl	$2, %eax
.L29913:
	movb	%al, 100(%rbx)
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L29872:
	.cfi_restore_state
	movl	%eax, %esi
	movl	%eax, 32(%rsp)
	movq	%rbp, %rdx
	movl	$2048, %eax
	andl	$2047, %edx
	movl	%r15d, 24(%rsp)
	movl	%eax, %edi
	subl	%esi, %edi
	cmpq	$2044, %rdx
	movl	%edi, 16(%rsp)
	ja	.L29882
	movq	8(%rsp), %rsi
	movl	%edi, %ebp
	movq	%r13, %rdi
	movq	%rbp, %rdx
	movq	%r10, 48(%rsp)
	movl	%r11d, 40(%rsp)
	call	memcmp
	movl	40(%rsp), %r11d
	testl	%eax, %eax
	movq	48(%rsp), %r10
	jne	.L29914
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L30049
	leal	1(%rax), %ecx
	movl	16(%rsp), %eax
	movq	120(%rbx), %rdi
	movslq	%ecx, %rcx
	addl	24(%rsp), %eax
	andl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rcx,8)
	jne	.L30064
.L29884:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L30065
.L29885:
	addq	%rbp, %r15
	movl	2224(%rbx), %esi
	andq	%r15, %rdi
	movq	%rdi, %rcx
	andq	$-4194304, %rcx
	orq	%rsi, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L29883
	testb	$4, 46264(%rbx,%rax)
	je	.L29883
	xorq	26808(%rdx), %rdi
.L29886:
	movl	32(%rsp), %edx
	movq	8(%rsp), %rsi
	subl	$2044, %edx
	addq	%rbp, %rsi
	call	memcmp
	testl	%eax, %eax
	jne	.L29914
.L29917:
	xorl	%eax, %eax
	jmp	.L29913
	.p2align 4,,10
	.p2align 3
.L29882:
	subl	%edx, %eax
	movl	%ebp, 48(%rsp)
	cmpl	%eax, 16(%rsp)
	movl	%edx, 56(%rsp)
	movl	%eax, 40(%rsp)
	je	.L30066
	movq	%r10, 72(%rsp)
	movl	%r11d, 64(%rsp)
	jae	.L29896
	movl	16(%rsp), %eax
	movq	%r13, %rdi
	movq	8(%rsp), %rsi
	movq	%rax, %rdx
	movq	%rax, 32(%rsp)
	call	memcmp
	movl	64(%rsp), %r11d
	testl	%eax, %eax
	movq	72(%rsp), %r10
	jne	.L29914
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L30055
	leal	1(%rax), %edx
	movl	24(%rsp), %eax
	movq	120(%rbx), %r13
	movslq	%edx, %rdx
	addl	16(%rsp), %eax
	andl	%r13d, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L30067
.L29898:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L30068
.L29899:
	addq	32(%rsp), %r15
	movl	2224(%rbx), %esi
	andq	%r15, %r13
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L29897
	testb	$4, 46264(%rbx,%rax)
	je	.L29897
	xorq	26808(%rcx), %r13
.L29900:
	movl	40(%rsp), %edx
	movq	%r13, %rdi
	movq	8(%rsp), %rsi
	subl	16(%rsp), %edx
	addq	32(%rsp), %rsi
	call	memcmp
	testl	%eax, %eax
	jne	.L29914
	movl	1892(%r12), %eax
	testl	%eax, %eax
	je	.L30056
	leal	1(%rax), %esi
	movl	48(%rsp), %eax
	movq	120(%rbx), %rdx
	movslq	%esi, %rsi
	addl	40(%rsp), %eax
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L30069
.L29902:
	movzbl	97(%rbx), %esi
	movl	40(%rsp), %r12d
	testb	%sil, %sil
	jne	.L30070
.L29903:
	leaq	(%r12,%rbp), %rsi
	movl	2224(%rbx), %edi
	andq	%rdx, %rsi
	movq	%rsi, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L29901
	testb	$4, 46264(%rbx,%rax)
	je	.L29901
	xorq	26808(%rcx), %rsi
.L29904:
	movl	56(%rsp), %edx
	subq	32(%rsp), %r12
	subl	$2044, %edx
	leaq	0(%r13,%r12), %rdi
	call	memcmp
	jmp	.L29881
	.p2align 4,,10
	.p2align 3
.L29873:
	movl	$2048, %r15d
	movq	8(%rsp), %rsi
	movq	%r13, %rdi
	subl	%r11d, %r15d
	movl	%r11d, 24(%rsp)
	movl	%r15d, %r10d
	movl	%ebp, 32(%rsp)
	movq	%r10, %rdx
	movq	%r10, 16(%rsp)
	call	memcmp
	movq	16(%rsp), %r10
	testl	%eax, %eax
	movl	24(%rsp), %r11d
	jne	.L29914
	movl	1892(%r12), %eax
	testl	%eax, %eax
	je	.L30047
	addl	32(%rsp), %r15d
	leal	1(%rax), %edx
	movq	120(%rbx), %rsi
	movslq	%edx, %rdx
	andl	%esi, %r15d
	shrl	$12, %r15d
	andl	$1023, %r15d
	leaq	(%rbx,%r15,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L30071
.L29878:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L30072
.L29879:
	addq	%r10, %rbp
	movl	2224(%rbx), %ecx
	andq	%rbp, %rsi
	movq	%rsi, %rdx
	andq	$-4194304, %rdx
	orq	%rcx, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L29877
	testb	$4, 46264(%rbx,%r15)
	je	.L29877
	xorq	26808(%rax), %rsi
.L29880:
	leal	-2044(%r11), %edx
	leaq	0(%r13,%r10), %rdi
	call	memcmp
.L29881:
	testl	%eax, %eax
	je	.L29917
	.p2align 4,,10
	.p2align 3
.L29914:
	sarl	$31, %eax
	addl	$2, %eax
	jmp	.L29913
	.p2align 4,,10
	.p2align 3
.L30066:
	movl	16(%rsp), %eax
	movq	%r13, %rdi
	movq	%r10, 64(%rsp)
	movq	8(%rsp), %rsi
	movl	%r11d, 56(%rsp)
	movq	%rax, %rdx
	movq	%rax, 40(%rsp)
	call	memcmp
	movl	56(%rsp), %r11d
	testl	%eax, %eax
	movq	64(%rsp), %r10
	jne	.L29914
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L30051
	movl	24(%rsp), %esi
	leal	1(%rax), %ecx
	movq	120(%rbx), %rax
	movslq	%ecx, %rcx
	addl	16(%rsp), %esi
	andl	%eax, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rcx,8)
	jne	.L30073
.L29889:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L30074
.L29890:
	addq	40(%rsp), %r15
	movl	2224(%rbx), %r8d
	movq	%r15, %r13
	andq	%rax, %r13
	movq	%r13, %rcx
	andq	$-4194304, %rcx
	orq	%r8, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L29888
	testb	$4, 46264(%rbx,%rsi)
	je	.L29888
	xorq	26808(%rdx), %r13
.L29891:
	movl	1892(%r12), %edx
	testl	%edx, %edx
	je	.L30053
	leal	1(%rdx), %esi
	movl	48(%rsp), %edx
	movslq	%esi, %rsi
	addl	16(%rsp), %edx
	andl	%eax, %edx
	shrl	$12, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movq	2232(%rcx), %r9
	cmpq	%r9, 320(%rbx,%rsi,8)
	jne	.L30075
.L29893:
	testb	%dil, %dil
	jne	.L30076
.L29894:
	addq	40(%rsp), %rbp
	movq	%rax, %rsi
	movl	2224(%rbx), %r8d
	andq	%rbp, %rsi
	movq	%rsi, %r9
	andq	$-4194304, %r9
	orq	%r8, %r9
	cmpq	10424(%rcx), %r9
	jne	.L29892
	testb	$4, 46264(%rbx,%rdx)
	je	.L29892
	xorq	26808(%rcx), %rsi
.L29895:
	movl	32(%rsp), %edx
	movq	%r13, %rdi
	subl	$2044, %edx
	call	memcmp
	jmp	.L29881
	.p2align 4,,10
	.p2align 3
.L29896:
	movl	40(%rsp), %eax
	movq	%r13, %rdi
	movq	8(%rsp), %rsi
	movq	%rax, %rdx
	movq	%rax, 56(%rsp)
	call	memcmp
	movl	64(%rsp), %r11d
	testl	%eax, %eax
	movq	72(%rsp), %r10
	jne	.L29914
	movl	1892(%r12), %eax
	testl	%eax, %eax
	je	.L30058
	leal	1(%rax), %esi
	movl	48(%rsp), %eax
	movq	120(%rbx), %rdx
	movslq	%esi, %rsi
	addl	40(%rsp), %eax
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L30077
.L29906:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L30078
.L29907:
	movq	56(%rsp), %rdi
	leaq	(%rdi,%rbp), %rsi
	movl	2224(%rbx), %edi
	andq	%rsi, %rdx
	movq	%rdx, %rbp
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L29905
	testb	$4, 46264(%rbx,%rax)
	je	.L29905
	xorq	26808(%rcx), %rbp
.L29908:
	movl	16(%rsp), %edx
	movq	%rbp, %rsi
	movq	%r10, 48(%rsp)
	movq	56(%rsp), %rax
	movl	%r11d, 8(%rsp)
	subl	40(%rsp), %edx
	leaq	0(%r13,%rax), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L29914
	movq	48(%rsp), %r10
	movl	8(%rsp), %r11d
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L30059
	leal	1(%rax), %esi
	movl	24(%rsp), %eax
	movq	120(%rbx), %rdx
	movslq	%esi, %rsi
	addl	16(%rsp), %eax
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L30079
.L29910:
	movzbl	97(%rbx), %esi
	movl	16(%rsp), %r12d
	testb	%sil, %sil
	jne	.L30080
.L29911:
	leaq	(%r12,%r15), %rdi
	movl	2224(%rbx), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L29909
	testb	$4, 46264(%rbx,%rax)
	je	.L29909
	xorq	26808(%rcx), %rdi
.L29912:
	movl	32(%rsp), %edx
	subq	56(%rsp), %r12
	subl	$2044, %edx
	leaq	0(%rbp,%r12), %rsi
	call	memcmp
	jmp	.L29881
.L30062:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L29869
.L29868:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movq	%rbp, %rdi
	movq	%r10, 24(%rsp)
	movl	%r11d, 16(%rsp)
	call	z900_logical_to_main_l
	movq	24(%rsp), %r10
	movq	%rax, 8(%rsp)
	movl	16(%rsp), %r11d
	jmp	.L29871
.L30060:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L29865
.L29864:
	movzbl	97(%rbx), %r8d
	movl	%r11d, %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r15, %rdi
	movq	%r10, 16(%rsp)
	movl	%r11d, 8(%rsp)
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r13
	movq	16(%rsp), %r10
	movl	8(%rsp), %r11d
	jmp	.L29867
.L30061:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L29866
	jmp	.L29864
.L30063:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L29870
	.p2align 4,,3
	jmp	.L29868
.L30072:
	cmpb	43192(%rbx,%r15), %dl
	je	.L29879
.L30047:
	addq	%r10, %rbp
.L29877:
	movq	%rbp, %rdi
	movzbl	97(%rbx), %r8d
	movl	%r14d, %esi
	andq	120(%rbx), %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r10, 16(%rsp)
	movl	%r11d, 8(%rsp)
	call	z900_logical_to_main_l
	movq	16(%rsp), %r10
	movq	%rax, %rsi
	movl	8(%rsp), %r11d
	jmp	.L29880
.L30065:
	cmpb	43192(%rbx,%rax), %cl
	je	.L29885
.L30049:
	addq	%rbp, %r15
.L29883:
	movq	%r15, %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r11d, %esi
	call	z900_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L29886
.L30079:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L29910
.L30059:
	movl	16(%rsp), %r12d
.L29909:
	leaq	(%r12,%r15), %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r11d, %esi
	call	z900_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L29912
.L30078:
	cmpb	43192(%rbx,%rax), %sil
	je	.L29907
.L30058:
	movq	56(%rsp), %rax
	leaq	(%rax,%rbp), %rsi
.L29905:
	andq	120(%rbx), %rsi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movq	%r10, 48(%rsp)
	movl	%r11d, 8(%rsp)
	movq	%rsi, %rdi
	movl	%r14d, %esi
	call	z900_logical_to_main_l
	movq	48(%rsp), %r10
	movq	%rax, %rbp
	movl	8(%rsp), %r11d
	jmp	.L29908
.L30069:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L29902
.L30056:
	movl	40(%rsp), %r12d
.L29901:
	leaq	(%r12,%rbp), %rdi
	movzbl	97(%rbx), %r8d
	movl	%r14d, %esi
	andq	120(%rbx), %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	z900_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L29904
.L30068:
	cmpb	43192(%rbx,%rax), %dl
	je	.L29899
.L30055:
	movq	32(%rsp), %rax
	addq	%rax, %r15
.L29897:
	movq	%r15, %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r11d, %esi
	call	z900_logical_to_main_l
	movq	%rax, %r13
	jmp	.L29900
.L30076:
	cmpb	%dil, 43192(%rbx,%rdx)
	je	.L29894
.L30053:
	movq	40(%rsp), %rsi
	addq	%rsi, %rbp
.L29892:
	andq	%rbp, %rax
	movzbl	%dil, %r8d
	movl	%r14d, %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rax, %rdi
	call	z900_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L29895
.L30075:
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rsi)
	jne	.L29893
	jmp	.L30053
.L30074:
	cmpb	43192(%rbx,%rsi), %dil
	je	.L29890
.L30051:
	movq	40(%rsp), %rax
	addq	%rax, %r15
.L29888:
	movq	%r15, %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r11d, %esi
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %edi
	movq	%rax, %r13
	movq	120(%rbx), %rax
	jmp	.L29891
.L30073:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L29889
	jmp	.L30051
.L30070:
	cmpb	43192(%rbx,%rax), %sil
	je	.L29903
	.p2align 4,,3
	jmp	.L29901
.L30067:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L29898
	jmp	.L30055
.L30080:
	cmpb	43192(%rbx,%rax), %sil
	je	.L29911
	.p2align 4,,3
	jmp	.L29909
.L30077:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L29906
	jmp	.L30058
.L30064:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L29884
	jmp	.L30049
.L30071:
	movzbl	44216(%rbx,%r15), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L29878
	jmp	.L30047
	.cfi_endproc
.LFE2826:
	.size	z900_D503, .-z900_D503
	.p2align 4,,15
	.globl	z900_D507
	.type	z900_D507, @function
z900_D507:
.LFB2827:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	movl	(%rdi), %r11d
	bswap	%r11d
	movl	%r11d, %r15d
	shrl	$12, %r11d
	andl	$4095, %r15d
	andl	$15, %r11d
	je	.L30082
	movslq	%r11d, %rax
	addq	192(%rsi,%rax,8), %r15
	andq	120(%rsi), %r15
.L30082:
	movzbl	4(%rdi), %eax
	movzbl	5(%rdi), %edx
	movl	%eax, %ebp
	shrb	$4, %al
	andl	$15, %ebp
	movzbl	%al, %r14d
	sall	$8, %ebp
	orl	%edx, %ebp
	testl	%r14d, %r14d
	movslq	%ebp, %rbp
	je	.L30083
	movslq	%r14d, %rax
	addq	192(%rbx,%rax,8), %rbp
	andq	120(%rbx), %rbp
.L30083:
	addq	$6, 136(%rbx)
	movb	$6, 130(%rbx)
	leal	5(%r11), %eax
	cltq
	leaq	(%rbx,%rax,4), %r10
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L30084
	movl	%r15d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L30280
.L30085:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L30281
.L30086:
	movl	2224(%rbx), %edi
	movq	%r15, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L30084
	testb	$4, 46264(%rbx,%rcx)
	je	.L30084
	movq	%r15, %r13
	movzbl	%sil, %r8d
	xorq	26808(%rdx), %r13
.L30087:
	leal	5(%r14), %eax
	cltq
	leaq	(%rbx,%rax,4), %r12
	movl	1892(%r12), %eax
	testl	%eax, %eax
	je	.L30088
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L30282
.L30089:
	testb	%r8b, %r8b
	jne	.L30283
.L30090:
	movl	2224(%rbx), %edi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L30088
	testb	$4, 46264(%rbx,%rcx)
	je	.L30088
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
	movq	%rax, 8(%rsp)
.L30091:
	movq	%r15, %rax
	andl	$2047, %eax
	cmpq	$2040, %rax
	ja	.L30092
	movq	%rbp, %r11
	andl	$2047, %r11d
	cmpq	$2040, %r11
	ja	.L30093
	movq	8(%rsp), %rax
	movq	0(%r13), %rdx
	movq	(%rax), %rax
	bswap	%rdx
	bswap	%rax
	cmpq	%rax, %rdx
	je	.L30137
	sbbl	%eax, %eax
	addl	$2, %eax
.L30133:
	movb	%al, 100(%rbx)
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L30092:
	.cfi_restore_state
	movl	%eax, %esi
	movl	%eax, 32(%rsp)
	movq	%rbp, %rdx
	movl	$2048, %eax
	andl	$2047, %edx
	movl	%r15d, 24(%rsp)
	movl	%eax, %edi
	subl	%esi, %edi
	cmpq	$2040, %rdx
	movl	%edi, 16(%rsp)
	ja	.L30102
	movq	8(%rsp), %rsi
	movl	%edi, %ebp
	movq	%r13, %rdi
	movq	%rbp, %rdx
	movq	%r10, 48(%rsp)
	movl	%r11d, 40(%rsp)
	call	memcmp
	movl	40(%rsp), %r11d
	testl	%eax, %eax
	movq	48(%rsp), %r10
	jne	.L30134
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L30269
	leal	1(%rax), %ecx
	movl	16(%rsp), %eax
	movq	120(%rbx), %rdi
	movslq	%ecx, %rcx
	addl	24(%rsp), %eax
	andl	%edi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rcx,8)
	jne	.L30284
.L30104:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L30285
.L30105:
	addq	%rbp, %r15
	movl	2224(%rbx), %esi
	andq	%r15, %rdi
	movq	%rdi, %rcx
	andq	$-4194304, %rcx
	orq	%rsi, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L30103
	testb	$4, 46264(%rbx,%rax)
	je	.L30103
	xorq	26808(%rdx), %rdi
.L30106:
	movl	32(%rsp), %edx
	movq	8(%rsp), %rsi
	subl	$2040, %edx
	addq	%rbp, %rsi
	call	memcmp
	testl	%eax, %eax
	jne	.L30134
.L30137:
	xorl	%eax, %eax
	jmp	.L30133
	.p2align 4,,10
	.p2align 3
.L30102:
	subl	%edx, %eax
	movl	%ebp, 48(%rsp)
	cmpl	%eax, 16(%rsp)
	movl	%edx, 56(%rsp)
	movl	%eax, 40(%rsp)
	je	.L30286
	movq	%r10, 72(%rsp)
	movl	%r11d, 64(%rsp)
	jae	.L30116
	movl	16(%rsp), %eax
	movq	%r13, %rdi
	movq	8(%rsp), %rsi
	movq	%rax, %rdx
	movq	%rax, 32(%rsp)
	call	memcmp
	movl	64(%rsp), %r11d
	testl	%eax, %eax
	movq	72(%rsp), %r10
	jne	.L30134
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L30275
	leal	1(%rax), %edx
	movl	24(%rsp), %eax
	movq	120(%rbx), %r13
	movslq	%edx, %rdx
	addl	16(%rsp), %eax
	andl	%r13d, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L30287
.L30118:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L30288
.L30119:
	addq	32(%rsp), %r15
	movl	2224(%rbx), %esi
	andq	%r15, %r13
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L30117
	testb	$4, 46264(%rbx,%rax)
	je	.L30117
	xorq	26808(%rcx), %r13
.L30120:
	movl	40(%rsp), %edx
	movq	%r13, %rdi
	movq	8(%rsp), %rsi
	subl	16(%rsp), %edx
	addq	32(%rsp), %rsi
	call	memcmp
	testl	%eax, %eax
	jne	.L30134
	movl	1892(%r12), %eax
	testl	%eax, %eax
	je	.L30276
	leal	1(%rax), %esi
	movl	48(%rsp), %eax
	movq	120(%rbx), %rdx
	movslq	%esi, %rsi
	addl	40(%rsp), %eax
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L30289
.L30122:
	movzbl	97(%rbx), %esi
	movl	40(%rsp), %r12d
	testb	%sil, %sil
	jne	.L30290
.L30123:
	leaq	(%r12,%rbp), %rsi
	movl	2224(%rbx), %edi
	andq	%rdx, %rsi
	movq	%rsi, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L30121
	testb	$4, 46264(%rbx,%rax)
	je	.L30121
	xorq	26808(%rcx), %rsi
.L30124:
	movl	56(%rsp), %edx
	subq	32(%rsp), %r12
	subl	$2040, %edx
	leaq	0(%r13,%r12), %rdi
	call	memcmp
	jmp	.L30101
	.p2align 4,,10
	.p2align 3
.L30093:
	movl	$2048, %r15d
	movq	8(%rsp), %rsi
	movq	%r13, %rdi
	subl	%r11d, %r15d
	movl	%r11d, 24(%rsp)
	movl	%r15d, %r10d
	movl	%ebp, 32(%rsp)
	movq	%r10, %rdx
	movq	%r10, 16(%rsp)
	call	memcmp
	movq	16(%rsp), %r10
	testl	%eax, %eax
	movl	24(%rsp), %r11d
	jne	.L30134
	movl	1892(%r12), %eax
	testl	%eax, %eax
	je	.L30267
	addl	32(%rsp), %r15d
	leal	1(%rax), %edx
	movq	120(%rbx), %rsi
	movslq	%edx, %rdx
	andl	%esi, %r15d
	shrl	$12, %r15d
	andl	$1023, %r15d
	leaq	(%rbx,%r15,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L30291
.L30098:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L30292
.L30099:
	addq	%r10, %rbp
	movl	2224(%rbx), %ecx
	andq	%rbp, %rsi
	movq	%rsi, %rdx
	andq	$-4194304, %rdx
	orq	%rcx, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L30097
	testb	$4, 46264(%rbx,%r15)
	je	.L30097
	xorq	26808(%rax), %rsi
.L30100:
	leal	-2040(%r11), %edx
	leaq	0(%r13,%r10), %rdi
	call	memcmp
.L30101:
	testl	%eax, %eax
	je	.L30137
	.p2align 4,,10
	.p2align 3
.L30134:
	sarl	$31, %eax
	addl	$2, %eax
	jmp	.L30133
	.p2align 4,,10
	.p2align 3
.L30286:
	movl	16(%rsp), %eax
	movq	%r13, %rdi
	movq	%r10, 64(%rsp)
	movq	8(%rsp), %rsi
	movl	%r11d, 56(%rsp)
	movq	%rax, %rdx
	movq	%rax, 40(%rsp)
	call	memcmp
	movl	56(%rsp), %r11d
	testl	%eax, %eax
	movq	64(%rsp), %r10
	jne	.L30134
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L30271
	movl	24(%rsp), %esi
	leal	1(%rax), %ecx
	movq	120(%rbx), %rax
	movslq	%ecx, %rcx
	addl	16(%rsp), %esi
	andl	%eax, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rcx,8)
	jne	.L30293
.L30109:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L30294
.L30110:
	addq	40(%rsp), %r15
	movl	2224(%rbx), %r8d
	movq	%r15, %r13
	andq	%rax, %r13
	movq	%r13, %rcx
	andq	$-4194304, %rcx
	orq	%r8, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L30108
	testb	$4, 46264(%rbx,%rsi)
	je	.L30108
	xorq	26808(%rdx), %r13
.L30111:
	movl	1892(%r12), %edx
	testl	%edx, %edx
	je	.L30273
	leal	1(%rdx), %esi
	movl	48(%rsp), %edx
	movslq	%esi, %rsi
	addl	16(%rsp), %edx
	andl	%eax, %edx
	shrl	$12, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movq	2232(%rcx), %r9
	cmpq	%r9, 320(%rbx,%rsi,8)
	jne	.L30295
.L30113:
	testb	%dil, %dil
	jne	.L30296
.L30114:
	addq	40(%rsp), %rbp
	movq	%rax, %rsi
	movl	2224(%rbx), %r8d
	andq	%rbp, %rsi
	movq	%rsi, %r9
	andq	$-4194304, %r9
	orq	%r8, %r9
	cmpq	10424(%rcx), %r9
	jne	.L30112
	testb	$4, 46264(%rbx,%rdx)
	je	.L30112
	xorq	26808(%rcx), %rsi
.L30115:
	movl	32(%rsp), %edx
	movq	%r13, %rdi
	subl	$2040, %edx
	call	memcmp
	jmp	.L30101
	.p2align 4,,10
	.p2align 3
.L30116:
	movl	40(%rsp), %eax
	movq	%r13, %rdi
	movq	8(%rsp), %rsi
	movq	%rax, %rdx
	movq	%rax, 56(%rsp)
	call	memcmp
	movl	64(%rsp), %r11d
	testl	%eax, %eax
	movq	72(%rsp), %r10
	jne	.L30134
	movl	1892(%r12), %eax
	testl	%eax, %eax
	je	.L30278
	leal	1(%rax), %esi
	movl	48(%rsp), %eax
	movq	120(%rbx), %rdx
	movslq	%esi, %rsi
	addl	40(%rsp), %eax
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L30297
.L30126:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L30298
.L30127:
	movq	56(%rsp), %rdi
	leaq	(%rdi,%rbp), %rsi
	movl	2224(%rbx), %edi
	andq	%rsi, %rdx
	movq	%rdx, %rbp
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L30125
	testb	$4, 46264(%rbx,%rax)
	je	.L30125
	xorq	26808(%rcx), %rbp
.L30128:
	movl	16(%rsp), %edx
	movq	%rbp, %rsi
	movq	%r10, 48(%rsp)
	movq	56(%rsp), %rax
	movl	%r11d, 8(%rsp)
	subl	40(%rsp), %edx
	leaq	0(%r13,%rax), %rdi
	call	memcmp
	testl	%eax, %eax
	jne	.L30134
	movq	48(%rsp), %r10
	movl	8(%rsp), %r11d
	movl	1892(%r10), %eax
	testl	%eax, %eax
	je	.L30279
	leal	1(%rax), %esi
	movl	24(%rsp), %eax
	movq	120(%rbx), %rdx
	movslq	%esi, %rsi
	addl	16(%rsp), %eax
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L30299
.L30130:
	movzbl	97(%rbx), %esi
	movl	16(%rsp), %r12d
	testb	%sil, %sil
	jne	.L30300
.L30131:
	leaq	(%r12,%r15), %rdi
	movl	2224(%rbx), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L30129
	testb	$4, 46264(%rbx,%rax)
	je	.L30129
	xorq	26808(%rcx), %rdi
.L30132:
	movl	32(%rsp), %edx
	subq	56(%rsp), %r12
	subl	$2040, %edx
	leaq	0(%rbp,%r12), %rsi
	call	memcmp
	jmp	.L30101
.L30282:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L30089
.L30088:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movq	%rbp, %rdi
	movq	%r10, 24(%rsp)
	movl	%r11d, 16(%rsp)
	call	z900_logical_to_main_l
	movq	24(%rsp), %r10
	movq	%rax, 8(%rsp)
	movl	16(%rsp), %r11d
	jmp	.L30091
.L30280:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L30085
.L30084:
	movzbl	97(%rbx), %r8d
	movl	%r11d, %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r15, %rdi
	movq	%r10, 16(%rsp)
	movl	%r11d, 8(%rsp)
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r13
	movq	16(%rsp), %r10
	movl	8(%rsp), %r11d
	jmp	.L30087
.L30281:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30086
	jmp	.L30084
.L30283:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L30090
	.p2align 4,,3
	jmp	.L30088
.L30292:
	cmpb	43192(%rbx,%r15), %dl
	je	.L30099
.L30267:
	addq	%r10, %rbp
.L30097:
	movq	%rbp, %rdi
	movzbl	97(%rbx), %r8d
	movl	%r14d, %esi
	andq	120(%rbx), %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r10, 16(%rsp)
	movl	%r11d, 8(%rsp)
	call	z900_logical_to_main_l
	movq	16(%rsp), %r10
	movq	%rax, %rsi
	movl	8(%rsp), %r11d
	jmp	.L30100
.L30285:
	cmpb	43192(%rbx,%rax), %cl
	je	.L30105
.L30269:
	addq	%rbp, %r15
.L30103:
	movq	%r15, %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r11d, %esi
	call	z900_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L30106
.L30299:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L30130
.L30279:
	movl	16(%rsp), %r12d
.L30129:
	leaq	(%r12,%r15), %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r11d, %esi
	call	z900_logical_to_main_l
	movq	%rax, %rdi
	jmp	.L30132
.L30298:
	cmpb	43192(%rbx,%rax), %sil
	je	.L30127
.L30278:
	movq	56(%rsp), %rax
	leaq	(%rax,%rbp), %rsi
.L30125:
	andq	120(%rbx), %rsi
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movq	%r10, 48(%rsp)
	movl	%r11d, 8(%rsp)
	movq	%rsi, %rdi
	movl	%r14d, %esi
	call	z900_logical_to_main_l
	movq	48(%rsp), %r10
	movq	%rax, %rbp
	movl	8(%rsp), %r11d
	jmp	.L30128
.L30289:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L30122
.L30276:
	movl	40(%rsp), %r12d
.L30121:
	leaq	(%r12,%rbp), %rdi
	movzbl	97(%rbx), %r8d
	movl	%r14d, %esi
	andq	120(%rbx), %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	z900_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L30124
.L30288:
	cmpb	43192(%rbx,%rax), %dl
	je	.L30119
.L30275:
	movq	32(%rsp), %rax
	addq	%rax, %r15
.L30117:
	movq	%r15, %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r11d, %esi
	call	z900_logical_to_main_l
	movq	%rax, %r13
	jmp	.L30120
.L30296:
	cmpb	%dil, 43192(%rbx,%rdx)
	je	.L30114
.L30273:
	movq	40(%rsp), %rsi
	addq	%rsi, %rbp
.L30112:
	andq	%rbp, %rax
	movzbl	%dil, %r8d
	movl	%r14d, %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rax, %rdi
	call	z900_logical_to_main_l
	movq	%rax, %rsi
	jmp	.L30115
.L30295:
	movzbl	44216(%rbx,%rdx), %r8d
	testb	%r8b, 1976(%rbx,%rsi)
	jne	.L30113
	jmp	.L30273
.L30294:
	cmpb	43192(%rbx,%rsi), %dil
	je	.L30110
.L30271:
	movq	40(%rsp), %rax
	addq	%rax, %r15
.L30108:
	movq	%r15, %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r11d, %esi
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %edi
	movq	%rax, %r13
	movq	120(%rbx), %rax
	jmp	.L30111
.L30293:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L30109
	jmp	.L30271
.L30290:
	cmpb	43192(%rbx,%rax), %sil
	je	.L30123
	.p2align 4,,3
	jmp	.L30121
.L30287:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L30118
	jmp	.L30275
.L30300:
	cmpb	43192(%rbx,%rax), %sil
	je	.L30131
	.p2align 4,,3
	jmp	.L30129
.L30297:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L30126
	jmp	.L30278
.L30284:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L30104
	jmp	.L30269
.L30291:
	movzbl	44216(%rbx,%r15), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L30098
	jmp	.L30267
	.cfi_endproc
.LFE2827:
	.size	z900_D507, .-z900_D507
	.p2align 4,,15
	.globl	z900_compare_logical_characters_under_mask
	.type	z900_compare_logical_characters_under_mask, @function
z900_compare_logical_characters_under_mask:
.LFB2828:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %eax
	movl	%ebp, %edx
	shrl	$16, %eax
	movl	%ebp, %r15d
	shrl	$20, %edx
	movl	%eax, %ecx
	shrl	$12, %r15d
	andl	$15, %edx
	andl	$15, %ecx
	andl	$4095, %ebp
	andl	$15, %r15d
	je	.L30302
	movslq	%r15d, %rsi
	addq	192(%rbx,%rsi,8), %rbp
	andq	120(%rbx), %rbp
.L30302:
	addq	$4, 136(%rbx)
	testb	$8, %al
	movb	$4, 130(%rbx)
	je	.L30323
	movslq	%edx, %rsi
	movl	$1, %r13d
	movzbl	195(%rbx,%rsi,8), %esi
	movb	%sil, (%rsp)
	movl	$2, %esi
.L30303:
	testb	$4, %al
	je	.L30304
	movslq	%edx, %rdi
	movzwl	194(%rbx,%rdi,8), %edi
	movb	%dil, (%rsp,%r13)
	movl	%esi, %r13d
.L30304:
	testb	$2, %al
	je	.L30305
	movslq	%edx, %rsi
	movslq	%r13d, %rdi
	addl	$1, %r13d
	movl	192(%rbx,%rsi,8), %esi
	shrl	$8, %esi
	movb	%sil, (%rsp,%rdi)
.L30305:
	testb	$1, %al
	je	.L30306
	movslq	%edx, %rdx
	movslq	%r13d, %rax
	addl	$1, %r13d
	movl	192(%rbx,%rdx,8), %edx
	movb	%dl, (%rsp,%rax)
.L30306:
	testl	%ecx, %ecx
	je	.L30361
.L30307:
	testl	%r13d, %r13d
	je	.L30321
	leal	5(%r15), %r14d
	xorl	%r12d, %r12d
	movslq	%r14d, %r14
.L30322:
	movq	%rbp, %rdi
	movl	1892(%rbx,%r14,4), %eax
	andq	120(%rbx), %rdi
	testl	%eax, %eax
	leaq	1(%rdi), %rbp
	je	.L30313
	leal	1(%rax), %edx
	movl	%edi, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L30362
.L30314:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L30363
.L30315:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L30326
	testb	$4, 46264(%rbx,%rcx)
	je	.L30326
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L30317:
	movzbl	(%rax), %eax
	cmpb	%al, (%rsp,%r12)
	je	.L30318
	sbbl	%eax, %eax
	addl	$2, %eax
.L30312:
	movb	%al, 100(%rbx)
	addq	$24, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L30318:
	.cfi_restore_state
	addq	$1, %r12
	cmpl	%r12d, %r13d
	jg	.L30322
	.p2align 4,,10
	.p2align 3
.L30321:
	xorl	%eax, %eax
	jmp	.L30312
	.p2align 4,,10
	.p2align 3
.L30323:
	movl	$1, %esi
	xorl	%r13d, %r13d
	jmp	.L30303
	.p2align 4,,10
	.p2align 3
.L30361:
	leal	5(%r15), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L30308
	movl	%ebp, %edx
	addl	$1, %eax
	shrl	$12, %edx
	cltq
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movq	2232(%rcx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L30364
.L30309:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L30365
.L30310:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rcx), %rax
	jne	.L30308
	testb	$4, 46264(%rbx,%rdx)
	jne	.L30307
.L30308:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
	jmp	.L30307
.L30363:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30315
.L30326:
	movzbl	%sil, %r8d
.L30316:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	call	z900_logical_to_main_l
	jmp	.L30317
.L30362:
	movzbl	1976(%rbx,%rdx), %edx
	testb	%dl, 44216(%rbx,%rcx)
	jne	.L30314
.L30313:
	movzbl	97(%rbx), %r8d
	jmp	.L30316
.L30364:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L30309
	jmp	.L30308
.L30365:
	cmpb	43192(%rbx,%rdx), %al
	je	.L30310
	.p2align 4,,4
	jmp	.L30308
	.cfi_endproc
.LFE2828:
	.size	z900_compare_logical_characters_under_mask, .-z900_compare_logical_characters_under_mask
	.p2align 4,,15
	.globl	z900_compare_logical_character_long
	.type	z900_compare_logical_character_long, @function
z900_compare_logical_character_long:
.LFB2829:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movzbl	1(%rdi), %eax
	movb	$2, 130(%rsi)
	addq	$2, 136(%rsi)
	movzbl	%al, %edi
	movl	%eax, %ebp
	movl	%edi, 44(%rsp)
	andl	$15, %ebp
	sarl	$4, 44(%rsp)
	movzbl	%bpl, %edi
	movl	%edi, 48(%rsp)
	testb	$1, 44(%rsp)
	jne	.L30367
	testb	$1, %al
	jne	.L30367
.L30368:
	movl	44(%rsp), %esi
	movzbl	%bpl, %ebp
	movq	120(%rbx), %r14
	movl	48(%rsp), %edi
	leal	1(%rsi), %edx
	movslq	%esi, %rax
	leaq	(%rbx,%rax,8), %r11
	movq	%r14, %r13
	movslq	%edx, %rdx
	leaq	(%rbx,%rbp,8), %rax
	movq	%rdx, 8(%rsp)
	andq	192(%r11), %r13
	movq	%rax, 16(%rsp)
	andq	192(%rax), %r14
	movl	%edi, %eax
	addl	$1, %eax
	cltq
	movq	%rax, (%rsp)
	addq	$24, %rax
	movl	(%rbx,%rax,8), %ebp
	movzbl	3(%rbx,%rax,8), %r10d
	leal	5(%rsi), %eax
	movl	192(%rbx,%rdx,8), %r12d
	cltq
	movq	%rax, 24(%rsp)
	movl	%edi, %eax
	addl	$5, %eax
	andl	$16777215, %ebp
	cltq
	andl	$16777215, %r12d
	movq	%rax, 32(%rsp)
	.p2align 4,,10
	.p2align 3
.L30369:
	movl	%ebp, %eax
	orl	%r12d, %eax
	je	.L30442
	testl	%r12d, %r12d
	movl	%r10d, %r15d
	jne	.L30443
	testl	%ebp, %ebp
	movl	%r10d, %eax
	jne	.L30444
.L30376:
	cmpb	%al, %r15b
	jne	.L30445
.L30382:
	testl	%r12d, %r12d
	je	.L30385
	addq	$1, %r13
	subl	$1, %r12d
	andq	120(%rbx), %r13
.L30385:
	testl	%ebp, %ebp
	je	.L30386
	addq	$1, %r14
	subl	$1, %ebp
	andq	120(%rbx), %r14
.L30386:
	testl	$2047, %r13d
	je	.L30387
	testl	$2047, %r14d
	jne	.L30388
.L30387:
	testb	$1, 103(%rbx)
	je	.L30389
	movq	16(%rsp), %rax
	movq	%r13, 192(%r11)
	movq	%r14, 192(%rax)
.L30390:
	movq	8(%rsp), %rax
	movl	%r12d, %ecx
	andl	$16777215, %ecx
	leaq	24(%rax), %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%ecx, %eax
	movl	%ebp, %ecx
	movl	%eax, (%rbx,%rdx,8)
	movq	(%rsp), %rax
	andl	$16777215, %ecx
	leaq	24(%rax), %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%ecx, %eax
	movl	%eax, (%rbx,%rdx,8)
.L30388:
	leal	0(%rbp,%r12), %eax
	cmpl	$255, %eax
	jbe	.L30369
	movq	%r13, %rax
	subq	%rbp, %rax
	testl	$4095, %eax
	jne	.L30369
	movq	144(%rbx), %rcx
	movq	136(%rbx), %rax
	movq	168(%rbx), %rsi
	movzbl	808(%rbx), %edx
	subq	%rcx, %rax
	addq	%rsi, %rax
	testb	$1, %dl
	jne	.L30392
	movzbl	130(%rbx), %edx
	negl	%edx
	movslq	%edx, %rdx
.L30393:
	addq	%rdx, %rax
	andq	120(%rbx), %rax
	cmpq	$0, 160(%rbx)
	movq	%rax, 112(%rbx)
	je	.L30441
	movq	%rax, %rdx
	andq	$-4095, %rdx
	cmpq	%rdx, %rsi
	jne	.L30395
	andl	$4095, %eax
	orq	%rcx, %rax
	movq	%rax, 136(%rbx)
.L30441:
	andl	$16777215, %r12d
	andl	$16777215, %ebp
	xorl	%ecx, %ecx
	testb	$1, 103(%rbx)
	jne	.L30446
	.p2align 4,,10
	.p2align 3
.L30397:
	movq	16(%rsp), %rax
	movl	%r13d, 192(%r11)
	movl	%r14d, 192(%rax)
	jmp	.L30398
	.p2align 4,,10
	.p2align 3
.L30367:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L30368
	.p2align 4,,10
	.p2align 3
.L30389:
	movq	16(%rsp), %rax
	movl	%r13d, 192(%r11)
	movl	%r14d, 192(%rax)
	jmp	.L30390
	.p2align 4,,10
	.p2align 3
.L30443:
	movq	24(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L30371
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L30447
.L30372:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L30448
.L30373:
	movl	2224(%rbx), %edi
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L30402
	testb	$4, 46264(%rbx,%rcx)
	je	.L30402
	movq	%r13, %rsi
	xorq	26808(%rax), %rsi
	movq	%rsi, %rax
.L30375:
	testl	%ebp, %ebp
	movzbl	(%rax), %r15d
	movl	%r10d, %eax
	je	.L30376
.L30444:
	movq	32(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L30377
	leal	1(%rax), %edx
	movl	%r14d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L30449
.L30378:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L30450
.L30379:
	movl	2224(%rbx), %edi
	movq	%r14, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L30406
	testb	$4, 46264(%rbx,%rcx)
	je	.L30406
	movq	%r14, %rdi
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L30381:
	movzbl	(%rax), %eax
	cmpb	%al, %r15b
	je	.L30382
.L30445:
	andl	$16777215, %r12d
	andl	$16777215, %ebp
	cmpb	%r15b, %al
	movl	$1, %ecx
	ja	.L30384
	movl	$2, %ecx
	jmp	.L30384
	.p2align 4,,10
	.p2align 3
.L30442:
	xorl	%ecx, %ecx
	xorl	%ebp, %ebp
	xorl	%r12d, %r12d
.L30384:
	testb	$1, 103(%rbx)
	je	.L30397
.L30446:
	movq	16(%rsp), %rax
	movq	%r13, 192(%r11)
	movq	%r14, 192(%rax)
.L30398:
	movq	8(%rsp), %rdx
	addq	$24, %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%r12d, %eax
	movl	%eax, (%rbx,%rdx,8)
	movq	(%rsp), %rdx
	addq	$24, %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%ebp, %eax
	movl	%eax, (%rbx,%rdx,8)
	movb	%cl, 100(%rbx)
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L30448:
	.cfi_restore_state
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30373
.L30402:
	movzbl	%sil, %r8d
.L30374:
	movl	44(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r13, %rdi
	movq	%r11, 56(%rsp)
	movl	%r10d, 52(%rsp)
	call	z900_logical_to_main_l
	movq	56(%rsp), %r11
	movl	52(%rsp), %r10d
	jmp	.L30375
.L30450:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30379
.L30406:
	movzbl	%sil, %r8d
.L30380:
	movl	48(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r14, %rdi
	movq	%r11, 56(%rsp)
	movl	%r10d, 52(%rsp)
	call	z900_logical_to_main_l
	movq	56(%rsp), %r11
	movl	52(%rsp), %r10d
	jmp	.L30381
.L30449:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L30378
.L30377:
	movzbl	97(%rbx), %r8d
	jmp	.L30380
.L30447:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L30372
.L30371:
	movzbl	97(%rbx), %r8d
	jmp	.L30374
.L30395:
	andl	$16777215, %r12d
	andl	$16777215, %ebp
	xorl	%ecx, %ecx
	movq	$0, 160(%rbx)
	jmp	.L30384
.L30392:
	andl	$2, %edx
	cmpb	$1, %dl
	sbbq	%rdx, %rdx
	andl	$2, %edx
	subq	$6, %rdx
	jmp	.L30393
	.cfi_endproc
.LFE2829:
	.size	z900_compare_logical_character_long, .-z900_compare_logical_character_long
	.p2align 4,,15
	.globl	z900_compare_logical_long_extended
	.type	z900_compare_logical_long_extended, @function
z900_compare_logical_long_extended:
.LFB2830:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movl	(%rdi), %r11d
	bswap	%r11d
	movl	%r11d, %eax
	movl	%r11d, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%r11d, %ecx
	movl	%eax, %esi
	movl	%edx, %edi
	shrl	$12, %ecx
	movl	%r11d, %ebp
	andl	$15, %esi
	andl	$15, %edi
	andl	$4095, %ebp
	andl	$15, %ecx
	movl	%esi, 16(%rsp)
	movl	%edi, 20(%rsp)
	je	.L30452
	movslq	%ecx, %rcx
	addq	192(%rbx,%rcx,8), %rbp
	andq	120(%rbx), %rbp
.L30452:
	orl	%edx, %eax
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %al
	je	.L30453
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L30453:
	movq	120(%rbx), %r13
	movl	%ebp, %r11d
	movslq	16(%rsp), %rax
	movl	16(%rsp), %edi
	movq	%r13, %r14
	leaq	(%rbx,%rax,8), %rax
	andq	192(%rax), %r14
	movq	%rax, 24(%rsp)
	leal	1(%rdi), %edx
	movslq	20(%rsp), %rax
	movslq	%edx, %rdi
	movq	%rdi, 48(%rsp)
	leaq	(%rbx,%rax,8), %rax
	andq	192(%rax), %r13
	movq	%rax, 32(%rsp)
	movzbl	103(%rbx), %eax
	andl	$1, %eax
	je	.L30454
	movl	20(%rsp), %esi
	movq	192(%rbx,%rdi,8), %r12
	leal	1(%rsi), %edx
	movslq	%edx, %rsi
	movq	192(%rbx,%rsi,8), %rbp
	movq	%rsi, 40(%rsp)
.L30455:
	movq	%r12, %rsi
	orq	%rbp, %rsi
	je	.L30478
	movl	16(%rsp), %eax
	movl	$4096, %r15d
	addl	$5, %eax
	cltq
	movq	%rax, (%rsp)
	movl	20(%rsp), %eax
	addl	$5, %eax
	cltq
	movq	%rax, 8(%rsp)
	jmp	.L30457
	.p2align 4,,10
	.p2align 3
.L30459:
	testq	%rbp, %rbp
	movl	%r11d, %eax
	jne	.L30520
.L30465:
	cmpb	%al, %r10b
	jne	.L30521
.L30471:
	testq	%r12, %r12
	je	.L30473
	addq	$1, %r14
	subq	$1, %r12
	andq	120(%rbx), %r14
.L30473:
	testq	%rbp, %rbp
	je	.L30474
	addq	$1, %r13
	subq	$1, %rbp
	andq	120(%rbx), %r13
.L30474:
	movq	%rbp, %rax
	orq	%r12, %rax
	je	.L30522
	subl	$1, %r15d
	je	.L30523
.L30457:
	testq	%r12, %r12
	movl	%r11d, %r10d
	je	.L30459
	movq	(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L30460
	leal	1(%rax), %edx
	movl	%r14d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L30524
.L30461:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L30525
.L30462:
	movl	2224(%rbx), %edi
	movq	%r14, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L30482
	testb	$4, 46264(%rbx,%rcx)
	je	.L30482
	movq	%r14, %rsi
	xorq	26808(%rax), %rsi
	movq	%rsi, %rax
.L30464:
	testq	%rbp, %rbp
	movzbl	(%rax), %r10d
	movl	%r11d, %eax
	je	.L30465
.L30520:
	movq	8(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L30466
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L30526
.L30467:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L30527
.L30468:
	movl	2224(%rbx), %edi
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L30486
	testb	$4, 46264(%rbx,%rcx)
	je	.L30486
	movq	%r13, %rdi
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L30470:
	movzbl	(%rax), %eax
	cmpb	%al, %r10b
	je	.L30471
.L30521:
	cmpb	%r10b, %al
	movzbl	103(%rbx), %eax
	jbe	.L30472
	andl	$1, %eax
	movl	$1, %edx
.L30456:
	testb	%al, %al
	movq	24(%rsp), %rax
	je	.L30476
	movq	%r14, 192(%rax)
	movq	48(%rsp), %rax
	movq	%r12, 192(%rbx,%rax,8)
	movq	32(%rsp), %rax
	movq	%r13, 192(%rax)
	movq	40(%rsp), %rax
	movq	%rbp, 192(%rbx,%rax,8)
.L30477:
	movb	%dl, 100(%rbx)
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L30454:
	.cfi_restore_state
	movl	20(%rsp), %esi
	movl	192(%rbx,%rdi,8), %r12d
	leal	1(%rsi), %edx
	movslq	%edx, %rsi
	movq	%rsi, 40(%rsp)
	movl	192(%rbx,%rsi,8), %ebp
	jmp	.L30455
	.p2align 4,,10
	.p2align 3
.L30476:
	movl	%r14d, 192(%rax)
	movq	48(%rsp), %rax
	movl	%r12d, 192(%rbx,%rax,8)
	movq	32(%rsp), %rax
	movl	%r13d, 192(%rax)
	movq	40(%rsp), %rax
	movl	%ebp, 192(%rbx,%rax,8)
	jmp	.L30477
	.p2align 4,,10
	.p2align 3
.L30522:
	movzbl	103(%rbx), %eax
	xorl	%edx, %edx
	xorl	%ebp, %ebp
	xorl	%r12d, %r12d
	andl	$1, %eax
	jmp	.L30456
	.p2align 4,,10
	.p2align 3
.L30472:
	andl	$1, %eax
	movl	$2, %edx
	jmp	.L30456
.L30523:
	movzbl	103(%rbx), %eax
	movl	$3, %edx
	andl	$1, %eax
	jmp	.L30456
.L30478:
	xorl	%edx, %edx
	xorl	%ebp, %ebp
	xorl	%r12d, %r12d
	jmp	.L30456
.L30525:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30462
.L30482:
	movzbl	%sil, %r8d
.L30463:
	movl	16(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r14, %rdi
	movl	%r11d, 56(%rsp)
	call	z900_logical_to_main_l
	movl	56(%rsp), %r11d
	jmp	.L30464
.L30527:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30468
.L30486:
	movzbl	%sil, %r8d
.L30469:
	movl	20(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r13, %rdi
	movl	%r10d, 60(%rsp)
	movl	%r11d, 56(%rsp)
	call	z900_logical_to_main_l
	movl	60(%rsp), %r10d
	movl	56(%rsp), %r11d
	jmp	.L30470
.L30524:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L30461
.L30460:
	movzbl	97(%rbx), %r8d
	jmp	.L30463
.L30526:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L30467
.L30466:
	movzbl	97(%rbx), %r8d
	jmp	.L30469
	.cfi_endproc
.LFE2830:
	.size	z900_compare_logical_long_extended, .-z900_compare_logical_long_extended
	.p2align 4,,15
	.globl	z900_compare_logical_string
	.type	z900_compare_logical_string, @function
z900_compare_logical_string:
.LFB2831:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movzbl	3(%rdi), %r14d
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movzbl	%r14b, %eax
	andl	$15, %r14d
	movl	%eax, 8(%rsp)
	movzbl	%r14b, %eax
	sarl	$4, 8(%rsp)
	movl	%eax, 12(%rsp)
	testl	$-256, 192(%rsi)
	jne	.L30587
.L30529:
	movl	8(%rsp), %edi
	movzbl	%r14b, %r14d
	movl	$4096, %r15d
	movq	120(%rbx), %rbp
	movzbl	192(%rbx), %r13d
	leal	5(%rdi), %r11d
	movslq	%edi, %rax
	leaq	(%rbx,%rax,8), %rax
	movq	%rbp, %r12
	movslq	%r11d, %r11
	movq	%rax, 24(%rsp)
	andq	192(%rax), %r12
	leaq	(%rbx,%r14,8), %rax
	movq	%rax, 16(%rsp)
	andq	192(%rax), %rbp
	movl	12(%rsp), %eax
	leal	5(%rax), %r10d
	movslq	%r10d, %r10
	jmp	.L30543
	.p2align 4,,10
	.p2align 3
.L30539:
	testb	%dl, %dl
	jne	.L30550
.L30554:
	cmpb	%al, %r13b
	jne	.L30588
.L30553:
	cmpb	%al, %r14b
	.p2align 4,,3
	ja	.L30551
	testb	%cl, %cl
	.p2align 4,,3
	jne	.L30551
	movq	120(%rbx), %rax
	addq	$1, %r12
	addq	$1, %rbp
	andq	%rax, %r12
	andq	%rax, %rbp
	subl	$1, %r15d
	je	.L30589
.L30543:
	movl	1892(%rbx,%r11,4), %eax
	testl	%eax, %eax
	je	.L30530
	movl	%r12d, %esi
	addl	$1, %eax
	shrl	$12, %esi
	cltq
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L30590
.L30531:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L30591
.L30532:
	movl	2224(%rbx), %edi
	movq	%r12, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L30548
	testb	$4, 46264(%rbx,%rsi)
	je	.L30548
	movq	%r12, %rax
	movzbl	%cl, %r8d
	xorq	26808(%rdx), %rax
.L30534:
	movzbl	(%rax), %r14d
	movl	1892(%rbx,%r10,4), %eax
	testl	%eax, %eax
	je	.L30535
	movl	%ebp, %esi
	addl	$1, %eax
	shrl	$12, %esi
	cltq
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movq	2232(%rdx), %rcx
	cmpq	%rcx, 320(%rbx,%rax,8)
	jne	.L30592
.L30536:
	testb	%r8b, %r8b
	jne	.L30593
.L30537:
	movl	2224(%rbx), %edi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L30535
	testb	$4, 46264(%rbx,%rsi)
	je	.L30535
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
.L30538:
	movzbl	(%rax), %eax
	cmpb	%r14b, %r13b
	sete	%dl
	cmpb	%al, %r13b
	sete	%cl
	jne	.L30539
	testb	%dl, %dl
	je	.L30554
	movb	$0, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L30588:
	.cfi_restore_state
	cmpb	%al, %r14b
	jae	.L30553
	.p2align 4,,10
	.p2align 3
.L30550:
	movl	$1, %eax
.L30541:
	testb	$1, 103(%rbx)
	movq	24(%rsp), %rdi
	je	.L30544
	movq	%r12, 192(%rdi)
	movq	16(%rsp), %rdi
	movq	%rbp, 192(%rdi)
.L30545:
	movb	%al, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L30544:
	.cfi_restore_state
	movl	%r12d, 192(%rdi)
	movq	16(%rsp), %rdi
	movl	%ebp, 192(%rdi)
	jmp	.L30545
	.p2align 4,,10
	.p2align 3
.L30587:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L30529
	.p2align 4,,10
	.p2align 3
.L30551:
	movl	$2, %eax
	jmp	.L30541
	.p2align 4,,10
	.p2align 3
.L30589:
	movl	$3, %eax
	jmp	.L30541
.L30592:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L30536
.L30535:
	movl	12(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movq	%r10, 40(%rsp)
	movq	%r11, 32(%rsp)
	call	z900_logical_to_main_l
	movq	40(%rsp), %r10
	movq	32(%rsp), %r11
	jmp	.L30538
.L30591:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L30532
.L30548:
	movzbl	%cl, %r8d
.L30533:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r12, %rdi
	movq	%r10, 40(%rsp)
	movq	%r11, 32(%rsp)
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	40(%rsp), %r10
	movq	32(%rsp), %r11
	jmp	.L30534
.L30590:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rax)
	jne	.L30531
.L30530:
	movzbl	97(%rbx), %r8d
	jmp	.L30533
.L30593:
	cmpb	%r8b, 43192(%rbx,%rsi)
	je	.L30537
	jmp	.L30535
	.cfi_endproc
.LFE2831:
	.size	z900_compare_logical_string, .-z900_compare_logical_string
	.p2align 4,,15
	.globl	z900_compare_until_substring_equal
	.type	z900_compare_until_substring_equal, @function
z900_compare_until_substring_equal:
.LFB2832:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	movzbl	3(%rdi), %eax
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	movzbl	%al, %esi
	movl	%eax, %ebp
	movl	%esi, 8(%rsp)
	andl	$15, %ebp
	sarl	$4, 8(%rsp)
	movzbl	%bpl, %ecx
	movl	%ecx, 84(%rsp)
	testb	$1, 8(%rsp)
	jne	.L30595
	testb	$1, %al
	jne	.L30595
.L30596:
	movzbl	192(%rbx), %eax
	movzbl	%bpl, %ebp
	movzbl	103(%rbx), %edx
	movzbl	200(%rbx), %r11d
	movb	%al, 15(%rsp)
	movslq	8(%rsp), %rax
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, %rsi
	movq	%rax, 24(%rsp)
	movq	120(%rbx), %rax
	movq	%rax, %rdi
	andq	192(%rsi), %rdi
	movq	%rdi, 32(%rsp)
	leaq	(%rbx,%rbp,8), %rdi
	andq	192(%rdi), %rax
	andl	$1, %edx
	movq	%rdi, 16(%rsp)
	movq	%rax, 40(%rsp)
	movq	%rsi, %rax
	je	.L30597
	movq	32(%rsp), %rsi
	movq	%rsi, 192(%rax)
	movq	%rdi, %rax
	movq	40(%rsp), %rdi
	movq	%rdi, 192(%rax)
	movl	8(%rsp), %eax
	addl	$1, %eax
	cltq
	movq	%rax, 56(%rsp)
	movq	192(%rbx,%rax,8), %rax
	movq	%rax, 72(%rsp)
	movl	84(%rsp), %eax
	addl	$1, %eax
	cmpb	$0, 15(%rsp)
	cltq
	movq	%rax, 64(%rsp)
	movq	192(%rbx,%rax,8), %rax
	movq	%rax, 48(%rsp)
	je	.L30680
.L30599:
	cmpq	$0, 48(%rsp)
	jle	.L30681
.L30601:
	movl	84(%rsp), %eax
	cmpl	%eax, 8(%rsp)
	je	.L30602
	cmpq	$0, 48(%rsp)
	jle	.L30682
.L30644:
	movl	8(%rsp), %eax
	xorl	%r15d, %r15d
	movl	$0, 80(%rsp)
	movq	48(%rsp), %r13
	movq	72(%rsp), %r14
	movq	40(%rsp), %r12
	addl	$5, %eax
	movq	32(%rsp), %rbp
	cltq
	movq	%rax, 88(%rsp)
	movl	84(%rsp), %eax
	addl	$5, %eax
	cltq
	movq	%rax, 96(%rsp)
	jmp	.L30605
	.p2align 4,,10
	.p2align 3
.L30691:
	movq	24(%rsp), %rsi
	movq	64(%rsp), %rcx
	movq	%rbp, 192(%rsi)
	movq	16(%rsp), %rsi
	movq	%r12, 192(%rsi)
	movq	56(%rsp), %rsi
	movq	%r14, 192(%rbx,%rsi,8)
	movq	%r13, 192(%rbx,%rcx,8)
.L30625:
	cmpb	15(%rsp), %r15b
	je	.L30683
	addl	$1, 80(%rsp)
	testq	%r13, %r13
	jle	.L30684
.L30628:
	testb	%r15b, %r15b
	je	.L30685
.L30605:
	testq	%r14, %r14
	movl	%r11d, %r10d
	jle	.L30608
	movq	88(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L30609
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L30686
.L30610:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L30687
.L30611:
	movl	2224(%rbx), %edi
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L30637
	testb	$4, 46264(%rbx,%rcx)
	je	.L30637
	movq	%rbp, %rsi
	xorq	26808(%rax), %rsi
	movq	%rsi, %rax
.L30613:
	movzbl	(%rax), %r10d
.L30608:
	testq	%r13, %r13
	movl	%r11d, %eax
	jle	.L30614
	movq	96(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L30615
	leal	1(%rax), %edx
	movl	%r12d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L30688
.L30616:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L30689
.L30617:
	movl	2224(%rbx), %edi
	movq	%r12, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L30641
	testb	$4, 46264(%rbx,%rcx)
	je	.L30641
	movq	%r12, %rdi
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L30619:
	movzbl	(%rax), %eax
.L30614:
	cmpb	%al, %r10b
	je	.L30690
	movl	$2, %eax
	xorl	%r15d, %r15d
	movl	$2, %edx
.L30620:
	testq	%r14, %r14
	jle	.L30622
	addq	$1, %rbp
	subq	$1, %r14
	andq	120(%rbx), %rbp
.L30622:
	testq	%r13, %r13
	jle	.L30623
	addq	$1, %r12
	subq	$1, %r13
	andq	120(%rbx), %r12
.L30623:
	testl	$2047, %ebp
	je	.L30624
	testl	$2047, %r12d
	jne	.L30625
.L30624:
	testb	$1, 103(%rbx)
	jne	.L30691
	movq	24(%rsp), %rdi
	movq	16(%rsp), %rsi
	movq	56(%rsp), %rcx
	movl	%ebp, 192(%rdi)
	movq	64(%rsp), %rdi
	movl	%r12d, 192(%rsi)
	movl	%r14d, 192(%rbx,%rcx,8)
	movl	%r13d, 192(%rbx,%rdi,8)
	jmp	.L30625
	.p2align 4,,10
	.p2align 3
.L30595:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L30596
	.p2align 4,,10
	.p2align 3
.L30597:
	movl	32(%rsp), %ecx
	movq	16(%rsp), %rax
	movl	%ecx, 192(%rsi)
	movl	40(%rsp), %esi
	movl	%esi, 192(%rax)
	movl	8(%rsp), %eax
	addl	$1, %eax
	cltq
	movq	%rax, 56(%rsp)
	movslq	192(%rbx,%rax,8), %rax
	movq	%rax, 72(%rsp)
	movl	84(%rsp), %eax
	addl	$1, %eax
	cmpb	$0, 15(%rsp)
	cltq
	movq	%rax, 64(%rsp)
	movslq	192(%rbx,%rax,8), %rax
	movq	%rax, 48(%rsp)
	jne	.L30599
.L30680:
	movb	$0, 100(%rbx)
	addq	$120, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L30681:
	.cfi_restore_state
	cmpq	$0, 72(%rsp)
	jg	.L30601
	movb	$2, 100(%rbx)
.L30594:
	addq	$120, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L30690:
	.cfi_restore_state
	movq	48(%rsp), %rax
	testb	%r15b, %r15b
	movl	$1, %edx
	cmove	%r13, %rax
	movq	%rax, 48(%rsp)
	movq	72(%rsp), %rax
	cmove	%r14, %rax
	movq	%rax, 72(%rsp)
	movq	40(%rsp), %rax
	cmove	%r12, %rax
	movq	%rax, 40(%rsp)
	movq	32(%rsp), %rax
	cmove	%rbp, %rax
	addl	$1, %r15d
	movq	%rax, 32(%rsp)
	movl	$1, %eax
	jmp	.L30620
	.p2align 4,,10
	.p2align 3
.L30683:
	movzbl	103(%rbx), %edx
	xorl	%eax, %eax
	andl	$1, %edx
.L30603:
	testb	%dl, %dl
	movq	24(%rsp), %rsi
	je	.L30629
	movq	32(%rsp), %rdi
	movq	56(%rsp), %rcx
	movq	%rdi, 192(%rsi)
	movq	16(%rsp), %rsi
	movq	40(%rsp), %rdi
	movq	%rdi, 192(%rsi)
	movq	72(%rsp), %rsi
	movq	64(%rsp), %rdi
	movq	%rsi, 192(%rbx,%rcx,8)
	movq	48(%rsp), %rcx
	movq	%rcx, 192(%rbx,%rdi,8)
	jmp	.L30630
	.p2align 4,,10
	.p2align 3
.L30684:
	testq	%r14, %r14
	jg	.L30628
	cmpl	$1, %edx
	je	.L30692
.L30606:
	testb	$1, 103(%rbx)
	movq	24(%rsp), %rdi
	je	.L30631
	movq	16(%rsp), %rcx
	movq	%rbp, 192(%rdi)
	movq	56(%rsp), %rdi
	movq	%r12, 192(%rcx)
	movq	64(%rsp), %rcx
	movq	%r14, 192(%rbx,%rdi,8)
	movq	%r13, 192(%rbx,%rcx,8)
.L30630:
	movb	%al, 100(%rbx)
	addq	$120, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L30631:
	.cfi_restore_state
	movq	16(%rsp), %rcx
	movl	%ebp, 192(%rdi)
	movq	56(%rsp), %rdi
	movl	%r12d, 192(%rcx)
	movq	64(%rsp), %rcx
	movl	%r14d, 192(%rbx,%rdi,8)
	movl	%r13d, 192(%rbx,%rcx,8)
	jmp	.L30630
	.p2align 4,,10
	.p2align 3
.L30685:
	cmpl	$4095, 80(%rsp)
	jle	.L30605
	movl	$3, %eax
	jmp	.L30606
	.p2align 4,,10
	.p2align 3
.L30602:
	movzbl	15(%rsp), %eax
	cmpq	%rax, 72(%rsp)
	setl	100(%rbx)
	jmp	.L30594
	.p2align 4,,10
	.p2align 3
.L30629:
	movl	32(%rsp), %edi
	movq	16(%rsp), %rcx
	movl	%edi, 192(%rsi)
	movl	40(%rsp), %esi
	movq	56(%rsp), %rdi
	movl	%esi, 192(%rcx)
	movl	72(%rsp), %ecx
	movq	64(%rsp), %rsi
	movl	%ecx, 192(%rbx,%rdi,8)
	movl	48(%rsp), %edi
	movl	%edi, 192(%rbx,%rsi,8)
	jmp	.L30630
.L30682:
	cmpq	$0, 72(%rsp)
	jg	.L30644
	xorl	%eax, %eax
	jmp	.L30603
.L30687:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30611
.L30637:
	movzbl	%sil, %r8d
.L30612:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movl	%r11d, 104(%rsp)
	call	z900_logical_to_main_l
	movl	104(%rsp), %r11d
	jmp	.L30613
.L30689:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30617
.L30641:
	movzbl	%sil, %r8d
.L30618:
	movl	84(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r12, %rdi
	movl	%r11d, 108(%rsp)
	movl	%r10d, 104(%rsp)
	call	z900_logical_to_main_l
	movl	108(%rsp), %r11d
	movl	104(%rsp), %r10d
	jmp	.L30619
.L30686:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L30610
.L30609:
	movzbl	97(%rbx), %r8d
	jmp	.L30612
.L30688:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L30616
.L30615:
	movzbl	97(%rbx), %r8d
	jmp	.L30618
.L30692:
	movzbl	103(%rbx), %edx
	andl	$1, %edx
	jmp	.L30603
	.cfi_endproc
.LFE2832:
	.size	z900_compare_until_substring_equal, .-z900_compare_until_substring_equal
	.p2align 4,,15
	.globl	z900_convert_utf16_to_utf8
	.type	z900_convert_utf16_to_utf8, @function
z900_convert_utf16_to_utf8:
.LFB2833:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rdi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$152, %rsp
	.cfi_def_cfa_offset 208
	movzbl	3(%rdi), %eax
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	movzbl	%al, %esi
	movl	%eax, %r13d
	movl	%esi, 68(%rsp)
	andl	$15, %r13d
	sarl	$4, 68(%rsp)
	movzbl	%r13b, %esi
	movl	%esi, 12(%rsp)
	testb	$1, 68(%rsp)
	jne	.L30694
	testb	$1, %al
	jne	.L30694
.L30695:
	movzbl	%r13b, %r13d
	movzbl	2(%rbp), %ecx
	leaq	(%rbx,%r13,8), %rsi
	movslq	68(%rsp), %rax
	movq	%rsi, 24(%rsp)
	movq	192(%rsi), %rbp
	movl	68(%rsp), %esi
	testb	$1, 103(%rbx)
	leaq	(%rbx,%rax,8), %rax
	leal	1(%rsi), %edx
	movq	%rax, 16(%rsp)
	movq	192(%rax), %r12
	movslq	%edx, %rsi
	movq	120(%rbx), %rax
	movq	%rsi, 32(%rsp)
	je	.L30696
	movl	12(%rsp), %edi
	movq	192(%rbx,%rsi,8), %r10
	leal	1(%rdi), %edx
	movslq	%edx, %rdi
	movq	192(%rbx,%rdi,8), %r14
	movq	%rdi, 40(%rsp)
.L30697:
	cmpq	$1, %r14
	ja	.L30878
.L30766:
	xorl	%eax, %eax
	.p2align 4,,10
	.p2align 3
.L30699:
	movb	%al, 100(%rbx)
.L30693:
	addq	$152, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L30694:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L30695
	.p2align 4,,10
	.p2align 3
.L30878:
	testq	%r10, %r10
	je	.L30725
	testq	%r10, %r10
	.p2align 4,,5
	je	.L30766
	andq	%rax, %r12
	andq	%rax, %rbp
	movl	68(%rsp), %eax
	andl	$16, %ecx
	movl	$4096, %r11d
	movl	$0, 64(%rsp)
	movb	%cl, 107(%rsp)
	addl	$5, %eax
	cltq
	movq	%rax, 48(%rsp)
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 72(%rsp)
	jmp	.L30700
	.p2align 4,,10
	.p2align 3
.L30884:
	movb	%r13b, 128(%rsp)
	movq	%rax, %r14
	xorl	%r13d, %r13d
	movl	$1, 56(%rsp)
	movl	$1, %r15d
	movl	$2047, %eax
.L30711:
	cmpq	%r10, %r13
	jae	.L30725
.L30885:
	movl	%r12d, %ecx
	andl	$2047, %ecx
	cmpl	%eax, %ecx
	jg	.L30726
	movq	48(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L30727
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L30879
.L30728:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L30880
.L30729:
	movl	2224(%rbx), %edi
	movq	%r12, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L30776
	testb	$2, 46264(%rbx,%rcx)
	je	.L30776
	movq	%r12, %rax
	xorq	26808(%rdx), %rax
.L30731:
	movq	%rax, %rdx
	xorl	%eax, %eax
	leaq	128(%rsp), %rcx
	testb	$4, %r15b
	je	.L30735
	movl	(%rcx), %eax
	movl	%eax, (%rdx)
	movl	$4, %eax
.L30735:
	testb	$2, %r15b
	je	.L30736
	movzwl	(%rcx,%rax), %esi
	movw	%si, (%rdx,%rax)
	addq	$2, %rax
.L30736:
	andl	$1, %r15d
	je	.L30738
	movzbl	(%rcx,%rax), %ecx
	movb	%cl, (%rdx,%rax)
.L30738:
	leaq	1(%r13,%r12), %r12
	subq	%r13, %r10
	movq	16(%rsp), %rax
	andq	120(%rbx), %r12
	subq	$1, %r10
	testb	$1, 103(%rbx)
	je	.L30761
	movq	%r12, 192(%rax)
	movq	32(%rsp), %rax
	movq	%r10, 192(%rbx,%rax,8)
	movq	24(%rsp), %rax
	movq	%rbp, 192(%rax)
	movq	40(%rsp), %rax
	movq	%r14, 192(%rbx,%rax,8)
.L30762:
	testq	%r14, %r14
	setne	%al
	testq	%r10, %r10
	jne	.L30763
	testb	%al, %al
	movl	$1, %edx
	cmove	64(%rsp), %edx
	movl	%edx, 64(%rsp)
.L30763:
	testq	%r10, %r10
	je	.L30780
	testb	%al, %al
	je	.L30780
	subl	$1, %r11d
	je	.L30767
	cmpq	$1, %r14
	jbe	.L30780
.L30700:
	testb	$1, %bpl
	movl	%ebp, %ecx
	jne	.L30881
.L30702:
	movl	12(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L30704
	shrl	$12, %ecx
	addl	$1, %eax
	andl	$1023, %ecx
	cltq
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L30882
.L30705:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L30883
.L30706:
	movl	2224(%rbx), %edi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L30770
	testb	$4, 46264(%rbx,%rcx)
	je	.L30770
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
.L30708:
	movzwl	(%rax), %r13d
#APP
# 477 "vstore.h" 1
	rorw $8, %r13w
# 0 "" 2
#NO_APP
.L30709:
	movq	120(%rbx), %rdx
	leaq	-2(%r14), %rax
	addq	$2, %rbp
	andq	%rdx, %rbp
	cmpw	$127, %r13w
	jbe	.L30884
	cmpw	$2047, %r13w
	ja	.L30712
	movl	%r13d, %ecx
	andl	$63, %r13d
	movq	%rax, %r14
	orl	$-128, %r13d
	shrw	$6, %cx
	movl	$2, 56(%rsp)
	movb	%r13b, 129(%rsp)
	orl	$-64, %ecx
	movl	$2046, %eax
	movl	$1, %r13d
	movb	%cl, 128(%rsp)
	movl	$2, %r15d
	cmpq	%r10, %r13
	jb	.L30885
	.p2align 4,,10
	.p2align 3
.L30725:
	movl	$1, %eax
	jmp	.L30699
	.p2align 4,,10
	.p2align 3
.L30696:
	movl	12(%rsp), %edi
	movl	192(%rbx,%rsi,8), %r10d
	leal	1(%rdi), %edx
	movslq	%edx, %rdi
	movq	%rdi, 40(%rsp)
	movl	192(%rbx,%rdi,8), %r14d
	jmp	.L30697
	.p2align 4,,10
	.p2align 3
.L30761:
	movl	%r12d, 192(%rax)
	movq	32(%rsp), %rax
	movl	%r10d, 192(%rbx,%rax,8)
	movq	24(%rsp), %rax
	movl	%ebp, 192(%rax)
	movq	40(%rsp), %rax
	movl	%r14d, 192(%rbx,%rax,8)
	jmp	.L30762
	.p2align 4,,10
	.p2align 3
.L30712:
	leal	10240(%r13), %ecx
	cmpw	$1023, %cx
	jbe	.L30713
	movl	%r13d, %ecx
	movq	%rax, %r14
	movl	$3, 56(%rsp)
	shrw	$12, %cx
	movl	$3, %r15d
	movl	$2045, %eax
	orl	$-32, %ecx
	movb	%cl, 128(%rsp)
	movl	%r13d, %ecx
	andl	$63, %r13d
	andl	$4032, %ecx
	orl	$-128, %r13d
	sarl	$6, %ecx
	movb	%r13b, 130(%rsp)
	movl	$2, %r13d
	orl	$-128, %ecx
	movb	%cl, 129(%rsp)
	jmp	.L30711
	.p2align 4,,10
	.p2align 3
.L30713:
	cmpq	$1, %rax
	jbe	.L30780
	testb	$1, %bpl
	movl	%ebp, %esi
	jne	.L30886
.L30715:
	movl	12(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L30717
	leal	1(%rax), %ecx
	shrl	$12, %esi
	andl	$1023, %esi
	movslq	%ecx, %rcx
	leaq	(%rbx,%rsi,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rcx,8)
	jne	.L30887
.L30718:
	movzbl	97(%rbx), %edi
	testb	%dil, %dil
	jne	.L30888
.L30719:
	movl	2224(%rbx), %r8d
	movq	%rbp, %rcx
	andq	$-4194304, %rcx
	orq	%r8, %rcx
	cmpq	10424(%rax), %rcx
	jne	.L30773
	testb	$4, 46264(%rbx,%rsi)
	je	.L30773
	movq	%rbp, %rsi
	xorq	26808(%rax), %rsi
	movq	%rsi, %rax
.L30721:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L30722:
	addq	$2, %rbp
	subq	$4, %r14
	andq	%rdx, %rbp
	cmpb	$0, 107(%rsp)
	je	.L30723
	leal	9216(%rax), %ecx
	cmpw	$768, %cx
	ja	.L30889
.L30723:
	movl	%r13d, %esi
	movl	$4, 56(%rsp)
	movl	$4, %r15d
	andl	$960, %esi
	sarl	$6, %esi
	addl	$1, %esi
	movl	%esi, %ecx
	andl	$3, %esi
	shrw	$2, %cx
	sall	$4, %esi
	orl	$-16, %ecx
	movb	%cl, 128(%rsp)
	movl	%r13d, %ecx
	andl	$3, %r13d
	andl	$60, %ecx
	sall	$4, %r13d
	sarl	$2, %ecx
	orl	$-128, %r13d
	orl	$-128, %ecx
	orl	%esi, %ecx
	movb	%cl, 129(%rsp)
	movl	%eax, %ecx
	andl	$63, %eax
	andl	$960, %ecx
	orl	$-128, %eax
	sarl	$6, %ecx
	movb	%al, 131(%rsp)
	movl	$2044, %eax
	orl	%ecx, %r13d
	movb	%r13b, 130(%rsp)
	movl	$3, %r13d
	jmp	.L30711
	.p2align 4,,10
	.p2align 3
.L30780:
	movzbl	64(%rsp), %eax
	jmp	.L30699
.L30767:
	movl	$3, %eax
	jmp	.L30699
.L30889:
	movb	$2, 100(%rbx)
	jmp	.L30693
.L30883:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30706
.L30770:
	movzbl	%sil, %r8d
.L30707:
	movl	12(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movq	%r10, 80(%rsp)
	movl	%r11d, 56(%rsp)
	call	z900_logical_to_main_l
	movq	80(%rsp), %r10
	movl	56(%rsp), %r11d
	jmp	.L30708
.L30880:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30729
.L30776:
	movzbl	%sil, %r8d
.L30730:
	movl	68(%rsp), %esi
	movq	%r15, %r9
	movl	$2, %ecx
	movq	%rbx, %rdx
	movq	%r12, %rdi
	movq	%r10, 80(%rsp)
	movl	%r11d, 56(%rsp)
	call	z900_logical_to_main_l
	movq	80(%rsp), %r10
	movl	56(%rsp), %r11d
	jmp	.L30731
.L30879:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L30728
.L30727:
	movzbl	97(%rbx), %r8d
	jmp	.L30730
.L30726:
	movq	72(%rsp), %rax
	movl	$2048, 80(%rsp)
	subl	%ecx, 80(%rsp)
	movl	%r12d, 108(%rsp)
	movl	1892(%rax), %ecx
	testl	%ecx, %ecx
	je	.L30739
	leal	1(%rcx), %edi
	movl	%r12d, %ecx
	shrl	$12, %ecx
	movslq	%edi, %rax
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rsi
	movq	2232(%rsi), %r9
	cmpq	%r9, 320(%rbx,%rax,8)
	jne	.L30890
.L30740:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L30891
.L30741:
	movl	2224(%rbx), %r9d
	movq	%r12, %r8
	andq	$-4194304, %r8
	orq	%r9, %r8
	cmpq	10424(%rsi), %r8
	jne	.L30779
	testb	$1, 46264(%rbx,%rcx)
	je	.L30779
	movq	35000(%rsi), %rcx
	movl	80(%rsp), %r15d
	movq	%rcx, 984(%rbx)
	movq	%rcx, 96(%rsp)
	movq	%r12, %rcx
	xorq	26808(%rsi), %rcx
	movq	%rcx, 88(%rsp)
.L30743:
	movl	108(%rsp), %ecx
	movslq	%edi, %rdi
	addl	80(%rsp), %ecx
	andl	%edx, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rsi
	movq	2232(%rsi), %r9
	cmpq	%r9, 320(%rbx,%rdi,8)
	jne	.L30892
.L30745:
	leaq	(%r15,%r12), %rdi
	andq	%rdx, %rdi
	testb	%al, %al
	jne	.L30893
.L30747:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rsi), %rdx
	jne	.L30746
	testb	$2, 46264(%rbx,%rcx)
	je	.L30746
	movl	56(%rsp), %eax
	xorq	26808(%rsi), %rdi
	subl	80(%rsp), %eax
	movq	%rdi, %r9
	cltq
	movq	%rax, 56(%rsp)
.L30748:
	movq	96(%rsp), %rax
	leaq	128(%rsp), %r8
	movq	88(%rsp), %rdi
	movq	%r8, %rsi
	orb	$6, (%rax)
	cmpq	$8, %r15
	jae	.L30894
.L30749:
	xorl	%eax, %eax
	testb	$4, %r15b
	je	.L30752
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L30752:
	testb	$2, %r15b
	je	.L30753
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L30753:
	testb	$1, %r15b
	je	.L30751
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L30751:
	cmpq	$8, 56(%rsp)
	leaq	(%r8,%r15), %rsi
	movq	%r9, %rdi
	movq	%rsi, %rdx
	jae	.L30895
.L30755:
	xorl	%eax, %eax
	testb	$4, 56(%rsp)
	je	.L30758
	movl	(%rdx), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L30758:
	testb	$2, 56(%rsp)
	je	.L30759
	movzwl	(%rdx,%rax), %ecx
	movw	%cx, (%rdi,%rax)
	addq	$2, %rax
.L30759:
	testb	$1, 56(%rsp)
	je	.L30738
	movzbl	(%rdx,%rax), %edx
	movb	%dl, (%rdi,%rax)
	jmp	.L30738
.L30882:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L30705
.L30704:
	movzbl	97(%rbx), %r8d
	jmp	.L30707
.L30881:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	jne	.L30702
	movl	12(%rsp), %esi
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movq	%r10, 80(%rsp)
	movl	%r11d, 56(%rsp)
	call	z900_vfetch2_full
	movq	80(%rsp), %r10
	movl	%eax, %r13d
	movl	56(%rsp), %r11d
	jmp	.L30709
.L30895:
	cmpq	$127, 56(%rsp)
	ja	.L30896
	movq	56(%rsp), %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rsi, %rdx
	jmp	.L30755
.L30894:
	cmpq	$127, %r15
	ja	.L30897
	movq	%r15, %rcx
	movq	%r8, %rsi
	shrq	$3, %rcx
	rep movsq
	jmp	.L30749
.L30896:
	movq	56(%rsp), %rdx
	movq	%r10, 88(%rsp)
	movl	%r11d, 80(%rsp)
	call	memcpy
	movl	80(%rsp), %r11d
	movq	88(%rsp), %r10
	jmp	.L30738
.L30897:
	movq	%r15, %rdx
	movq	%r10, 112(%rsp)
	movl	%r11d, 108(%rsp)
	movq	%r9, 96(%rsp)
	movq	%r8, 80(%rsp)
	call	memcpy
	movq	80(%rsp), %r8
	movq	96(%rsp), %r9
	movl	108(%rsp), %r11d
	movq	112(%rsp), %r10
	jmp	.L30751
.L30887:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rcx)
	jne	.L30718
.L30717:
	movzbl	97(%rbx), %r8d
.L30720:
	movl	12(%rsp), %esi
	movq	%rbx, %rdx
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdi
	movq	%r10, 80(%rsp)
	movl	%r11d, 56(%rsp)
	call	z900_logical_to_main_l
	movq	120(%rbx), %rdx
	movq	80(%rsp), %r10
	movl	56(%rsp), %r11d
	jmp	.L30721
.L30888:
	cmpb	43192(%rbx,%rsi), %dil
	je	.L30719
.L30773:
	movzbl	%dil, %r8d
	jmp	.L30720
.L30891:
	cmpb	43192(%rbx,%rcx), %al
	je	.L30741
.L30779:
	movzbl	%al, %r8d
.L30742:
	movl	80(%rsp), %r15d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movl	68(%rsp), %esi
	movq	%r12, %rdi
	movq	%r10, 120(%rsp)
	movl	%r11d, 112(%rsp)
	movq	%r15, %r9
	call	z900_logical_to_main_l
	movl	112(%rsp), %r11d
	movq	%rax, 88(%rsp)
	movq	984(%rbx), %rax
	movq	120(%rsp), %r10
	movq	%rax, 96(%rsp)
	movq	72(%rsp), %rax
	movl	1892(%rax), %ecx
	movzbl	97(%rbx), %eax
	testl	%ecx, %ecx
	jne	.L30898
	leaq	(%r12,%r15), %rdi
	andq	120(%rbx), %rdi
.L30746:
	movl	56(%rsp), %edx
	movzbl	%al, %r8d
	movl	$2, %ecx
	movq	%r10, 112(%rsp)
	movl	%r11d, 108(%rsp)
	subl	80(%rsp), %edx
	movslq	%edx, %rsi
	movq	%rbx, %rdx
	movq	%rsi, %r9
	movq	%rsi, 56(%rsp)
	movl	68(%rsp), %esi
	call	z900_logical_to_main_l
	movq	112(%rsp), %r10
	movq	%rax, %r9
	movl	108(%rsp), %r11d
	jmp	.L30748
.L30893:
	cmpb	%al, 43192(%rbx,%rcx)
	je	.L30747
	jmp	.L30746
.L30892:
	movzbl	1976(%rbx,%rdi), %edi
	testb	%dil, 44216(%rbx,%rcx)
	jne	.L30745
	leaq	(%r15,%r12), %rdi
	andq	%rdx, %rdi
	jmp	.L30746
.L30890:
	movzbl	44216(%rbx,%rcx), %r8d
	testb	%r8b, 1976(%rbx,%rax)
	jne	.L30740
.L30739:
	movzbl	97(%rbx), %r8d
	jmp	.L30742
.L30886:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	jne	.L30715
	movl	12(%rsp), %esi
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movq	%r10, 80(%rsp)
	movl	%r11d, 56(%rsp)
	call	z900_vfetch2_full
	movq	120(%rbx), %rdx
	movq	80(%rsp), %r10
	movl	56(%rsp), %r11d
	jmp	.L30722
.L30898:
	movq	120(%rbx), %rdx
	leal	1(%rcx), %edi
	jmp	.L30743
	.cfi_endproc
.LFE2833:
	.size	z900_convert_utf16_to_utf8, .-z900_convert_utf16_to_utf8
	.p2align 4,,15
	.globl	z900_convert_utf8_to_utf16
	.type	z900_convert_utf8_to_utf16, @function
z900_convert_utf8_to_utf16:
.LFB2834:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rdi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	movzbl	3(%rdi), %eax
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movzbl	%al, %edi
	movl	%edi, 56(%rsp)
	movl	%eax, %edi
	sarl	$4, 56(%rsp)
	andl	$15, %edi
	movl	%edi, 88(%rsp)
	testb	$1, 56(%rsp)
	jne	.L30900
	testb	$1, %al
	jne	.L30900
.L30901:
	movslq	88(%rsp), %rsi
	movslq	56(%rsp), %rax
	movzbl	2(%rbp), %ecx
	testb	$1, 103(%rbx)
	movq	%rsi, 24(%rsp)
	movq	192(%rbx,%rsi,8), %rbp
	movl	56(%rsp), %esi
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, 16(%rsp)
	movq	192(%rax), %r12
	movq	120(%rbx), %rax
	leal	1(%rsi), %edx
	je	.L30902
	movslq	%edx, %rdi
	movq	%rdi, 32(%rsp)
	movq	192(%rbx,%rdi,8), %r13
	movl	88(%rsp), %edi
	leal	1(%rdi), %esi
	movslq	%esi, %rdx
	movl	%esi, 40(%rsp)
	movq	192(%rbx,%rdx,8), %r14
.L30903:
	testq	%r14, %r14
	setne	%dl
	je	.L30904
	testq	%r13, %r13
	je	.L31007
.L30904:
	testq	%r13, %r13
	je	.L31030
	testb	%dl, %dl
	.p2align 4,,3
	je	.L31030
	andq	%rax, %r12
	andq	%rax, %rbp
	movl	88(%rsp), %eax
	shrb	$4, %cl
	movl	$4096, %r11d
	movl	$0, 44(%rsp)
	movl	%ecx, %edi
	andl	$1, %edi
	addl	$5, %eax
	movl	%edi, 60(%rsp)
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 8(%rsp)
	movl	56(%rsp), %eax
	addl	$5, %eax
	cltq
	movq	%rax, 48(%rsp)
	.p2align 4,,10
	.p2align 3
.L30906:
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L30907
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L31234
.L30908:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L31235
.L30909:
	movl	2224(%rbx), %edi
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L31034
	testb	$4, 46264(%rbx,%rcx)
	je	.L31034
	movq	%rbp, %rdi
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L30911:
	movzbl	(%rax), %r10d
	xorl	%r15d, %r15d
	testb	%r10b, %r10b
	movb	%r10b, 96(%rsp)
	js	.L31236
.L30913:
	cmpq	$1, %r13
	jbe	.L31007
	movl	%r12d, %eax
	movl	%r12d, %ecx
	andl	$2047, %eax
	cmpl	$2047, %eax
	je	.L31017
	movq	48(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L31018
	leal	1(%rax), %edx
	shrl	$12, %ecx
	andl	$1023, %ecx
	movslq	%edx, %rdx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L31237
.L31019:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L31238
.L31020:
	movl	2224(%rbx), %edi
	movq	%r12, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L31056
	testb	$2, 46264(%rbx,%rcx)
	je	.L31056
	movq	%r12, %rdi
	xorq	26808(%rax), %rdi
	movq	%rdi, %rax
.L31022:
#APP
# 248 "vstore.h" 1
	rorw $8, %r10w
# 0 "" 2
#NO_APP
	movw	%r10w, (%rax)
.L31023:
	movq	120(%rbx), %rax
	addq	$2, %r12
	subq	$2, %r13
	andq	%rax, %r12
.L31016:
	leaq	1(%rbp,%r15), %rbp
	subq	%r15, %r14
	andq	%rax, %rbp
	subq	$1, %r14
	testb	$1, 103(%rbx)
	movq	16(%rsp), %rax
	je	.L31024
	movq	%r12, 192(%rax)
	movq	32(%rsp), %rax
	testq	%r14, %r14
	movq	%r13, 192(%rbx,%rax,8)
	movq	24(%rsp), %rax
	movq	%rbp, 192(%rbx,%rax,8)
	movslq	40(%rsp), %rax
	movq	%r14, 192(%rbx,%rax,8)
	jne	.L31239
.L31057:
	movzbl	44(%rsp), %eax
	jmp	.L30905
	.p2align 4,,10
	.p2align 3
.L30900:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L30901
	.p2align 4,,10
	.p2align 3
.L31007:
	movl	$1, %eax
.L30905:
	movb	%al, 100(%rbx)
	addq	$120, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L31024:
	.cfi_restore_state
	movl	%r12d, 192(%rax)
	movq	32(%rsp), %rax
	testq	%r14, %r14
	movl	%r13d, 192(%rbx,%rax,8)
	movq	24(%rsp), %rax
	movl	%ebp, 192(%rbx,%rax,8)
	movslq	40(%rsp), %rax
	movl	%r14d, 192(%rbx,%rax,8)
	je	.L31057
.L31239:
	testq	%r13, %r13
	movl	$1, %eax
	cmovne	44(%rsp), %eax
	movl	%eax, 44(%rsp)
	je	.L31057
	subl	$1, %r11d
	jne	.L30906
	movl	$3, %eax
	jmp	.L30905
	.p2align 4,,10
	.p2align 3
.L31236:
	movl	%r10d, %eax
	andl	$-32, %eax
	cmpb	$-64, %al
	je	.L31240
	movl	%r10d, %eax
	andl	$-16, %eax
	cmpb	$-32, %al
	je	.L31241
	andl	$-8, %r10d
	cmpb	$-16, %r10b
	jne	.L31045
	cmpq	$3, %r14
	jbe	.L31057
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L30979
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L31242
.L30980:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L31243
.L30981:
	movl	2224(%rbx), %edi
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L31048
	testb	$4, 46264(%rbx,%rcx)
	je	.L31048
	movq	%rbp, %r15
	xorq	26808(%rax), %r15
.L30983:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jg	.L30984
	movl	(%r15), %eax
	movl	%eax, 96(%rsp)
.L30985:
	movl	60(%rsp), %eax
	movzbl	96(%rsp), %r10d
	testl	%eax, %eax
	je	.L31003
	cmpb	$-16, %r10b
	je	.L31244
	leal	15(%r10), %eax
	cmpb	$2, %al
	jbe	.L31245
	cmpb	$-12, %r10b
	jne	.L31003
	movzbl	97(%rsp), %ecx
	leal	-128(%rcx), %eax
	cmpb	$15, %al
	ja	.L30943
.L31233:
	movzbl	98(%rsp), %edx
	leal	-128(%rdx), %eax
	cmpb	$63, %al
	ja	.L30943
	movzbl	99(%rsp), %eax
	leal	-128(%rax), %esi
	cmpb	$63, %sil
	jbe	.L31005
.L30943:
	movb	$2, 100(%rbx)
	addq	$120, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L31003:
	.cfi_restore_state
	movzbl	97(%rsp), %ecx
	movzbl	98(%rsp), %edx
	movzbl	99(%rsp), %eax
.L31005:
	movl	%ecx, %r15d
	andl	$7, %r10d
	andl	$48, %ecx
	movl	%edx, %esi
	sarl	$4, %ecx
	andl	$15, %r15d
	sall	$2, %r10d
	andl	$48, %esi
	sall	$2, %r15d
	orl	%r10d, %ecx
	sarl	$4, %esi
	andl	$63, %eax
	subl	$1, %ecx
	orl	%esi, %r15d
	andl	$15, %edx
	andl	$15, %ecx
	orw	$-10240, %r15w
	orw	$-9216, %ax
	sall	$6, %ecx
	sall	$6, %edx
	orl	%ecx, %r15d
	orl	%edx, %eax
	cmpq	$3, %r13
	jbe	.L31007
	sall	$16, %r15d
	movzwl	%ax, %eax
	movl	%r12d, %ecx
	orl	%eax, %r15d
	testb	$3, %r12b
	jne	.L31246
.L31008:
	movq	48(%rsp), %rax
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L31010
	leal	1(%rax), %edx
	shrl	$12, %ecx
	andl	$1023, %ecx
	movslq	%edx, %rdx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L31247
.L31011:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L31248
.L31012:
	movl	2224(%rbx), %edi
	movq	%r12, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L31053
	testb	$2, 46264(%rbx,%rcx)
	je	.L31053
	movq	%r12, %rsi
	xorq	26808(%rax), %rsi
	movq	%rsi, %rax
.L31014:
	bswap	%r15d
	movl	%r15d, (%rax)
.L31015:
	movq	120(%rbx), %rax
	addq	$4, %r12
	subq	$4, %r13
	movl	$3, %r15d
	andq	%rax, %r12
	jmp	.L31016
	.p2align 4,,10
	.p2align 3
.L31240:
	movl	60(%rsp), %esi
	testl	%esi, %esi
	je	.L30915
	cmpb	$-63, %r10b
	jbe	.L30943
.L30915:
	cmpq	$1, %r14
	jbe	.L31057
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L30918
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L31249
.L30919:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L31250
.L30920:
	movl	2224(%rbx), %edi
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L31037
	testb	$4, 46264(%rbx,%rcx)
	je	.L31037
	movq	%rbp, %r15
	xorq	26808(%rax), %r15
.L30922:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2047, %eax
	je	.L30923
	movzwl	(%r15), %eax
	movw	%ax, 96(%rsp)
.L30924:
	movl	60(%rsp), %ecx
	movzbl	97(%rsp), %r10d
	testl	%ecx, %ecx
	je	.L30944
	leal	-128(%r10), %eax
	cmpb	$63, %al
	ja	.L30943
.L30944:
	movzbl	96(%rsp), %eax
	andl	$63, %r10d
	movl	$1, %r15d
	andl	$31, %eax
	sall	$6, %eax
	orl	%eax, %r10d
	jmp	.L30913
	.p2align 4,,10
	.p2align 3
.L31241:
	cmpq	$2, %r14
	jbe	.L31057
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L30947
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L31251
.L30948:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L31252
.L30949:
	movl	2224(%rbx), %edi
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L31042
	testb	$4, 46264(%rbx,%rcx)
	je	.L31042
	movq	%rbp, %r15
	xorq	26808(%rax), %r15
.L30951:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2045, %eax
	jg	.L30952
	movzwl	(%r15), %eax
	movw	%ax, 96(%rsp)
	movzbl	2(%r15), %eax
	movb	%al, 98(%rsp)
.L30953:
	movl	60(%rsp), %edx
	testl	%edx, %edx
	je	.L31253
	movzbl	96(%rsp), %r10d
	cmpb	$-32, %r10b
	je	.L31254
	leal	31(%r10), %eax
	cmpb	$11, %al
	movzbl	97(%rsp), %eax
	ja	.L31255
.L30975:
	leal	-128(%rax), %edx
	cmpb	$63, %dl
	ja	.L30943
	movzbl	98(%rsp), %edx
	addl	$-128, %edx
	cmpb	$63, %dl
	ja	.L30943
.L30976:
	cmpb	$-19, %r10b
	je	.L31210
	movzbl	98(%rsp), %edx
	jmp	.L30977
	.p2align 4,,10
	.p2align 3
.L30902:
	movl	88(%rsp), %edi
	movslq	%edx, %rsi
	movq	%rsi, 32(%rsp)
	movl	192(%rbx,%rsi,8), %r13d
	addl	$1, %edi
	movslq	%edi, %rdx
	movl	%edi, 40(%rsp)
	movl	192(%rbx,%rdx,8), %r14d
	jmp	.L30903
	.p2align 4,,10
	.p2align 3
.L31245:
	movzbl	97(%rsp), %ecx
	leal	-128(%rcx), %eax
	cmpb	$63, %al
	jbe	.L31233
	jmp	.L30943
	.p2align 4,,10
	.p2align 3
.L31253:
	movzbl	97(%rsp), %eax
	movzbl	96(%rsp), %r10d
	movzbl	98(%rsp), %edx
.L30977:
	sall	$12, %r10d
	andl	$63, %edx
	andl	$63, %eax
	orl	%edx, %r10d
	sall	$6, %eax
	movl	$2, %r15d
	orl	%eax, %r10d
	jmp	.L30913
	.p2align 4,,10
	.p2align 3
.L31244:
	movzbl	97(%rsp), %ecx
	leal	112(%rcx), %eax
	cmpb	$47, %al
	jbe	.L31233
	jmp	.L30943
	.p2align 4,,10
	.p2align 3
.L31255:
	cmpb	$-18, %r10b
	je	.L30975
	.p2align 4,,7
	jmp	.L30976
.L31254:
	movzbl	97(%rsp), %eax
	leal	96(%rax), %edx
	cmpb	$31, %dl
	ja	.L30943
.L31231:
	movzbl	98(%rsp), %edx
	leal	-128(%rdx), %ecx
	cmpb	$63, %cl
	jbe	.L30977
	jmp	.L30943
	.p2align 4,,10
	.p2align 3
.L31210:
	leal	-128(%rax), %edx
	cmpb	$31, %dl
	jbe	.L31231
	.p2align 4,,5
	jmp	.L30943
	.p2align 4,,10
	.p2align 3
.L31045:
	movl	$2, %eax
	jmp	.L30905
.L31235:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30909
.L31034:
	movzbl	%sil, %r8d
.L30910:
	movl	88(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movl	%r11d, 64(%rsp)
	call	z900_logical_to_main_l
	movl	64(%rsp), %r11d
	jmp	.L30911
.L31234:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L30908
.L30907:
	movzbl	97(%rbx), %r8d
	jmp	.L30910
.L31238:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L31020
.L31056:
	movzbl	%sil, %r8d
.L31021:
	movl	56(%rsp), %esi
	movl	$2, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movq	%r12, %rdi
	movl	%r11d, 72(%rsp)
	movl	%r10d, 64(%rsp)
	call	z900_logical_to_main_l
	movl	72(%rsp), %r11d
	movl	64(%rsp), %r10d
	jmp	.L31022
.L31248:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L31012
.L31053:
	movzbl	%sil, %r8d
.L31013:
	movl	56(%rsp), %esi
	movl	$4, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movq	%r12, %rdi
	movl	%r11d, 64(%rsp)
	call	z900_logical_to_main_l
	movl	64(%rsp), %r11d
	jmp	.L31014
.L31243:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30981
.L31048:
	movzbl	%sil, %r8d
.L30982:
	movl	88(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movl	%r11d, 64(%rsp)
	call	z900_logical_to_main_l
	movl	64(%rsp), %r11d
	movq	%rax, %r15
	jmp	.L30983
.L31237:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L31019
.L31018:
	movzbl	97(%rbx), %r8d
	jmp	.L31021
.L31017:
	movl	56(%rsp), %edx
	movzwl	%r10w, %edi
	movq	%rbx, %rcx
	movq	%r12, %rsi
	movl	%r11d, 64(%rsp)
	call	z900_vstore2_full
	movl	64(%rsp), %r11d
	jmp	.L31023
.L31247:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L31011
.L31010:
	movzbl	97(%rbx), %r8d
	jmp	.L31013
.L31246:
	movl	%r12d, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L31008
	movl	56(%rsp), %edx
	movq	%rbx, %rcx
	movq	%r12, %rsi
	movl	%r15d, %edi
	movl	%r11d, 64(%rsp)
	call	z900_vstore4_full
	movl	64(%rsp), %r11d
	jmp	.L31015
.L30984:
	movl	$2048, 64(%rsp)
	subl	%eax, 64(%rsp)
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L30986
	leal	1(%rax), %esi
	movl	64(%rsp), %eax
	movq	120(%rbx), %rdx
	movslq	%esi, %rsi
	addl	%ebp, %eax
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L31256
.L30987:
	movl	64(%rsp), %r10d
	movzbl	97(%rbx), %r8d
	leaq	(%r10,%rbp), %rdi
	andq	%rdx, %rdi
	testb	%r8b, %r8b
	jne	.L31257
.L30989:
	movl	2224(%rbx), %esi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L30988
	testb	$4, 46264(%rbx,%rax)
	je	.L30988
	xorq	26808(%rcx), %rdi
	movq	%rdi, %r8
.L30990:
	leaq	96(%rsp), %rdi
	cmpq	$8, %r10
	movq	%r15, %rsi
	jae	.L31258
.L30991:
	xorl	%eax, %eax
	testb	$4, %r10b
	je	.L30994
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L30994:
	testb	$2, %r10b
	je	.L30995
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L30995:
	testb	$1, %r10b
	je	.L30993
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L30993:
	leaq	96(%rsp), %rax
	movl	$4, %edx
	movq	%r8, %rsi
	subl	64(%rsp), %edx
	leaq	(%rax,%r10), %rdi
	movq	%rdi, %r9
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L31259
.L30997:
	xorl	%eax, %eax
	testb	$4, %dl
	je	.L31000
	movl	(%rsi), %eax
	movl	%eax, (%r9)
	movl	$4, %eax
.L31000:
	testb	$2, %dl
	je	.L31001
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%r9,%rax)
	addq	$2, %rax
.L31001:
	andl	$1, %edx
	je	.L30985
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%r9,%rax)
	jmp	.L30985
.L31259:
	cmpq	$127, %rdx
	ja	.L31260
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rdi, %r9
	jmp	.L30997
.L31242:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L30980
.L30979:
	movzbl	97(%rbx), %r8d
	jmp	.L30982
.L31258:
	cmpq	$127, %r10
	ja	.L31261
	leaq	96(%rsp), %rdi
	movq	%r10, %rcx
	shrq	$3, %rcx
	rep movsq
	jmp	.L30991
.L31256:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L30987
	movl	64(%rsp), %r10d
	movzbl	97(%rbx), %r8d
	leaq	(%r10,%rbp), %rdi
	andq	%rdx, %rdi
.L30988:
	movl	88(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r11d, 80(%rsp)
	movq	%r10, 72(%rsp)
	call	z900_logical_to_main_l
	movl	80(%rsp), %r11d
	movq	%rax, %r8
	movq	72(%rsp), %r10
	jmp	.L30990
.L30986:
	movl	64(%rsp), %r10d
	movzbl	97(%rbx), %r8d
	leaq	(%r10,%rbp), %rdi
	andq	120(%rbx), %rdi
	jmp	.L30988
.L31249:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L30919
.L30918:
	movzbl	97(%rbx), %r8d
.L30921:
	movl	88(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movl	%r11d, 64(%rsp)
	call	z900_logical_to_main_l
	movl	64(%rsp), %r11d
	movq	%rax, %r15
	jmp	.L30922
.L30952:
	movl	$2048, 64(%rsp)
	subl	%eax, 64(%rsp)
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L30954
	leal	1(%rax), %esi
	movl	64(%rsp), %eax
	movq	120(%rbx), %rdx
	movslq	%esi, %rsi
	addl	%ebp, %eax
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L31262
.L30955:
	movl	64(%rsp), %r10d
	movzbl	97(%rbx), %r8d
	leaq	(%r10,%rbp), %rdi
	andq	%rdx, %rdi
	testb	%r8b, %r8b
	jne	.L31263
.L30957:
	movl	2224(%rbx), %esi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L30956
	testb	$4, 46264(%rbx,%rax)
	je	.L30956
	xorq	26808(%rcx), %rdi
	movq	%rdi, %r8
.L30958:
	leaq	96(%rsp), %rdi
	cmpq	$8, %r10
	movq	%r15, %rsi
	jae	.L31264
.L30959:
	xorl	%eax, %eax
	testb	$4, %r10b
	je	.L30962
	movl	(%rsi), %eax
	movl	%eax, (%rdi)
	movl	$4, %eax
.L30962:
	testb	$2, %r10b
	je	.L30963
	movzwl	(%rsi,%rax), %edx
	movw	%dx, (%rdi,%rax)
	addq	$2, %rax
.L30963:
	testb	$1, %r10b
	je	.L30961
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
.L30961:
	leaq	96(%rsp), %rax
	movl	$3, %edx
	movq	%r8, %rsi
	subl	64(%rsp), %edx
	leaq	(%rax,%r10), %rdi
	movq	%rdi, %r9
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L31265
.L30965:
	xorl	%eax, %eax
	testb	$4, %dl
	je	.L30968
	movl	(%rsi), %eax
	movl	%eax, (%r9)
	movl	$4, %eax
.L30968:
	testb	$2, %dl
	je	.L30969
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%r9,%rax)
	addq	$2, %rax
.L30969:
	andl	$1, %edx
	je	.L30953
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%r9,%rax)
	jmp	.L30953
.L31265:
	cmpq	$127, %rdx
	ja	.L31266
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rdi, %r9
	jmp	.L30965
.L31264:
	cmpq	$127, %r10
	ja	.L31267
	leaq	96(%rsp), %rdi
	movq	%r10, %rcx
	shrq	$3, %rcx
	rep movsq
	jmp	.L30959
.L31251:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L30948
.L30947:
	movzbl	97(%rbx), %r8d
.L30950:
	movl	88(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movl	%r11d, 64(%rsp)
	call	z900_logical_to_main_l
	movl	64(%rsp), %r11d
	movq	%rax, %r15
	jmp	.L30951
.L30954:
	movl	64(%rsp), %r10d
	movzbl	97(%rbx), %r8d
	leaq	(%r10,%rbp), %rdi
	andq	120(%rbx), %rdi
.L30956:
	movl	88(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r11d, 80(%rsp)
	movq	%r10, 72(%rsp)
	call	z900_logical_to_main_l
	movl	80(%rsp), %r11d
	movq	%rax, %r8
	movq	72(%rsp), %r10
	jmp	.L30958
.L31263:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L30957
	jmp	.L30956
.L31262:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L30955
	movl	64(%rsp), %r10d
	movzbl	97(%rbx), %r8d
	leaq	(%r10,%rbp), %rdi
	andq	%rdx, %rdi
	jmp	.L30956
.L31252:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30949
.L31042:
	movzbl	%sil, %r8d
	jmp	.L30950
.L31266:
	movl	%r11d, 64(%rsp)
	call	memcpy
	movl	64(%rsp), %r11d
	jmp	.L30953
.L31030:
	xorl	%eax, %eax
	jmp	.L30905
.L31260:
	movl	%r11d, 64(%rsp)
	call	memcpy
	movl	64(%rsp), %r11d
	jmp	.L30985
.L31257:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L30989
	jmp	.L30988
.L31261:
	movq	%r10, %rdx
	movl	%r11d, 92(%rsp)
	movq	%r8, 80(%rsp)
	movq	%r10, 72(%rsp)
	call	memcpy
	movq	72(%rsp), %r10
	movq	80(%rsp), %r8
	movl	92(%rsp), %r11d
	jmp	.L30993
.L31250:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L30920
.L31037:
	movzbl	%sil, %r8d
	jmp	.L30921
.L30923:
	movq	8(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L30925
	movq	120(%rbx), %rdx
	leal	1(%rax), %esi
	leal	1(%rbp), %eax
	movslq	%esi, %rsi
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L31268
.L30926:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L31269
.L30928:
	movl	$1, %esi
	movl	%esi, %r10d
	movl	2224(%rbx), %esi
	leaq	(%r10,%rbp), %rdi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L30927
	testb	$4, 46264(%rbx,%rax)
	je	.L30927
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L30929:
	xorl	%edx, %edx
	testq	%r10, %r10
	je	.L30932
	movzbl	(%r15,%rdx), %esi
	movb	%sil, 96(%rsp,%rdx)
.L30932:
	leaq	96(%rsp), %rsi
	movl	$2, %edx
	leaq	(%rsi,%r10), %rdi
	subl	$1, %edx
	movq	%rax, %rsi
	movslq	%edx, %rdx
	movq	%rdi, %r8
	cmpq	$8, %rdx
	jae	.L31270
.L30936:
	xorl	%eax, %eax
	testb	$4, %dl
	je	.L30939
	movl	(%rsi), %eax
	movl	%eax, (%r8)
	movl	$4, %eax
.L30939:
	testb	$2, %dl
	je	.L30940
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%r8,%rax)
	addq	$2, %rax
.L30940:
	andl	$1, %edx
	je	.L30924
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%r8,%rax)
	jmp	.L30924
.L31270:
	cmpq	$127, %rdx
	ja	.L31271
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	movq	%rdi, %r8
	jmp	.L30936
.L31268:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L30926
	movzbl	97(%rbx), %r8d
	leaq	1(%rbp), %rdi
	movl	$1, %r10d
	andq	%rdx, %rdi
.L30927:
	movl	88(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r11d, 72(%rsp)
	movq	%r10, 64(%rsp)
	call	z900_logical_to_main_l
	movl	72(%rsp), %r11d
	movq	64(%rsp), %r10
	jmp	.L30929
.L31271:
	movl	%r11d, 64(%rsp)
	call	memcpy
	movl	64(%rsp), %r11d
	jmp	.L30924
.L31269:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L30928
	movl	$1, %eax
	movl	%eax, %r10d
	leaq	(%r10,%rbp), %rdi
	andq	%rdx, %rdi
	jmp	.L30927
.L30925:
	leaq	1(%rbp), %rdi
	movl	$1, %r10d
	movzbl	97(%rbx), %r8d
	andq	120(%rbx), %rdi
	jmp	.L30927
.L31267:
	movq	%r10, %rdx
	movl	%r11d, 92(%rsp)
	movq	%r8, 80(%rsp)
	movq	%r10, 72(%rsp)
	call	memcpy
	movq	72(%rsp), %r10
	movq	80(%rsp), %r8
	movl	92(%rsp), %r11d
	jmp	.L30961
	.cfi_endproc
.LFE2834:
	.size	z900_convert_utf8_to_utf16, .-z900_convert_utf8_to_utf16
	.p2align 4,,15
	.globl	z900_convert_to_binary
	.type	z900_convert_to_binary, @function
z900_convert_to_binary:
.LFB2835:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %edx
	shrl	$20, %r12d
	shrl	$16, %edx
	movl	%eax, %ebp
	andl	$15, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L31326
.L31273:
	shrl	$12, %eax
	andl	$15, %eax
	movl	%eax, %r13d
	je	.L31274
	cltq
	addq	192(%rbx,%rax,8), %rbp
.L31274:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	andq	120(%rbx), %rbp
	leal	5(%r13), %eax
	cltq
	leaq	(%rbx,%rax,4), %r14
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L31275
	leal	1(%rax), %edx
	movl	%ebp, %eax
	shrl	$12, %eax
	movslq	%edx, %rdx
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L31327
.L31276:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L31328
.L31277:
	movl	2224(%rbx), %esi
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L31275
	testb	$4, 46264(%rbx,%rax)
	je	.L31275
	movq	%rbp, %r15
	xorq	26808(%rcx), %r15
.L31278:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2040, %eax
	jg	.L31279
	movq	(%r15), %rax
	leaq	64(%rsp), %rbp
	movq	%rax, 64(%rsp)
.L31280:
	leaq	48(%rsp), %rdx
	movl	$7, %esi
	movq	%rbp, %rdi
	leaq	32(%rsp), %r8
	leaq	16(%rsp), %rcx
	call	packed_to_binary
	movl	32(%rsp), %edx
	testl	%edx, %edx
	jne	.L31329
.L31289:
	movq	48(%rsp), %rax
	cmpq	$-2147483648, %rax
	jl	.L31290
	cmpq	$2147483647, %rax
	jle	.L31330
.L31290:
	movslq	%r12d, %r12
	movl	$1, 16(%rsp)
	movl	%eax, 192(%rbx,%r12,8)
.L31291:
	movq	%rbx, %rdi
	movl	$9, %esi
	call	*2032(%rbx)
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L31330:
	.cfi_restore_state
	movslq	%r12d, %r12
	movl	%eax, 192(%rbx,%r12,8)
	movl	16(%rsp), %eax
	testl	%eax, %eax
	jne	.L31291
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L31329:
	.cfi_restore_state
	movl	$0, 780(%rbx)
	movl	$7, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L31289
.L31327:
	movzbl	44216(%rbx,%rax), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L31276
.L31275:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
	movq	%rax, %r15
	jmp	.L31278
.L31279:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L31324
	movq	120(%rbx), %rsi
	leal	1(%rax), %edx
	leal	(%r10,%rbp), %eax
	movslq	%edx, %rdx
	andl	%esi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L31331
.L31282:
	movzbl	97(%rbx), %edx
	movl	%r10d, %r14d
	testb	%dl, %dl
	jne	.L31332
.L31283:
	leaq	(%r14,%rbp), %rdx
	movl	2224(%rbx), %edi
	andq	%rsi, %rdx
	movq	%rdx, %rsi
	andq	$-4194304, %rsi
	orq	%rdi, %rsi
	cmpq	10424(%rcx), %rsi
	jne	.L31281
	testb	$4, 46264(%rbx,%rax)
	je	.L31281
	xorq	26808(%rcx), %rdx
	movq	%rdx, %r13
.L31284:
	leaq	64(%rsp), %rbp
	cmpq	$127, %r14
	ja	.L31333
	movq	%rbp, %rdi
	movq	%r15, %rsi
	movq	%r14, %rcx
	rep movsb
.L31286:
	movl	$8, %edx
	addq	%rbp, %r14
	subl	%r10d, %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L31334
	movq	%r14, %rdi
	movq	%r13, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L31280
.L31326:
	movslq	%edx, %rdx
	addq	192(%rsi,%rdx,8), %rbp
	jmp	.L31273
.L31328:
	cmpb	43192(%rbx,%rax), %dl
	je	.L31277
	jmp	.L31275
.L31331:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L31282
.L31324:
	movl	%r10d, %r14d
.L31281:
	leaq	(%r14,%rbp), %rdi
	movzbl	97(%rbx), %r8d
	movl	%r13d, %esi
	andq	120(%rbx), %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 12(%rsp)
	call	z900_logical_to_main_l
	movl	12(%rsp), %r10d
	movq	%rax, %r13
	jmp	.L31284
.L31332:
	cmpb	43192(%rbx,%rax), %dl
	je	.L31283
	jmp	.L31281
.L31334:
	movq	%r13, %rsi
	movq	%r14, %rdi
	call	memcpy
	.p2align 4,,2
	jmp	.L31280
.L31333:
	movq	%r14, %rdx
	movq	%r15, %rsi
	movq	%rbp, %rdi
	movl	%r10d, 12(%rsp)
	call	memcpy
	movl	12(%rsp), %r10d
	jmp	.L31286
	.cfi_endproc
.LFE2835:
	.size	z900_convert_to_binary, .-z900_convert_to_binary
	.p2align 4,,15
	.globl	z900_convert_to_decimal
	.type	z900_convert_to_decimal, @function
z900_convert_to_decimal:
.LFB2836:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	(%rdi), %esi
	bswap	%esi
	movl	%esi, %eax
	movl	%esi, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%esi, %ebp
	andl	$15, %eax
	andl	$4095, %ebp
	andl	$15, %edx
	jne	.L31399
.L31336:
	shrl	$12, %esi
	andl	$15, %esi
	movl	%esi, %r12d
	je	.L31337
	movslq	%esi, %rdx
	addq	192(%rbx,%rdx,8), %rbp
.L31337:
	cltq
	movb	$4, 130(%rbx)
	andq	120(%rbx), %rbp
	addq	$4, 136(%rbx)
	leaq	16(%rsp), %rsi
	movslq	192(%rbx,%rax,8), %rdi
	call	binary_to_packed
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2040, %eax
	jg	.L31338
	leal	5(%r12), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L31339
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L31400
.L31340:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L31401
.L31341:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L31339
	testb	$2, 46264(%rbx,%rcx)
	je	.L31339
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
.L31342:
	movq	24(%rsp), %rdx
	movq	%rdx, (%rax)
.L31335:
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L31400:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L31340
.L31339:
	movzbl	97(%rbx), %r8d
	movl	$8, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
	jmp	.L31342
.L31338:
	movl	$2048, %r14d
	subl	%eax, %r14d
	leal	5(%r12), %eax
	cltq
	leaq	(%rbx,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L31344
	leal	1(%rax), %ecx
	movl	%ebp, %edx
	shrl	$12, %edx
	movslq	%ecx, %rcx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rcx,8)
	jne	.L31402
.L31345:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L31403
.L31346:
	movl	2224(%rbx), %esi
	movq	%rbp, %rcx
	andq	$-4194304, %rcx
	orq	%rsi, %rcx
	cmpq	10424(%rax), %rcx
	jne	.L31344
	testb	$1, 46264(%rbx,%rdx)
	je	.L31344
	movq	35000(%rax), %rdx
	movq	%rbp, %r15
	movl	%r14d, %r13d
	movq	%rdx, 984(%rbx)
	xorq	26808(%rax), %r15
.L31347:
	movl	1892(%r11), %eax
	movq	984(%rbx), %r10
	testl	%eax, %eax
	je	.L31348
	movq	120(%rbx), %rsi
	leal	(%r14,%rbp), %edx
	addl	$1, %eax
	cltq
	andl	%esi, %edx
	shrl	$12, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L31404
.L31349:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L31405
.L31350:
	leaq	0(%r13,%rbp), %rax
	movl	2224(%rbx), %edi
	andq	%rsi, %rax
	movq	%rax, %rsi
	andq	$-4194304, %rsi
	orq	%rdi, %rsi
	cmpq	10424(%rcx), %rsi
	jne	.L31348
	testb	$2, 46264(%rbx,%rdx)
	je	.L31348
	xorq	26808(%rcx), %rax
	movq	%rax, %rbx
.L31351:
	orb	$6, (%r10)
	leaq	24(%rsp), %rsi
	cmpq	$127, %r13
	ja	.L31406
	movq	%r15, %rdi
	movq	%r13, %rcx
	rep movsb
.L31353:
	leaq	24(%rsp,%r13), %rsi
	movl	$8, %edx
	movq	%rbx, %rdi
	subl	%r14d, %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L31407
	movq	%rdx, %rcx
	rep movsb
	jmp	.L31335
.L31399:
	movslq	%edx, %rdx
	addq	192(%rbx,%rdx,8), %rbp
	jmp	.L31336
.L31401:
	cmpb	43192(%rbx,%rcx), %al
	je	.L31341
	jmp	.L31339
.L31407:
	call	memcpy
	.p2align 4,,8
	jmp	.L31335
.L31406:
	movq	%r13, %rdx
	movq	%r15, %rdi
	call	memcpy
	.p2align 4,,2
	jmp	.L31353
.L31402:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rcx)
	jne	.L31345
.L31344:
	movzbl	97(%rbx), %r8d
	movl	%r14d, %r13d
	movl	$1, %ecx
	movq	%r13, %r9
	movq	%rbx, %rdx
	movl	%r12d, %esi
	movq	%rbp, %rdi
	movq	%r11, 8(%rsp)
	call	z900_logical_to_main_l
	movq	8(%rsp), %r11
	movq	%rax, %r15
	jmp	.L31347
.L31405:
	cmpb	43192(%rbx,%rdx), %al
	je	.L31350
.L31348:
	leaq	0(%r13,%rbp), %rdi
	movzbl	97(%rbx), %r8d
	movl	$8, %r9d
	andq	120(%rbx), %rdi
	subl	%r14d, %r9d
	movq	%rbx, %rdx
	movslq	%r9d, %r9
	movl	$2, %ecx
	movq	%r10, 8(%rsp)
	movl	%r12d, %esi
	call	z900_logical_to_main_l
	movq	8(%rsp), %r10
	movq	%rax, %rbx
	jmp	.L31351
.L31404:
	movzbl	44216(%rbx,%rdx), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L31349
	jmp	.L31348
.L31403:
	cmpb	43192(%rbx,%rdx), %cl
	je	.L31346
	.p2align 4,,4
	jmp	.L31344
	.cfi_endproc
.LFE2836:
	.size	z900_convert_to_decimal, .-z900_convert_to_decimal
	.p2align 4,,15
	.globl	z900_copy_access
	.type	z900_copy_access, @function
z900_copy_access:
.LFB2837:
	.cfi_startproc
	movzbl	3(%rdi), %edx
	addq	$4, 136(%rsi)
	movzbl	%dl, %eax
	andl	$15, %edx
	sarl	$4, %eax
	movl	584(%rsi,%rdx,4), %edx
	cmpb	$64, 99(%rsi)
	movslq	%eax, %rcx
	movl	%edx, 584(%rsi,%rcx,4)
	je	.L31415
.L31408:
	rep ret
	.p2align 4,,10
	.p2align 3
.L31415:
	testl	%eax, %eax
	je	.L31408
	addl	$5, %eax
	testl	%edx, %edx
	cltq
	.p2align 4,,2
	je	.L31416
	cmpl	$1, %edx
	je	.L31417
	movl	$0, 1892(%rsi,%rax,4)
	ret
	.p2align 4,,10
	.p2align 3
.L31416:
	movl	$1, 1892(%rsi,%rax,4)
	ret
	.p2align 4,,10
	.p2align 3
.L31417:
	movl	$7, 1892(%rsi,%rax,4)
	ret
	.cfi_endproc
.LFE2837:
	.size	z900_copy_access, .-z900_copy_access
	.p2align 4,,15
	.globl	z900_divide_register
	.type	z900_divide_register, @function
z900_divide_register:
.LFB2838:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movzbl	1(%rdi), %eax
	movb	$2, 130(%rsi)
	addq	$2, 136(%rsi)
	movzbl	%al, %ebp
	movl	%eax, %r12d
	sarl	$4, %ebp
	andl	$15, %r12d
	testb	$1, %bpl
	jne	.L31430
.L31419:
	leal	1(%rbp), %eax
	movslq	%r12d, %r12
	movslq	%ebp, %rbp
	movslq	192(%rbx,%r12,8), %rcx
	leaq	(%rbx,%rbp,8), %rsi
	cltq
	leaq	(%rbx,%rax,8), %rdi
	movl	192(%rsi), %eax
	movl	192(%rdi), %edx
	testl	%ecx, %ecx
	jne	.L31431
.L31420:
	movq	2032(%rbx), %rax
	movq	%rbx, %rdi
	movl	$9, %esi
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L31430:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L31419
	.p2align 4,,10
	.p2align 3
.L31431:
	salq	$32, %rax
	movl	$2147483648, %r8d
	orq	%rdx, %rax
	cqto
	idivq	%rcx
	movl	$4294967295, %ecx
	addq	%rax, %r8
	cmpq	%rcx, %r8
	ja	.L31420
	movl	%eax, 192(%rdi)
	movl	%edx, 192(%rsi)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE2838:
	.size	z900_divide_register, .-z900_divide_register
	.p2align 4,,15
	.globl	z900_divide
	.type	z900_divide, @function
z900_divide:
.LFB2839:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %esi
	bswap	%esi
	movl	%esi, %eax
	movl	%esi, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%esi, %ebp
	movl	%eax, %r12d
	andl	$4095, %ebp
	andl	$15, %r12d
	andl	$15, %edx
	jne	.L31474
.L31433:
	shrl	$12, %esi
	andl	$15, %esi
	movl	%esi, %r13d
	je	.L31434
	movslq	%esi, %rdx
	addq	192(%rbx,%rdx,8), %rbp
.L31434:
	andq	120(%rbx), %rbp
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %al
	jne	.L31475
.L31435:
	testb	$3, %bpl
	jne	.L31476
.L31436:
	leal	5(%r13), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L31438
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L31477
.L31439:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L31478
.L31440:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L31438
	testb	$4, 46264(%rbx,%rcx)
	je	.L31438
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
.L31441:
	movl	(%rax), %ecx
	bswap	%ecx
.L31442:
	leal	1(%r12), %eax
	movslq	%r12d, %r12
	testl	%ecx, %ecx
	leaq	(%rbx,%r12,8), %rsi
	cltq
	leaq	(%rbx,%rax,8), %rdi
	movl	192(%rsi), %eax
	movl	192(%rdi), %edx
	jne	.L31479
.L31443:
	movq	2032(%rbx), %rax
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 32
	movl	$9, %esi
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L31475:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L31435
	.p2align 4,,10
	.p2align 3
.L31479:
	salq	$32, %rax
	movslq	%ecx, %rcx
	movl	$2147483648, %r8d
	orq	%rdx, %rax
	cqto
	idivq	%rcx
	movl	$4294967295, %ecx
	addq	%rax, %r8
	cmpq	%rcx, %r8
	ja	.L31443
	movl	%eax, 192(%rdi)
	movl	%edx, 192(%rsi)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L31477:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L31439
.L31438:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
	jmp	.L31441
.L31476:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L31436
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movq	%rbp, %rdi
	call	z900_vfetch4_full
	movl	%eax, %ecx
	jmp	.L31442
.L31478:
	cmpb	43192(%rbx,%rcx), %al
	je	.L31440
	.p2align 4,,2
	jmp	.L31438
.L31474:
	movslq	%edx, %rdx
	addq	192(%rbx,%rdx,8), %rbp
	jmp	.L31433
	.cfi_endproc
.LFE2839:
	.size	z900_divide, .-z900_divide
	.p2align 4,,15
	.globl	z900_exclusive_or_register
	.type	z900_exclusive_or_register, @function
z900_exclusive_or_register:
.LFB2840:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	addq	$2, 136(%rsi)
	movq	%rcx, %rax
	andl	$15, %ecx
	shrq	%rax
	andl	$120, %eax
	leaq	(%rsi,%rax), %rdx
	movl	192(%rsi,%rcx,8), %eax
	xorl	%eax, 192(%rdx)
	setne	100(%rsi)
	ret
	.cfi_endproc
.LFE2840:
	.size	z900_exclusive_or_register, .-z900_exclusive_or_register
	.p2align 4,,15
	.globl	z900_exclusive_or
	.type	z900_exclusive_or, @function
z900_exclusive_or:
.LFB2841:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L31513
.L31482:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L31483
	movslq	%eax, %rdx
	addq	192(%rbx,%rdx,8), %rdi
.L31483:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L31514
.L31484:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L31486
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L31515
.L31487:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L31516
.L31488:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L31486
	testb	$4, 46264(%rbx,%rsi)
	je	.L31486
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L31489:
	movl	(%rax), %eax
	bswap	%eax
.L31490:
	movslq	%ebp, %rbp
	leaq	(%rbx,%rbp,8), %rdx
	xorl	%eax, 192(%rdx)
	setne	100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L31515:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L31487
.L31486:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L31489
.L31514:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L31484
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L31490
.L31513:
	movslq	%edx, %rdx
	addq	192(%rsi,%rdx,8), %rdi
	jmp	.L31482
.L31516:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L31488
	jmp	.L31486
	.cfi_endproc
.LFE2841:
	.size	z900_exclusive_or, .-z900_exclusive_or
	.p2align 4,,15
	.globl	z900_exclusive_or_immediate
	.type	z900_exclusive_or_immediate, @function
z900_exclusive_or_immediate:
.LFB2842:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ecx
	movl	%eax, %ebp
	shrl	$12, %ecx
	shrl	$16, %ebp
	andl	$4095, %eax
	movl	%ecx, %esi
	andl	$15, %esi
	je	.L31518
	movslq	%esi, %rdx
	addq	192(%rbx,%rdx,8), %rax
	andq	120(%rbx), %rax
.L31518:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L31519
	movl	%eax, %edi
	addl	$1, %edx
	shrl	$12, %edi
	movslq	%edx, %rdx
	andl	$1023, %edi
	leaq	(%rbx,%rdi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L31539
.L31520:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L31540
.L31521:
	movl	2224(%rbx), %r8d
	movq	%rax, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L31519
	testb	$2, 46264(%rbx,%rdi)
	je	.L31519
	xorq	26808(%rcx), %rax
.L31522:
	xorb	%bpl, (%rax)
	setne	100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L31539:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L31520
.L31519:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movq	%rax, %rdi
	call	z900_logical_to_main_l
	jmp	.L31522
.L31540:
	cmpb	43192(%rbx,%rdi), %dl
	je	.L31521
	.p2align 4,,4
	jmp	.L31519
	.cfi_endproc
.LFE2842:
	.size	z900_exclusive_or_immediate, .-z900_exclusive_or_immediate
	.p2align 4,,15
	.globl	z900_exclusive_or_character
	.type	z900_exclusive_or_character, @function
z900_exclusive_or_character:
.LFB2843:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rsi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r15d
	movl	%eax, %ecx
	shrl	$16, %r15d
	shrl	$28, %ecx
	andl	$4095, %r15d
	testl	%ecx, %ecx
	movl	%ecx, 8(%rsp)
	je	.L31542
	movslq	%ecx, %rdx
	addq	192(%rsi,%rdx,8), %r15
	andq	120(%rsi), %r15
.L31542:
	movl	%eax, %r14d
	shrl	$12, %eax
	andl	$4095, %r14d
	andl	$15, %eax
	movl	%eax, 40(%rsp)
	je	.L31543
	cltq
	addq	192(%rbp,%rax,8), %r14
	andq	120(%rbp), %r14
.L31543:
	movzbl	1(%rdi), %r9d
	movb	$6, 130(%rbp)
	addq	$6, 136(%rbp)
	movzbl	%r9b, %r12d
	testl	%r12d, %r12d
	je	.L31702
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	0(%rbp,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L31555
	leal	1(%rax), %edx
	movl	%r15d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	0(%rbp,%rsi,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbp,%rdx,8)
	jne	.L31703
.L31556:
	movzbl	97(%rbp), %ecx
	testb	%cl, %cl
	jne	.L31704
.L31557:
	movl	2224(%rbp), %edi
	movq	%r15, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L31624
	testb	$1, 46264(%rbp,%rsi)
	je	.L31624
	movq	35000(%rax), %r11
	movq	%r15, %rbx
	movzbl	%cl, %r8d
	movq	%r11, 984(%rbp)
	xorq	26808(%rax), %rbx
.L31559:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	0(%rbp,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L31560
	leal	1(%rax), %edx
	movl	%r14d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	0(%rbp,%rsi,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbp,%rdx,8)
	jne	.L31705
.L31561:
	testb	%r8b, %r8b
	jne	.L31706
.L31562:
	movl	2224(%rbp), %edi
	movq	%r14, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L31560
	testb	$4, 46264(%rbp,%rsi)
	je	.L31560
	movq	%r14, %r13
	xorq	26808(%rax), %r13
.L31563:
	movl	$2047, %r10d
	movl	%r15d, %eax
	subl	%r12d, %r10d
	andl	$2047, %eax
	cmpl	%r10d, %eax
	jg	.L31564
	movl	%r14d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L31565
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	cmpq	%r13, %rbx
	movl	$1, %esi
	je	.L31707
	.p2align 4,,10
	.p2align 3
.L31675:
	movzbl	0(%r13,%rax), %edx
	xorb	%dl, (%rbx,%rax)
	cmovne	%esi, %ecx
	addq	$1, %rax
	cmpl	%eax, %r12d
	jge	.L31675
.L31573:
	orb	$6, (%r11)
.L31586:
	movb	%cl, 100(%rbp)
.L31541:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L31707:
	.cfi_restore_state
	leal	1(%r12), %edx
	movq	%rbx, %rdi
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L31708
.L31567:
	testb	$4, %dl
	jne	.L31709
.L31570:
	testb	$2, %dl
	jne	.L31710
.L31571:
	andl	$1, %edx
	.p2align 4,,2
	jne	.L31711
	xorl	%ecx, %ecx
	.p2align 4,,3
	jmp	.L31573
.L31711:
	movb	$0, (%rdi)
	xorl	%ecx, %ecx
	jmp	.L31573
.L31710:
	xorl	%eax, %eax
	addq	$2, %rdi
	movw	%ax, -2(%rdi)
	jmp	.L31571
.L31709:
	movl	$0, (%rdi)
	addq	$4, %rdi
	jmp	.L31570
.L31708:
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep stosq
	jmp	.L31567
.L31705:
	movzbl	44216(%rbp,%rsi), %edi
	testb	%dil, 1976(%rbp,%rdx)
	jne	.L31561
.L31560:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movq	%r14, %rdi
	movq	%r11, 32(%rsp)
	call	z900_logical_to_main_l
	movq	32(%rsp), %r11
	movq	%rax, %r13
	jmp	.L31563
.L31704:
	cmpb	43192(%rbp,%rsi), %cl
	je	.L31557
.L31624:
	movzbl	%cl, %r8d
.L31558:
	movl	8(%rsp), %esi
	movl	$1, %ecx
	movq	%rbp, %rdx
	movq	%r15, %rdi
	call	z900_logical_to_main_l
	movq	984(%rbp), %r11
	movq	%rax, %rbx
	movzbl	97(%rbp), %r8d
	jmp	.L31559
.L31706:
	cmpb	43192(%rbp,%rsi), %r8b
	je	.L31562
	jmp	.L31560
.L31703:
	movzbl	44216(%rbp,%rsi), %ecx
	testb	%cl, 1976(%rbp,%rdx)
	jne	.L31556
.L31555:
	movzbl	97(%rbp), %r8d
	jmp	.L31558
.L31702:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbp,%rax,4), %eax
	testl	%eax, %eax
	je	.L31545
	leal	1(%rax), %edx
	movl	%r14d, %eax
	shrl	$12, %eax
	movslq	%edx, %rdx
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbp,%rdx,8)
	jne	.L31712
.L31546:
	movzbl	97(%rbp), %edx
	testb	%dl, %dl
	jne	.L31713
.L31547:
	movl	2224(%rbp), %edi
	movq	%r14, %rsi
	andq	$-4194304, %rsi
	orq	%rdi, %rsi
	cmpq	10424(%rcx), %rsi
	jne	.L31621
	testb	$4, 46264(%rbp,%rax)
	je	.L31621
	xorq	26808(%rcx), %r14
	movzbl	%dl, %r8d
.L31549:
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbp,%rax,4), %eax
	testl	%eax, %eax
	je	.L31550
	leal	1(%rax), %esi
	movl	%r15d, %ecx
	shrl	$12, %ecx
	movslq	%esi, %rsi
	andl	$1023, %ecx
	leaq	0(%rbp,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbp,%rsi,8)
	jne	.L31714
.L31551:
	testb	%r8b, %r8b
	jne	.L31715
.L31552:
	movl	2224(%rbp), %edi
	movq	%r15, %rsi
	andq	$-4194304, %rsi
	orq	%rdi, %rsi
	cmpq	10424(%rax), %rsi
	jne	.L31550
	testb	$2, 46264(%rbp,%rcx)
	je	.L31550
	xorq	26808(%rax), %r15
	movq	%r15, %rax
.L31553:
	movzbl	(%rax), %edx
	xorb	(%r14), %dl
	testb	%dl, %dl
	movb	%dl, (%rax)
	setne	100(%rbp)
	jmp	.L31541
.L31565:
	movl	$2048, %r15d
	subl	%eax, %r15d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L31576
	movq	120(%rbp), %rdx
	leal	1(%rax), %esi
	leal	(%r15,%r14), %eax
	movslq	%esi, %rsi
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbp,%rsi,8)
	jne	.L31716
.L31577:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L31717
.L31579:
	movl	%r15d, %esi
	leaq	(%rsi,%r14), %rdi
	movl	2224(%rbp), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L31578
	testb	$4, 46264(%rbp,%rax)
	je	.L31578
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L31580:
	movq	%rbx, %rdx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L31582:
	addq	$1, %r13
	movzbl	-1(%r13), %esi
	addq	$1, %rdx
	xorb	%sil, -1(%rdx)
	movl	%edx, %esi
	cmovne	%edi, %ecx
	subl	%ebx, %esi
	cmpl	%esi, %r15d
	jg	.L31582
	xorl	%esi, %esi
	subl	%r15d, %r12d
	movl	$1, %r8d
	js	.L31573
.L31698:
	movzbl	(%rax,%rsi), %edi
	xorb	%dil, (%rdx,%rsi)
	cmovne	%r8d, %ecx
	addq	$1, %rsi
	cmpl	%esi, %r12d
	jge	.L31698
	jmp	.L31573
.L31564:
	movl	$2048, 32(%rsp)
	subl	%eax, 32(%rsp)
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L31587
	leal	1(%rax), %esi
	movl	32(%rsp), %eax
	movq	120(%rbp), %rcx
	movslq	%esi, %rsi
	addl	%r15d, %eax
	andl	%ecx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbp,%rsi,8)
	jne	.L31718
.L31588:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L31719
.L31590:
	movl	32(%rsp), %esi
	leaq	(%rsi,%r15), %rdi
	movl	2224(%rbp), %esi
	andq	%rcx, %rdi
	movq	%rdi, %rcx
	andq	$-4194304, %rcx
	orq	%rsi, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L31589
	testb	$1, 46264(%rbp,%rax)
	je	.L31589
	movq	35000(%rdx), %rax
	movq	%rax, 984(%rbp)
	xorq	26808(%rdx), %rdi
	movq	%rax, 8(%rsp)
	movq	%rdi, %r15
.L31591:
	movl	%r14d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L31592
	movq	%rbx, %rax
	xorl	%ecx, %ecx
	movl	$1, %esi
.L31594:
	addq	$1, %r13
	movzbl	-1(%r13), %edx
	addq	$1, %rax
	xorb	%dl, -1(%rax)
	movl	%eax, %edx
	cmovne	%esi, %ecx
	subl	%ebx, %edx
	cmpl	%edx, 32(%rsp)
	jg	.L31594
	subl	32(%rsp), %r12d
	js	.L31595
	xorl	%eax, %eax
	movl	$1, %esi
.L31596:
	movzbl	0(%r13,%rax), %edx
	xorb	%dl, (%r15,%rax)
	cmovne	%esi, %ecx
	addq	$1, %rax
	cmpl	%eax, %r12d
	jge	.L31596
.L31595:
	orb	$6, (%r11)
	movq	8(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L31586
.L31592:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L31597
	movq	120(%rbp), %rdx
	leal	1(%rax), %esi
	leal	(%r10,%r14), %eax
	movslq	%esi, %rsi
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbp,%rsi,8)
	jne	.L31720
.L31598:
	movzbl	97(%rbp), %r8d
	testb	%r8b, %r8b
	jne	.L31721
.L31600:
	movl	%r10d, %esi
	leaq	(%rsi,%r14), %rdi
	movl	2224(%rbp), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L31599
	testb	$4, 46264(%rbp,%rax)
	je	.L31599
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L31601:
	cmpl	%r10d, 32(%rsp)
	je	.L31722
	jge	.L31606
	movq	%r13, %rsi
	xorl	%ecx, %ecx
	movl	$1, %edi
.L31608:
	addq	$1, %rsi
	movzbl	-1(%rsi), %edx
	addq	$1, %rbx
	xorb	%dl, -1(%rbx)
	movl	%esi, %edx
	cmovne	%edi, %ecx
	subl	%r13d, %edx
	cmpl	32(%rsp), %edx
	jl	.L31608
	movl	%r10d, %r8d
	subl	32(%rsp), %r8d
	testl	%r8d, %r8d
	jle	.L31609
	xorl	%edx, %edx
	movl	$1, %r9d
.L31611:
	movzbl	(%rsi,%rdx), %edi
	xorb	%dil, (%r15,%rdx)
	cmovne	%r9d, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r8d
	jg	.L31611
	subl	$1, %r8d
	leaq	1(%r15,%r8), %r15
.L31609:
	subl	%r10d, %r12d
	js	.L31595
	xorl	%edx, %edx
	movl	$1, %edi
.L31612:
	movzbl	(%rax,%rdx), %esi
	xorb	%sil, (%r15,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r12d
	jge	.L31612
	jmp	.L31595
.L31606:
	movq	%rbx, %rdx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L31614:
	addq	$1, %r13
	movzbl	-1(%r13), %esi
	addq	$1, %rdx
	xorb	%sil, -1(%rdx)
	movl	%edx, %esi
	cmovne	%edi, %ecx
	subl	%ebx, %esi
	cmpl	%esi, %r10d
	jg	.L31614
	movl	32(%rsp), %r8d
	subl	%r10d, %r8d
	testl	%r8d, %r8d
	jle	.L31615
	xorl	%esi, %esi
	movl	$1, %r9d
.L31617:
	movzbl	(%rax,%rsi), %edi
	xorb	%dil, (%rdx,%rsi)
	cmovne	%r9d, %ecx
	addq	$1, %rsi
	cmpl	%esi, %r8d
	jg	.L31617
	subl	$1, %r8d
	leaq	1(%rax,%r8), %rax
.L31615:
	subl	32(%rsp), %r12d
	js	.L31595
	xorl	%edx, %edx
	movl	$1, %edi
.L31618:
	movzbl	(%rax,%rdx), %esi
	xorb	%sil, (%r15,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r12d
	jge	.L31618
	jmp	.L31595
.L31722:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movl	$1, %edi
.L31604:
	movzbl	0(%r13,%rdx), %esi
	xorb	%sil, (%rbx,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, 32(%rsp)
	jg	.L31604
	subl	32(%rsp), %r12d
	js	.L31595
	xorl	%edx, %edx
	movl	$1, %edi
.L31605:
	movzbl	(%rax,%rdx), %esi
	xorb	%sil, (%r15,%rdx)
	cmovne	%edi, %ecx
	addq	$1, %rdx
	cmpl	%edx, %r12d
	jge	.L31605
	jmp	.L31595
.L31720:
	movzbl	44216(%rbp,%rax), %edi
	testb	%dil, 1976(%rbp,%rsi)
	jne	.L31598
	movzbl	97(%rbp), %r8d
	movl	%r10d, %eax
	leaq	(%rax,%r14), %rdi
	andq	%rdx, %rdi
.L31599:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	z900_logical_to_main_l
	movl	24(%rsp), %r10d
	movq	16(%rsp), %r11
	jmp	.L31601
.L31721:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L31600
	movl	%r10d, %eax
	leaq	(%rax,%r14), %rdi
	andq	%rdx, %rdi
	jmp	.L31599
.L31597:
	movl	%r10d, %eax
	movzbl	97(%rbp), %r8d
	leaq	(%rax,%r14), %rdi
	andq	120(%rbp), %rdi
	jmp	.L31599
.L31718:
	movzbl	44216(%rbp,%rax), %edi
	testb	%dil, 1976(%rbp,%rsi)
	jne	.L31588
	movl	32(%rsp), %eax
	movzbl	97(%rbp), %r8d
	leaq	(%rax,%r15), %rdi
	andq	%rcx, %rdi
.L31589:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbp, %rdx
	movl	%r10d, 44(%rsp)
	movq	%r11, 24(%rsp)
	call	z900_logical_to_main_l
	movl	44(%rsp), %r10d
	movq	%rax, %r15
	movq	984(%rbp), %rax
	movq	24(%rsp), %r11
	movq	%rax, 8(%rsp)
	jmp	.L31591
.L31719:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L31590
	movl	32(%rsp), %eax
	leaq	(%rax,%r15), %rdi
	andq	%rcx, %rdi
	jmp	.L31589
.L31587:
	movl	32(%rsp), %eax
	movzbl	97(%rbp), %r8d
	leaq	(%rax,%r15), %rdi
	andq	120(%rbp), %rdi
	jmp	.L31589
.L31716:
	movzbl	44216(%rbp,%rax), %edi
	testb	%dil, 1976(%rbp,%rsi)
	jne	.L31577
	movzbl	97(%rbp), %r8d
	movl	%r15d, %eax
	leaq	(%rax,%r14), %rdi
	andq	%rdx, %rdi
.L31578:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movq	%r11, 8(%rsp)
	call	z900_logical_to_main_l
	movq	8(%rsp), %r11
	jmp	.L31580
.L31717:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L31579
	movl	%r15d, %eax
	leaq	(%rax,%r14), %rdi
	andq	%rdx, %rdi
	jmp	.L31578
.L31576:
	movl	%r15d, %eax
	movzbl	97(%rbp), %r8d
	leaq	(%rax,%r14), %rdi
	andq	120(%rbp), %rdi
	jmp	.L31578
.L31715:
	cmpb	%r8b, 43192(%rbp,%rcx)
	je	.L31552
.L31550:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbp, %rdx
	movq	%r15, %rdi
	call	z900_logical_to_main_l
	jmp	.L31553
.L31714:
	movzbl	44216(%rbp,%rcx), %edi
	testb	%dil, 1976(%rbp,%rsi)
	jne	.L31551
	jmp	.L31550
.L31713:
	cmpb	43192(%rbp,%rax), %dl
	je	.L31547
.L31621:
	movzbl	%dl, %r8d
.L31548:
	movl	40(%rsp), %esi
	movq	%r14, %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	call	z900_logical_to_main_l
	movzbl	97(%rbp), %r8d
	movq	%rax, %r14
	jmp	.L31549
.L31712:
	movzbl	44216(%rbp,%rax), %esi
	testb	%sil, 1976(%rbp,%rdx)
	jne	.L31546
.L31545:
	movzbl	97(%rbp), %r8d
	jmp	.L31548
	.cfi_endproc
.LFE2843:
	.size	z900_exclusive_or_character, .-z900_exclusive_or_character
	.p2align 4,,15
	.globl	z900_execute
	.type	z900_execute, @function
z900_execute:
.LFB2844:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %ecx
	shrl	$20, %ebp
	shrl	$16, %ecx
	movl	%eax, %edx
	andl	$4095, %edx
	andl	$15, %ebp
	andl	$15, %ecx
	movq	%rdx, 800(%rsi)
	jne	.L31753
.L31724:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L31725
	cltq
	addq	192(%rbx,%rax,8), %rdx
.L31725:
	andq	120(%rbx), %rdx
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	movq	%rdx, 800(%rbx)
	andl	$1, %edx
	jne	.L31754
.L31726:
	movq	800(%rbx), %rax
	leaq	1014(%rbx), %r12
	movq	$0, 1014(%rbx)
	movq	%rax, %rdx
	andq	$-4095, %rdx
	cmpq	168(%rbx), %rdx
	jne	.L31727
	andl	$4095, %eax
	orq	144(%rbx), %rax
	cmpq	160(%rbx), %rax
	jae	.L31727
.L31728:
	cmpq	%r12, %rax
	je	.L31729
	movq	(%rax), %rax
	movq	%rax, 1014(%rbx)
.L31729:
	movzbl	1014(%rbx), %eax
	cmpb	$68, %al
	je	.L31730
	cmpb	$-58, %al
	movzbl	1015(%rbx), %ecx
	movl	%eax, %edx
	je	.L31731
.L31732:
	xorl	%eax, %eax
	testl	%ebp, %ebp
	je	.L31733
	movslq	%ebp, %rbp
	movzbl	192(%rbx,%rbp,8), %eax
.L31733:
	orl	%ecx, %eax
	movb	%al, 1015(%rbx)
	movzbl	808(%rbx), %eax
	orl	$1, %eax
	andl	$-3, %eax
	cmpb	$63, %dl
	movb	%al, 808(%rbx)
	movq	136(%rbx), %rax
	jbe	.L31734
	cmpb	$-64, %dl
	sbbq	%rdx, %rdx
	andl	$2, %edx
	leaq	-6(%rax,%rdx), %rax
	movq	2160(%rbx), %rdx
	movq	%rax, 136(%rbx)
	movzwl	1014(%rbx), %eax
.L31737:
#APP
# 4413 "general1.c" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
	movq	%rbx, %rsi
	movzwl	%ax, %eax
	movq	%r12, %rdi
	call	*(%rdx,%rax,8)
	movl	52(%rbx), %eax
	addl	$1, 880(%rbx)
	andl	56(%rbx), %eax
	testl	$16318464, %eax
	jne	.L31723
	andb	$-2, 808(%rbx)
.L31723:
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L31734:
	.cfi_restore_state
	subq	$2, %rax
	movq	2160(%rbx), %rdx
	movq	%rax, 136(%rbx)
	movzwl	1014(%rbx), %eax
	jmp	.L31737
	.p2align 4,,10
	.p2align 3
.L31754:
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L31726
	.p2align 4,,10
	.p2align 3
.L31731:
	testb	$15, %cl
	jne	.L31732
.L31730:
	movl	$3, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movzbl	1015(%rbx), %ecx
	movzbl	1014(%rbx), %edx
	jmp	.L31732
.L31727:
	movq	%rbx, %rdi
	call	z900_instfetch.constprop.15
	jmp	.L31728
.L31753:
	movslq	%ecx, %rcx
	addq	192(%rsi,%rcx,8), %rdx
	movq	%rdx, 800(%rsi)
	jmp	.L31724
	.cfi_endproc
.LFE2844:
	.size	z900_execute, .-z900_execute
	.p2align 4,,15
	.globl	z900_execute_relative_long
	.type	z900_execute_relative_long, @function
z900_execute_relative_long:
.LFB2845:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movl	2(%rdi), %eax
	movzbl	1(%rdi), %edx
	bswap	%eax
	cltq
	shrb	$4, %dl
	addq	%rax, %rax
	testb	$1, 808(%rsi)
	movzbl	%dl, %r12d
	jne	.L31756
	movq	136(%rsi), %rsi
	movq	%rsi, %rcx
	subq	144(%rbx), %rcx
	addq	168(%rbx), %rcx
	addq	%rcx, %rax
	andq	120(%rbx), %rax
.L31757:
	movq	%rax, %rdx
	addq	$6, %rsi
	movq	%rax, 800(%rbx)
	andq	$-4095, %rdx
	movq	%rsi, 136(%rbx)
	cmpq	168(%rbx), %rdx
	movb	$6, 130(%rbx)
	leaq	1014(%rbx), %rbp
	movq	$0, 1014(%rbx)
	jne	.L31758
	andl	$4095, %eax
	orq	144(%rbx), %rax
	cmpq	160(%rbx), %rax
	jae	.L31758
.L31759:
	cmpq	%rbp, %rax
	je	.L31760
	movq	(%rax), %rax
	movq	%rax, 1014(%rbx)
.L31760:
	movzbl	1014(%rbx), %eax
	cmpb	$68, %al
	je	.L31761
	cmpb	$-58, %al
	movzbl	1015(%rbx), %ecx
	je	.L31762
.L31763:
	xorl	%edx, %edx
	testl	%r12d, %r12d
	je	.L31764
	movzbl	192(%rbx,%r12,8), %edx
.L31764:
	orb	$3, 808(%rbx)
	orl	%ecx, %edx
	cmpb	$63, %al
	movb	%dl, 1015(%rbx)
	movq	136(%rbx), %rdx
	jbe	.L31765
	cmpb	$-64, %al
	sbbq	%rax, %rax
	andl	$2, %eax
	leaq	-6(%rdx,%rax), %rax
	movq	2160(%rbx), %rdx
	movq	%rax, 136(%rbx)
	movzwl	1014(%rbx), %eax
.L31768:
#APP
# 4484 "general1.c" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
	movq	%rbx, %rsi
	movzwl	%ax, %eax
	movq	%rbp, %rdi
	call	*(%rdx,%rax,8)
	movl	52(%rbx), %eax
	addl	$1, 880(%rbx)
	andl	56(%rbx), %eax
	testl	$16318464, %eax
	jne	.L31755
	andb	$-2, 808(%rbx)
.L31755:
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L31765:
	.cfi_restore_state
	subq	$2, %rdx
	movzwl	1014(%rbx), %eax
	movq	%rdx, 136(%rbx)
	movq	2160(%rbx), %rdx
	jmp	.L31768
	.p2align 4,,10
	.p2align 3
.L31762:
	testb	$15, %cl
	jne	.L31763
.L31761:
	movl	$3, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	movzbl	1015(%rbx), %ecx
	movzbl	1014(%rbx), %eax
	jmp	.L31763
.L31758:
	movq	%rbx, %rdi
	call	z900_instfetch.constprop.15
	jmp	.L31759
.L31756:
	addq	800(%rsi), %rax
	andq	120(%rsi), %rax
	movq	136(%rsi), %rsi
	jmp	.L31757
	.cfi_endproc
.LFE2845:
	.size	z900_execute_relative_long, .-z900_execute_relative_long
	.p2align 4,,15
	.globl	z900_extract_access_register
	.type	z900_extract_access_register, @function
z900_extract_access_register:
.LFB2846:
	.cfi_startproc
	movzbl	3(%rdi), %edx
	addq	$4, 136(%rsi)
	movq	%rdx, %rax
	andl	$15, %edx
	movl	584(%rsi,%rdx,4), %edx
	shrq	$4, %rax
	andl	$15, %eax
	movl	%edx, 192(%rsi,%rax,8)
	ret
	.cfi_endproc
.LFE2846:
	.size	z900_extract_access_register, .-z900_extract_access_register
	.p2align 4,,15
	.globl	z900_insert_characters_under_mask
	.type	z900_insert_characters_under_mask, @function
z900_insert_characters_under_mask:
.LFB2847:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %r13d
	movl	%ebp, %r12d
	shrl	$16, %r13d
	movl	%ebp, %r15d
	shrl	$20, %r12d
	movl	%r13d, %r14d
	shrl	$12, %r15d
	andl	$15, %r12d
	andl	$15, %r14d
	andl	$4095, %ebp
	andl	$15, %r15d
	je	.L31779
	movslq	%r15d, %rax
	addq	192(%rsi,%rax,8), %rbp
	andq	120(%rsi), %rbp
.L31779:
	addq	$4, 136(%rbx)
	cmpl	$7, %r14d
	movb	$4, 130(%rbx)
	je	.L31781
	cmpl	$15, %r14d
	jne	.L31931
	testb	$3, %bpl
	movl	%ebp, %ecx
	jne	.L31932
.L31799:
	leal	5(%r15), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L31801
	shrl	$12, %ecx
	addl	$1, %eax
	andl	$1023, %ecx
	cltq
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L31933
.L31802:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L31934
.L31803:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L31801
	testb	$4, 46264(%rbx,%rcx)
	je	.L31801
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
.L31804:
	movl	(%rax), %eax
	bswap	%eax
.L31805:
	movslq	%r12d, %r12
	xorl	%edx, %edx
	testl	%eax, %eax
	movl	%eax, 192(%rbx,%r12,8)
	je	.L31806
	sarl	$31, %eax
	leal	2(%rax), %edx
.L31806:
	movb	%dl, 100(%rbx)
.L31778:
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L31931:
	.cfi_restore_state
	leal	5(%r15), %eax
	movslq	%r14d, %r10
	movl	$0, 48(%rsp)
	movzbl	icmlen.62191(,%r10,4), %r11d
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L31807
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L31935
.L31808:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L31936
.L31809:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L31807
	testb	$4, 46264(%rbx,%rcx)
	je	.L31807
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
	movq	%rax, 8(%rsp)
.L31810:
	movl	%ebp, %edx
	movl	$2047, %eax
	andl	$2047, %edx
	subl	%r11d, %eax
	cmpl	%eax, %edx
	jg	.L31811
	leal	1(%r11), %edx
	movq	8(%rsp), %rsi
	leaq	48(%rsp), %rdi
	movslq	%edx, %rdx
	cmpq	$8, %rdx
	jae	.L31937
	xorl	%eax, %eax
	testb	$4, %dl
	jne	.L31938
.L31815:
	testb	$2, %dl
	jne	.L31939
.L31816:
	andl	$1, %edx
	jne	.L31940
.L31818:
	testl	%r14d, %r14d
	.p2align 4,,2
	jne	.L31827
.L31944:
	movb	$0, 48(%rsp)
.L31827:
	movl	48(%rsp), %eax
	xorl	%edx, %edx
	bswap	%eax
	testl	%eax, %eax
	je	.L31828
	sarl	$31, %eax
	leal	2(%rax), %edx
.L31828:
	movb	%dl, 100(%rbx)
	movl	icmmask.62192(,%r10,4), %edx
	movslq	%r12d, %r12
	leaq	(%rbx,%r12,8), %rax
	andl	192(%rax), %edx
	testb	$8, %r13b
	movl	%edx, 192(%rax)
	jne	.L31941
	movl	$2, %edi
	movl	$1, %esi
	xorl	%ecx, %ecx
.L31829:
	testb	$4, %r13b
	je	.L31830
	movzbl	48(%rsp,%rcx), %ecx
	sall	$16, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movslq	%esi, %rcx
	movl	%edi, %esi
.L31830:
	testb	$2, %r13b
	je	.L31831
	movzbl	48(%rsp,%rcx), %ecx
	sall	$8, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movslq	%esi, %rcx
.L31831:
	andl	$1, %r13d
	je	.L31778
	movzbl	48(%rsp,%rcx), %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L31781:
	.cfi_restore_state
	leal	5(%r15), %eax
	movb	$0, 48(%rsp)
	cltq
	leaq	(%rbx,%rax,4), %r14
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L31783
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L31942
.L31784:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L31943
.L31785:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L31783
	testb	$4, 46264(%rbx,%rcx)
	je	.L31783
	movq	%rbp, %r13
	xorq	26808(%rdx), %r13
.L31786:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2045, %eax
	jg	.L31787
	movzwl	0(%r13), %eax
	movw	%ax, 49(%rsp)
	movzbl	2(%r13), %eax
	movb	%al, 51(%rsp)
.L31788:
	movslq	%r12d, %r12
	movl	48(%rsp), %edx
	leaq	(%rbx,%r12,8), %rcx
	movl	192(%rcx), %eax
	bswap	%edx
	andl	$-16777216, %eax
	orl	%edx, %eax
	movl	%eax, 192(%rcx)
	xorl	%eax, %eax
	testl	%edx, %edx
	je	.L31797
	andl	$8388608, %edx
	cmpl	$1, %edx
	sbbl	%eax, %eax
	notl	%eax
	addl	$2, %eax
.L31797:
	movb	%al, 100(%rbx)
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L31941:
	.cfi_restore_state
	movzbl	48(%rsp), %ecx
	movl	$3, %edi
	movl	$2, %esi
	sall	$24, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movl	$1, %ecx
	jmp	.L31829
	.p2align 4,,10
	.p2align 3
.L31940:
	movzbl	(%rsi,%rax), %edx
	testl	%r14d, %r14d
	movb	%dl, (%rdi,%rax)
	jne	.L31827
	jmp	.L31944
	.p2align 4,,10
	.p2align 3
.L31939:
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%rdi,%rax)
	addq	$2, %rax
	andl	$1, %edx
	je	.L31818
	jmp	.L31940
	.p2align 4,,10
	.p2align 3
.L31938:
	movl	(%rsi), %eax
	testb	$2, %dl
	movl	%eax, (%rdi)
	movl	$4, %eax
	je	.L31816
	jmp	.L31939
	.p2align 4,,10
	.p2align 3
.L31937:
	cmpq	$127, %rdx
	ja	.L31945
	movq	%rdx, %rcx
	xorl	%eax, %eax
	shrq	$3, %rcx
	testb	$4, %dl
	rep movsq
	je	.L31815
	jmp	.L31938
	.p2align 4,,10
	.p2align 3
.L31945:
	movq	%r10, 16(%rsp)
	call	memcpy
	movq	16(%rsp), %r10
	jmp	.L31818
.L31942:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L31784
.L31783:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
	movq	%rax, %r13
	jmp	.L31786
.L31935:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L31808
.L31807:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movq	%rbp, %rdi
	movq	%r10, 32(%rsp)
	movl	%r11d, 28(%rsp)
	call	z900_logical_to_main_l
	movq	32(%rsp), %r10
	movq	%rax, 8(%rsp)
	movl	28(%rsp), %r11d
	jmp	.L31810
.L31933:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L31802
.L31801:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
	jmp	.L31804
.L31936:
	cmpb	43192(%rbx,%rcx), %al
	je	.L31809
	.p2align 4,,4
	jmp	.L31807
.L31811:
	movq	16(%rsp), %rax
	movl	$2048, 28(%rsp)
	subl	%edx, 28(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L31930
	leal	1(%rax), %edx
	movl	28(%rsp), %eax
	movq	120(%rbx), %rsi
	movslq	%edx, %rdx
	addl	%ebp, %eax
	andl	%esi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L31946
.L31820:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L31947
.L31821:
	movl	28(%rsp), %edi
	leaq	(%rdi,%rbp), %rdx
	movq	%rdi, 16(%rsp)
	movl	2224(%rbx), %edi
	andq	%rsi, %rdx
	movq	%rdx, %rsi
	andq	$-4194304, %rsi
	orq	%rdi, %rsi
	cmpq	10424(%rcx), %rsi
	jne	.L31819
	testb	$4, 46264(%rbx,%rax)
	je	.L31819
	xorq	26808(%rcx), %rdx
	movq	%rdx, %r15
.L31822:
	cmpq	$127, 16(%rsp)
	leaq	48(%rsp), %rbp
	ja	.L31948
	movq	8(%rsp), %rsi
	movq	%rbp, %rdi
	movq	16(%rsp), %rcx
	rep movsb
.L31824:
	leal	1(%r11), %edx
	movq	16(%rsp), %rax
	subl	28(%rsp), %edx
	addq	%rbp, %rax
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L31949
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L31818
.L31943:
	cmpb	43192(%rbx,%rcx), %al
	je	.L31785
	jmp	.L31783
.L31787:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movl	1892(%r14), %eax
	testl	%eax, %eax
	je	.L31928
	movq	120(%rbx), %rsi
	leal	1(%rax), %edx
	leal	(%r10,%rbp), %eax
	movslq	%edx, %rdx
	andl	%esi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L31950
.L31790:
	movzbl	97(%rbx), %edx
	movl	%r10d, %r14d
	testb	%dl, %dl
	jne	.L31951
.L31791:
	leaq	(%r14,%rbp), %rdx
	movl	2224(%rbx), %edi
	andq	%rsi, %rdx
	movq	%rdx, %rsi
	andq	$-4194304, %rsi
	orq	%rdi, %rsi
	cmpq	10424(%rcx), %rsi
	jne	.L31789
	testb	$4, 46264(%rbx,%rax)
	je	.L31789
	xorq	26808(%rcx), %rdx
	movq	%rdx, %r15
.L31792:
	leaq	48(%rsp), %rbp
	cmpq	$127, %r14
	leaq	1(%rbp), %rax
	ja	.L31952
	movq	%rax, %rdi
	movq	%r13, %rsi
	movq	%r14, %rcx
	rep movsb
.L31794:
	leaq	1(%rbp,%r14), %rax
	movl	$3, %edx
	subl	%r10d, %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L31953
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L31788
.L31932:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L31799
	movq	%rbx, %rdx
	movl	%r15d, %esi
	movq	%rbp, %rdi
	call	z900_vfetch4_full
	jmp	.L31805
.L31934:
	cmpb	43192(%rbx,%rcx), %al
	je	.L31803
	.p2align 4,,4
	jmp	.L31801
.L31947:
	cmpb	43192(%rbx,%rax), %dl
	je	.L31821
.L31930:
	movl	28(%rsp), %eax
	movq	%rax, 16(%rsp)
.L31819:
	movq	16(%rsp), %rax
	movl	%r15d, %esi
	movl	$1, %r9d
	movzbl	97(%rbx), %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r10, 40(%rsp)
	movl	%r11d, 32(%rsp)
	leaq	(%rax,%rbp), %rdi
	andq	120(%rbx), %rdi
	call	z900_logical_to_main_l
	movq	40(%rsp), %r10
	movq	%rax, %r15
	movl	32(%rsp), %r11d
	jmp	.L31822
.L31946:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L31820
	jmp	.L31930
.L31949:
	movq	%r15, %rsi
	movq	%rax, %rdi
	movq	%r10, 8(%rsp)
	call	memcpy
	movq	8(%rsp), %r10
	jmp	.L31818
.L31948:
	movq	16(%rsp), %rdx
	movq	%rbp, %rdi
	movq	%r10, 40(%rsp)
	movq	8(%rsp), %rsi
	movl	%r11d, 32(%rsp)
	call	memcpy
	movl	32(%rsp), %r11d
	movq	40(%rsp), %r10
	jmp	.L31824
.L31953:
	movq	%r15, %rsi
	movq	%rax, %rdi
	call	memcpy
	jmp	.L31788
.L31952:
	movq	%r14, %rdx
	movq	%r13, %rsi
	movq	%rax, %rdi
	movl	%r10d, 8(%rsp)
	call	memcpy
	movl	8(%rsp), %r10d
	jmp	.L31794
.L31950:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L31790
.L31928:
	movl	%r10d, %r14d
.L31789:
	leaq	(%r14,%rbp), %rdi
	movzbl	97(%rbx), %r8d
	movl	%r15d, %esi
	andq	120(%rbx), %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 8(%rsp)
	call	z900_logical_to_main_l
	movl	8(%rsp), %r10d
	movq	%rax, %r15
	jmp	.L31792
.L31951:
	cmpb	43192(%rbx,%rax), %dl
	je	.L31791
	jmp	.L31789
	.cfi_endproc
.LFE2847:
	.size	z900_insert_characters_under_mask, .-z900_insert_characters_under_mask
	.p2align 4,,15
	.globl	z900_BF_7
	.type	z900_BF_7, @function
z900_BF_7:
.LFB2848:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %r12d
	movl	%ebp, %esi
	shrl	$20, %r12d
	shrl	$12, %esi
	andl	$4095, %ebp
	andl	$15, %r12d
	andl	$15, %esi
	movl	%esi, %r14d
	je	.L31955
	movslq	%esi, %rax
	addq	192(%rbx,%rax,8), %rbp
	andq	120(%rbx), %rbp
.L31955:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	movb	$0, 16(%rsp)
	leal	5(%r14), %eax
	cltq
	leaq	(%rbx,%rax,4), %r15
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L31956
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L32003
.L31957:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L32004
.L31958:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L31956
	testb	$4, 46264(%rbx,%rcx)
	je	.L31956
	movq	%rbp, %r13
	xorq	26808(%rdx), %r13
.L31959:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2045, %eax
	jg	.L31960
	movzwl	0(%r13), %eax
	movw	%ax, 17(%rsp)
	movzbl	2(%r13), %eax
	movb	%al, 19(%rsp)
.L31961:
	movslq	%r12d, %r12
	movl	16(%rsp), %edx
	leaq	(%rbx,%r12,8), %rcx
	movl	192(%rcx), %eax
	bswap	%edx
	andl	$-16777216, %eax
	orl	%edx, %eax
	movl	%eax, 192(%rcx)
	xorl	%eax, %eax
	testl	%edx, %edx
	je	.L31970
	andl	$8388608, %edx
	cmpl	$1, %edx
	sbbl	%eax, %eax
	notl	%eax
	addl	$2, %eax
.L31970:
	movb	%al, 100(%rbx)
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L32003:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L31957
.L31956:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
	movq	%rax, %r13
	jmp	.L31959
.L31960:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movl	1892(%r15), %eax
	testl	%eax, %eax
	je	.L32002
	movq	120(%rbx), %rsi
	leal	1(%rax), %edx
	leal	(%r10,%rbp), %eax
	movslq	%edx, %rdx
	andl	%esi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L32005
.L31963:
	movzbl	97(%rbx), %edx
	movl	%r10d, %r15d
	testb	%dl, %dl
	jne	.L32006
.L31964:
	leaq	(%r15,%rbp), %rdx
	movl	2224(%rbx), %edi
	andq	%rsi, %rdx
	movq	%rdx, %rsi
	andq	$-4194304, %rsi
	orq	%rdi, %rsi
	cmpq	10424(%rcx), %rsi
	jne	.L31962
	testb	$4, 46264(%rbx,%rax)
	je	.L31962
	xorq	26808(%rcx), %rdx
	movq	%rdx, %rbp
.L31965:
	leaq	17(%rsp), %rax
	cmpq	$127, %r15
	ja	.L32007
	movq	%rax, %rdi
	movq	%r13, %rsi
	movq	%r15, %rcx
	rep movsb
.L31967:
	leaq	17(%rsp,%r15), %rax
	movl	$3, %edx
	subl	%r10d, %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L32008
	movq	%rax, %rdi
	movq	%rbp, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L31961
.L32004:
	cmpb	43192(%rbx,%rcx), %al
	je	.L31958
	jmp	.L31956
.L32008:
	movq	%rbp, %rsi
	movq	%rax, %rdi
	call	memcpy
	.p2align 4,,2
	jmp	.L31961
.L32007:
	movq	%r15, %rdx
	movq	%r13, %rsi
	movq	%rax, %rdi
	movl	%r10d, 12(%rsp)
	call	memcpy
	movl	12(%rsp), %r10d
	jmp	.L31967
.L32005:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L31963
.L32002:
	movl	%r10d, %r15d
.L31962:
	leaq	(%r15,%rbp), %rdi
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	andq	120(%rbx), %rdi
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r14d, %esi
	movl	%r10d, 12(%rsp)
	call	z900_logical_to_main_l
	movl	12(%rsp), %r10d
	movq	%rax, %rbp
	jmp	.L31965
.L32006:
	cmpb	43192(%rbx,%rax), %dl
	je	.L31964
	jmp	.L31962
	.cfi_endproc
.LFE2848:
	.size	z900_BF_7, .-z900_BF_7
	.p2align 4,,15
	.globl	z900_BF_F
	.type	z900_BF_F, @function
z900_BF_F:
.LFB2849:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %edi
	bswap	%edi
	movl	%edi, %ebp
	movl	%edi, %eax
	shrl	$20, %ebp
	shrl	$12, %eax
	andl	$4095, %edi
	andl	$15, %ebp
	andl	$15, %eax
	movl	%eax, %esi
	je	.L32010
	cltq
	addq	192(%rbx,%rax,8), %rdi
	andq	120(%rbx), %rdi
.L32010:
	addq	$4, 136(%rbx)
	testb	$3, %dil
	movb	$4, 130(%rbx)
	movl	%edi, %ecx
	jne	.L32041
.L32011:
	leal	5(%rsi), %eax
	cltq
	movl	1892(%rbx,%rax,4), %edx
	testl	%edx, %edx
	je	.L32013
	leal	1(%rdx), %eax
	shrl	$12, %ecx
	andl	$1023, %ecx
	cltq
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %r10
	cmpq	%r10, 320(%rbx,%rax,8)
	jne	.L32042
.L32014:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L32043
.L32015:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rax
	andq	$-4194304, %rax
	orq	%r8, %rax
	cmpq	10424(%rdx), %rax
	jne	.L32013
	testb	$4, 46264(%rbx,%rcx)
	je	.L32013
	movq	%rdi, %rax
	xorq	26808(%rdx), %rax
.L32016:
	movl	(%rax), %eax
	bswap	%eax
.L32017:
	movslq	%ebp, %rbp
	xorl	%edx, %edx
	testl	%eax, %eax
	movl	%eax, 192(%rbx,%rbp,8)
	je	.L32018
	sarl	$31, %eax
	leal	2(%rax), %edx
.L32018:
	movb	%dl, 100(%rbx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L32042:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %r8d
	testb	%r8b, 1976(%rbx,%rax)
	jne	.L32014
.L32013:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	call	z900_logical_to_main_l
	jmp	.L32016
.L32041:
	movl	%edi, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L32011
	movq	%rbx, %rdx
	call	z900_vfetch4_full
	jmp	.L32017
.L32043:
	cmpb	43192(%rbx,%rcx), %al
	je	.L32015
	.p2align 4,,4
	jmp	.L32013
	.cfi_endproc
.LFE2849:
	.size	z900_BF_F, .-z900_BF_F
	.p2align 4,,15
	.globl	z900_BF_x
	.type	z900_BF_x, @function
z900_BF_x:
.LFB2850:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	(%rdi), %ebp
	bswap	%ebp
	movl	%ebp, %r12d
	movl	%ebp, %r13d
	shrl	$16, %r12d
	movl	%ebp, %eax
	shrl	$20, %r13d
	movl	%r12d, %r15d
	shrl	$12, %eax
	andl	$15, %r13d
	andl	$15, %r15d
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r11d
	je	.L32045
	cltq
	addq	192(%rsi,%rax,8), %rbp
	andq	120(%rsi), %rbp
.L32045:
	addq	$4, 136(%rbx)
	movb	$4, 130(%rbx)
	movslq	%r15d, %r14
	movl	$0, 32(%rsp)
	movzbl	icmlen.62227(,%r14,4), %r10d
	leal	5(%r11), %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L32046
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L32125
.L32047:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L32126
.L32048:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L32046
	testb	$4, 46264(%rbx,%rcx)
	je	.L32046
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
	movq	%rax, 8(%rsp)
.L32049:
	movl	%ebp, %edx
	movl	$2047, %eax
	andl	$2047, %edx
	subl	%r10d, %eax
	cmpl	%eax, %edx
	jg	.L32050
	leaq	32(%rsp), %rdi
	addl	$1, %r10d
	movq	8(%rsp), %rsi
	movslq	%r10d, %rdx
	cmpq	$8, %rdx
	jae	.L32127
.L32051:
	xorl	%eax, %eax
	testb	$4, %dl
	jne	.L32128
	testb	$2, %dl
	jne	.L32129
.L32055:
	andl	$1, %edx
	jne	.L32130
.L32057:
	testl	%r15d, %r15d
	.p2align 4,,2
	jne	.L32066
	movb	$0, 32(%rsp)
.L32066:
	movl	32(%rsp), %eax
	xorl	%edx, %edx
	bswap	%eax
	testl	%eax, %eax
	je	.L32067
	sarl	$31, %eax
	leal	2(%rax), %edx
.L32067:
	movb	%dl, 100(%rbx)
	movl	icmmask.62228(,%r14,4), %edx
	movslq	%r13d, %r13
	leaq	(%rbx,%r13,8), %rax
	andl	192(%rax), %edx
	testb	$8, %r12b
	movl	%edx, 192(%rax)
	je	.L32074
	movzbl	32(%rsp), %ecx
	movl	$3, %edi
	movl	$2, %esi
	sall	$24, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movl	$1, %ecx
.L32068:
	testb	$4, %r12b
	je	.L32069
	movzbl	32(%rsp,%rcx), %ecx
	sall	$16, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movslq	%esi, %rcx
	movl	%edi, %esi
.L32069:
	testb	$2, %r12b
	je	.L32070
	movzbl	32(%rsp,%rcx), %ecx
	sall	$8, %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
	movl	%ecx, %edx
	movslq	%esi, %rcx
.L32070:
	andl	$1, %r12d
	je	.L32044
	movzbl	32(%rsp,%rcx), %ecx
	orl	%edx, %ecx
	movl	%ecx, 192(%rax)
.L32044:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L32074:
	.cfi_restore_state
	movl	$2, %edi
	movl	$1, %esi
	xorl	%ecx, %ecx
	jmp	.L32068
	.p2align 4,,10
	.p2align 3
.L32130:
	movzbl	(%rsi,%rax), %edx
	movb	%dl, (%rdi,%rax)
	jmp	.L32057
	.p2align 4,,10
	.p2align 3
.L32129:
	movzwl	(%rsi,%rax), %ecx
	movw	%cx, (%rdi,%rax)
	addq	$2, %rax
	andl	$1, %edx
	je	.L32057
	jmp	.L32130
	.p2align 4,,10
	.p2align 3
.L32128:
	movl	(%rsi), %eax
	testb	$2, %dl
	movl	%eax, (%rdi)
	movl	$4, %eax
	je	.L32055
	jmp	.L32129
	.p2align 4,,10
	.p2align 3
.L32127:
	cmpq	$127, %rdx
	ja	.L32124
	movq	%rdx, %rcx
	shrq	$3, %rcx
	rep movsq
	jmp	.L32051
.L32134:
	movq	%rbp, %rsi
	movq	%r8, %rdi
	.p2align 4,,10
	.p2align 3
.L32124:
	call	memcpy
	jmp	.L32057
.L32125:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L32047
.L32046:
	movzbl	97(%rbx), %r8d
	movl	%r11d, %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movl	%r10d, 28(%rsp)
	movl	%r11d, 24(%rsp)
	call	z900_logical_to_main_l
	movl	28(%rsp), %r10d
	movq	%rax, 8(%rsp)
	movl	24(%rsp), %r11d
	jmp	.L32049
.L32050:
	movq	16(%rsp), %rax
	movl	$2048, 24(%rsp)
	subl	%edx, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L32123
	leal	1(%rax), %edx
	movl	24(%rsp), %eax
	movq	120(%rbx), %rsi
	movslq	%edx, %rdx
	addl	%ebp, %eax
	andl	%esi, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L32131
.L32059:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L32132
.L32060:
	movl	24(%rsp), %edi
	leaq	(%rdi,%rbp), %rdx
	movq	%rdi, 16(%rsp)
	movl	2224(%rbx), %edi
	andq	%rsi, %rdx
	movq	%rdx, %rsi
	andq	$-4194304, %rsi
	orq	%rdi, %rsi
	cmpq	10424(%rcx), %rsi
	jne	.L32058
	testb	$4, 46264(%rbx,%rax)
	je	.L32058
	xorq	26808(%rcx), %rdx
	movq	%rdx, %rbp
.L32061:
	cmpq	$127, 16(%rsp)
	leaq	32(%rsp), %r8
	ja	.L32133
	movq	8(%rsp), %rsi
	movq	%r8, %rdi
	movq	16(%rsp), %rcx
	rep movsb
.L32063:
	leal	1(%r10), %edx
	addq	16(%rsp), %r8
	subl	24(%rsp), %edx
	movslq	%edx, %rdx
	cmpq	$127, %rdx
	ja	.L32134
	movq	%r8, %rdi
	movq	%rbp, %rsi
	movq	%rdx, %rcx
	rep movsb
	jmp	.L32057
.L32126:
	cmpb	43192(%rbx,%rcx), %al
	je	.L32048
	jmp	.L32046
.L32133:
	movq	16(%rsp), %rdx
	movq	%r8, %rdi
	movl	%r10d, 28(%rsp)
	movq	8(%rsp), %rsi
	call	memcpy
	movl	28(%rsp), %r10d
	movq	%rax, %r8
	jmp	.L32063
.L32132:
	cmpb	43192(%rbx,%rax), %dl
	je	.L32060
.L32123:
	movl	24(%rsp), %eax
	movq	%rax, 16(%rsp)
.L32058:
	movq	16(%rsp), %rax
	movl	$1, %r9d
	movl	$4, %ecx
	movzbl	97(%rbx), %r8d
	movq	%rbx, %rdx
	movl	%r11d, %esi
	movl	%r10d, 28(%rsp)
	leaq	(%rax,%rbp), %rdi
	andq	120(%rbx), %rdi
	call	z900_logical_to_main_l
	movl	28(%rsp), %r10d
	movq	%rax, %rbp
	jmp	.L32061
.L32131:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L32059
	jmp	.L32123
	.cfi_endproc
.LFE2850:
	.size	z900_BF_x, .-z900_BF_x
	.p2align 4,,15
	.globl	z900_insert_program_mask
	.type	z900_insert_program_mask, @function
z900_insert_program_mask:
.LFB2851:
	.cfi_startproc
	movzbl	3(%rdi), %eax
	addq	$4, 136(%rsi)
	sarl	$4, %eax
	movslq	%eax, %rdx
	movzbl	100(%rsi), %eax
	sall	$4, %eax
	orb	101(%rsi), %al
	movb	%al, 195(%rsi,%rdx,8)
	ret
	.cfi_endproc
.LFE2851:
	.size	z900_insert_program_mask, .-z900_insert_program_mask
	.p2align 4,,15
	.globl	z900_load_register
	.type	z900_load_register, @function
z900_load_register:
.LFB2852:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	addq	$2, 136(%rsi)
	movq	%rax, %rdx
	shrq	$4, %rax
	andl	$15, %edx
	andl	$15, %eax
	movl	192(%rsi,%rdx,8), %edx
	movl	%edx, 192(%rsi,%rax,8)
	ret
	.cfi_endproc
.LFE2852:
	.size	z900_load_register, .-z900_load_register
	.p2align 4,,15
	.globl	z900_1800
	.type	z900_1800, @function
z900_1800:
.LFB2853:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2853:
	.size	z900_1800, .-z900_1800
	.p2align 4,,15
	.globl	z900_1801
	.type	z900_1801, @function
z900_1801:
.LFB2854:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2854:
	.size	z900_1801, .-z900_1801
	.p2align 4,,15
	.globl	z900_1802
	.type	z900_1802, @function
z900_1802:
.LFB2855:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2855:
	.size	z900_1802, .-z900_1802
	.p2align 4,,15
	.globl	z900_1803
	.type	z900_1803, @function
z900_1803:
.LFB2856:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2856:
	.size	z900_1803, .-z900_1803
	.p2align 4,,15
	.globl	z900_1804
	.type	z900_1804, @function
z900_1804:
.LFB2857:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2857:
	.size	z900_1804, .-z900_1804
	.p2align 4,,15
	.globl	z900_1805
	.type	z900_1805, @function
z900_1805:
.LFB2858:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2858:
	.size	z900_1805, .-z900_1805
	.p2align 4,,15
	.globl	z900_1806
	.type	z900_1806, @function
z900_1806:
.LFB2859:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2859:
	.size	z900_1806, .-z900_1806
	.p2align 4,,15
	.globl	z900_1807
	.type	z900_1807, @function
z900_1807:
.LFB2860:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2860:
	.size	z900_1807, .-z900_1807
	.p2align 4,,15
	.globl	z900_1808
	.type	z900_1808, @function
z900_1808:
.LFB2861:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2861:
	.size	z900_1808, .-z900_1808
	.p2align 4,,15
	.globl	z900_1809
	.type	z900_1809, @function
z900_1809:
.LFB2862:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2862:
	.size	z900_1809, .-z900_1809
	.p2align 4,,15
	.globl	z900_180A
	.type	z900_180A, @function
z900_180A:
.LFB2863:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2863:
	.size	z900_180A, .-z900_180A
	.p2align 4,,15
	.globl	z900_180B
	.type	z900_180B, @function
z900_180B:
.LFB2864:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2864:
	.size	z900_180B, .-z900_180B
	.p2align 4,,15
	.globl	z900_180C
	.type	z900_180C, @function
z900_180C:
.LFB2865:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2865:
	.size	z900_180C, .-z900_180C
	.p2align 4,,15
	.globl	z900_180D
	.type	z900_180D, @function
z900_180D:
.LFB2866:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2866:
	.size	z900_180D, .-z900_180D
	.p2align 4,,15
	.globl	z900_180E
	.type	z900_180E, @function
z900_180E:
.LFB2867:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2867:
	.size	z900_180E, .-z900_180E
	.p2align 4,,15
	.globl	z900_180F
	.type	z900_180F, @function
z900_180F:
.LFB2868:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 192(%rsi)
	ret
	.cfi_endproc
.LFE2868:
	.size	z900_180F, .-z900_180F
	.p2align 4,,15
	.globl	z900_1810
	.type	z900_1810, @function
z900_1810:
.LFB2869:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2869:
	.size	z900_1810, .-z900_1810
	.p2align 4,,15
	.globl	z900_1811
	.type	z900_1811, @function
z900_1811:
.LFB2870:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2870:
	.size	z900_1811, .-z900_1811
	.p2align 4,,15
	.globl	z900_1812
	.type	z900_1812, @function
z900_1812:
.LFB2871:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2871:
	.size	z900_1812, .-z900_1812
	.p2align 4,,15
	.globl	z900_1813
	.type	z900_1813, @function
z900_1813:
.LFB2872:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2872:
	.size	z900_1813, .-z900_1813
	.p2align 4,,15
	.globl	z900_1814
	.type	z900_1814, @function
z900_1814:
.LFB2873:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2873:
	.size	z900_1814, .-z900_1814
	.p2align 4,,15
	.globl	z900_1815
	.type	z900_1815, @function
z900_1815:
.LFB2874:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2874:
	.size	z900_1815, .-z900_1815
	.p2align 4,,15
	.globl	z900_1816
	.type	z900_1816, @function
z900_1816:
.LFB2875:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2875:
	.size	z900_1816, .-z900_1816
	.p2align 4,,15
	.globl	z900_1817
	.type	z900_1817, @function
z900_1817:
.LFB2876:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2876:
	.size	z900_1817, .-z900_1817
	.p2align 4,,15
	.globl	z900_1818
	.type	z900_1818, @function
z900_1818:
.LFB2877:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2877:
	.size	z900_1818, .-z900_1818
	.p2align 4,,15
	.globl	z900_1819
	.type	z900_1819, @function
z900_1819:
.LFB2878:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2878:
	.size	z900_1819, .-z900_1819
	.p2align 4,,15
	.globl	z900_181A
	.type	z900_181A, @function
z900_181A:
.LFB2879:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2879:
	.size	z900_181A, .-z900_181A
	.p2align 4,,15
	.globl	z900_181B
	.type	z900_181B, @function
z900_181B:
.LFB2880:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2880:
	.size	z900_181B, .-z900_181B
	.p2align 4,,15
	.globl	z900_181C
	.type	z900_181C, @function
z900_181C:
.LFB2881:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2881:
	.size	z900_181C, .-z900_181C
	.p2align 4,,15
	.globl	z900_181D
	.type	z900_181D, @function
z900_181D:
.LFB2882:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2882:
	.size	z900_181D, .-z900_181D
	.p2align 4,,15
	.globl	z900_181E
	.type	z900_181E, @function
z900_181E:
.LFB2883:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2883:
	.size	z900_181E, .-z900_181E
	.p2align 4,,15
	.globl	z900_181F
	.type	z900_181F, @function
z900_181F:
.LFB2884:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 200(%rsi)
	ret
	.cfi_endproc
.LFE2884:
	.size	z900_181F, .-z900_181F
	.p2align 4,,15
	.globl	z900_1820
	.type	z900_1820, @function
z900_1820:
.LFB2885:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2885:
	.size	z900_1820, .-z900_1820
	.p2align 4,,15
	.globl	z900_1821
	.type	z900_1821, @function
z900_1821:
.LFB2886:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2886:
	.size	z900_1821, .-z900_1821
	.p2align 4,,15
	.globl	z900_1822
	.type	z900_1822, @function
z900_1822:
.LFB2887:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2887:
	.size	z900_1822, .-z900_1822
	.p2align 4,,15
	.globl	z900_1823
	.type	z900_1823, @function
z900_1823:
.LFB2888:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2888:
	.size	z900_1823, .-z900_1823
	.p2align 4,,15
	.globl	z900_1824
	.type	z900_1824, @function
z900_1824:
.LFB2889:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2889:
	.size	z900_1824, .-z900_1824
	.p2align 4,,15
	.globl	z900_1825
	.type	z900_1825, @function
z900_1825:
.LFB2890:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2890:
	.size	z900_1825, .-z900_1825
	.p2align 4,,15
	.globl	z900_1826
	.type	z900_1826, @function
z900_1826:
.LFB2891:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2891:
	.size	z900_1826, .-z900_1826
	.p2align 4,,15
	.globl	z900_1827
	.type	z900_1827, @function
z900_1827:
.LFB2892:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2892:
	.size	z900_1827, .-z900_1827
	.p2align 4,,15
	.globl	z900_1828
	.type	z900_1828, @function
z900_1828:
.LFB2893:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2893:
	.size	z900_1828, .-z900_1828
	.p2align 4,,15
	.globl	z900_1829
	.type	z900_1829, @function
z900_1829:
.LFB2894:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2894:
	.size	z900_1829, .-z900_1829
	.p2align 4,,15
	.globl	z900_182A
	.type	z900_182A, @function
z900_182A:
.LFB2895:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2895:
	.size	z900_182A, .-z900_182A
	.p2align 4,,15
	.globl	z900_182B
	.type	z900_182B, @function
z900_182B:
.LFB2896:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2896:
	.size	z900_182B, .-z900_182B
	.p2align 4,,15
	.globl	z900_182C
	.type	z900_182C, @function
z900_182C:
.LFB2897:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2897:
	.size	z900_182C, .-z900_182C
	.p2align 4,,15
	.globl	z900_182D
	.type	z900_182D, @function
z900_182D:
.LFB2898:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2898:
	.size	z900_182D, .-z900_182D
	.p2align 4,,15
	.globl	z900_182E
	.type	z900_182E, @function
z900_182E:
.LFB2899:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2899:
	.size	z900_182E, .-z900_182E
	.p2align 4,,15
	.globl	z900_182F
	.type	z900_182F, @function
z900_182F:
.LFB2900:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 208(%rsi)
	ret
	.cfi_endproc
.LFE2900:
	.size	z900_182F, .-z900_182F
	.p2align 4,,15
	.globl	z900_1830
	.type	z900_1830, @function
z900_1830:
.LFB2901:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2901:
	.size	z900_1830, .-z900_1830
	.p2align 4,,15
	.globl	z900_1831
	.type	z900_1831, @function
z900_1831:
.LFB2902:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2902:
	.size	z900_1831, .-z900_1831
	.p2align 4,,15
	.globl	z900_1832
	.type	z900_1832, @function
z900_1832:
.LFB2903:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2903:
	.size	z900_1832, .-z900_1832
	.p2align 4,,15
	.globl	z900_1833
	.type	z900_1833, @function
z900_1833:
.LFB2904:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2904:
	.size	z900_1833, .-z900_1833
	.p2align 4,,15
	.globl	z900_1834
	.type	z900_1834, @function
z900_1834:
.LFB2905:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2905:
	.size	z900_1834, .-z900_1834
	.p2align 4,,15
	.globl	z900_1835
	.type	z900_1835, @function
z900_1835:
.LFB2906:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2906:
	.size	z900_1835, .-z900_1835
	.p2align 4,,15
	.globl	z900_1836
	.type	z900_1836, @function
z900_1836:
.LFB2907:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2907:
	.size	z900_1836, .-z900_1836
	.p2align 4,,15
	.globl	z900_1837
	.type	z900_1837, @function
z900_1837:
.LFB2908:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2908:
	.size	z900_1837, .-z900_1837
	.p2align 4,,15
	.globl	z900_1838
	.type	z900_1838, @function
z900_1838:
.LFB2909:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2909:
	.size	z900_1838, .-z900_1838
	.p2align 4,,15
	.globl	z900_1839
	.type	z900_1839, @function
z900_1839:
.LFB2910:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2910:
	.size	z900_1839, .-z900_1839
	.p2align 4,,15
	.globl	z900_183A
	.type	z900_183A, @function
z900_183A:
.LFB2911:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2911:
	.size	z900_183A, .-z900_183A
	.p2align 4,,15
	.globl	z900_183B
	.type	z900_183B, @function
z900_183B:
.LFB2912:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2912:
	.size	z900_183B, .-z900_183B
	.p2align 4,,15
	.globl	z900_183C
	.type	z900_183C, @function
z900_183C:
.LFB2913:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2913:
	.size	z900_183C, .-z900_183C
	.p2align 4,,15
	.globl	z900_183D
	.type	z900_183D, @function
z900_183D:
.LFB2914:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2914:
	.size	z900_183D, .-z900_183D
	.p2align 4,,15
	.globl	z900_183E
	.type	z900_183E, @function
z900_183E:
.LFB2915:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2915:
	.size	z900_183E, .-z900_183E
	.p2align 4,,15
	.globl	z900_183F
	.type	z900_183F, @function
z900_183F:
.LFB2916:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 216(%rsi)
	ret
	.cfi_endproc
.LFE2916:
	.size	z900_183F, .-z900_183F
	.p2align 4,,15
	.globl	z900_1840
	.type	z900_1840, @function
z900_1840:
.LFB2917:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2917:
	.size	z900_1840, .-z900_1840
	.p2align 4,,15
	.globl	z900_1841
	.type	z900_1841, @function
z900_1841:
.LFB2918:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2918:
	.size	z900_1841, .-z900_1841
	.p2align 4,,15
	.globl	z900_1842
	.type	z900_1842, @function
z900_1842:
.LFB2919:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2919:
	.size	z900_1842, .-z900_1842
	.p2align 4,,15
	.globl	z900_1843
	.type	z900_1843, @function
z900_1843:
.LFB2920:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2920:
	.size	z900_1843, .-z900_1843
	.p2align 4,,15
	.globl	z900_1844
	.type	z900_1844, @function
z900_1844:
.LFB2921:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2921:
	.size	z900_1844, .-z900_1844
	.p2align 4,,15
	.globl	z900_1845
	.type	z900_1845, @function
z900_1845:
.LFB2922:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2922:
	.size	z900_1845, .-z900_1845
	.p2align 4,,15
	.globl	z900_1846
	.type	z900_1846, @function
z900_1846:
.LFB2923:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2923:
	.size	z900_1846, .-z900_1846
	.p2align 4,,15
	.globl	z900_1847
	.type	z900_1847, @function
z900_1847:
.LFB2924:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2924:
	.size	z900_1847, .-z900_1847
	.p2align 4,,15
	.globl	z900_1848
	.type	z900_1848, @function
z900_1848:
.LFB2925:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2925:
	.size	z900_1848, .-z900_1848
	.p2align 4,,15
	.globl	z900_1849
	.type	z900_1849, @function
z900_1849:
.LFB2926:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2926:
	.size	z900_1849, .-z900_1849
	.p2align 4,,15
	.globl	z900_184A
	.type	z900_184A, @function
z900_184A:
.LFB2927:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2927:
	.size	z900_184A, .-z900_184A
	.p2align 4,,15
	.globl	z900_184B
	.type	z900_184B, @function
z900_184B:
.LFB2928:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2928:
	.size	z900_184B, .-z900_184B
	.p2align 4,,15
	.globl	z900_184C
	.type	z900_184C, @function
z900_184C:
.LFB2929:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2929:
	.size	z900_184C, .-z900_184C
	.p2align 4,,15
	.globl	z900_184D
	.type	z900_184D, @function
z900_184D:
.LFB2930:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2930:
	.size	z900_184D, .-z900_184D
	.p2align 4,,15
	.globl	z900_184E
	.type	z900_184E, @function
z900_184E:
.LFB2931:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2931:
	.size	z900_184E, .-z900_184E
	.p2align 4,,15
	.globl	z900_184F
	.type	z900_184F, @function
z900_184F:
.LFB2932:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 224(%rsi)
	ret
	.cfi_endproc
.LFE2932:
	.size	z900_184F, .-z900_184F
	.p2align 4,,15
	.globl	z900_1850
	.type	z900_1850, @function
z900_1850:
.LFB2933:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2933:
	.size	z900_1850, .-z900_1850
	.p2align 4,,15
	.globl	z900_1851
	.type	z900_1851, @function
z900_1851:
.LFB2934:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2934:
	.size	z900_1851, .-z900_1851
	.p2align 4,,15
	.globl	z900_1852
	.type	z900_1852, @function
z900_1852:
.LFB2935:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2935:
	.size	z900_1852, .-z900_1852
	.p2align 4,,15
	.globl	z900_1853
	.type	z900_1853, @function
z900_1853:
.LFB2936:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2936:
	.size	z900_1853, .-z900_1853
	.p2align 4,,15
	.globl	z900_1854
	.type	z900_1854, @function
z900_1854:
.LFB2937:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2937:
	.size	z900_1854, .-z900_1854
	.p2align 4,,15
	.globl	z900_1855
	.type	z900_1855, @function
z900_1855:
.LFB2938:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2938:
	.size	z900_1855, .-z900_1855
	.p2align 4,,15
	.globl	z900_1856
	.type	z900_1856, @function
z900_1856:
.LFB2939:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2939:
	.size	z900_1856, .-z900_1856
	.p2align 4,,15
	.globl	z900_1857
	.type	z900_1857, @function
z900_1857:
.LFB2940:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2940:
	.size	z900_1857, .-z900_1857
	.p2align 4,,15
	.globl	z900_1858
	.type	z900_1858, @function
z900_1858:
.LFB2941:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2941:
	.size	z900_1858, .-z900_1858
	.p2align 4,,15
	.globl	z900_1859
	.type	z900_1859, @function
z900_1859:
.LFB2942:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2942:
	.size	z900_1859, .-z900_1859
	.p2align 4,,15
	.globl	z900_185A
	.type	z900_185A, @function
z900_185A:
.LFB2943:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2943:
	.size	z900_185A, .-z900_185A
	.p2align 4,,15
	.globl	z900_185B
	.type	z900_185B, @function
z900_185B:
.LFB2944:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2944:
	.size	z900_185B, .-z900_185B
	.p2align 4,,15
	.globl	z900_185C
	.type	z900_185C, @function
z900_185C:
.LFB2945:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2945:
	.size	z900_185C, .-z900_185C
	.p2align 4,,15
	.globl	z900_185D
	.type	z900_185D, @function
z900_185D:
.LFB2946:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2946:
	.size	z900_185D, .-z900_185D
	.p2align 4,,15
	.globl	z900_185E
	.type	z900_185E, @function
z900_185E:
.LFB2947:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2947:
	.size	z900_185E, .-z900_185E
	.p2align 4,,15
	.globl	z900_185F
	.type	z900_185F, @function
z900_185F:
.LFB2948:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 232(%rsi)
	ret
	.cfi_endproc
.LFE2948:
	.size	z900_185F, .-z900_185F
	.p2align 4,,15
	.globl	z900_1860
	.type	z900_1860, @function
z900_1860:
.LFB2949:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2949:
	.size	z900_1860, .-z900_1860
	.p2align 4,,15
	.globl	z900_1861
	.type	z900_1861, @function
z900_1861:
.LFB2950:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2950:
	.size	z900_1861, .-z900_1861
	.p2align 4,,15
	.globl	z900_1862
	.type	z900_1862, @function
z900_1862:
.LFB2951:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2951:
	.size	z900_1862, .-z900_1862
	.p2align 4,,15
	.globl	z900_1863
	.type	z900_1863, @function
z900_1863:
.LFB2952:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2952:
	.size	z900_1863, .-z900_1863
	.p2align 4,,15
	.globl	z900_1864
	.type	z900_1864, @function
z900_1864:
.LFB2953:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2953:
	.size	z900_1864, .-z900_1864
	.p2align 4,,15
	.globl	z900_1865
	.type	z900_1865, @function
z900_1865:
.LFB2954:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2954:
	.size	z900_1865, .-z900_1865
	.p2align 4,,15
	.globl	z900_1866
	.type	z900_1866, @function
z900_1866:
.LFB2955:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2955:
	.size	z900_1866, .-z900_1866
	.p2align 4,,15
	.globl	z900_1867
	.type	z900_1867, @function
z900_1867:
.LFB2956:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2956:
	.size	z900_1867, .-z900_1867
	.p2align 4,,15
	.globl	z900_1868
	.type	z900_1868, @function
z900_1868:
.LFB2957:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2957:
	.size	z900_1868, .-z900_1868
	.p2align 4,,15
	.globl	z900_1869
	.type	z900_1869, @function
z900_1869:
.LFB2958:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2958:
	.size	z900_1869, .-z900_1869
	.p2align 4,,15
	.globl	z900_186A
	.type	z900_186A, @function
z900_186A:
.LFB2959:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2959:
	.size	z900_186A, .-z900_186A
	.p2align 4,,15
	.globl	z900_186B
	.type	z900_186B, @function
z900_186B:
.LFB2960:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2960:
	.size	z900_186B, .-z900_186B
	.p2align 4,,15
	.globl	z900_186C
	.type	z900_186C, @function
z900_186C:
.LFB2961:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2961:
	.size	z900_186C, .-z900_186C
	.p2align 4,,15
	.globl	z900_186D
	.type	z900_186D, @function
z900_186D:
.LFB2962:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2962:
	.size	z900_186D, .-z900_186D
	.p2align 4,,15
	.globl	z900_186E
	.type	z900_186E, @function
z900_186E:
.LFB2963:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2963:
	.size	z900_186E, .-z900_186E
	.p2align 4,,15
	.globl	z900_186F
	.type	z900_186F, @function
z900_186F:
.LFB2964:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 240(%rsi)
	ret
	.cfi_endproc
.LFE2964:
	.size	z900_186F, .-z900_186F
	.p2align 4,,15
	.globl	z900_1870
	.type	z900_1870, @function
z900_1870:
.LFB2965:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2965:
	.size	z900_1870, .-z900_1870
	.p2align 4,,15
	.globl	z900_1871
	.type	z900_1871, @function
z900_1871:
.LFB2966:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2966:
	.size	z900_1871, .-z900_1871
	.p2align 4,,15
	.globl	z900_1872
	.type	z900_1872, @function
z900_1872:
.LFB2967:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2967:
	.size	z900_1872, .-z900_1872
	.p2align 4,,15
	.globl	z900_1873
	.type	z900_1873, @function
z900_1873:
.LFB2968:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2968:
	.size	z900_1873, .-z900_1873
	.p2align 4,,15
	.globl	z900_1874
	.type	z900_1874, @function
z900_1874:
.LFB2969:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2969:
	.size	z900_1874, .-z900_1874
	.p2align 4,,15
	.globl	z900_1875
	.type	z900_1875, @function
z900_1875:
.LFB2970:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2970:
	.size	z900_1875, .-z900_1875
	.p2align 4,,15
	.globl	z900_1876
	.type	z900_1876, @function
z900_1876:
.LFB2971:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2971:
	.size	z900_1876, .-z900_1876
	.p2align 4,,15
	.globl	z900_1877
	.type	z900_1877, @function
z900_1877:
.LFB2972:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2972:
	.size	z900_1877, .-z900_1877
	.p2align 4,,15
	.globl	z900_1878
	.type	z900_1878, @function
z900_1878:
.LFB2973:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2973:
	.size	z900_1878, .-z900_1878
	.p2align 4,,15
	.globl	z900_1879
	.type	z900_1879, @function
z900_1879:
.LFB2974:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2974:
	.size	z900_1879, .-z900_1879
	.p2align 4,,15
	.globl	z900_187A
	.type	z900_187A, @function
z900_187A:
.LFB2975:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2975:
	.size	z900_187A, .-z900_187A
	.p2align 4,,15
	.globl	z900_187B
	.type	z900_187B, @function
z900_187B:
.LFB2976:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2976:
	.size	z900_187B, .-z900_187B
	.p2align 4,,15
	.globl	z900_187C
	.type	z900_187C, @function
z900_187C:
.LFB2977:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2977:
	.size	z900_187C, .-z900_187C
	.p2align 4,,15
	.globl	z900_187D
	.type	z900_187D, @function
z900_187D:
.LFB2978:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2978:
	.size	z900_187D, .-z900_187D
	.p2align 4,,15
	.globl	z900_187E
	.type	z900_187E, @function
z900_187E:
.LFB2979:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2979:
	.size	z900_187E, .-z900_187E
	.p2align 4,,15
	.globl	z900_187F
	.type	z900_187F, @function
z900_187F:
.LFB2980:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 248(%rsi)
	ret
	.cfi_endproc
.LFE2980:
	.size	z900_187F, .-z900_187F
	.p2align 4,,15
	.globl	z900_1880
	.type	z900_1880, @function
z900_1880:
.LFB2981:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2981:
	.size	z900_1880, .-z900_1880
	.p2align 4,,15
	.globl	z900_1881
	.type	z900_1881, @function
z900_1881:
.LFB2982:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2982:
	.size	z900_1881, .-z900_1881
	.p2align 4,,15
	.globl	z900_1882
	.type	z900_1882, @function
z900_1882:
.LFB2983:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2983:
	.size	z900_1882, .-z900_1882
	.p2align 4,,15
	.globl	z900_1883
	.type	z900_1883, @function
z900_1883:
.LFB2984:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2984:
	.size	z900_1883, .-z900_1883
	.p2align 4,,15
	.globl	z900_1884
	.type	z900_1884, @function
z900_1884:
.LFB2985:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2985:
	.size	z900_1884, .-z900_1884
	.p2align 4,,15
	.globl	z900_1885
	.type	z900_1885, @function
z900_1885:
.LFB2986:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2986:
	.size	z900_1885, .-z900_1885
	.p2align 4,,15
	.globl	z900_1886
	.type	z900_1886, @function
z900_1886:
.LFB2987:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2987:
	.size	z900_1886, .-z900_1886
	.p2align 4,,15
	.globl	z900_1887
	.type	z900_1887, @function
z900_1887:
.LFB2988:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2988:
	.size	z900_1887, .-z900_1887
	.p2align 4,,15
	.globl	z900_1888
	.type	z900_1888, @function
z900_1888:
.LFB2989:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE2989:
	.size	z900_1888, .-z900_1888
	.p2align 4,,15
	.globl	z900_1889
	.type	z900_1889, @function
z900_1889:
.LFB2990:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2990:
	.size	z900_1889, .-z900_1889
	.p2align 4,,15
	.globl	z900_188A
	.type	z900_188A, @function
z900_188A:
.LFB2991:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2991:
	.size	z900_188A, .-z900_188A
	.p2align 4,,15
	.globl	z900_188B
	.type	z900_188B, @function
z900_188B:
.LFB2992:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2992:
	.size	z900_188B, .-z900_188B
	.p2align 4,,15
	.globl	z900_188C
	.type	z900_188C, @function
z900_188C:
.LFB2993:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2993:
	.size	z900_188C, .-z900_188C
	.p2align 4,,15
	.globl	z900_188D
	.type	z900_188D, @function
z900_188D:
.LFB2994:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2994:
	.size	z900_188D, .-z900_188D
	.p2align 4,,15
	.globl	z900_188E
	.type	z900_188E, @function
z900_188E:
.LFB2995:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2995:
	.size	z900_188E, .-z900_188E
	.p2align 4,,15
	.globl	z900_188F
	.type	z900_188F, @function
z900_188F:
.LFB2996:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 256(%rsi)
	ret
	.cfi_endproc
.LFE2996:
	.size	z900_188F, .-z900_188F
	.p2align 4,,15
	.globl	z900_1890
	.type	z900_1890, @function
z900_1890:
.LFB2997:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE2997:
	.size	z900_1890, .-z900_1890
	.p2align 4,,15
	.globl	z900_1891
	.type	z900_1891, @function
z900_1891:
.LFB2998:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE2998:
	.size	z900_1891, .-z900_1891
	.p2align 4,,15
	.globl	z900_1892
	.type	z900_1892, @function
z900_1892:
.LFB2999:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE2999:
	.size	z900_1892, .-z900_1892
	.p2align 4,,15
	.globl	z900_1893
	.type	z900_1893, @function
z900_1893:
.LFB3000:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE3000:
	.size	z900_1893, .-z900_1893
	.p2align 4,,15
	.globl	z900_1894
	.type	z900_1894, @function
z900_1894:
.LFB3001:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE3001:
	.size	z900_1894, .-z900_1894
	.p2align 4,,15
	.globl	z900_1895
	.type	z900_1895, @function
z900_1895:
.LFB3002:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE3002:
	.size	z900_1895, .-z900_1895
	.p2align 4,,15
	.globl	z900_1896
	.type	z900_1896, @function
z900_1896:
.LFB3003:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE3003:
	.size	z900_1896, .-z900_1896
	.p2align 4,,15
	.globl	z900_1897
	.type	z900_1897, @function
z900_1897:
.LFB3004:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE3004:
	.size	z900_1897, .-z900_1897
	.p2align 4,,15
	.globl	z900_1898
	.type	z900_1898, @function
z900_1898:
.LFB3005:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE3005:
	.size	z900_1898, .-z900_1898
	.p2align 4,,15
	.globl	z900_1899
	.type	z900_1899, @function
z900_1899:
.LFB3006:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE3006:
	.size	z900_1899, .-z900_1899
	.p2align 4,,15
	.globl	z900_189A
	.type	z900_189A, @function
z900_189A:
.LFB3007:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE3007:
	.size	z900_189A, .-z900_189A
	.p2align 4,,15
	.globl	z900_189B
	.type	z900_189B, @function
z900_189B:
.LFB3008:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE3008:
	.size	z900_189B, .-z900_189B
	.p2align 4,,15
	.globl	z900_189C
	.type	z900_189C, @function
z900_189C:
.LFB3009:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE3009:
	.size	z900_189C, .-z900_189C
	.p2align 4,,15
	.globl	z900_189D
	.type	z900_189D, @function
z900_189D:
.LFB3010:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE3010:
	.size	z900_189D, .-z900_189D
	.p2align 4,,15
	.globl	z900_189E
	.type	z900_189E, @function
z900_189E:
.LFB3011:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE3011:
	.size	z900_189E, .-z900_189E
	.p2align 4,,15
	.globl	z900_189F
	.type	z900_189F, @function
z900_189F:
.LFB3012:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 264(%rsi)
	ret
	.cfi_endproc
.LFE3012:
	.size	z900_189F, .-z900_189F
	.p2align 4,,15
	.globl	z900_18A0
	.type	z900_18A0, @function
z900_18A0:
.LFB3013:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3013:
	.size	z900_18A0, .-z900_18A0
	.p2align 4,,15
	.globl	z900_18A1
	.type	z900_18A1, @function
z900_18A1:
.LFB3014:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3014:
	.size	z900_18A1, .-z900_18A1
	.p2align 4,,15
	.globl	z900_18A2
	.type	z900_18A2, @function
z900_18A2:
.LFB3015:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3015:
	.size	z900_18A2, .-z900_18A2
	.p2align 4,,15
	.globl	z900_18A3
	.type	z900_18A3, @function
z900_18A3:
.LFB3016:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3016:
	.size	z900_18A3, .-z900_18A3
	.p2align 4,,15
	.globl	z900_18A4
	.type	z900_18A4, @function
z900_18A4:
.LFB3017:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3017:
	.size	z900_18A4, .-z900_18A4
	.p2align 4,,15
	.globl	z900_18A5
	.type	z900_18A5, @function
z900_18A5:
.LFB3018:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3018:
	.size	z900_18A5, .-z900_18A5
	.p2align 4,,15
	.globl	z900_18A6
	.type	z900_18A6, @function
z900_18A6:
.LFB3019:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3019:
	.size	z900_18A6, .-z900_18A6
	.p2align 4,,15
	.globl	z900_18A7
	.type	z900_18A7, @function
z900_18A7:
.LFB3020:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3020:
	.size	z900_18A7, .-z900_18A7
	.p2align 4,,15
	.globl	z900_18A8
	.type	z900_18A8, @function
z900_18A8:
.LFB3021:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3021:
	.size	z900_18A8, .-z900_18A8
	.p2align 4,,15
	.globl	z900_18A9
	.type	z900_18A9, @function
z900_18A9:
.LFB3022:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3022:
	.size	z900_18A9, .-z900_18A9
	.p2align 4,,15
	.globl	z900_18AA
	.type	z900_18AA, @function
z900_18AA:
.LFB3023:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE3023:
	.size	z900_18AA, .-z900_18AA
	.p2align 4,,15
	.globl	z900_18AB
	.type	z900_18AB, @function
z900_18AB:
.LFB3024:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3024:
	.size	z900_18AB, .-z900_18AB
	.p2align 4,,15
	.globl	z900_18AC
	.type	z900_18AC, @function
z900_18AC:
.LFB3025:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3025:
	.size	z900_18AC, .-z900_18AC
	.p2align 4,,15
	.globl	z900_18AD
	.type	z900_18AD, @function
z900_18AD:
.LFB3026:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3026:
	.size	z900_18AD, .-z900_18AD
	.p2align 4,,15
	.globl	z900_18AE
	.type	z900_18AE, @function
z900_18AE:
.LFB3027:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3027:
	.size	z900_18AE, .-z900_18AE
	.p2align 4,,15
	.globl	z900_18AF
	.type	z900_18AF, @function
z900_18AF:
.LFB3028:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 272(%rsi)
	ret
	.cfi_endproc
.LFE3028:
	.size	z900_18AF, .-z900_18AF
	.p2align 4,,15
	.globl	z900_18B0
	.type	z900_18B0, @function
z900_18B0:
.LFB3029:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3029:
	.size	z900_18B0, .-z900_18B0
	.p2align 4,,15
	.globl	z900_18B1
	.type	z900_18B1, @function
z900_18B1:
.LFB3030:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3030:
	.size	z900_18B1, .-z900_18B1
	.p2align 4,,15
	.globl	z900_18B2
	.type	z900_18B2, @function
z900_18B2:
.LFB3031:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3031:
	.size	z900_18B2, .-z900_18B2
	.p2align 4,,15
	.globl	z900_18B3
	.type	z900_18B3, @function
z900_18B3:
.LFB3032:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3032:
	.size	z900_18B3, .-z900_18B3
	.p2align 4,,15
	.globl	z900_18B4
	.type	z900_18B4, @function
z900_18B4:
.LFB3033:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3033:
	.size	z900_18B4, .-z900_18B4
	.p2align 4,,15
	.globl	z900_18B5
	.type	z900_18B5, @function
z900_18B5:
.LFB3034:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3034:
	.size	z900_18B5, .-z900_18B5
	.p2align 4,,15
	.globl	z900_18B6
	.type	z900_18B6, @function
z900_18B6:
.LFB3035:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3035:
	.size	z900_18B6, .-z900_18B6
	.p2align 4,,15
	.globl	z900_18B7
	.type	z900_18B7, @function
z900_18B7:
.LFB3036:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3036:
	.size	z900_18B7, .-z900_18B7
	.p2align 4,,15
	.globl	z900_18B8
	.type	z900_18B8, @function
z900_18B8:
.LFB3037:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3037:
	.size	z900_18B8, .-z900_18B8
	.p2align 4,,15
	.globl	z900_18B9
	.type	z900_18B9, @function
z900_18B9:
.LFB3038:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3038:
	.size	z900_18B9, .-z900_18B9
	.p2align 4,,15
	.globl	z900_18BA
	.type	z900_18BA, @function
z900_18BA:
.LFB3039:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3039:
	.size	z900_18BA, .-z900_18BA
	.p2align 4,,15
	.globl	z900_18BB
	.type	z900_18BB, @function
z900_18BB:
.LFB3040:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE3040:
	.size	z900_18BB, .-z900_18BB
	.p2align 4,,15
	.globl	z900_18BC
	.type	z900_18BC, @function
z900_18BC:
.LFB3041:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3041:
	.size	z900_18BC, .-z900_18BC
	.p2align 4,,15
	.globl	z900_18BD
	.type	z900_18BD, @function
z900_18BD:
.LFB3042:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3042:
	.size	z900_18BD, .-z900_18BD
	.p2align 4,,15
	.globl	z900_18BE
	.type	z900_18BE, @function
z900_18BE:
.LFB3043:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3043:
	.size	z900_18BE, .-z900_18BE
	.p2align 4,,15
	.globl	z900_18BF
	.type	z900_18BF, @function
z900_18BF:
.LFB3044:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 280(%rsi)
	ret
	.cfi_endproc
.LFE3044:
	.size	z900_18BF, .-z900_18BF
	.p2align 4,,15
	.globl	z900_18C0
	.type	z900_18C0, @function
z900_18C0:
.LFB3045:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3045:
	.size	z900_18C0, .-z900_18C0
	.p2align 4,,15
	.globl	z900_18C1
	.type	z900_18C1, @function
z900_18C1:
.LFB3046:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3046:
	.size	z900_18C1, .-z900_18C1
	.p2align 4,,15
	.globl	z900_18C2
	.type	z900_18C2, @function
z900_18C2:
.LFB3047:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3047:
	.size	z900_18C2, .-z900_18C2
	.p2align 4,,15
	.globl	z900_18C3
	.type	z900_18C3, @function
z900_18C3:
.LFB3048:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3048:
	.size	z900_18C3, .-z900_18C3
	.p2align 4,,15
	.globl	z900_18C4
	.type	z900_18C4, @function
z900_18C4:
.LFB3049:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3049:
	.size	z900_18C4, .-z900_18C4
	.p2align 4,,15
	.globl	z900_18C5
	.type	z900_18C5, @function
z900_18C5:
.LFB3050:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3050:
	.size	z900_18C5, .-z900_18C5
	.p2align 4,,15
	.globl	z900_18C6
	.type	z900_18C6, @function
z900_18C6:
.LFB3051:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3051:
	.size	z900_18C6, .-z900_18C6
	.p2align 4,,15
	.globl	z900_18C7
	.type	z900_18C7, @function
z900_18C7:
.LFB3052:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3052:
	.size	z900_18C7, .-z900_18C7
	.p2align 4,,15
	.globl	z900_18C8
	.type	z900_18C8, @function
z900_18C8:
.LFB3053:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3053:
	.size	z900_18C8, .-z900_18C8
	.p2align 4,,15
	.globl	z900_18C9
	.type	z900_18C9, @function
z900_18C9:
.LFB3054:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3054:
	.size	z900_18C9, .-z900_18C9
	.p2align 4,,15
	.globl	z900_18CA
	.type	z900_18CA, @function
z900_18CA:
.LFB3055:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3055:
	.size	z900_18CA, .-z900_18CA
	.p2align 4,,15
	.globl	z900_18CB
	.type	z900_18CB, @function
z900_18CB:
.LFB3056:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3056:
	.size	z900_18CB, .-z900_18CB
	.p2align 4,,15
	.globl	z900_18CC
	.type	z900_18CC, @function
z900_18CC:
.LFB3057:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE3057:
	.size	z900_18CC, .-z900_18CC
	.p2align 4,,15
	.globl	z900_18CD
	.type	z900_18CD, @function
z900_18CD:
.LFB3058:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3058:
	.size	z900_18CD, .-z900_18CD
	.p2align 4,,15
	.globl	z900_18CE
	.type	z900_18CE, @function
z900_18CE:
.LFB3059:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3059:
	.size	z900_18CE, .-z900_18CE
	.p2align 4,,15
	.globl	z900_18CF
	.type	z900_18CF, @function
z900_18CF:
.LFB3060:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 288(%rsi)
	ret
	.cfi_endproc
.LFE3060:
	.size	z900_18CF, .-z900_18CF
	.p2align 4,,15
	.globl	z900_18D0
	.type	z900_18D0, @function
z900_18D0:
.LFB3061:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3061:
	.size	z900_18D0, .-z900_18D0
	.p2align 4,,15
	.globl	z900_18D1
	.type	z900_18D1, @function
z900_18D1:
.LFB3062:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3062:
	.size	z900_18D1, .-z900_18D1
	.p2align 4,,15
	.globl	z900_18D2
	.type	z900_18D2, @function
z900_18D2:
.LFB3063:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3063:
	.size	z900_18D2, .-z900_18D2
	.p2align 4,,15
	.globl	z900_18D3
	.type	z900_18D3, @function
z900_18D3:
.LFB3064:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3064:
	.size	z900_18D3, .-z900_18D3
	.p2align 4,,15
	.globl	z900_18D4
	.type	z900_18D4, @function
z900_18D4:
.LFB3065:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3065:
	.size	z900_18D4, .-z900_18D4
	.p2align 4,,15
	.globl	z900_18D5
	.type	z900_18D5, @function
z900_18D5:
.LFB3066:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3066:
	.size	z900_18D5, .-z900_18D5
	.p2align 4,,15
	.globl	z900_18D6
	.type	z900_18D6, @function
z900_18D6:
.LFB3067:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3067:
	.size	z900_18D6, .-z900_18D6
	.p2align 4,,15
	.globl	z900_18D7
	.type	z900_18D7, @function
z900_18D7:
.LFB3068:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3068:
	.size	z900_18D7, .-z900_18D7
	.p2align 4,,15
	.globl	z900_18D8
	.type	z900_18D8, @function
z900_18D8:
.LFB3069:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3069:
	.size	z900_18D8, .-z900_18D8
	.p2align 4,,15
	.globl	z900_18D9
	.type	z900_18D9, @function
z900_18D9:
.LFB3070:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3070:
	.size	z900_18D9, .-z900_18D9
	.p2align 4,,15
	.globl	z900_18DA
	.type	z900_18DA, @function
z900_18DA:
.LFB3071:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3071:
	.size	z900_18DA, .-z900_18DA
	.p2align 4,,15
	.globl	z900_18DB
	.type	z900_18DB, @function
z900_18DB:
.LFB3072:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3072:
	.size	z900_18DB, .-z900_18DB
	.p2align 4,,15
	.globl	z900_18DC
	.type	z900_18DC, @function
z900_18DC:
.LFB3073:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3073:
	.size	z900_18DC, .-z900_18DC
	.p2align 4,,15
	.globl	z900_18DD
	.type	z900_18DD, @function
z900_18DD:
.LFB3074:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE3074:
	.size	z900_18DD, .-z900_18DD
	.p2align 4,,15
	.globl	z900_18DE
	.type	z900_18DE, @function
z900_18DE:
.LFB3075:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3075:
	.size	z900_18DE, .-z900_18DE
	.p2align 4,,15
	.globl	z900_18DF
	.type	z900_18DF, @function
z900_18DF:
.LFB3076:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 296(%rsi)
	ret
	.cfi_endproc
.LFE3076:
	.size	z900_18DF, .-z900_18DF
	.p2align 4,,15
	.globl	z900_18E0
	.type	z900_18E0, @function
z900_18E0:
.LFB3077:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3077:
	.size	z900_18E0, .-z900_18E0
	.p2align 4,,15
	.globl	z900_18E1
	.type	z900_18E1, @function
z900_18E1:
.LFB3078:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3078:
	.size	z900_18E1, .-z900_18E1
	.p2align 4,,15
	.globl	z900_18E2
	.type	z900_18E2, @function
z900_18E2:
.LFB3079:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3079:
	.size	z900_18E2, .-z900_18E2
	.p2align 4,,15
	.globl	z900_18E3
	.type	z900_18E3, @function
z900_18E3:
.LFB3080:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3080:
	.size	z900_18E3, .-z900_18E3
	.p2align 4,,15
	.globl	z900_18E4
	.type	z900_18E4, @function
z900_18E4:
.LFB3081:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3081:
	.size	z900_18E4, .-z900_18E4
	.p2align 4,,15
	.globl	z900_18E5
	.type	z900_18E5, @function
z900_18E5:
.LFB3082:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3082:
	.size	z900_18E5, .-z900_18E5
	.p2align 4,,15
	.globl	z900_18E6
	.type	z900_18E6, @function
z900_18E6:
.LFB3083:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3083:
	.size	z900_18E6, .-z900_18E6
	.p2align 4,,15
	.globl	z900_18E7
	.type	z900_18E7, @function
z900_18E7:
.LFB3084:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3084:
	.size	z900_18E7, .-z900_18E7
	.p2align 4,,15
	.globl	z900_18E8
	.type	z900_18E8, @function
z900_18E8:
.LFB3085:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3085:
	.size	z900_18E8, .-z900_18E8
	.p2align 4,,15
	.globl	z900_18E9
	.type	z900_18E9, @function
z900_18E9:
.LFB3086:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3086:
	.size	z900_18E9, .-z900_18E9
	.p2align 4,,15
	.globl	z900_18EA
	.type	z900_18EA, @function
z900_18EA:
.LFB3087:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3087:
	.size	z900_18EA, .-z900_18EA
	.p2align 4,,15
	.globl	z900_18EB
	.type	z900_18EB, @function
z900_18EB:
.LFB3088:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3088:
	.size	z900_18EB, .-z900_18EB
	.p2align 4,,15
	.globl	z900_18EC
	.type	z900_18EC, @function
z900_18EC:
.LFB3089:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3089:
	.size	z900_18EC, .-z900_18EC
	.p2align 4,,15
	.globl	z900_18ED
	.type	z900_18ED, @function
z900_18ED:
.LFB3090:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3090:
	.size	z900_18ED, .-z900_18ED
	.p2align 4,,15
	.globl	z900_18EE
	.type	z900_18EE, @function
z900_18EE:
.LFB3091:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE3091:
	.size	z900_18EE, .-z900_18EE
	.p2align 4,,15
	.globl	z900_18EF
	.type	z900_18EF, @function
z900_18EF:
.LFB3092:
	.cfi_startproc
	movl	312(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 304(%rsi)
	ret
	.cfi_endproc
.LFE3092:
	.size	z900_18EF, .-z900_18EF
	.p2align 4,,15
	.globl	z900_18F0
	.type	z900_18F0, @function
z900_18F0:
.LFB3093:
	.cfi_startproc
	movl	192(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3093:
	.size	z900_18F0, .-z900_18F0
	.p2align 4,,15
	.globl	z900_18F1
	.type	z900_18F1, @function
z900_18F1:
.LFB3094:
	.cfi_startproc
	movl	200(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3094:
	.size	z900_18F1, .-z900_18F1
	.p2align 4,,15
	.globl	z900_18F2
	.type	z900_18F2, @function
z900_18F2:
.LFB3095:
	.cfi_startproc
	movl	208(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3095:
	.size	z900_18F2, .-z900_18F2
	.p2align 4,,15
	.globl	z900_18F3
	.type	z900_18F3, @function
z900_18F3:
.LFB3096:
	.cfi_startproc
	movl	216(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3096:
	.size	z900_18F3, .-z900_18F3
	.p2align 4,,15
	.globl	z900_18F4
	.type	z900_18F4, @function
z900_18F4:
.LFB3097:
	.cfi_startproc
	movl	224(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3097:
	.size	z900_18F4, .-z900_18F4
	.p2align 4,,15
	.globl	z900_18F5
	.type	z900_18F5, @function
z900_18F5:
.LFB3098:
	.cfi_startproc
	movl	232(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3098:
	.size	z900_18F5, .-z900_18F5
	.p2align 4,,15
	.globl	z900_18F6
	.type	z900_18F6, @function
z900_18F6:
.LFB3099:
	.cfi_startproc
	movl	240(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3099:
	.size	z900_18F6, .-z900_18F6
	.p2align 4,,15
	.globl	z900_18F7
	.type	z900_18F7, @function
z900_18F7:
.LFB3100:
	.cfi_startproc
	movl	248(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3100:
	.size	z900_18F7, .-z900_18F7
	.p2align 4,,15
	.globl	z900_18F8
	.type	z900_18F8, @function
z900_18F8:
.LFB3101:
	.cfi_startproc
	movl	256(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3101:
	.size	z900_18F8, .-z900_18F8
	.p2align 4,,15
	.globl	z900_18F9
	.type	z900_18F9, @function
z900_18F9:
.LFB3102:
	.cfi_startproc
	movl	264(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3102:
	.size	z900_18F9, .-z900_18F9
	.p2align 4,,15
	.globl	z900_18FA
	.type	z900_18FA, @function
z900_18FA:
.LFB3103:
	.cfi_startproc
	movl	272(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3103:
	.size	z900_18FA, .-z900_18FA
	.p2align 4,,15
	.globl	z900_18FB
	.type	z900_18FB, @function
z900_18FB:
.LFB3104:
	.cfi_startproc
	movl	280(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3104:
	.size	z900_18FB, .-z900_18FB
	.p2align 4,,15
	.globl	z900_18FC
	.type	z900_18FC, @function
z900_18FC:
.LFB3105:
	.cfi_startproc
	movl	288(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3105:
	.size	z900_18FC, .-z900_18FC
	.p2align 4,,15
	.globl	z900_18FD
	.type	z900_18FD, @function
z900_18FD:
.LFB3106:
	.cfi_startproc
	movl	296(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3106:
	.size	z900_18FD, .-z900_18FD
	.p2align 4,,15
	.globl	z900_18FE
	.type	z900_18FE, @function
z900_18FE:
.LFB3107:
	.cfi_startproc
	movl	304(%rsi), %eax
	addq	$2, 136(%rsi)
	movl	%eax, 312(%rsi)
	ret
	.cfi_endproc
.LFE3107:
	.size	z900_18FE, .-z900_18FE
	.p2align 4,,15
	.globl	z900_18FF
	.type	z900_18FF, @function
z900_18FF:
.LFB3108:
	.cfi_startproc
	addq	$2, 136(%rsi)
	ret
	.cfi_endproc
.LFE3108:
	.size	z900_18FF, .-z900_18FF
	.p2align 4,,15
	.globl	z900_load_access_multiple
	.type	z900_load_access_multiple, @function
z900_load_access_multiple:
.LFB3109:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	movq	%rsi, %rbp
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	(%rdi), %r15d
	bswap	%r15d
	movl	%r15d, %r13d
	movl	%r15d, %r14d
	shrl	$20, %r13d
	movl	%r15d, %r11d
	shrl	$16, %r14d
	shrl	$12, %r11d
	andl	$15, %r13d
	andl	$15, %r14d
	andl	$4095, %r15d
	andl	$15, %r11d
	movl	%r11d, 12(%rsp)
	je	.L32394
	movslq	%r11d, %rax
	addq	192(%rsi,%rax,8), %r15
	andq	120(%rsi), %r15
.L32394:
	addq	$4, 136(%rbp)
	testb	$3, %r15b
	movb	$4, 130(%rbp)
	jne	.L32454
.L32395:
	movq	%r15, %rax
	movl	$2048, %r10d
	subl	%r13d, %r14d
	andl	$2047, %eax
	andl	$15, %r14d
	subq	%rax, %r10
	movl	12(%rsp), %eax
	addl	$1, %r14d
	shrq	$2, %r10
	movl	%r10d, %ebx
	addl	$5, %eax
	cltq
	leaq	0(%rbp,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L32396
	movl	%r15d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	0(%rbp,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbp,%rax,8)
	jne	.L32455
.L32397:
	movzbl	97(%rbp), %esi
	testb	%sil, %sil
	jne	.L32456
.L32398:
	movl	2224(%rbp), %edi
	movq	%r15, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L32424
	testb	$4, 46264(%rbp,%rcx)
	je	.L32424
	movq	%r15, %r12
	xorq	26808(%rdx), %r12
.L32400:
	cmpl	%r10d, %r14d
	jg	.L32457
	movl	%r14d, %ebx
	xorl	%eax, %eax
.L32401:
	cmpb	$64, 99(%rbp)
	je	.L32408
	leal	(%rbx,%r13), %edx
	movl	%r13d, %ecx
	.p2align 4,,10
	.p2align 3
.L32410:
	movl	(%r12), %esi
	movl	%ecx, %edi
	addl	$1, %ecx
	andl	$15, %edi
	addq	$4, %r12
	cmpl	%edx, %ecx
	bswap	%esi
	movl	%esi, 584(%rbp,%rdi,4)
	jne	.L32410
.L32409:
	cmpl	%ebx, %r14d
	jle	.L32393
.L32407:
	cmpb	$64, 99(%rbp)
	jne	.L32417
	.p2align 4,,4
	jmp	.L32421
	.p2align 4,,10
	.p2align 3
.L32458:
	leal	(%rbx,%r13), %edx
.L32417:
	movl	(%rax), %ecx
	addl	$1, %ebx
	andl	$15, %edx
	addq	$4, %rax
	cmpl	%r14d, %ebx
	bswap	%ecx
	movl	%ecx, 584(%rbp,%rdx,4)
	jne	.L32458
.L32393:
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L32419:
	.cfi_restore_state
	cmpl	$1, %ecx
	je	.L32459
	movl	$0, 1892(%rbp,%rdx,4)
	.p2align 4,,10
	.p2align 3
.L32418:
	addl	$1, %ebx
	addq	$4, %rax
	cmpl	%r14d, %ebx
	je	.L32393
	leal	(%rbx,%r13), %edx
.L32421:
	movl	(%rax), %ecx
	andl	$15, %edx
	movslq	%edx, %rsi
	testl	%edx, %edx
	bswap	%ecx
	movl	%ecx, 584(%rbp,%rsi,4)
	je	.L32418
	addl	$5, %edx
	testl	%ecx, %ecx
	movslq	%edx, %rdx
	jne	.L32419
	movl	$1, 1892(%rbp,%rdx,4)
	jmp	.L32418
	.p2align 4,,10
	.p2align 3
.L32454:
	movl	$6, %esi
	movq	%rbp, %rdi
	call	*2032(%rbp)
	jmp	.L32395
	.p2align 4,,10
	.p2align 3
.L32408:
	leal	(%rbx,%r13), %edx
	movl	%r13d, %esi
	jmp	.L32414
	.p2align 4,,10
	.p2align 3
.L32460:
	addl	$5, %edi
	movslq	%edi, %rdi
	movl	$1, 1892(%rbp,%rdi,4)
.L32411:
	addl	$1, %esi
	addq	$4, %r12
	cmpl	%edx, %esi
	je	.L32409
.L32414:
	movl	(%r12), %ecx
	movl	%esi, %edi
	andl	$15, %edi
	movslq	%edi, %r8
	testl	%edi, %edi
	bswap	%ecx
	movl	%ecx, 584(%rbp,%r8,4)
	je	.L32411
	testl	%ecx, %ecx
	je	.L32460
	cmpl	$1, %ecx
	je	.L32461
	addl	$5, %edi
	movslq	%edi, %rdi
	movl	$0, 1892(%rbp,%rdi,4)
	jmp	.L32411
	.p2align 4,,10
	.p2align 3
.L32459:
	movl	$7, 1892(%rbp,%rdx,4)
	jmp	.L32418
	.p2align 4,,10
	.p2align 3
.L32461:
	leal	5(%rdi), %ecx
	movslq	%ecx, %rcx
	movl	$7, 1892(%rbp,%rcx,4)
	jmp	.L32411
.L32455:
	movzbl	44216(%rbp,%rcx), %esi
	testb	%sil, 1976(%rbp,%rax)
	jne	.L32397
.L32396:
	movzbl	97(%rbp), %r8d
.L32399:
	movl	12(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movq	%r15, %rdi
	movq	%r10, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	z900_logical_to_main_l
	movq	24(%rsp), %r10
	movq	%rax, %r12
	movq	16(%rsp), %r11
	jmp	.L32400
.L32457:
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L32402
	leal	0(,%r10,4), %edx
	leal	1(%rax), %esi
	leal	(%rdx,%r15), %eax
	movslq	%esi, %rsi
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	0(%rbp,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbp,%rsi,8)
	jne	.L32462
.L32403:
	movzbl	97(%rbp), %r8d
	movslq	%edx, %rdx
	leaq	(%rdx,%r15), %rdi
	testb	%r8b, %r8b
	jne	.L32463
.L32405:
	movl	2224(%rbp), %esi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L32404
	testb	$4, 46264(%rbp,%rax)
	je	.L32404
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L32406:
	testl	%r10d, %r10d
	jne	.L32401
	leal	(%rbx,%r13), %edx
	jmp	.L32407
.L32456:
	cmpb	43192(%rbp,%rcx), %sil
	je	.L32398
.L32424:
	movzbl	%sil, %r8d
	jmp	.L32399
.L32462:
	movzbl	44216(%rbp,%rax), %edi
	testb	%dil, 1976(%rbp,%rsi)
	jne	.L32403
	movzbl	97(%rbp), %r8d
	movslq	%edx, %rdx
	leaq	(%rdx,%r15), %rdi
.L32404:
	movl	12(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbp, %rdx
	movq	%r10, 16(%rsp)
	call	z900_logical_to_main_l
	movq	16(%rsp), %r10
	jmp	.L32406
.L32463:
	cmpb	43192(%rbp,%rax), %r8b
	je	.L32405
	jmp	.L32404
.L32402:
	leal	0(,%r10,4), %eax
	movzbl	97(%rbp), %r8d
	cltq
	leaq	(%rax,%r15), %rdi
	jmp	.L32404
	.cfi_endproc
.LFE3109:
	.size	z900_load_access_multiple, .-z900_load_access_multiple
	.p2align 4,,15
	.globl	z900_load_address_extended
	.type	z900_load_address_extended, @function
z900_load_address_extended:
.LFB3110:
	.cfi_startproc
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %edi
	shrl	$20, %edx
	shrl	$16, %edi
	movl	%eax, %ecx
	andl	$15, %edx
	andl	$4095, %ecx
	andl	$15, %edi
	jne	.L32488
.L32465:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L32466
	movslq	%eax, %rdi
	addq	192(%rsi,%rdi,8), %rcx
.L32466:
	andq	120(%rsi), %rcx
	movslq	%edx, %rdi
	addq	$4, 136(%rsi)
	testb	$1, 103(%rsi)
	je	.L32467
	movq	%rcx, 192(%rsi,%rdi,8)
	movzbl	99(%rsi), %ecx
	testb	%cl, %cl
	jne	.L32469
.L32489:
	movl	$0, 584(%rsi,%rdi,4)
	ret
	.p2align 4,,10
	.p2align 3
.L32467:
	movl	%ecx, 192(%rsi,%rdi,8)
	movzbl	99(%rsi), %ecx
	testb	%cl, %cl
	je	.L32489
.L32469:
	cmpb	$-128, %cl
	je	.L32490
	cmpb	$-64, %cl
	je	.L32491
	xorl	%r8d, %r8d
	testl	%eax, %eax
	jne	.L32492
.L32474:
	cmpb	$64, %cl
	movl	%r8d, 584(%rsi,%rdi,4)
	jne	.L32464
	testl	%edx, %edx
	je	.L32464
	addl	$5, %edx
	testl	%r8d, %r8d
	movslq	%edx, %rdx
	je	.L32493
	cmpl	$1, %r8d
	je	.L32494
	movl	$0, 1892(%rsi,%rdx,4)
.L32464:
	rep ret
	.p2align 4,,10
	.p2align 3
.L32490:
	movl	$1, 584(%rsi,%rdi,4)
	ret
	.p2align 4,,10
	.p2align 3
.L32492:
	cltq
	movl	584(%rsi,%rax,4), %r8d
	jmp	.L32474
	.p2align 4,,10
	.p2align 3
.L32493:
	movl	$1, 1892(%rsi,%rdx,4)
	ret
	.p2align 4,,10
	.p2align 3
.L32491:
	movl	$2, 584(%rsi,%rdi,4)
	ret
	.p2align 4,,10
	.p2align 3
.L32494:
	movl	$7, 1892(%rsi,%rdx,4)
	ret
.L32488:
	movslq	%edi, %rdi
	addq	192(%rsi,%rdi,8), %rcx
	jmp	.L32465
	.cfi_endproc
.LFE3110:
	.size	z900_load_address_extended, .-z900_load_address_extended
	.p2align 4,,15
	.globl	z900_load_and_test_register
	.type	z900_load_and_test_register, @function
z900_load_and_test_register:
.LFB3111:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	addq	$2, 136(%rsi)
	movq	%rax, %rdx
	shrq	$4, %rax
	andl	$15, %edx
	andl	$15, %eax
	movl	192(%rsi,%rdx,8), %edx
	testl	%edx, %edx
	movl	%edx, 192(%rsi,%rax,8)
	js	.L32497
	cmpl	$1, %edx
	sbbl	%eax, %eax
	notl	%eax
	andl	$2, %eax
	movb	%al, 100(%rsi)
	ret
	.p2align 4,,10
	.p2align 3
.L32497:
	movl	$1, %eax
	movb	%al, 100(%rsi)
	ret
	.cfi_endproc
.LFE3111:
	.size	z900_load_and_test_register, .-z900_load_and_test_register
	.p2align 4,,15
	.globl	z900_load_complement_register
	.type	z900_load_complement_register, @function
z900_load_complement_register:
.LFB3112:
	.cfi_startproc
	movzbl	1(%rdi), %ecx
	movb	$2, 130(%rsi)
	movq	%rsi, %rax
	addq	$2, 136(%rsi)
	movzbl	%cl, %edx
	andl	$15, %ecx
	movl	192(%rsi,%rcx,8), %ecx
	sarl	$4, %edx
	cmpl	$-2147483648, %ecx
	je	.L32508
	negl	%ecx
	movslq	%edx, %rdx
	testl	%ecx, %ecx
	movl	%ecx, 192(%rsi,%rdx,8)
	movl	$1, %edx
	js	.L32502
	cmpl	$1, %ecx
	sbbl	%edx, %edx
	notl	%edx
	andl	$2, %edx
.L32502:
	movb	%dl, 100(%rax)
.L32499:
	rep ret
	.p2align 4,,10
	.p2align 3
.L32508:
	movslq	%edx, %rdx
	movl	%ecx, 192(%rsi,%rdx,8)
	testb	$8, 101(%rsi)
	movb	$3, 100(%rsi)
	je	.L32499
	movq	2032(%rsi), %rdx
	movq	%rax, %rdi
	movl	$8, %esi
	jmp	*%rdx
	.cfi_endproc
.LFE3112:
	.size	z900_load_complement_register, .-z900_load_complement_register
	.p2align 4,,15
	.globl	z900_load_halfword_immediate
	.type	z900_load_halfword_immediate, @function
z900_load_halfword_immediate:
.LFB3113:
	.cfi_startproc
	movl	(%rdi), %eax
	addq	$4, 136(%rsi)
	bswap	%eax
	movl	%eax, %edx
	cwtl
	shrl	$20, %edx
	andl	$15, %edx
	movl	%eax, 192(%rsi,%rdx,8)
	ret
	.cfi_endproc
.LFE3113:
	.size	z900_load_halfword_immediate, .-z900_load_halfword_immediate
	.p2align 4,,15
	.globl	z900_load_multiple
	.type	z900_load_multiple, @function
z900_load_multiple:
.LFB3114:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	movl	(%rdi), %r13d
	bswap	%r13d
	movl	%r13d, %ebp
	movl	%r13d, %eax
	shrl	$20, %ebp
	movl	%r13d, %r10d
	shrl	$16, %eax
	shrl	$12, %r10d
	andl	$15, %ebp
	andl	$15, %eax
	andl	$4095, %r13d
	andl	$15, %r10d
	je	.L32511
	movslq	%r10d, %rdx
	addq	192(%rsi,%rdx,8), %r13
	andq	120(%rsi), %r13
.L32511:
	subl	%ebp, %eax
	movl	$2048, %r14d
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$15, %eax
	leal	4(,%rax,4), %r15d
	movl	%r13d, %eax
	andl	$2047, %eax
	subl	%eax, %r14d
	leal	5(%r10), %eax
	cltq
	leaq	(%rbx,%rax,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L32512
	movl	%r13d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L32586
.L32513:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L32587
.L32514:
	movl	2224(%rbx), %edi
	movq	%r13, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L32550
	testb	$4, 46264(%rbx,%rcx)
	je	.L32550
	movq	%r13, %r12
	xorq	26808(%rdx), %r12
.L32516:
	cmpl	%r14d, %r15d
	jg	.L32517
	movl	%r15d, %eax
	xorl	%ecx, %ecx
	sarl	$2, %eax
	.p2align 4,,10
	.p2align 3
.L32520:
	movl	(%r12,%rcx,4), %edi
	leal	0(%rbp,%rcx), %edx
	addq	$1, %rcx
	andl	$15, %edx
	cmpl	%ecx, %eax
	bswap	%edi
	movl	%edi, 192(%rbx,%rdx,8)
	jg	.L32520
.L32510:
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L32586:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L32513
.L32512:
	movzbl	97(%rbx), %r8d
.L32515:
	movl	%r10d, %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r13, %rdi
	movq	%r11, 8(%rsp)
	movl	%r10d, 4(%rsp)
	call	z900_logical_to_main_l
	movq	8(%rsp), %r11
	movq	%rax, %r12
	movl	4(%rsp), %r10d
	jmp	.L32516
.L32517:
	movl	1892(%r11), %eax
	movslq	%r14d, %rdi
	addq	%r13, %rdi
	andq	120(%rbx), %rdi
	testl	%eax, %eax
	je	.L32521
	movl	%edi, %edx
	addl	$1, %eax
	shrl	$12, %edx
	cltq
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rcx
	movq	2232(%rcx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L32588
.L32522:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L32589
.L32523:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rsi
	andq	$-4194304, %rsi
	orq	%r8, %rsi
	cmpq	10424(%rcx), %rsi
	jne	.L32553
	testb	$4, 46264(%rbx,%rdx)
	je	.L32553
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L32525:
	testb	$3, %r14b
	jne	.L32526
	sarl	$2, %r14d
	testl	%r14d, %r14d
	je	.L32527
	xorl	%edx, %edx
.L32529:
	movl	(%r12,%rdx,4), %ecx
	leal	0(%rbp,%rdx), %esi
	addq	$1, %rdx
	andl	$15, %esi
	cmpl	%edx, %r14d
	bswap	%ecx
	movl	%ecx, 192(%rbx,%rsi,8)
	jg	.L32529
	sarl	$2, %r15d
	cmpl	%r15d, %r14d
	jge	.L32510
.L32547:
	addl	%ebp, %r14d
	addl	%r15d, %ebp
.L32531:
	movl	(%rax), %edx
	movl	%r14d, %ecx
	addl	$1, %r14d
	andl	$15, %ecx
	addq	$4, %rax
	cmpl	%ebp, %r14d
	bswap	%edx
	movl	%edx, 192(%rbx,%rcx,8)
	jne	.L32531
	jmp	.L32510
.L32587:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L32514
.L32550:
	movzbl	%sil, %r8d
	jmp	.L32515
.L32527:
	sarl	$2, %r15d
	jmp	.L32547
.L32526:
	leaq	16(%rsp), %rdx
	xorl	%ecx, %ecx
.L32533:
	movzbl	(%r12,%rcx), %esi
	addq	$1, %rcx
	addq	$1, %rdx
	cmpl	%ecx, %r14d
	movb	%sil, -1(%rdx)
	jg	.L32533
	testl	%r14d, %r14d
	movl	$1, %ecx
	cmovg	%r14d, %ecx
	cmpl	%ecx, %r15d
	jle	.L32543
	leaq	16(%rdx), %rsi
	movl	%r15d, %r8d
	subl	%ecx, %r8d
	cmpq	%rsi, %rax
	leaq	16(%rax), %rsi
	setae	%dil
	cmpq	%rsi, %rdx
	setae	%sil
	orb	%sil, %dil
	je	.L32537
	cmpl	$15, %r8d
	jbe	.L32537
	movl	%r8d, %r10d
	shrl	$4, %r10d
	movl	%r10d, %esi
	sall	$4, %esi
	testl	%esi, %esi
	je	.L32538
	xorl	%edi, %edi
	xorl	%r9d, %r9d
.L32544:
	movdqu	(%rax,%rdi), %xmm0
	addl	$1, %r9d
	movdqu	%xmm0, (%rdx,%rdi)
	addq	$16, %rdi
	cmpl	%r9d, %r10d
	ja	.L32544
	movl	%esi, %edi
	addl	%esi, %ecx
	addq	%rdi, %rdx
	addq	%rdi, %rax
	cmpl	%r8d, %esi
	je	.L32543
.L32538:
	movzbl	(%rax), %esi
	movb	%sil, (%rdx)
	leal	1(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L32543
	movzbl	1(%rax), %esi
	movb	%sil, 1(%rdx)
	leal	2(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L32543
	movzbl	2(%rax), %esi
	movb	%sil, 2(%rdx)
	leal	3(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L32543
	movzbl	3(%rax), %esi
	movb	%sil, 3(%rdx)
	leal	4(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L32543
	movzbl	4(%rax), %esi
	movb	%sil, 4(%rdx)
	leal	5(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L32543
	movzbl	5(%rax), %esi
	movb	%sil, 5(%rdx)
	leal	6(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L32543
	movzbl	6(%rax), %esi
	movb	%sil, 6(%rdx)
	leal	7(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L32543
	movzbl	7(%rax), %esi
	movb	%sil, 7(%rdx)
	leal	8(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L32543
	movzbl	8(%rax), %esi
	movb	%sil, 8(%rdx)
	leal	9(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L32543
	movzbl	9(%rax), %esi
	movb	%sil, 9(%rdx)
	leal	10(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L32543
	movzbl	10(%rax), %esi
	movb	%sil, 10(%rdx)
	leal	11(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L32543
	movzbl	11(%rax), %esi
	movb	%sil, 11(%rdx)
	leal	12(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L32543
	movzbl	12(%rax), %esi
	movb	%sil, 12(%rdx)
	leal	13(%rcx), %esi
	cmpl	%esi, %r15d
	jle	.L32543
	movzbl	13(%rax), %esi
	addl	$14, %ecx
	cmpl	%ecx, %r15d
	movb	%sil, 13(%rdx)
	jle	.L32543
	movzbl	14(%rax), %eax
	movb	%al, 14(%rdx)
.L32543:
	movl	16(%rsp), %eax
	sarl	$2, %r15d
	movslq	%ebp, %rdx
	cmpl	$1, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	20(%rsp), %eax
	leal	1(%rbp), %edx
	andl	$15, %edx
	cmpl	$2, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	24(%rsp), %eax
	leal	2(%rbp), %edx
	andl	$15, %edx
	cmpl	$3, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	28(%rsp), %eax
	leal	3(%rbp), %edx
	andl	$15, %edx
	cmpl	$4, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	32(%rsp), %eax
	leal	4(%rbp), %edx
	andl	$15, %edx
	cmpl	$5, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	36(%rsp), %eax
	leal	5(%rbp), %edx
	andl	$15, %edx
	cmpl	$6, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	40(%rsp), %eax
	leal	6(%rbp), %edx
	andl	$15, %edx
	cmpl	$7, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	44(%rsp), %eax
	leal	7(%rbp), %edx
	andl	$15, %edx
	cmpl	$8, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	48(%rsp), %eax
	leal	8(%rbp), %edx
	andl	$15, %edx
	cmpl	$9, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	52(%rsp), %eax
	leal	9(%rbp), %edx
	andl	$15, %edx
	cmpl	$10, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	56(%rsp), %eax
	leal	10(%rbp), %edx
	andl	$15, %edx
	cmpl	$11, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	60(%rsp), %eax
	leal	11(%rbp), %edx
	andl	$15, %edx
	cmpl	$12, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	64(%rsp), %eax
	leal	12(%rbp), %edx
	andl	$15, %edx
	cmpl	$13, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	68(%rsp), %eax
	leal	13(%rbp), %edx
	andl	$15, %edx
	cmpl	$14, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	72(%rsp), %eax
	leal	14(%rbp), %edx
	andl	$15, %edx
	cmpl	$15, %r15d
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jle	.L32510
	movl	76(%rsp), %eax
	leal	15(%rbp), %edx
	andl	$15, %edx
	bswap	%eax
	movl	%eax, 192(%rbx,%rdx,8)
	jmp	.L32510
.L32589:
	cmpb	43192(%rbx,%rdx), %al
	je	.L32523
.L32553:
	movzbl	%al, %r8d
.L32524:
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, %esi
	call	z900_logical_to_main_l
	jmp	.L32525
.L32588:
	movzbl	44216(%rbx,%rdx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L32522
.L32521:
	movzbl	97(%rbx), %r8d
	jmp	.L32524
.L32537:
	leal	-1(%r15), %esi
	movl	%esi, %edi
	subl	%ecx, %edi
	leaq	1(%rax,%rdi), %rcx
.L32546:
	addq	$1, %rax
	movzbl	-1(%rax), %esi
	addq	$1, %rdx
	cmpq	%rcx, %rax
	movb	%sil, -1(%rdx)
	jne	.L32546
	jmp	.L32543
	.cfi_endproc
.LFE3114:
	.size	z900_load_multiple, .-z900_load_multiple
	.p2align 4,,15
	.globl	z900_load_negative_register
	.type	z900_load_negative_register, @function
z900_load_negative_register:
.LFB3115:
	.cfi_startproc
	movzbl	1(%rdi), %eax
	addq	$2, 136(%rsi)
	movzbl	%al, %edx
	andl	$15, %eax
	movl	192(%rsi,%rax,8), %eax
	sarl	$4, %edx
	movslq	%edx, %rdx
	movl	%eax, %ecx
	sarl	$31, %ecx
	xorl	%ecx, %eax
	subl	%eax, %ecx
	testl	%ecx, %ecx
	movl	%ecx, 192(%rsi,%rdx,8)
	setne	100(%rsi)
	ret
	.cfi_endproc
.LFE3115:
	.size	z900_load_negative_register, .-z900_load_negative_register
	.p2align 4,,15
	.globl	z900_load_positive_register
	.type	z900_load_positive_register, @function
z900_load_positive_register:
.LFB3116:
	.cfi_startproc
	movzbl	1(%rdi), %edx
	movb	$2, 130(%rsi)
	movq	%rsi, %rax
	addq	$2, 136(%rsi)
	movzbl	%dl, %ecx
	andl	$15, %edx
	movl	192(%rsi,%rdx,8), %edx
	sarl	$4, %ecx
	movslq	%ecx, %rcx
	cmpl	$-2147483648, %edx
	je	.L32604
	testl	%edx, %edx
	js	.L32605
	movl	%edx, 192(%rsi,%rcx,8)
	xorl	%ecx, %ecx
	testl	%edx, %edx
	jne	.L32597
	movb	%cl, 100(%rax)
.L32593:
	rep ret
	.p2align 4,,10
	.p2align 3
.L32605:
	negl	%edx
	movl	%edx, 192(%rsi,%rcx,8)
.L32597:
	movl	$2, %ecx
	movb	%cl, 100(%rax)
	jmp	.L32593
	.p2align 4,,10
	.p2align 3
.L32604:
	movl	%edx, 192(%rsi,%rcx,8)
	testb	$8, 101(%rsi)
	movb	$3, 100(%rsi)
	je	.L32593
	movq	2032(%rsi), %rdx
	movq	%rax, %rdi
	movl	$8, %esi
	jmp	*%rdx
	.cfi_endproc
.LFE3116:
	.size	z900_load_positive_register, .-z900_load_positive_register
	.p2align 4,,15
	.globl	z900_monitor_call
	.type	z900_monitor_call, @function
z900_monitor_call:
.LFB3117:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %edx
	movl	%eax, %r12d
	shrl	$12, %edx
	movl	%eax, %ebp
	shrl	$16, %r12d
	andl	$4095, %ebp
	andl	$15, %edx
	je	.L32607
	movslq	%edx, %rdx
	addq	192(%rsi,%rdx,8), %rbp
	andq	120(%rsi), %rbp
.L32607:
	addq	$4, 136(%rbx)
	cmpb	$15, %r12b
	movb	$4, 130(%rbx)
	ja	.L32646
.L32608:
	movzwl	392(%rbx), %edx
	movzbl	%r12b, %ecx
	salq	%cl, %rdx
	andb	$128, %dh
	je	.L32606
	testb	$8, 2052(%rbx)
	je	.L32610
	movzwl	396(%rbx), %eax
	sall	%cl, %eax
	testb	$128, %ah
	je	.L32610
	movzbl	1144(%rbx), %edx
	movl	88(%rbx), %eax
	testb	$2, %dl
	jne	.L32647
.L32611:
	movq	%rax, %r12
	shrq	$11, %rax
	movq	%rax, %rdx
	addq	1024(%rbx), %r12
	movq	%rax, %r14
	addq	1032(%rbx), %rdx
	orb	$4, (%rdx)
	movq	264(%r12), %r13
	movq	256(%r12), %rax
	bswap	%r13
	movl	%r13d, %edx
	cmpq	%rdx, %rbp
	bswap	%rax
	jb	.L32648
.L32612:
	movq	268(%r12), %rax
	addq	1032(%rbx), %r14
	bswap	%rax
	addl	$1, %eax
	orb	$6, (%r14)
	bswap	%rax
	movq	%rax, 268(%r12)
.L32606:
	addq	$24, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L32610:
	.cfi_restore_state
	movzbl	%r12b, %r12d
	movq	%rbp, 784(%rbx)
	movq	%rbx, %rdi
	movw	%r12w, 1008(%rbx)
	movq	2032(%rbx), %rax
	addq	$24, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	movl	$64, %esi
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	*%rax
	.p2align 4,,10
	.p2align 3
.L32646:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L32608
	.p2align 4,,10
	.p2align 3
.L32648:
	movq	%rax, %r15
	movl	$4098, %ecx
	movq	%rbx, %rdx
	andq	$-8, %r15
	movl	$-5, %esi
	leaq	(%r15,%rbp,2), %rdi
	call	z900_translate_addr
	testl	%eax, %eax
	jne	.L32612
	movq	944(%rbx), %r10
	movl	88(%rbx), %eax
	movq	%r10, %rdx
	andq	$-8192, %rdx
	je	.L32614
	cmpq	%rax, %rdx
	je	.L32614
.L32615:
	cmpq	1040(%rbx), %r10
	jae	.L32612
	movzbl	1144(%rbx), %eax
	testb	$2, %al
	jne	.L32649
.L32617:
	movq	%r10, %r11
	movq	1024(%rbx), %rax
	shrq	$11, %r11
	movq	%r11, %rdx
	addq	1032(%rbx), %rdx
	movzwl	(%rax,%r10), %eax
#APP
# 5061 "general1.c" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
	orb	$4, (%rdx)
	addw	$1, %ax
	je	.L32618
	movq	1024(%rbx), %rdx
	addq	1032(%rbx), %r11
#APP
# 5065 "general1.c" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
	movw	%ax, (%rdx,%r10)
	orb	$6, (%r11)
	jmp	.L32606
	.p2align 4,,10
	.p2align 3
.L32614:
	xorq	%rax, %r10
	jmp	.L32615
.L32618:
	leal	(%r13,%r13), %eax
	movl	$4098, %ecx
	movq	%rbx, %rdx
	leaq	(%r15,%rbp,4), %rdi
	movl	$-5, %esi
	movq	%r11, 8(%rsp)
	addq	%rax, %rdi
	movq	%r10, (%rsp)
	call	z900_translate_addr
	movq	(%rsp), %r10
	testl	%eax, %eax
	movq	8(%rsp), %r11
	jne	.L32612
	movq	944(%rbx), %rax
	movl	88(%rbx), %edx
	movq	%rax, %rcx
	andq	$-8192, %rcx
	je	.L32620
	cmpq	%rdx, %rcx
	je	.L32620
.L32621:
	cmpq	1040(%rbx), %rax
	jae	.L32612
	movzbl	1144(%rbx), %edx
	testb	$2, %dl
	jne	.L32650
.L32622:
	movq	%rax, %rcx
	shrq	$11, %rax
	addq	1024(%rbx), %rcx
	addq	1032(%rbx), %rax
	movq	(%rcx), %rdx
	bswap	%rdx
	addl	$1, %edx
	bswap	%rdx
	movq	%rdx, (%rcx)
	xorl	%edx, %edx
	orb	$6, (%rax)
	movq	1024(%rbx), %rax
	addq	1032(%rbx), %r11
	movw	%dx, (%rax,%r10)
	orb	$6, (%r11)
	jmp	.L32606
.L32620:
	xorq	%rdx, %rax
	jmp	.L32621
.L32647:
	andb	$4, %dl
	jne	.L32611
	addq	1096(%rbx), %rax
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movq	1056(%rbx), %rdx
	movl	$2, %ecx
	movl	$-3, %esi
	movq	%rax, %rdi
	call	z900_logical_to_main_l
	movq	1056(%rbx), %rax
	movq	952(%rax), %rax
	jmp	.L32611
.L32650:
	andb	$4, %dl
	jne	.L32622
	addq	1096(%rbx), %rax
	movl	$1, %r9d
	xorl	%r8d, %r8d
	movq	1056(%rbx), %rdx
	movl	$2, %ecx
	movq	%r10, (%rsp)
	movl	$-3, %esi
	movq	%r11, 8(%rsp)
	movq	%rax, %rdi
	call	z900_logical_to_main_l
	movq	1056(%rbx), %rax
	movq	8(%rsp), %r11
	movq	(%rsp), %r10
	movq	952(%rax), %rax
	jmp	.L32622
.L32649:
	testb	$4, %al
	jne	.L32617
	movq	%r10, %rdi
	movq	1056(%rbx), %rdx
	movl	$1, %r9d
	addq	1096(%rbx), %rdi
	xorl	%r8d, %r8d
	movl	$2, %ecx
	movl	$-3, %esi
	call	z900_logical_to_main_l
	movq	1056(%rbx), %rax
	movq	952(%rax), %r10
	jmp	.L32617
	.cfi_endproc
.LFE3117:
	.size	z900_monitor_call, .-z900_monitor_call
	.p2align 4,,15
	.globl	z900_move_immediate
	.type	z900_move_immediate, @function
z900_move_immediate:
.LFB3118:
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset 3, -16
	movl	(%rdi), %edi
	bswap	%edi
	movl	%edi, %eax
	movl	%edi, %ebx
	shrl	$12, %eax
	shrl	$16, %ebx
	andl	$4095, %edi
	andl	$15, %eax
	movl	%eax, %r10d
	je	.L32652
	cltq
	addq	192(%rsi,%rax,8), %rdi
	andq	120(%rsi), %rdi
.L32652:
	addq	$4, 136(%rsi)
	movb	$4, 130(%rsi)
	movzbl	%bl, %ebx
	leal	5(%r10), %eax
	cltq
	movl	1892(%rsi,%rax,4), %edx
	testl	%edx, %edx
	je	.L32653
	leal	1(%rdx), %eax
	movl	%edi, %ecx
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rsi,%rcx,8), %rdx
	movq	2232(%rdx), %r11
	cmpq	%r11, 320(%rsi,%rax,8)
	jne	.L32673
.L32654:
	movzbl	97(%rsi), %eax
	testb	%al, %al
	jne	.L32674
.L32655:
	movl	2224(%rsi), %r8d
	movq	%rdi, %rax
	andq	$-4194304, %rax
	orq	%r8, %rax
	cmpq	10424(%rdx), %rax
	jne	.L32653
	testb	$2, 46264(%rsi,%rcx)
	je	.L32653
	movq	%rdi, %rax
	xorq	26808(%rdx), %rax
.L32656:
	movb	%bl, (%rax)
	popq	%rbx
	.cfi_remember_state
	.cfi_def_cfa_offset 8
	ret
.L32673:
	.cfi_restore_state
	movzbl	44216(%rsi,%rcx), %r8d
	testb	%r8b, 1976(%rsi,%rax)
	jne	.L32654
.L32653:
	movzbl	97(%rsi), %r8d
	movq	%rsi, %rdx
	movl	$1, %r9d
	movl	$2, %ecx
	movl	%r10d, %esi
	call	z900_logical_to_main_l
	jmp	.L32656
.L32674:
	cmpb	43192(%rsi,%rcx), %al
	je	.L32655
	.p2align 4,,4
	jmp	.L32653
	.cfi_endproc
.LFE3118:
	.size	z900_move_immediate, .-z900_move_immediate
	.p2align 4,,15
	.globl	z900_move_character
	.type	z900_move_character, @function
z900_move_character:
.LFB3119:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	movq	%rsi, %r12
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r14d
	movl	%eax, %r11d
	shrl	$16, %r14d
	shrl	$28, %r11d
	andl	$4095, %r14d
	testl	%r11d, %r11d
	je	.L32676
	movslq	%r11d, %rdx
	addq	192(%rsi,%rdx,8), %r14
	andq	120(%rsi), %r14
.L32676:
	movl	%eax, %r13d
	shrl	$12, %eax
	andl	$4095, %r13d
	andl	$15, %eax
	movl	%eax, 32(%rsp)
	je	.L32677
	cltq
	addq	192(%r12,%rax,8), %r13
	andq	120(%r12), %r13
.L32677:
	movzbl	1(%rdi), %eax
	movb	$6, 130(%r12)
	addq	$6, 136(%r12)
	movl	%eax, 12(%rsp)
	movzbl	97(%r12), %eax
	movb	%al, (%rsp)
	movl	32(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%r12,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L32678
	movl	%r13d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%r12,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%r12,%rax,8)
	jne	.L32833
.L32679:
	cmpb	$0, (%rsp)
	jne	.L32834
.L32680:
	movl	2224(%r12), %esi
	movq	%r13, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L32678
	testb	$4, 46264(%r12,%rcx)
	je	.L32678
	movq	%r13, %rbp
	xorq	26808(%rdx), %rbp
.L32681:
	leal	5(%r11), %eax
	cltq
	leaq	(%r12,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L32682
	leal	1(%rax), %edx
	movl	%r14d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%r12,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%r12,%rdx,8)
	jne	.L32835
.L32683:
	cmpb	$0, (%rsp)
	jne	.L32836
.L32684:
	movl	2224(%r12), %esi
	movq	%r14, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L32682
	testb	$1, 46264(%r12,%rcx)
	je	.L32682
	movq	35000(%rax), %r10
	movq	%r14, %rbx
	movq	%r10, 984(%r12)
	xorq	26808(%rax), %rbx
.L32685:
	movl	12(%rsp), %edi
	movl	$2047, %r15d
	movl	%r14d, %eax
	andl	$2047, %eax
	subl	%edi, %r15d
	cmpl	%r15d, %eax
	jg	.L32686
	movl	%r13d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r15d
	jl	.L32687
	movl	%edi, %eax
	addl	$1, %eax
	.p2align 4,,10
	.p2align 3
.L32688:
	testb	$7, %bl
	je	.L32837
	addq	$1, %rbp
	movzbl	-1(%rbp), %edx
	addq	$1, %rbx
	subl	$1, %eax
	movb	%dl, -1(%rbx)
	jne	.L32688
.L32690:
	orb	$6, (%r10)
.L32675:
	addq	$72, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L32837:
	.cfi_restore_state
	movq	%rbx, %rdx
	subq	%rbp, %rdx
	movl	%edx, %ecx
	sarl	$31, %ecx
	xorl	%ecx, %edx
	subl	%ecx, %edx
	cmpl	$7, %edx
	jle	.L32726
	cmpl	$7, %eax
	jle	.L32726
	subl	$8, %eax
	movl	%eax, %edi
	shrl	$3, %edi
	movl	%edi, %edx
	leaq	8(,%rdx,8), %rsi
	xorl	%edx, %edx
	.p2align 4,,10
	.p2align 3
.L32727:
	movq	0(%rbp,%rdx), %rcx
	movq	%rcx, (%rbx,%rdx)
	addq	$8, %rdx
	cmpq	%rsi, %rdx
	jne	.L32727
	negl	%edi
	addq	%rdx, %rbx
	addq	%rdx, %rbp
	leal	(%rax,%rdi,8), %eax
.L32726:
	testl	%eax, %eax
	je	.L32690
	leaq	16(%rbp), %rdx
	movl	%eax, %r8d
	cmpq	%rdx, %rbx
	leaq	16(%rbx), %rdx
	setae	%cl
	cmpq	%rdx, %rbp
	setae	%dl
	orb	%dl, %cl
	je	.L32697
	cmpl	$15, %eax
	jbe	.L32697
	movl	%eax, %edi
	shrl	$4, %edi
	movl	%edi, %edx
	sall	$4, %edx
	testl	%edx, %edx
	je	.L32698
	xorl	%ecx, %ecx
	xorl	%esi, %esi
.L32703:
	movdqu	0(%rbp,%rcx), %xmm0
	addl	$1, %esi
	movdqu	%xmm0, (%rbx,%rcx)
	addq	$16, %rcx
	cmpl	%esi, %edi
	ja	.L32703
	movl	%edx, %ecx
	subl	%edx, %eax
	addq	%rcx, %rbx
	addq	%rcx, %rbp
	cmpl	%r8d, %edx
	je	.L32690
	.p2align 4,,10
	.p2align 3
.L32698:
	movzbl	0(%rbp), %edx
	cmpl	$1, %eax
	movb	%dl, (%rbx)
	je	.L32690
	movzbl	1(%rbp), %edx
	cmpl	$2, %eax
	movb	%dl, 1(%rbx)
	je	.L32690
	movzbl	2(%rbp), %edx
	cmpl	$3, %eax
	movb	%dl, 2(%rbx)
	je	.L32690
	movzbl	3(%rbp), %edx
	cmpl	$4, %eax
	movb	%dl, 3(%rbx)
	je	.L32690
	movzbl	4(%rbp), %edx
	cmpl	$5, %eax
	movb	%dl, 4(%rbx)
	je	.L32690
	movzbl	5(%rbp), %edx
	cmpl	$6, %eax
	movb	%dl, 5(%rbx)
	je	.L32690
	movzbl	6(%rbp), %edx
	cmpl	$7, %eax
	movb	%dl, 6(%rbx)
	je	.L32690
	movzbl	7(%rbp), %edx
	cmpl	$8, %eax
	movb	%dl, 7(%rbx)
	je	.L32690
	movzbl	8(%rbp), %edx
	cmpl	$9, %eax
	movb	%dl, 8(%rbx)
	je	.L32690
	movzbl	9(%rbp), %edx
	cmpl	$10, %eax
	movb	%dl, 9(%rbx)
	je	.L32690
	movzbl	10(%rbp), %edx
	cmpl	$11, %eax
	movb	%dl, 10(%rbx)
	je	.L32690
	movzbl	11(%rbp), %edx
	cmpl	$12, %eax
	movb	%dl, 11(%rbx)
	je	.L32690
	movzbl	12(%rbp), %edx
	cmpl	$13, %eax
	movb	%dl, 12(%rbx)
	je	.L32690
	movzbl	13(%rbp), %edx
	cmpl	$14, %eax
	movb	%dl, 13(%rbx)
	je	.L32690
	movzbl	14(%rbp), %eax
	movb	%al, 14(%rbx)
	jmp	.L32690
	.p2align 4,,10
	.p2align 3
.L32697:
	subl	$1, %eax
	leaq	1(%rbp,%rax), %rdx
	.p2align 4,,10
	.p2align 3
.L32705:
	addq	$1, %rbp
	movzbl	-1(%rbp), %eax
	addq	$1, %rbx
	cmpq	%rdx, %rbp
	movb	%al, -1(%rbx)
	jne	.L32705
	jmp	.L32690
.L32835:
	movzbl	44216(%r12,%rcx), %esi
	testb	%sil, 1976(%r12,%rdx)
	jne	.L32683
.L32682:
	movl	12(%rsp), %eax
	movl	%r11d, %esi
	movl	$1, %ecx
	movzbl	(%rsp), %r8d
	movq	%r12, %rdx
	movq	%r14, %rdi
	movl	%r11d, 36(%rsp)
	leal	1(%rax), %r9d
	andl	$511, %r9d
	call	z900_logical_to_main_l
	movq	984(%r12), %r10
	movq	%rax, %rbx
	movl	36(%rsp), %r11d
	jmp	.L32685
.L32833:
	movzbl	44216(%r12,%rcx), %esi
	testb	%sil, 1976(%r12,%rax)
	jne	.L32679
.L32678:
	movzbl	(%rsp), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movl	32(%rsp), %esi
	movq	%r12, %rdx
	movq	%r13, %rdi
	movl	%r11d, 24(%rsp)
	call	z900_logical_to_main_l
	movl	24(%rsp), %r11d
	movq	%rax, %rbp
	jmp	.L32681
.L32834:
	movzbl	(%rsp), %eax
	cmpb	43192(%r12,%rcx), %al
	je	.L32680
	jmp	.L32678
.L32687:
	movl	$2048, %r14d
	subl	%eax, %r14d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L32706
	movq	120(%r12), %rdx
	leal	1(%rax), %esi
	movl	%r14d, %r15d
	leal	(%r14,%r13), %eax
	movslq	%esi, %rsi
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%r12,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%r12,%rsi,8)
	jne	.L32838
.L32707:
	leaq	(%r15,%r13), %rdi
	andq	%rdx, %rdi
	cmpb	$0, (%rsp)
	jne	.L32839
.L32709:
	movl	2224(%r12), %esi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L32708
	testb	$4, 46264(%r12,%rax)
	je	.L32708
	xorq	26808(%rcx), %rdi
	movq	%rdi, %r13
.L32710:
	movl	%r14d, %edx
	movq	%rbp, %rsi
	movq	%rbx, %rdi
	movq	%r10, (%rsp)
	call	concpy.isra.2
	movl	12(%rsp), %edx
	leaq	(%rbx,%r15), %rdi
	movq	%r13, %rsi
	subl	%r14d, %edx
	addl	$1, %edx
	call	concpy.isra.2
	movq	(%rsp), %r10
	jmp	.L32690
.L32686:
	movl	$2048, 36(%rsp)
	subl	%eax, 36(%rsp)
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L32712
	leal	1(%rax), %esi
	movl	36(%rsp), %eax
	movq	120(%r12), %rcx
	movslq	%esi, %rsi
	addl	%r14d, %eax
	andl	%ecx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%r12,%rax,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%r12,%rsi,8)
	jne	.L32840
.L32713:
	cmpb	$0, (%rsp)
	jne	.L32841
.L32715:
	movl	36(%rsp), %esi
	leaq	(%rsi,%r14), %rdi
	movq	%rsi, 40(%rsp)
	movl	2224(%r12), %esi
	andq	%rcx, %rdi
	movq	%rdi, %rcx
	andq	$-4194304, %rcx
	orq	%rsi, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L32714
	testb	$1, 46264(%r12,%rax)
	je	.L32714
	movq	35000(%rdx), %rax
	movq	%rax, 984(%r12)
	xorq	26808(%rdx), %rdi
	movq	%rax, 48(%rsp)
	movq	%rdi, 24(%rsp)
.L32716:
	movl	%r13d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r15d
	jl	.L32717
	movl	36(%rsp), %r15d
	movq	%rbp, %rsi
	movq	%rbx, %rdi
	movq	%r10, (%rsp)
	movl	%r15d, %edx
	call	concpy.isra.2
	movl	12(%rsp), %edx
	movq	40(%rsp), %rsi
	movq	24(%rsp), %rdi
	subl	%r15d, %edx
	addl	$1, %edx
	addq	%rbp, %rsi
	call	concpy.isra.2
	movq	(%rsp), %r10
.L32718:
	orb	$6, (%r10)
	movq	48(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L32675
.L32838:
	movzbl	44216(%r12,%rax), %edi
	testb	%dil, 1976(%r12,%rsi)
	jne	.L32707
	leaq	(%r15,%r13), %rdi
	andq	%rdx, %rdi
.L32708:
	movzbl	(%rsp), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movl	32(%rsp), %esi
	movq	%r12, %rdx
	movq	%r10, 16(%rsp)
	call	z900_logical_to_main_l
	movq	16(%rsp), %r10
	movq	%rax, %r13
	jmp	.L32710
.L32839:
	movzbl	(%rsp), %esi
	cmpb	43192(%r12,%rax), %sil
	je	.L32709
	jmp	.L32708
.L32717:
	movl	$2048, %r14d
	subl	%eax, %r14d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L32719
	movq	120(%r12), %rdx
	leal	1(%rax), %esi
	leal	(%r14,%r13), %eax
	movslq	%esi, %rsi
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%r12,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%r12,%rsi,8)
	jne	.L32842
.L32720:
	cmpb	$0, (%rsp)
	jne	.L32843
.L32722:
	movl	%r14d, %esi
	leaq	(%rsi,%r13), %rdi
	movl	2224(%r12), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L32721
	testb	$4, 46264(%r12,%rax)
	je	.L32721
	xorq	26808(%rcx), %rdi
	movq	%rdi, %r12
.L32723:
	cmpl	%r14d, 36(%rsp)
	movq	%r10, (%rsp)
	je	.L32844
	jge	.L32725
	movl	36(%rsp), %r15d
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	movl	%r15d, %edx
	movslq	%r15d, %rbx
	call	concpy.isra.2
	leaq	0(%rbp,%rbx), %rsi
	movl	%r14d, %edx
	subl	%r15d, %edx
	movq	24(%rsp), %r15
	movq	%r15, %rdi
	call	concpy.isra.2
	movl	12(%rsp), %edx
	movq	%r15, %rdi
	movq	%r12, %rsi
	subl	%r14d, %edx
	movslq	%r14d, %r14
	subq	%rbx, %r14
	addl	$1, %edx
	addq	%r14, %rdi
	call	concpy.isra.2
	movq	(%rsp), %r10
	jmp	.L32718
.L32841:
	movzbl	(%rsp), %esi
	cmpb	43192(%r12,%rax), %sil
	je	.L32715
.L32831:
	movl	36(%rsp), %eax
	leaq	(%rax,%r14), %rdi
	movq	%rax, 40(%rsp)
	andq	%rcx, %rdi
.L32714:
	movzbl	(%rsp), %r8d
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%r12, %rdx
	movl	%r11d, %esi
	movq	%r10, 56(%rsp)
	call	z900_logical_to_main_l
	movq	56(%rsp), %r10
	movq	%rax, 24(%rsp)
	movq	984(%r12), %rax
	movq	%rax, 48(%rsp)
	jmp	.L32716
.L32706:
	movl	%r14d, %r15d
	leaq	(%r15,%r13), %rdi
	andq	120(%r12), %rdi
	jmp	.L32708
.L32836:
	movzbl	(%rsp), %esi
	cmpb	43192(%r12,%rcx), %sil
	je	.L32684
	jmp	.L32682
.L32840:
	movzbl	44216(%r12,%rax), %edi
	testb	%dil, 1976(%r12,%rsi)
	jne	.L32713
	jmp	.L32831
.L32712:
	movl	36(%rsp), %eax
	leaq	(%rax,%r14), %rdi
	movq	%rax, 40(%rsp)
	andq	120(%r12), %rdi
	jmp	.L32714
.L32725:
	movq	%rbp, %rsi
	movl	%r14d, %edx
	movq	%rbx, %rdi
	call	concpy.isra.2
	movl	36(%rsp), %r15d
	movslq	%r14d, %rbp
	leaq	(%rbx,%rbp), %rdi
	movq	%r12, %rsi
	movl	%r15d, %edx
	subl	%r14d, %edx
	call	concpy.isra.2
	movl	12(%rsp), %edx
	movslq	%r15d, %rax
	movq	24(%rsp), %rdi
	subq	%rbp, %rax
	leaq	(%r12,%rax), %rsi
	subl	%r15d, %edx
	addl	$1, %edx
	call	concpy.isra.2
	movq	(%rsp), %r10
	jmp	.L32718
.L32844:
	movl	36(%rsp), %r15d
	movq	%rbp, %rsi
	movq	%rbx, %rdi
	movl	%r15d, %edx
	call	concpy.isra.2
	movl	12(%rsp), %edx
	movq	%r12, %rsi
	movq	24(%rsp), %rdi
	subl	%r15d, %edx
	addl	$1, %edx
	call	concpy.isra.2
	movq	(%rsp), %r10
	jmp	.L32718
.L32843:
	movzbl	(%rsp), %esi
	cmpb	43192(%r12,%rax), %sil
	je	.L32722
.L32832:
	movl	%r14d, %eax
	leaq	(%rax,%r13), %rdi
	andq	%rdx, %rdi
.L32721:
	movzbl	(%rsp), %r8d
	movq	%r12, %rdx
	movl	$1, %r9d
	movl	32(%rsp), %esi
	movl	$4, %ecx
	movq	%r10, 16(%rsp)
	call	z900_logical_to_main_l
	movq	16(%rsp), %r10
	movq	%rax, %r12
	jmp	.L32723
.L32842:
	movzbl	44216(%r12,%rax), %edi
	testb	%dil, 1976(%r12,%rsi)
	jne	.L32720
	jmp	.L32832
.L32719:
	movl	%r14d, %eax
	leaq	(%rax,%r13), %rdi
	andq	120(%r12), %rdi
	jmp	.L32721
	.cfi_endproc
.LFE3119:
	.size	z900_move_character, .-z900_move_character
	.p2align 4,,15
	.globl	z900_D200
	.type	z900_D200, @function
z900_D200:
.LFB3120:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	shrl	$12, %eax
	andl	$4095, %ebp
	andl	$15, %eax
	movl	%eax, %r12d
	je	.L32846
	cltq
	addq	192(%rsi,%rax,8), %rbp
	andq	120(%rsi), %rbp
.L32846:
	movzbl	4(%rdi), %esi
	movzbl	5(%rdi), %edx
	movl	%esi, %eax
	shrb	$4, %sil
	andl	$15, %eax
	movzbl	%sil, %esi
	sall	$8, %eax
	orl	%edx, %eax
	testl	%esi, %esi
	cltq
	je	.L32847
	movslq	%esi, %rdx
	addq	192(%rbx,%rdx,8), %rax
	andq	120(%rbx), %rax
.L32847:
	addq	$6, 136(%rbx)
	movb	$6, 130(%rbx)
	leal	5(%rsi), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L32848
	movl	%eax, %edi
	addl	$1, %edx
	shrl	$12, %edi
	movslq	%edx, %rdx
	andl	$1023, %edi
	leaq	(%rbx,%rdi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L32887
.L32849:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L32888
.L32850:
	movl	2224(%rbx), %r9d
	movq	%rax, %rdx
	andq	$-4194304, %rdx
	orq	%r9, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L32848
	testb	$4, 46264(%rbx,%rdi)
	je	.L32848
	xorq	26808(%rcx), %rax
	movq	%rax, %r13
.L32851:
	leal	5(%r12), %eax
	cltq
	movl	1892(%rbx,%rax,4), %edx
	testl	%edx, %edx
	je	.L32852
	movl	%ebp, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %rax
	cmpq	%rax, 320(%rbx,%rdx,8)
	jne	.L32889
.L32853:
	testb	%r8b, %r8b
	jne	.L32890
.L32854:
	movl	2224(%rbx), %eax
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%rax, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L32852
	testb	$2, 46264(%rbx,%rsi)
	je	.L32852
	movq	%rbp, %rax
	xorq	26808(%rcx), %rax
.L32855:
	movzbl	0(%r13), %edx
	movb	%dl, (%rax)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L32887:
	.cfi_restore_state
	movzbl	44216(%rbx,%rdi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L32849
.L32848:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rax, %rdi
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, %r13
	jmp	.L32851
.L32889:
	movzbl	44216(%rbx,%rsi), %eax
	testb	%al, 1976(%rbx,%rdx)
	jne	.L32853
.L32852:
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r12d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
	jmp	.L32855
.L32888:
	cmpb	43192(%rbx,%rdi), %r8b
	je	.L32850
	.p2align 4,,3
	jmp	.L32848
.L32890:
	cmpb	%r8b, 43192(%rbx,%rsi)
	je	.L32854
	.p2align 4,,3
	jmp	.L32852
	.cfi_endproc
.LFE3120:
	.size	z900_D200, .-z900_D200
	.p2align 4,,15
	.globl	z900_move_inverse
	.type	z900_move_inverse, @function
z900_move_inverse:
.LFB3121:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %esi
	shrl	$16, %ebp
	shrl	$28, %esi
	andl	$4095, %ebp
	testl	%esi, %esi
	movl	%esi, (%rsp)
	je	.L32892
	movslq	%esi, %rdx
	addq	192(%rbx,%rdx,8), %rbp
	andq	120(%rbx), %rbp
.L32892:
	movl	%eax, %r12d
	shrl	$12, %eax
	andl	$4095, %r12d
	andl	$15, %eax
	movl	%eax, 4(%rsp)
	je	.L32893
	cltq
	addq	192(%rbx,%rax,8), %r12
	andq	120(%rbx), %r12
.L32893:
	movzbl	1(%rdi), %r15d
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	cmpb	$0, 2064(%rbx)
	js	.L32894
	movl	$1, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L32894:
	movzbl	%r15b, %r13d
	leaq	0(%rbp,%r13), %r14
	movq	%r14, %rax
	xorq	%rbp, %rax
	testq	$-4096, %rax
	jne	.L32895
	movl	(%rsp), %eax
	movzbl	97(%rbx), %edx
	movq	120(%rbx), %rcx
	leal	5(%rax), %r10d
	movzbl	%dl, %r8d
	movslq	%r10d, %r10
.L32896:
	movq	%r12, %r14
	subq	%r13, %r14
	andq	%rcx, %r14
	addq	%r14, %r13
	movq	%r13, %rax
	xorq	%r14, %rax
	testq	$-4096, %rax
	movl	4(%rsp), %eax
	leal	5(%rax), %r11d
	movslq	%r11d, %r11
	jne	.L32906
	movl	1892(%rbx,%r11,4), %eax
.L32907:
	xorl	%r13d, %r13d
	jmp	.L32925
	.p2align 4,,10
	.p2align 3
.L33006:
	movl	1892(%rbx,%r11,4), %eax
	movzbl	97(%rbx), %r8d
.L32925:
	testl	%eax, %eax
	je	.L32916
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L33002
.L32917:
	testb	%r8b, %r8b
	jne	.L33003
.L32918:
	movl	2224(%rbx), %esi
	movq	%r12, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L32916
	testb	$4, 46264(%rbx,%rcx)
	je	.L32916
	movq	%r12, %rax
	xorq	26808(%rdx), %rax
.L32919:
	movzbl	(%rax), %r14d
	movl	1892(%rbx,%r10,4), %eax
	testl	%eax, %eax
	je	.L32920
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L33004
.L32921:
	testb	%r8b, %r8b
	jne	.L33005
.L32922:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L32920
	testb	$2, 46264(%rbx,%rcx)
	je	.L32920
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
.L32923:
	movb	%r14b, (%rax)
	addq	$1, %rbp
	subq	$1, %r12
	movq	120(%rbx), %rax
	addl	$1, %r13d
	andq	%rax, %rbp
	andq	%rax, %r12
	cmpl	%r15d, %r13d
	jle	.L33006
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L32895:
	.cfi_restore_state
	movl	(%rsp), %eax
	leal	5(%rax), %r10d
	movslq	%r10d, %r10
	leaq	(%rbx,%r10,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L32897
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L33007
.L32898:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L33008
.L32899:
	movl	2224(%rbx), %edi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L32930
	testb	$1, 46264(%rbx,%rcx)
	je	.L32930
	movq	35000(%rdx), %rax
	movq	%rax, 984(%rbx)
.L32901:
	movl	%ebp, %edx
	movl	$2047, %eax
	andl	$2047, %edx
	subl	%r15d, %eax
	cmpl	%eax, %edx
	jg	.L32902
	movzbl	97(%rbx), %edx
	movq	120(%rbx), %rcx
	movzbl	%dl, %r8d
	jmp	.L32896
	.p2align 4,,10
	.p2align 3
.L32906:
	leaq	(%rbx,%r11,4), %rax
	movq	%rax, 8(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L32908
	leal	1(%rax), %edi
	movslq	%edi, %rsi
	movl	%r14d, %edi
	shrl	$12, %edi
	movl	%esi, 16(%rsp)
	andl	$1023, %edi
	leaq	(%rbx,%rdi,8), %r8
	movq	2232(%r8), %r9
	cmpq	%r9, 320(%rbx,%rsi,8)
	jne	.L33009
.L32909:
	testb	%dl, %dl
	jne	.L33010
.L32910:
	movl	2224(%rbx), %r9d
	movq	%r14, %rsi
	andq	$-4194304, %rsi
	orq	%r9, %rsi
	cmpq	10424(%r8), %rsi
	jne	.L32908
	testb	$4, 46264(%rbx,%rdi)
	je	.L32908
	movl	%r14d, %edi
	movl	$2047, %esi
	andl	$2047, %edi
	subl	%r15d, %esi
	cmpl	%esi, %edi
	jg	.L32926
.L32927:
	movzbl	%dl, %r8d
	jmp	.L32907
.L33004:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L32921
.L32920:
	movl	(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movq	%r10, 16(%rsp)
	movq	%r11, 8(%rsp)
	call	z900_logical_to_main_l
	movq	16(%rsp), %r10
	movq	8(%rsp), %r11
	jmp	.L32923
.L33002:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L32917
.L32916:
	movl	4(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r12, %rdi
	movq	%r10, 16(%rsp)
	movq	%r11, 8(%rsp)
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	16(%rsp), %r10
	movq	8(%rsp), %r11
	jmp	.L32919
.L33005:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L32922
	jmp	.L32920
	.p2align 4,,10
	.p2align 3
.L33003:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L32918
	.p2align 4,,3
	jmp	.L32916
.L33007:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L32898
.L32897:
	movzbl	97(%rbx), %r8d
.L32900:
	movl	(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movq	%r10, 16(%rsp)
	movq	%r11, 8(%rsp)
	call	z900_logical_to_main_l
	movq	16(%rsp), %r10
	movq	8(%rsp), %r11
	jmp	.L32901
.L33008:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L32899
.L32930:
	movzbl	%sil, %r8d
	jmp	.L32900
.L32902:
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L32903
	movq	120(%rbx), %rcx
	leal	1(%rax), %edx
	leal	(%r15,%rbp), %eax
	andl	%ecx, %eax
	shrl	$12, %eax
	movl	%eax, %esi
	movslq	%edx, %rax
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdi
	movq	2232(%rdi), %rdx
	cmpq	%rdx, 320(%rbx,%rax,8)
	jne	.L33011
.L32904:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L33012
.L32905:
	movl	2224(%rbx), %r8d
	movq	%rcx, %rax
	andq	$-4194304, %rax
	andq	%r14, %rax
	orq	%r8, %rax
	cmpq	10424(%rdi), %rax
	jne	.L32903
	testb	$1, 46264(%rbx,%rsi)
	je	.L32903
	movq	35000(%rdi), %rax
	movzbl	%dl, %r8d
	movq	%rax, 984(%rbx)
	jmp	.L32896
.L33010:
	cmpb	%dl, 43192(%rbx,%rdi)
	je	.L32910
.L32908:
	movl	4(%rsp), %esi
	movzbl	%dl, %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %r9d
	movq	%r14, %rdi
	movq	%r10, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	z900_logical_to_main_l
	movq	8(%rsp), %rax
	movl	%r14d, %ecx
	movl	$2047, %edx
	andl	$2047, %ecx
	movq	16(%rsp), %r11
	subl	%r15d, %edx
	movq	24(%rsp), %r10
	cmpl	%edx, %ecx
	movl	1892(%rax), %eax
	jg	.L32912
	movzbl	97(%rbx), %edx
	jmp	.L32927
.L33009:
	movzbl	1976(%rbx,%rsi), %esi
	testb	%sil, 44216(%rbx,%rdi)
	jne	.L32909
	jmp	.L32908
.L32912:
	testl	%eax, %eax
	je	.L32913
	movq	120(%rbx), %rcx
	leal	1(%rax), %edi
	movl	%edi, 16(%rsp)
.L32926:
	leal	(%r15,%r14), %edx
	movslq	16(%rsp), %rdi
	andl	%ecx, %edx
	shrl	$12, %edx
	andl	$1023, %edx
	leaq	(%rbx,%rdx,8), %rsi
	movq	2232(%rsi), %r9
	cmpq	%r9, 320(%rbx,%rdi,8)
	jne	.L33013
.L32914:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L33014
.L32915:
	movl	2224(%rbx), %edi
	andq	$-4194304, %rcx
	andq	%r13, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%rsi), %rcx
	jne	.L32913
	testb	$4, 46264(%rbx,%rdx)
	jne	.L32907
.L32913:
	movl	4(%rsp), %esi
	movq	%rbx, %r8
	movl	$4, %ecx
	movl	%r15d, %edx
	movq	%r14, %rdi
	movq	%r10, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	z900_validate_operand.part.9
	movq	8(%rsp), %rax
	movzbl	97(%rbx), %r8d
	movq	16(%rsp), %r11
	movq	24(%rsp), %r10
	movl	1892(%rax), %eax
	jmp	.L32907
.L33014:
	cmpb	43192(%rbx,%rdx), %r8b
	je	.L32915
	jmp	.L32913
.L33013:
	movzbl	1976(%rbx,%rdi), %edi
	testb	%dil, 44216(%rbx,%rdx)
	jne	.L32914
	jmp	.L32913
.L33011:
	movzbl	44216(%rbx,%rsi), %edx
	testb	%dl, 1976(%rbx,%rax)
	jne	.L32904
.L32903:
	movl	(%rsp), %esi
	movq	%rbx, %r8
	movl	$1, %ecx
	movl	%r15d, %edx
	movq	%rbp, %rdi
	movq	%r10, 8(%rsp)
	call	z900_validate_operand.part.9
	movzbl	97(%rbx), %edx
	movq	120(%rbx), %rcx
	movq	8(%rsp), %r10
	movzbl	%dl, %r8d
	jmp	.L32896
.L33012:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L32905
	jmp	.L32903
	.cfi_endproc
.LFE3121:
	.size	z900_move_inverse, .-z900_move_inverse
	.p2align 4,,15
	.globl	z900_move_long
	.type	z900_move_long, @function
z900_move_long:
.LFB3122:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	movzbl	1(%rdi), %eax
	movb	$2, 130(%rbx)
	addq	$2, 136(%rbx)
	movzbl	%al, %esi
	movl	%eax, %r12d
	movl	%esi, 52(%rsp)
	andl	$15, %r12d
	sarl	$4, 52(%rsp)
	movzbl	%r12b, %edi
	movl	%edi, 56(%rsp)
	testb	$1, 52(%rsp)
	jne	.L33016
	testb	$1, %al
	jne	.L33016
.L33017:
	movl	52(%rsp), %r9d
	movzbl	%r12b, %r12d
	leaq	(%rbx,%r12,8), %rdi
	movq	%rdi, 8(%rsp)
	movslq	%r9d, %rcx
	leaq	(%rbx,%rcx,8), %rax
	movq	%rax, %rsi
	movq	%rax, 16(%rsp)
	movq	120(%rbx), %rax
	movq	%rax, %rbp
	movq	%rax, %r13
	andq	192(%rsi), %rbp
	movl	56(%rsp), %esi
	andq	192(%rdi), %r13
	leal	1(%rsi), %edx
	movslq	%edx, %rsi
	leaq	24(%rsi), %rdx
	movq	%rsi, 24(%rsp)
	leal	1(%r9), %esi
	movl	(%rbx,%rdx,8), %r12d
	movslq	%esi, %rdi
	movzbl	3(%rbx,%rdx,8), %r10d
	movq	%rdi, 32(%rsp)
	movl	192(%rbx,%rdi,8), %r11d
	andl	$16777215, %r12d
	andl	$16777215, %r11d
	cmpl	$1, %r11d
	movslq	%r11d, %r14
	jle	.L33018
	cmpl	$1, %r12d
	jle	.L33018
	cmpb	$64, 99(%rbx)
	je	.L33247
.L33019:
	cmpl	%r11d, %r12d
	movl	%r11d, %edx
	cmovle	%r12d, %edx
	movslq	%edx, %rdx
	leaq	-1(%r13,%rdx), %rdx
	andq	%rax, %rdx
	cmpq	%rdx, %r13
	jb	.L33248
	cmpq	%rdx, %rbp
	jbe	.L33024
.L33246:
	cmpq	%r13, %rbp
	jbe	.L33022
.L33024:
	testb	$1, 103(%rbx)
	movq	16(%rsp), %rax
	je	.L33027
	movq	%rbp, 192(%rax)
	movq	8(%rsp), %rax
	movq	%r13, 192(%rax)
.L33028:
	movb	$3, 100(%rbx)
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L33016:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L33017
	.p2align 4,,10
	.p2align 3
.L33018:
	movq	$0, 40(%rsp)
	xorl	%r15d, %r15d
	testl	%r11d, %r11d
	jne	.L33249
.L33030:
	cmpl	%r12d, %r11d
	movl	$1, %eax
	jl	.L33039
.L33268:
	setg	%al
	addl	%eax, %eax
.L33039:
	testb	$1, 103(%rbx)
	movb	%al, 100(%rbx)
	movq	16(%rsp), %rax
	jne	.L33250
	movl	%ebp, 192(%rax)
	movq	8(%rsp), %rax
	movl	%r13d, 192(%rax)
.L33041:
	testl	%r11d, %r11d
	je	.L33015
	movzbl	%r10b, %eax
	movzbl	%r10b, %r10d
	movl	%eax, 48(%rsp)
	movabsq	$72340172838076673, %rax
	imulq	%rax, %r10
	testl	%r12d, %r12d
	jne	.L33043
.L33256:
	movl	$2048, %edx
	movl	%ebp, %eax
	movl	%edx, %ecx
	andl	$2047, %eax
	subl	%r14d, %ecx
	cmpl	%ecx, %eax
	jg	.L33251
	xorl	%r8d, %r8d
	xorl	%r11d, %r11d
.L33044:
	cmpq	$8, %r14
	movq	%r15, %rdi
	jae	.L33252
.L33045:
	movq	%r14, %rdx
	andl	$7, %edx
	je	.L33047
	xorl	%eax, %eax
.L33048:
	movzbl	48(%rsp), %esi
	movb	%sil, (%rdi,%rax)
	addq	$1, %rax
	cmpq	%rdx, %rax
	jb	.L33048
.L33047:
	movq	120(%rbx), %rcx
	addq	%r14, %rbp
	xorl	%esi, %esi
	movq	16(%rsp), %rax
	andq	%rcx, %rbp
	testb	$1, 103(%rbx)
	je	.L33068
.L33260:
	movq	%rbp, 192(%rax)
	movq	8(%rsp), %rax
	movq	%r13, 192(%rax)
.L33069:
	movq	32(%rsp), %rax
	leaq	24(%rax), %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%r8d, %eax
	movl	%eax, (%rbx,%rdx,8)
	movq	24(%rsp), %rax
	leaq	24(%rax), %rdx
	movl	(%rbx,%rdx,8), %eax
	andl	$-16777216, %eax
	orl	%esi, %eax
	cmpl	$256, %r11d
	movl	%eax, (%rbx,%rdx,8)
	jle	.L33070
	movl	52(%rbx), %eax
	andl	56(%rbx), %eax
	testl	$1073807344, %eax
	jne	.L33253
.L33071:
	testl	%r12d, %r12d
	je	.L33077
	testl	$2047, %r13d
	je	.L33078
	addq	%r14, 40(%rsp)
.L33077:
	addq	%r14, %r15
	testl	$2047, %ebp
	jne	.L33084
	movl	52(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L33085
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L33254
.L33086:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L33255
.L33087:
	movl	2224(%rbx), %edi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L33111
	testb	$2, 46264(%rbx,%rcx)
	je	.L33111
	movq	%rbp, %r15
	xorq	26808(%rdx), %r15
.L33084:
	testl	%r11d, %r11d
	je	.L33015
	testl	%r12d, %r12d
	movslq	%r11d, %r14
	je	.L33256
.L33043:
	movl	$2048, %eax
	movl	%ebp, %edx
	movl	%eax, %ecx
	andl	$2047, %edx
	subl	%r14d, %ecx
	cmpl	%ecx, %edx
	jg	.L33257
	movl	%r14d, %eax
.L33051:
	movl	$2048, %esi
	movl	%r13d, %edx
	movl	%esi, %ecx
	andl	$2047, %edx
	subl	%r12d, %ecx
	cmpl	%ecx, %edx
	jg	.L33258
	movl	%r12d, %esi
.L33052:
	cmpl	%eax, %esi
	cmovg	%eax, %esi
	testl	%esi, %esi
	je	.L33090
	testb	$7, %r15b
	movl	%esi, %eax
	movq	40(%rsp), %r8
	movq	%r15, %rcx
	jne	.L33055
	jmp	.L33054
	.p2align 4,,10
	.p2align 3
.L33259:
	testb	$7, %cl
	je	.L33054
.L33055:
	addq	$1, %r8
	movzbl	-1(%r8), %edx
	addq	$1, %rcx
	subl	$1, %eax
	movb	%dl, -1(%rcx)
	jne	.L33259
.L33090:
	movq	120(%rbx), %rcx
	movl	%r14d, %r11d
	subl	%esi, %r12d
	subl	%esi, %r11d
	movslq	%esi, %r14
	movl	%r12d, %esi
	addq	%r14, %rbp
	addq	%r14, %r13
	movl	%r11d, %r8d
	andl	$16777215, %esi
	andl	$16777215, %r8d
	movq	16(%rsp), %rax
	andq	%rcx, %rbp
	andq	%rcx, %r13
	testb	$1, 103(%rbx)
	jne	.L33260
.L33068:
	movl	%ebp, 192(%rax)
	movq	8(%rsp), %rax
	movl	%r13d, 192(%rax)
	jmp	.L33069
.L33250:
	movq	%rbp, 192(%rax)
	movq	8(%rsp), %rax
	movq	%r13, 192(%rax)
	jmp	.L33041
	.p2align 4,,10
	.p2align 3
.L33070:
	testl	%r11d, %r11d
	jne	.L33071
.L33015:
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L33054:
	.cfi_restore_state
	movq	%rcx, %rdx
	subq	%r8, %rdx
	movl	%edx, %edi
	sarl	$31, %edi
	xorl	%edi, %edx
	subl	%edi, %edx
	cmpl	$7, %edx
	jle	.L33091
	cmpl	$7, %eax
	jle	.L33091
	subl	$8, %eax
	movl	%eax, %r11d
	shrl	$3, %r11d
	movl	%r11d, %edx
	leaq	8(,%rdx,8), %r9
	xorl	%edx, %edx
	.p2align 4,,10
	.p2align 3
.L33092:
	movq	(%r8,%rdx), %rdi
	movq	%rdi, (%rcx,%rdx)
	addq	$8, %rdx
	cmpq	%r9, %rdx
	jne	.L33092
	negl	%r11d
	addq	%rdx, %rcx
	addq	%rdx, %r8
	leal	(%rax,%r11,8), %eax
.L33091:
	testl	%eax, %eax
	je	.L33090
	leaq	16(%r8), %rdx
	cmpq	%rdx, %rcx
	leaq	16(%rcx), %rdx
	setae	%dil
	cmpq	%rdx, %r8
	setae	%dl
	orb	%dl, %dil
	je	.L33060
	cmpl	$15, %eax
	jbe	.L33060
	movl	%eax, %r11d
	xorl	%edi, %edi
	xorl	%r9d, %r9d
	shrl	$4, %r11d
	movl	%r11d, %edx
	sall	$4, %edx
.L33065:
	movdqu	(%r8,%rdi), %xmm0
	addl	$1, %r9d
	movdqu	%xmm0, (%rcx,%rdi)
	addq	$16, %rdi
	cmpl	%r9d, %r11d
	ja	.L33065
	movl	%edx, %edi
	addq	%rdi, %rcx
	addq	%r8, %rdi
	movl	%eax, %r8d
	subl	%edx, %r8d
	cmpl	%eax, %edx
	je	.L33090
	movzbl	(%rdi), %eax
	cmpl	$1, %r8d
	movb	%al, (%rcx)
	je	.L33090
	movzbl	1(%rdi), %eax
	cmpl	$2, %r8d
	movb	%al, 1(%rcx)
	je	.L33090
	movzbl	2(%rdi), %eax
	cmpl	$3, %r8d
	movb	%al, 2(%rcx)
	je	.L33090
	movzbl	3(%rdi), %eax
	cmpl	$4, %r8d
	movb	%al, 3(%rcx)
	je	.L33090
	movzbl	4(%rdi), %eax
	cmpl	$5, %r8d
	movb	%al, 4(%rcx)
	je	.L33090
	movzbl	5(%rdi), %eax
	cmpl	$6, %r8d
	movb	%al, 5(%rcx)
	je	.L33090
	movzbl	6(%rdi), %eax
	cmpl	$7, %r8d
	movb	%al, 6(%rcx)
	je	.L33090
	movzbl	7(%rdi), %eax
	cmpl	$8, %r8d
	movb	%al, 7(%rcx)
	je	.L33090
	movzbl	8(%rdi), %eax
	cmpl	$9, %r8d
	movb	%al, 8(%rcx)
	je	.L33090
	movzbl	9(%rdi), %eax
	cmpl	$10, %r8d
	movb	%al, 9(%rcx)
	je	.L33090
	movzbl	10(%rdi), %eax
	cmpl	$11, %r8d
	movb	%al, 10(%rcx)
	je	.L33090
	movzbl	11(%rdi), %eax
	cmpl	$12, %r8d
	movb	%al, 11(%rcx)
	je	.L33090
	movzbl	12(%rdi), %eax
	cmpl	$13, %r8d
	movb	%al, 12(%rcx)
	je	.L33090
	movzbl	13(%rdi), %eax
	cmpl	$14, %r8d
	movb	%al, 13(%rcx)
	je	.L33090
	movzbl	14(%rdi), %eax
	movb	%al, 14(%rcx)
	jmp	.L33090
	.p2align 4,,10
	.p2align 3
.L33252:
	cmpq	$511, %r14
	ja	.L33261
	movq	%r14, %rcx
	movq	%r15, %rdi
	movq	%r10, %rax
	shrq	$3, %rcx
	rep stosq
	jmp	.L33045
	.p2align 4,,10
	.p2align 3
.L33078:
	movl	56(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L33079
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L33262
.L33080:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L33263
.L33081:
	movl	2224(%rbx), %edi
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L33108
	testb	$4, 46264(%rbx,%rcx)
	je	.L33108
	movq	%r13, %rdi
	xorq	26808(%rax), %rdi
	movq	%rdi, 40(%rsp)
	jmp	.L33077
	.p2align 4,,10
	.p2align 3
.L33060:
	subl	$1, %eax
	leaq	1(%r8,%rax), %rdx
	.p2align 4,,10
	.p2align 3
.L33067:
	addq	$1, %r8
	movzbl	-1(%r8), %eax
	addq	$1, %rcx
	cmpq	%rdx, %r8
	movb	%al, -1(%rcx)
	jne	.L33067
	jmp	.L33090
.L33253:
	movq	144(%rbx), %rsi
	movq	136(%rbx), %rax
	movq	168(%rbx), %rdi
	movzbl	808(%rbx), %edx
	subq	%rsi, %rax
	addq	%rdi, %rax
	testb	$1, %dl
	jne	.L33072
	movzbl	130(%rbx), %edx
	negl	%edx
	movslq	%edx, %rdx
.L33073:
	addq	%rdx, %rax
	andq	%rcx, %rax
	cmpq	$0, 160(%rbx)
	movq	%rax, 112(%rbx)
	je	.L33074
	movq	%rax, %rdx
	andq	$-4095, %rdx
	cmpq	%rdx, %rdi
	jne	.L33075
	andl	$4095, %eax
	orq	%rsi, %rax
	movq	%rax, 136(%rbx)
.L33074:
	leaq	1232(%rbx), %rdi
	movl	$-1, %esi
	call	longjmp
.L33261:
	movl	48(%rsp), %esi
	movq	%r14, %rdx
	movq	%r10, 72(%rsp)
	movl	%r8d, 64(%rsp)
	movl	%r11d, 60(%rsp)
	call	memset
	movl	60(%rsp), %r11d
	movl	64(%rsp), %r8d
	movq	72(%rsp), %r10
	jmp	.L33047
.L33248:
	cmpq	%rdx, %rbp
	jbe	.L33246
.L33022:
	movl	56(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L33032
	leal	1(%rax), %edx
	movl	%r13d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L33264
.L33033:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L33265
.L33034:
	movl	2224(%rbx), %esi
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L33035
	testb	$4, 46264(%rbx,%rcx)
	je	.L33035
	movq	%r13, %rsi
	xorq	26808(%rax), %rsi
	movq	%rsi, 40(%rsp)
.L33031:
	movl	52(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L33036
	leal	1(%rax), %edx
	movl	%ebp, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L33266
.L33037:
	testb	%r8b, %r8b
	jne	.L33267
.L33038:
	movl	2224(%rbx), %esi
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L33036
	testb	$2, 46264(%rbx,%rcx)
	je	.L33036
	movq	%rbp, %r15
	xorq	26808(%rax), %r15
	cmpl	%r12d, %r11d
	movl	$1, %eax
	jl	.L33039
	jmp	.L33268
.L33247:
	xorl	%esi, %esi
	testl	%r9d, %r9d
	je	.L33020
	movl	584(%rbx,%rcx,4), %esi
.L33020:
	movl	56(%rsp), %ecx
	xorl	%edx, %edx
	testl	%ecx, %ecx
	je	.L33021
	movslq	56(%rsp), %rdx
	movl	584(%rbx,%rdx,4), %edx
.L33021:
	cmpl	%edx, %esi
	jne	.L33022
	jmp	.L33019
.L33249:
	testl	%r12d, %r12d
	jne	.L33022
	movzbl	97(%rbx), %r8d
	.p2align 4,,3
	jmp	.L33031
.L33027:
	movl	%ebp, 192(%rax)
	movq	8(%rsp), %rax
	movl	%r13d, 192(%rax)
	jmp	.L33028
.L33258:
	subl	%edx, %esi
	jmp	.L33052
.L33262:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rdx)
	jne	.L33080
.L33079:
	movzbl	97(%rbx), %r8d
.L33082:
	movl	56(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r13, %rdi
	movq	%r10, 64(%rsp)
	movl	%r11d, 60(%rsp)
	call	z900_logical_to_main_l
	movq	64(%rsp), %r10
	movq	%rax, 40(%rsp)
	movl	60(%rsp), %r11d
	jmp	.L33077
.L33263:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L33081
.L33108:
	movzbl	%sil, %r8d
	jmp	.L33082
.L33072:
	andl	$2, %edx
	cmpb	$1, %dl
	sbbq	%rdx, %rdx
	andl	$2, %edx
	subq	$6, %rdx
	jmp	.L33073
.L33075:
	movq	$0, 160(%rbx)
	jmp	.L33074
.L33264:
	movzbl	1976(%rbx,%rdx), %edx
	testb	%dl, 44216(%rbx,%rcx)
	jne	.L33033
.L33032:
	movzbl	97(%rbx), %r8d
.L33035:
	movl	56(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r13, %rdi
	movl	%r11d, 60(%rsp)
	movl	%r10d, 48(%rsp)
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	%rax, 40(%rsp)
	movl	60(%rsp), %r11d
	movl	48(%rsp), %r10d
	jmp	.L33031
.L33266:
	movzbl	1976(%rbx,%rdx), %edx
	testb	%dl, 44216(%rbx,%rcx)
	jne	.L33037
.L33036:
	movl	52(%rsp), %esi
	movl	%r11d, %r9d
	movl	$2, %ecx
	andl	$16777215, %r9d
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movl	%r10d, 60(%rsp)
	movl	%r11d, 48(%rsp)
	call	z900_logical_to_main_l
	movl	60(%rsp), %r10d
	movq	%rax, %r15
	movl	48(%rsp), %r11d
	jmp	.L33030
.L33265:
	cmpb	43192(%rbx,%rcx), %r8b
	je	.L33034
	jmp	.L33035
.L33267:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L33038
	.p2align 4,,3
	jmp	.L33036
.L33251:
	subl	%eax, %edx
	movl	%r14d, %r11d
	subl	%edx, %r11d
	movslq	%edx, %r14
	movl	%r11d, %r8d
	andl	$16777215, %r8d
	jmp	.L33044
.L33254:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L33086
.L33085:
	movzbl	97(%rbx), %r8d
.L33088:
	movl	52(%rsp), %esi
	movslq	%r11d, %r9
	movl	$2, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movq	%r10, 64(%rsp)
	movl	%r11d, 60(%rsp)
	call	z900_logical_to_main_l
	movq	64(%rsp), %r10
	movq	%rax, %r15
	movl	60(%rsp), %r11d
	jmp	.L33084
.L33255:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L33087
.L33111:
	movzbl	%sil, %r8d
	jmp	.L33088
.L33257:
	subl	%edx, %eax
	jmp	.L33051
	.cfi_endproc
.LFE3122:
	.size	z900_move_long, .-z900_move_long
	.p2align 4,,15
	.globl	z900_move_long_extended
	.type	z900_move_long_extended, @function
z900_move_long_extended:
.LFB3123:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	movl	(%rdi), %edx
	bswap	%edx
	movl	%edx, %esi
	movl	%edx, %ecx
	shrl	$16, %esi
	shrl	$20, %ecx
	movl	%edx, %r9d
	movl	%esi, %edi
	movl	%ecx, %eax
	andl	$4095, %r9d
	andl	$15, %edi
	andl	$15, %eax
	movq	%r9, 16(%rsp)
	movl	%edi, 8(%rsp)
	movl	%edx, %edi
	shrl	$12, %edi
	andl	$15, %edi
	je	.L33270
	movslq	%edi, %rdi
	movq	192(%rbx,%rdi,8), %rdi
	addq	%rdi, 16(%rsp)
	movq	120(%rbx), %rdi
	andq	%rdi, 16(%rsp)
.L33270:
	orl	%esi, %ecx
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	andl	$1, %ecx
	je	.L33271
	movl	$6, %esi
	movq	%rbx, %rdi
	movl	%eax, 24(%rsp)
	call	*2032(%rbx)
	movl	24(%rsp), %eax
.L33271:
	movslq	%eax, %rdx
	movq	120(%rbx), %r10
	leaq	(%rbx,%rdx,8), %rdi
	movslq	8(%rsp), %rdx
	movq	%rdi, 24(%rsp)
	movq	%r10, %r13
	andq	192(%rdi), %r13
	leaq	(%rbx,%rdx,8), %rdi
	andq	192(%rdi), %r10
	movq	%rdi, 32(%rsp)
	testb	$1, 103(%rbx)
	leal	1(%rax), %edx
	movslq	%edx, %rsi
	movq	%rsi, 40(%rsp)
	je	.L33272
	movl	8(%rsp), %ecx
	movq	192(%rbx,%rsi,8), %rbp
	leal	1(%rcx), %edx
	movslq	%edx, %rcx
	movq	192(%rbx,%rcx,8), %r15
	movq	%rcx, 48(%rsp)
.L33273:
	movq	%r13, %rcx
	movq	%r10, %rdx
	movl	$4096, %r12d
	andl	$4095, %ecx
	andl	$4095, %edx
	cmpq	%rdx, %rcx
	jbe	.L33274
	subq	%rcx, %r12
.L33275:
	cmpq	%rbp, %r15
	movl	$1, %r14d
	ja	.L33276
	sbbl	%r14d, %r14d
	andl	$2, %r14d
.L33276:
	testq	%rbp, %rbp
	je	.L33416
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L33279
	leal	1(%rdx), %ecx
	movl	%r13d, %esi
	shrl	$12, %esi
	movslq	%ecx, %rcx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rcx,8)
	jne	.L33417
.L33280:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L33418
.L33281:
	movl	2224(%rbx), %edi
	movq	%r13, %rcx
	andq	$-4194304, %rcx
	orq	%rdi, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L33279
	testb	$2, 46264(%rbx,%rsi)
	je	.L33279
	movq	%r13, %rax
	xorq	26808(%rdx), %rax
	movq	%rax, 56(%rsp)
.L33282:
	cmpq	%rbp, %r12
	movq	%rbp, %r11
	cmovbe	%r12, %r11
	cmpq	%r15, %r12
	cmova	%r15, %r12
	cmpq	%r11, %r12
	movq	%r12, 64(%rsp)
	cmova	%r11, %r12
	testq	%r12, %r12
	je	.L33283
	movl	8(%rsp), %eax
	addl	$5, %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L33284
	leal	1(%rax), %edx
	movl	%r10d, %ecx
	shrl	$12, %ecx
	movslq	%edx, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rax
	movq	2232(%rax), %rsi
	cmpq	%rsi, 320(%rbx,%rdx,8)
	jne	.L33419
.L33285:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L33420
.L33286:
	movl	2224(%rbx), %esi
	movq	%r10, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L33284
	testb	$4, 46264(%rbx,%rcx)
	je	.L33284
	movq	%r10, %rsi
	xorq	26808(%rax), %rsi
	movq	%rsi, %rax
.L33287:
	movq	56(%rsp), %rdx
	movl	%r12d, %ecx
	.p2align 4,,10
	.p2align 3
.L33288:
	testb	$7, %dl
	je	.L33421
	addq	$1, %rax
	movzbl	-1(%rax), %esi
	addq	$1, %rdx
	subl	$1, %ecx
	movb	%sil, -1(%rdx)
	jne	.L33288
.L33293:
	addq	%r12, 56(%rsp)
	addq	%r12, %r10
	subq	%r12, %r15
	subq	%r12, 64(%rsp)
	addq	%r12, %r13
	subq	%r12, %rbp
	subq	%r12, %r11
.L33283:
	testq	%r11, %r11
	jne	.L33422
.L33305:
	testb	$1, 103(%rbx)
	movq	24(%rsp), %rax
	jne	.L33423
	movl	%r13d, 192(%rax)
	movq	40(%rsp), %rax
	movl	%ebp, 192(%rbx,%rax,8)
	movq	32(%rsp), %rax
	movl	%r10d, 192(%rax)
	movq	48(%rsp), %rax
	movl	%r15d, 192(%rbx,%rax,8)
.L33312:
	testq	%rbp, %rbp
	movl	$3, %eax
	cmovne	%eax, %r14d
.L33416:
	movb	%r14b, 100(%rbx)
	addq	$88, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L33274:
	.cfi_restore_state
	subq	%rdx, %r12
	jmp	.L33275
	.p2align 4,,10
	.p2align 3
.L33272:
	movl	192(%rbx,%rsi,8), %ebp
	movl	8(%rsp), %esi
	leal	1(%rsi), %edx
	movslq	%edx, %rdi
	movq	%rdi, 48(%rsp)
	movl	192(%rbx,%rdi,8), %r15d
	jmp	.L33273
	.p2align 4,,10
	.p2align 3
.L33423:
	movq	%r13, 192(%rax)
	movq	40(%rsp), %rax
	movq	%rbp, 192(%rbx,%rax,8)
	movq	32(%rsp), %rax
	movq	%r10, 192(%rax)
	movq	48(%rsp), %rax
	movq	%r15, 192(%rbx,%rax,8)
	jmp	.L33312
	.p2align 4,,10
	.p2align 3
.L33422:
	cmpq	$0, 64(%rsp)
	jne	.L33305
	cmpq	$8, %r11
	movzbl	16(%rsp), %edx
	movq	56(%rsp), %rdi
	jae	.L33424
.L33306:
	movq	%r11, %rcx
	andl	$7, %ecx
	je	.L33308
	xorl	%eax, %eax
.L33309:
	movb	%dl, (%rdi,%rax)
	addq	$1, %rax
	cmpq	%rcx, %rax
	jb	.L33309
.L33308:
	movslq	%r11d, %rax
	addq	%rax, %r13
	subq	%rax, %rbp
	jmp	.L33305
	.p2align 4,,10
	.p2align 3
.L33421:
	movq	%rdx, %rsi
	subq	%rax, %rsi
	movl	%esi, %edi
	sarl	$31, %edi
	xorl	%edi, %esi
	subl	%edi, %esi
	cmpl	$7, %esi
	jle	.L33314
	cmpl	$7, %ecx
	jle	.L33314
	subl	$8, %ecx
	movl	%ecx, %r9d
	shrl	$3, %r9d
	movl	%r9d, %esi
	leaq	8(,%rsi,8), %r8
	xorl	%esi, %esi
	.p2align 4,,10
	.p2align 3
.L33315:
	movq	(%rax,%rsi), %rdi
	movq	%rdi, (%rdx,%rsi)
	addq	$8, %rsi
	cmpq	%r8, %rsi
	jne	.L33315
	negl	%r9d
	addq	%rsi, %rdx
	addq	%rsi, %rax
	leal	(%rcx,%r9,8), %ecx
.L33314:
	testl	%ecx, %ecx
	je	.L33293
	leaq	16(%rax), %rsi
	movl	%ecx, %r9d
	cmpq	%rsi, %rdx
	leaq	16(%rdx), %rsi
	setae	%dil
	cmpq	%rsi, %rax
	setae	%sil
	orb	%sil, %dil
	je	.L33296
	cmpl	$15, %ecx
	jbe	.L33296
	movl	%ecx, %esi
	shrl	$4, %esi
	movl	%esi, 8(%rsp)
	sall	$4, %esi
	testl	%esi, %esi
	je	.L33297
	xorl	%edi, %edi
	xorl	%r8d, %r8d
.L33302:
	movdqu	(%rax,%rdi), %xmm0
	addl	$1, %r8d
	movdqu	%xmm0, (%rdx,%rdi)
	addq	$16, %rdi
	cmpl	%r8d, 8(%rsp)
	ja	.L33302
	movl	%esi, %edi
	subl	%esi, %ecx
	addq	%rdi, %rdx
	addq	%rdi, %rax
	cmpl	%r9d, %esi
	je	.L33293
	.p2align 4,,10
	.p2align 3
.L33297:
	movzbl	(%rax), %esi
	cmpl	$1, %ecx
	movb	%sil, (%rdx)
	je	.L33293
	movzbl	1(%rax), %esi
	cmpl	$2, %ecx
	movb	%sil, 1(%rdx)
	je	.L33293
	movzbl	2(%rax), %esi
	cmpl	$3, %ecx
	movb	%sil, 2(%rdx)
	je	.L33293
	movzbl	3(%rax), %esi
	cmpl	$4, %ecx
	movb	%sil, 3(%rdx)
	je	.L33293
	movzbl	4(%rax), %esi
	cmpl	$5, %ecx
	movb	%sil, 4(%rdx)
	je	.L33293
	movzbl	5(%rax), %esi
	cmpl	$6, %ecx
	movb	%sil, 5(%rdx)
	je	.L33293
	movzbl	6(%rax), %esi
	cmpl	$7, %ecx
	movb	%sil, 6(%rdx)
	je	.L33293
	movzbl	7(%rax), %esi
	cmpl	$8, %ecx
	movb	%sil, 7(%rdx)
	je	.L33293
	movzbl	8(%rax), %esi
	cmpl	$9, %ecx
	movb	%sil, 8(%rdx)
	je	.L33293
	movzbl	9(%rax), %esi
	cmpl	$10, %ecx
	movb	%sil, 9(%rdx)
	je	.L33293
	movzbl	10(%rax), %esi
	cmpl	$11, %ecx
	movb	%sil, 10(%rdx)
	je	.L33293
	movzbl	11(%rax), %esi
	cmpl	$12, %ecx
	movb	%sil, 11(%rdx)
	je	.L33293
	movzbl	12(%rax), %esi
	cmpl	$13, %ecx
	movb	%sil, 12(%rdx)
	je	.L33293
	movzbl	13(%rax), %esi
	cmpl	$14, %ecx
	movb	%sil, 13(%rdx)
	je	.L33293
	movzbl	14(%rax), %eax
	movb	%al, 14(%rdx)
	jmp	.L33293
	.p2align 4,,10
	.p2align 3
.L33424:
	cmpq	$511, %r11
	ja	.L33425
	movabsq	$72340172838076673, %rcx
	movzbl	%dl, %eax
	imulq	%rcx, %rax
	movq	%r11, %rcx
	shrq	$3, %rcx
	rep stosq
	jmp	.L33306
	.p2align 4,,10
	.p2align 3
.L33296:
	subl	$1, %ecx
	leaq	1(%rax,%rcx), %rsi
	.p2align 4,,10
	.p2align 3
.L33304:
	addq	$1, %rax
	movzbl	-1(%rax), %ecx
	addq	$1, %rdx
	cmpq	%rsi, %rax
	movb	%cl, -1(%rdx)
	jne	.L33304
	jmp	.L33293
.L33425:
	movzbl	%dl, %esi
	movq	%r11, %rdx
	movq	%r10, 16(%rsp)
	movq	%r11, 8(%rsp)
	call	memset
	movq	8(%rsp), %r11
	movq	16(%rsp), %r10
	jmp	.L33308
.L33417:
	movzbl	1976(%rbx,%rcx), %ecx
	testb	%cl, 44216(%rbx,%rsi)
	jne	.L33280
.L33279:
	movzbl	97(%rbx), %r8d
	movq	%rbp, %r9
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	movq	%r13, %rdi
	movq	%r10, 64(%rsp)
	call	z900_logical_to_main_l
	movq	64(%rsp), %r10
	movq	%rax, 56(%rsp)
	jmp	.L33282
.L33419:
	movzbl	1976(%rbx,%rdx), %edx
	testb	%dl, 44216(%rbx,%rcx)
	jne	.L33285
.L33284:
	movl	8(%rsp), %esi
	movq	%r10, %rdi
	movl	$1, %r9d
	movzbl	97(%rbx), %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r11, 72(%rsp)
	movq	%r10, 8(%rsp)
	call	z900_logical_to_main_l
	movq	72(%rsp), %r11
	movq	8(%rsp), %r10
	jmp	.L33287
.L33418:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L33281
	jmp	.L33279
.L33420:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L33286
	.p2align 4,,4
	jmp	.L33284
	.cfi_endproc
.LFE3123:
	.size	z900_move_long_extended, .-z900_move_long_extended
	.p2align 4,,15
	.globl	z900_move_numerics
	.type	z900_move_numerics, @function
z900_move_numerics:
.LFB3124:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r14d
	movl	%eax, %esi
	shrl	$16, %r14d
	shrl	$28, %esi
	andl	$4095, %r14d
	testl	%esi, %esi
	movl	%esi, 8(%rsp)
	je	.L33427
	movslq	%esi, %rdx
	addq	192(%rbx,%rdx,8), %r14
	andq	120(%rbx), %r14
.L33427:
	movl	%eax, %r13d
	shrl	$12, %eax
	andl	$4095, %r13d
	andl	$15, %eax
	movl	%eax, 40(%rsp)
	je	.L33428
	cltq
	addq	192(%rbx,%rax,8), %r13
	andq	120(%rbx), %r13
.L33428:
	movl	8(%rsp), %eax
	movzbl	1(%rdi), %ebp
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L33429
	leal	1(%rax), %edx
	movl	%r14d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L33671
.L33430:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L33672
.L33431:
	movl	2224(%rbx), %edi
	movq	%r14, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L33546
	testb	$1, 46264(%rbx,%rsi)
	je	.L33546
	movq	35000(%rax), %r11
	movq	%r14, %r12
	movzbl	%cl, %r8d
	movq	%r11, 984(%rbx)
	xorq	26808(%rax), %r12
.L33433:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L33434
	leal	1(%rax), %edx
	movl	%r13d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L33673
.L33435:
	testb	%r8b, %r8b
	jne	.L33674
.L33436:
	movl	2224(%rbx), %edi
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L33434
	testb	$4, 46264(%rbx,%rsi)
	je	.L33434
	movq	%r13, %r15
	xorq	26808(%rax), %r15
.L33437:
	movl	$2047, %r10d
	movl	%r14d, %eax
	subl	%ebp, %r10d
	andl	$2047, %eax
	cmpl	%r10d, %eax
	jg	.L33438
	movl	%r13d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L33439
	leaq	16(%r15), %rdx
	leal	1(%rbp), %eax
	cmpq	%rdx, %r12
	leaq	16(%r12), %rdx
	setae	%cl
	cmpq	%rdx, %r15
	setae	%dl
	orb	%dl, %cl
	je	.L33440
	cmpl	$15, %eax
	jbe	.L33440
	movl	%eax, %esi
	movdqa	.LC8(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %esi
	movdqa	.LC9(%rip), %xmm2
	xorl	%edi, %edi
	movl	%esi, %ecx
	sall	$4, %ecx
.L33446:
	movdqu	(%r12,%rdx), %xmm0
	addl	$1, %edi
	movdqu	(%r15,%rdx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rdx)
	addq	$16, %rdx
	cmpl	%esi, %edi
	jb	.L33446
	movl	%ecx, %edx
	addq	%rdx, %r12
	addq	%rdx, %r15
	cmpl	%ecx, %eax
	je	.L33456
	.p2align 4,,10
	.p2align 3
.L33444:
	movzbl	(%r12), %eax
	addl	$1, %ecx
	addq	$1, %r12
	movzbl	(%r15), %edx
	addq	$1, %r15
	andl	$-16, %eax
	andl	$15, %edx
	orl	%edx, %eax
	movb	%al, -1(%r12)
	cmpl	%ecx, %ebp
	jge	.L33444
.L33456:
	orb	$6, (%r11)
.L33426:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L33440:
	.cfi_restore_state
	xorl	%eax, %eax
	.p2align 4,,10
	.p2align 3
.L33448:
	movzbl	(%r12,%rax), %edx
	movzbl	(%r15,%rax), %ecx
	andl	$-16, %edx
	andl	$15, %ecx
	orl	%ecx, %edx
	movb	%dl, (%r12,%rax)
	addq	$1, %rax
	cmpl	%eax, %ebp
	jge	.L33448
	jmp	.L33456
.L33673:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L33435
.L33434:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r13, %rdi
	movq	%r11, 32(%rsp)
	call	z900_logical_to_main_l
	movq	32(%rsp), %r11
	movq	%rax, %r15
	jmp	.L33437
.L33674:
	cmpb	%r8b, 43192(%rbx,%rsi)
	je	.L33436
	jmp	.L33434
.L33671:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L33430
.L33429:
	movzbl	97(%rbx), %r8d
.L33432:
	movl	8(%rsp), %esi
	leal	1(%rbp), %r9d
	movl	$1, %ecx
	andl	$511, %r9d
	movq	%rbx, %rdx
	movq	%r14, %rdi
	call	z900_logical_to_main_l
	movq	984(%rbx), %r11
	movq	%rax, %r12
	movzbl	97(%rbx), %r8d
	jmp	.L33433
.L33438:
	movl	$2048, 32(%rsp)
	subl	%eax, 32(%rsp)
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L33465
	leal	1(%rax), %esi
	movl	32(%rsp), %eax
	movq	120(%rbx), %rcx
	movslq	%esi, %rsi
	addl	%r14d, %eax
	andl	%ecx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L33675
.L33466:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L33676
.L33468:
	movl	32(%rsp), %esi
	leaq	(%rsi,%r14), %rdi
	movl	2224(%rbx), %esi
	andq	%rcx, %rdi
	movq	%rdi, %rcx
	andq	$-4194304, %rcx
	orq	%rsi, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L33467
	testb	$1, 46264(%rbx,%rax)
	je	.L33467
	movq	35000(%rdx), %rax
	movq	%rax, 984(%rbx)
	xorq	26808(%rdx), %rdi
	movq	%rax, 8(%rsp)
	movq	%rdi, %r14
.L33469:
	movl	%r13d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L33470
	movq	%r12, %rax
.L33472:
	movzbl	(%rax), %ecx
	addq	$1, %rax
	addq	$1, %r15
	movzbl	-1(%r15), %edx
	andl	$-16, %ecx
	andl	$15, %edx
	orl	%ecx, %edx
	movb	%dl, -1(%rax)
	movl	%eax, %edx
	subl	%r12d, %edx
	cmpl	%edx, 32(%rsp)
	jg	.L33472
	subl	32(%rsp), %ebp
	js	.L33479
	leaq	16(%r15), %rax
	leal	1(%rbp), %ecx
	cmpq	%rax, %r14
	leaq	16(%r14), %rax
	setae	%dl
	cmpq	%rax, %r15
	setae	%al
	orb	%al, %dl
	je	.L33474
	cmpl	$15, %ecx
	jbe	.L33474
	movl	%ecx, %edi
	movdqa	.LC8(%rip), %xmm3
	xorl	%eax, %eax
	shrl	$4, %edi
	movdqa	.LC9(%rip), %xmm2
	xorl	%esi, %esi
	movl	%edi, %edx
	sall	$4, %edx
.L33480:
	movdqu	(%r14,%rax), %xmm0
	addl	$1, %esi
	movdqu	(%r15,%rax), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r14,%rax)
	addq	$16, %rax
	cmpl	%esi, %edi
	ja	.L33480
	movl	%edx, %eax
	addq	%rax, %r14
	addq	%rax, %r15
	cmpl	%ecx, %edx
	je	.L33479
.L33478:
	movzbl	(%r14), %eax
	addl	$1, %edx
	addq	$1, %r14
	movzbl	(%r15), %ecx
	addq	$1, %r15
	andl	$-16, %eax
	andl	$15, %ecx
	orl	%ecx, %eax
	movb	%al, -1(%r14)
	cmpl	%ebp, %edx
	jle	.L33478
.L33479:
	orb	$6, (%r11)
	movq	8(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L33426
.L33439:
	movl	$2048, %r14d
	subl	%eax, %r14d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L33449
	movq	120(%rbx), %rdx
	leal	1(%rax), %esi
	leal	(%r14,%r13), %eax
	movslq	%esi, %rsi
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L33677
.L33450:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L33678
.L33452:
	movl	%r14d, %esi
	leaq	(%rsi,%r13), %rdi
	movl	2224(%rbx), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L33451
	testb	$4, 46264(%rbx,%rax)
	je	.L33451
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L33453:
	movq	%r12, %rdx
.L33455:
	movzbl	(%rdx), %esi
	addq	$1, %rdx
	addq	$1, %r15
	movzbl	-1(%r15), %ecx
	andl	$-16, %esi
	andl	$15, %ecx
	orl	%esi, %ecx
	movb	%cl, -1(%rdx)
	movl	%edx, %ecx
	subl	%r12d, %ecx
	cmpl	%ecx, %r14d
	jg	.L33455
	subl	%r14d, %ebp
	js	.L33456
	leaq	16(%rdx), %rcx
	leal	1(%rbp), %edi
	cmpq	%rcx, %rax
	leaq	16(%rax), %rcx
	setae	%sil
	cmpq	%rcx, %rdx
	setae	%cl
	orb	%cl, %sil
	je	.L33457
	cmpl	$15, %edi
	jbe	.L33457
	movl	%edi, %r9d
	movdqa	.LC8(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r9d
	movdqa	.LC9(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %esi
	sall	$4, %esi
.L33462:
	movdqu	(%rdx,%rcx), %xmm0
	addl	$1, %r8d
	movdqu	(%rax,%rcx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%rdx,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %r9d
	ja	.L33462
	movl	%esi, %ecx
	addq	%rcx, %rdx
	addq	%rcx, %rax
	cmpl	%edi, %esi
	je	.L33456
.L33461:
	movzbl	(%rdx), %ecx
	addl	$1, %esi
	addq	$1, %rdx
	movzbl	(%rax), %edi
	addq	$1, %rax
	andl	$-16, %ecx
	andl	$15, %edi
	orl	%edi, %ecx
	movb	%cl, -1(%rdx)
	cmpl	%esi, %ebp
	jge	.L33461
	jmp	.L33456
.L33470:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L33483
	movq	120(%rbx), %rdx
	leal	1(%rax), %esi
	leal	(%r10,%r13), %eax
	movslq	%esi, %rsi
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L33679
.L33484:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L33680
.L33486:
	movl	%r10d, %esi
	leaq	(%rsi,%r13), %rdi
	movl	2224(%rbx), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L33485
	testb	$4, 46264(%rbx,%rax)
	je	.L33485
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L33487:
	cmpl	%r10d, 32(%rsp)
	je	.L33681
	jge	.L33505
	movq	%r15, %rdx
.L33507:
	movzbl	(%rdx), %ecx
	addq	$1, %rdx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	andl	$15, %ecx
	andl	$-16, %esi
	orl	%esi, %ecx
	movb	%cl, -1(%r12)
	movl	%edx, %ecx
	subl	%r15d, %ecx
	cmpl	%ecx, 32(%rsp)
	jg	.L33507
	movl	%r10d, %ecx
	subl	32(%rsp), %ecx
	testl	%ecx, %ecx
	jle	.L33508
	leaq	16(%rdx), %rsi
	cmpq	%rsi, %r14
	leaq	16(%r14), %rsi
	setae	%dil
	cmpq	%rsi, %rdx
	setae	%sil
	orb	%sil, %dil
	je	.L33509
	cmpl	$15, %ecx
	jbe	.L33509
	movl	%ecx, %r9d
	movdqa	.LC8(%rip), %xmm3
	xorl	%esi, %esi
	shrl	$4, %r9d
	movdqa	.LC9(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %edi
	sall	$4, %edi
.L33514:
	movdqu	(%rdx,%rsi), %xmm0
	addl	$1, %r8d
	movdqu	(%r14,%rsi), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r14,%rsi)
	addq	$16, %rsi
	cmpl	%r9d, %r8d
	jb	.L33514
	movl	%edi, %esi
	leaq	(%r14,%rsi), %r8
	addq	%rsi, %rdx
	cmpl	%edi, %ecx
	je	.L33515
.L33513:
	movzbl	(%rdx), %esi
	addl	$1, %edi
	addq	$1, %r8
	movzbl	-1(%r8), %r9d
	addq	$1, %rdx
	andl	$15, %esi
	andl	$-16, %r9d
	orl	%r9d, %esi
	movb	%sil, -1(%r8)
	cmpl	%edi, %ecx
	jg	.L33513
.L33515:
	subl	$1, %ecx
	leaq	1(%r14,%rcx), %r14
.L33508:
	subl	%r10d, %ebp
	js	.L33479
	leaq	16(%r14), %rdx
	leal	1(%rbp), %esi
	cmpq	%rdx, %rax
	leaq	16(%rax), %rdx
	setae	%cl
	cmpq	%rdx, %r14
	setae	%dl
	orb	%dl, %cl
	je	.L33517
	cmpl	$15, %esi
	jbe	.L33517
	movl	%esi, %r8d
	movdqa	.LC8(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r8d
	movdqa	.LC9(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %ecx
	sall	$4, %ecx
.L33522:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %edi
	movdqu	(%r14,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r14,%rdx)
	addq	$16, %rdx
	cmpl	%r8d, %edi
	jb	.L33522
	movl	%ecx, %edx
	addq	%rdx, %r14
	addq	%rdx, %rax
	cmpl	%ecx, %esi
	je	.L33479
.L33521:
	movzbl	(%rax), %edx
	addl	$1, %ecx
	addq	$1, %r14
	movzbl	-1(%r14), %esi
	addq	$1, %rax
	andl	$15, %edx
	andl	$-16, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r14)
	cmpl	%ecx, %ebp
	jge	.L33521
	jmp	.L33479
.L33474:
	xorl	%eax, %eax
.L33482:
	movzbl	(%r14,%rax), %edx
	movzbl	(%r15,%rax), %ecx
	andl	$-16, %edx
	andl	$15, %ecx
	orl	%ecx, %edx
	movb	%dl, (%r14,%rax)
	addq	$1, %rax
	cmpl	%eax, %ebp
	jge	.L33482
	jmp	.L33479
.L33457:
	xorl	%ecx, %ecx
.L33464:
	movzbl	(%rdx,%rcx), %esi
	movzbl	(%rax,%rcx), %edi
	andl	$-16, %esi
	andl	$15, %edi
	orl	%edi, %esi
	movb	%sil, (%rdx,%rcx)
	addq	$1, %rcx
	cmpl	%ecx, %ebp
	jge	.L33464
	jmp	.L33456
.L33677:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L33450
	movzbl	97(%rbx), %r8d
	movl	%r14d, %eax
	leaq	(%rax,%r13), %rdi
	andq	%rdx, %rdi
.L33451:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r11, 8(%rsp)
	call	z900_logical_to_main_l
	movq	8(%rsp), %r11
	jmp	.L33453
.L33678:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L33452
	movl	%r14d, %eax
	leaq	(%rax,%r13), %rdi
	andq	%rdx, %rdi
	jmp	.L33451
.L33449:
	movl	%r14d, %eax
	movzbl	97(%rbx), %r8d
	leaq	(%rax,%r13), %rdi
	andq	120(%rbx), %rdi
	jmp	.L33451
.L33675:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L33466
	movl	32(%rsp), %eax
	movzbl	97(%rbx), %r8d
	leaq	(%rax,%r14), %rdi
	andq	%rcx, %rdi
.L33467:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 44(%rsp)
	movq	%r11, 24(%rsp)
	call	z900_logical_to_main_l
	movl	44(%rsp), %r10d
	movq	%rax, %r14
	movq	984(%rbx), %rax
	movq	24(%rsp), %r11
	movq	%rax, 8(%rsp)
	jmp	.L33469
.L33676:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L33468
	movl	32(%rsp), %eax
	leaq	(%rax,%r14), %rdi
	andq	%rcx, %rdi
	jmp	.L33467
.L33465:
	movl	32(%rsp), %eax
	movzbl	97(%rbx), %r8d
	leaq	(%rax,%r14), %rdi
	andq	120(%rbx), %rdi
	jmp	.L33467
.L33672:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L33431
.L33546:
	movzbl	%cl, %r8d
	jmp	.L33432
.L33505:
	movq	%r15, %rcx
.L33526:
	movzbl	(%rcx), %edx
	addq	$1, %rcx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	andl	$15, %edx
	andl	$-16, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r12)
	movl	%ecx, %edx
	subl	%r15d, %edx
	cmpl	%edx, %r10d
	jg	.L33526
	movl	32(%rsp), %edx
	subl	%r10d, %edx
	testl	%edx, %edx
	jle	.L33527
	leaq	16(%r12), %rcx
	cmpq	%rcx, %rax
	leaq	16(%rax), %rcx
	setae	%sil
	cmpq	%rcx, %r12
	setae	%cl
	orb	%cl, %sil
	je	.L33528
	cmpl	$15, %edx
	jbe	.L33528
	movl	%edx, %r8d
	movdqa	.LC8(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r8d
	movdqa	.LC9(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %esi
	sall	$4, %esi
.L33533:
	movdqu	(%rax,%rcx), %xmm0
	addl	$1, %edi
	movdqu	(%r12,%rcx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %edi
	jb	.L33533
	movl	%esi, %edi
	addq	%rdi, %r12
	addq	%rax, %rdi
	cmpl	%esi, %edx
	je	.L33534
.L33532:
	movzbl	(%rdi), %ecx
	addl	$1, %esi
	addq	$1, %r12
	movzbl	-1(%r12), %r8d
	addq	$1, %rdi
	andl	$15, %ecx
	andl	$-16, %r8d
	orl	%r8d, %ecx
	movb	%cl, -1(%r12)
	cmpl	%esi, %edx
	jg	.L33532
.L33534:
	subl	$1, %edx
	leaq	1(%rax,%rdx), %rax
.L33527:
	subl	32(%rsp), %ebp
	js	.L33479
	leaq	16(%rax), %rdx
	leal	1(%rbp), %esi
	cmpq	%rdx, %r14
	leaq	16(%r14), %rdx
	setae	%cl
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L33536
	cmpl	$15, %esi
	jbe	.L33536
	movl	%esi, %r8d
	movdqa	.LC8(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r8d
	movdqa	.LC9(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %ecx
	sall	$4, %ecx
.L33541:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %edi
	movdqu	(%r14,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r14,%rdx)
	addq	$16, %rdx
	cmpl	%r8d, %edi
	jb	.L33541
	movl	%ecx, %edx
	addq	%rdx, %r14
	addq	%rdx, %rax
	cmpl	%ecx, %esi
	je	.L33479
.L33540:
	movzbl	(%rax), %edx
	addl	$1, %ecx
	addq	$1, %r14
	movzbl	-1(%r14), %esi
	addq	$1, %rax
	andl	$15, %edx
	andl	$-16, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r14)
	cmpl	%ecx, %ebp
	jge	.L33540
	jmp	.L33479
.L33681:
	movl	32(%rsp), %edi
	leaq	16(%r15), %rcx
	movl	$1, %edx
	testl	%edi, %edi
	cmovg	%edi, %edx
	cmpq	%rcx, %r12
	setae	%sil
	leaq	16(%r12), %rcx
	cmpq	%rcx, %r15
	setae	%cl
	orb	%cl, %sil
	je	.L33489
	cmpl	$15, %edx
	jbe	.L33489
	movl	%edx, %r8d
	movdqa	.LC8(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r8d
	movdqa	.LC9(%rip), %xmm2
	xorl	%esi, %esi
	movl	%r8d, %edi
	sall	$4, %edi
.L33494:
	movdqu	(%r15,%rcx), %xmm0
	addl	$1, %esi
	movdqu	(%r12,%rcx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %esi
	jb	.L33494
	movl	%edi, %ecx
	addq	%rcx, %r12
	addq	%rcx, %r15
	cmpl	%edi, %edx
	movl	%edi, %ecx
	je	.L33495
.L33493:
	movzbl	(%r15), %edx
	addl	$1, %ecx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	addq	$1, %r15
	andl	$15, %edx
	andl	$-16, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r12)
	cmpl	%ecx, 32(%rsp)
	jg	.L33493
.L33495:
	subl	32(%rsp), %ebp
	js	.L33479
	leaq	16(%rax), %rdx
	leal	1(%rbp), %esi
	cmpq	%rdx, %r14
	leaq	16(%r14), %rdx
	setae	%cl
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L33497
	cmpl	$15, %esi
	jbe	.L33497
	movl	%esi, %r8d
	movdqa	.LC8(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r8d
	movdqa	.LC9(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %ecx
	sall	$4, %ecx
.L33502:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %edi
	movdqu	(%r14,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r14,%rdx)
	addq	$16, %rdx
	cmpl	%edi, %r8d
	ja	.L33502
	movl	%ecx, %edx
	addq	%rdx, %r14
	addq	%rdx, %rax
	cmpl	%esi, %ecx
	je	.L33479
.L33501:
	movzbl	(%r14), %edx
	addl	$1, %ecx
	addq	$1, %r14
	movzbl	(%rax), %esi
	addq	$1, %rax
	andl	$-16, %edx
	andl	$15, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r14)
	cmpl	%ebp, %ecx
	jle	.L33501
	jmp	.L33479
.L33679:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L33484
	movzbl	97(%rbx), %r8d
	movl	%r10d, %eax
	leaq	(%rax,%r13), %rdi
	andq	%rdx, %rdi
.L33485:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	z900_logical_to_main_l
	movl	24(%rsp), %r10d
	movq	16(%rsp), %r11
	jmp	.L33487
.L33680:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L33486
	movl	%r10d, %eax
	leaq	(%rax,%r13), %rdi
	andq	%rdx, %rdi
	jmp	.L33485
.L33509:
	xorl	%esi, %esi
.L33516:
	movzbl	(%rdx,%rsi), %edi
	movzbl	(%r14,%rsi), %r8d
	andl	$15, %edi
	andl	$-16, %r8d
	orl	%r8d, %edi
	movb	%dil, (%r14,%rsi)
	addq	$1, %rsi
	cmpl	%esi, %ecx
	jg	.L33516
	jmp	.L33515
.L33517:
	xorl	%edx, %edx
.L33524:
	movzbl	(%rax,%rdx), %ecx
	movzbl	(%r14,%rdx), %esi
	andl	$15, %ecx
	andl	$-16, %esi
	orl	%esi, %ecx
	movb	%cl, (%r14,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %ebp
	jge	.L33524
	jmp	.L33479
.L33489:
	xorl	%edx, %edx
.L33496:
	movzbl	(%r15,%rdx), %ecx
	movzbl	(%r12,%rdx), %esi
	andl	$15, %ecx
	andl	$-16, %esi
	orl	%esi, %ecx
	movb	%cl, (%r12,%rdx)
	addq	$1, %rdx
	cmpl	%edx, 32(%rsp)
	jg	.L33496
	jmp	.L33495
.L33483:
	movl	%r10d, %eax
	movzbl	97(%rbx), %r8d
	leaq	(%rax,%r13), %rdi
	andq	120(%rbx), %rdi
	jmp	.L33485
.L33528:
	xorl	%ecx, %ecx
.L33535:
	movzbl	(%rax,%rcx), %esi
	movzbl	(%r12,%rcx), %edi
	andl	$15, %esi
	andl	$-16, %edi
	orl	%edi, %esi
	movb	%sil, (%r12,%rcx)
	addq	$1, %rcx
	cmpl	%ecx, %edx
	jg	.L33535
	jmp	.L33534
.L33497:
	xorl	%edx, %edx
.L33504:
	movzbl	(%r14,%rdx), %ecx
	movzbl	(%rax,%rdx), %esi
	andl	$-16, %ecx
	andl	$15, %esi
	orl	%esi, %ecx
	movb	%cl, (%r14,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %ebp
	jge	.L33504
	jmp	.L33479
.L33536:
	xorl	%edx, %edx
.L33543:
	movzbl	(%rax,%rdx), %ecx
	movzbl	(%r14,%rdx), %esi
	andl	$15, %ecx
	andl	$-16, %esi
	orl	%esi, %ecx
	movb	%cl, (%r14,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %ebp
	jge	.L33543
	jmp	.L33479
	.cfi_endproc
.LFE3124:
	.size	z900_move_numerics, .-z900_move_numerics
	.p2align 4,,15
	.globl	z900_move_string
	.type	z900_move_string, @function
z900_move_string:
.LFB3125:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movzbl	3(%rdi), %r13d
	movb	$4, 130(%rsi)
	addq	$4, 136(%rsi)
	movzbl	%r13b, %eax
	andl	$15, %r13d
	movl	%eax, 8(%rsp)
	movzbl	%r13b, %eax
	sarl	$4, 8(%rsp)
	movl	%eax, 12(%rsp)
	testl	$-256, 192(%rsi)
	jne	.L33731
.L33683:
	movq	120(%rbx), %r12
	movzbl	%r13b, %r13d
	movl	$4096, %r15d
	movzbl	192(%rbx), %eax
	movq	%r12, %rbp
	movb	%al, 7(%rsp)
	movslq	8(%rsp), %rax
	leaq	(%rbx,%rax,8), %rax
	andq	192(%rax), %rbp
	movq	%rax, 16(%rsp)
	leaq	(%rbx,%r13,8), %rax
	andq	192(%rax), %r12
	movq	%rax, 24(%rsp)
	movq	%rbp, %rdx
	movq	%r12, %rax
	andl	$4095, %edx
	andl	$4095, %eax
	cmpq	%rax, %rdx
	jbe	.L33684
	subl	%edx, %r15d
.L33685:
	movl	12(%rsp), %eax
	xorl	%r14d, %r14d
	leal	5(%rax), %r11d
	movl	8(%rsp), %eax
	movslq	%r11d, %r11
	leal	5(%rax), %r10d
	movslq	%r10d, %r10
	.p2align 4,,10
	.p2align 3
.L33700:
	movl	1892(%rbx,%r11,4), %eax
	testl	%eax, %eax
	je	.L33686
	movl	%r12d, %esi
	addl	$1, %eax
	shrl	$12, %esi
	cltq
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movq	2232(%rdx), %rcx
	cmpq	%rcx, 320(%rbx,%rax,8)
	jne	.L33732
.L33687:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L33733
.L33688:
	movl	2224(%rbx), %edi
	movq	%r12, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L33705
	testb	$4, 46264(%rbx,%rsi)
	je	.L33705
	movq	%r12, %rax
	movzbl	%cl, %r8d
	xorq	26808(%rdx), %rax
.L33690:
	movzbl	(%rax), %r13d
	movl	1892(%rbx,%r10,4), %eax
	testl	%eax, %eax
	je	.L33691
	movl	%ebp, %esi
	addl	$1, %eax
	shrl	$12, %esi
	cltq
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L33734
.L33692:
	testb	%r8b, %r8b
	jne	.L33735
.L33693:
	movl	2224(%rbx), %edi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L33691
	testb	$2, 46264(%rbx,%rsi)
	je	.L33691
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
.L33694:
	cmpb	%r13b, 7(%rsp)
	movb	%r13b, (%rax)
	je	.L33736
	movq	120(%rbx), %rax
	addq	$1, %rbp
	addq	$1, %r12
	addl	$1, %r14d
	andq	%rax, %rbp
	andq	%rax, %r12
	cmpl	%r14d, %r15d
	jg	.L33700
	testb	$1, 103(%rbx)
	movq	16(%rsp), %rax
	jne	.L33737
	movl	%ebp, 192(%rax)
	movq	24(%rsp), %rax
	movl	%r12d, 192(%rax)
.L33702:
	movb	$3, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L33684:
	.cfi_restore_state
	subl	%eax, %r15d
	jmp	.L33685
	.p2align 4,,10
	.p2align 3
.L33737:
	movq	%rbp, 192(%rax)
	movq	24(%rsp), %rax
	movq	%r12, 192(%rax)
	jmp	.L33702
	.p2align 4,,10
	.p2align 3
.L33736:
	testb	$1, 103(%rbx)
	movq	16(%rsp), %rax
	je	.L33696
	movq	%rbp, 192(%rax)
.L33697:
	movb	$1, 100(%rbx)
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L33731:
	.cfi_restore_state
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
	jmp	.L33683
	.p2align 4,,10
	.p2align 3
.L33696:
	movl	%ebp, 192(%rax)
	jmp	.L33697
.L33734:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rax)
	jne	.L33692
.L33691:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movq	%r10, 40(%rsp)
	movq	%r11, 32(%rsp)
	call	z900_logical_to_main_l
	movq	40(%rsp), %r10
	movq	32(%rsp), %r11
	jmp	.L33694
.L33733:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L33688
.L33705:
	movzbl	%cl, %r8d
.L33689:
	movl	12(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r12, %rdi
	movq	%r10, 40(%rsp)
	movq	%r11, 32(%rsp)
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	40(%rsp), %r10
	movq	32(%rsp), %r11
	jmp	.L33690
.L33732:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rax)
	jne	.L33687
.L33686:
	movzbl	97(%rbx), %r8d
	jmp	.L33689
.L33735:
	cmpb	43192(%rbx,%rsi), %r8b
	je	.L33693
	jmp	.L33691
	.cfi_endproc
.LFE3125:
	.size	z900_move_string, .-z900_move_string
	.p2align 4,,15
	.globl	z900_move_with_offset
	.type	z900_move_with_offset, @function
z900_move_with_offset:
.LFB3126:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r12d
	movl	%eax, %esi
	shrl	$16, %r12d
	shrl	$28, %esi
	andl	$4095, %r12d
	testl	%esi, %esi
	movl	%esi, 28(%rsp)
	je	.L33739
	movslq	%esi, %rdx
	addq	192(%rbx,%rdx,8), %r12
	andq	120(%rbx), %r12
.L33739:
	movl	%eax, %r15d
	shrl	$12, %eax
	andl	$4095, %r15d
	andl	$15, %eax
	movl	%eax, 40(%rsp)
	je	.L33740
	cltq
	addq	192(%rbx,%rax,8), %r15
	andq	120(%rbx), %r15
.L33740:
	movzbl	1(%rdi), %r14d
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	movl	%r14d, %ebp
	shrb	$4, %r14b
	movzbl	%r14b, %eax
	movzbl	%r14b, %r14d
	andl	$15, %ebp
	addq	%r12, %r14
	movl	%eax, 32(%rsp)
	movzbl	%bpl, %r10d
	movq	%r14, %rax
	xorq	%r12, %rax
	testq	$-4096, %rax
	movl	28(%rsp), %eax
	leal	5(%rax), %r13d
	jne	.L33741
	movzbl	97(%rbx), %edx
	movslq	%r13d, %r13
	movzbl	%dl, %r8d
.L33742:
	movzbl	%bpl, %r12d
	addq	%r15, %r12
	movq	%r12, %rax
	xorq	%r15, %rax
	testq	$-4096, %rax
	movl	40(%rsp), %eax
	jne	.L33752
	addl	$5, %eax
	cltq
	movq	%rax, 16(%rsp)
	movl	1892(%rbx,%rax,4), %eax
.L33753:
	movq	120(%rbx), %rbp
	movq	%r12, %rdi
	andq	%rbp, %rdi
	testl	%eax, %eax
	leaq	-1(%rdi), %rsi
	movq	%rsi, 8(%rsp)
	je	.L33763
	addl	$1, %eax
	cltq
	movq	320(%rbx,%rax,8), %r11
.L33790:
	movl	%edi, %ecx
	shrl	$12, %ecx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	cmpq	%r11, 2232(%rdx)
	jne	.L33899
.L33764:
	testb	%r8b, %r8b
	jne	.L33900
.L33765:
	movl	2224(%rbx), %esi
	movq	%rdi, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L33763
	testb	$4, 46264(%rbx,%rcx)
	je	.L33763
	movq	%rdi, %rax
	xorq	26808(%rdx), %rax
.L33766:
	andq	%r14, %rbp
	movzbl	(%rax), %r12d
	leaq	(%rbx,%r13,4), %r15
	movl	1892(%r15), %r9d
	testl	%r9d, %r9d
	je	.L33767
	movl	%ebp, %eax
	addl	$1, %r9d
	shrl	$12, %eax
	movslq	%r9d, %r9
	andl	$1023, %eax
	movq	320(%rbx,%r9,8), %rsi
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, %rsi
	jne	.L33901
.L33768:
	testb	%r8b, %r8b
	jne	.L33902
.L33769:
	movl	2224(%rbx), %r11d
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%r11, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L33767
	testb	$4, 46264(%rbx,%rax)
	je	.L33767
	leaq	-1(%rbp), %r13
	movq	%rbp, %rdx
	movl	%r12d, %r14d
	xorq	26808(%rcx), %rdx
	sall	$4, %r14d
	movzbl	(%rdx), %edx
	andl	$15, %edx
	orl	%edx, %r14d
.L33770:
	cmpq	%rsi, %rdi
	jne	.L33903
.L33772:
	testb	%r8b, %r8b
	jne	.L33904
.L33774:
	movl	2224(%rbx), %esi
	leaq	(%rbx,%rax,8), %rcx
	movq	%rbp, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L33773
	testb	$2, 46264(%rbx,%rax)
	je	.L33773
	movq	%rbp, %rax
	xorq	26808(%rcx), %rax
.L33775:
	movb	%r14b, (%rax)
	movl	32(%rsp), %eax
	testl	%eax, %eax
	je	.L33738
	movl	%eax, %r11d
	xorl	%ebp, %ebp
	subl	$1, %r11d
	addq	$1, %r11
	jmp	.L33789
	.p2align 4,,10
	.p2align 3
.L33907:
	movzbl	97(%rbx), %r8d
	xorl	%eax, %eax
	xorl	%r12d, %r12d
.L33778:
	orl	%eax, %r14d
	movl	1892(%r15), %eax
	andq	%r13, %rdi
	leaq	-1(%rdi), %r13
	testl	%eax, %eax
	je	.L33784
	movl	%edi, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rsi
	cmpq	%rsi, 320(%rbx,%rax,8)
	jne	.L33905
.L33785:
	testb	%r8b, %r8b
	jne	.L33906
.L33786:
	movl	2224(%rbx), %esi
	movq	%rdi, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L33784
	testb	$2, 46264(%rbx,%rcx)
	je	.L33784
	movq	%rdi, %rax
	xorq	26808(%rdx), %rax
.L33787:
	addq	$1, %rbp
	movb	%r14b, (%rax)
	cmpq	%r11, %rbp
	je	.L33738
.L33789:
	movl	%r10d, %eax
	movl	%r12d, %r14d
	movq	120(%rbx), %rdi
	subl	%ebp, %eax
	shrb	$4, %r14b
	testl	%eax, %eax
	jle	.L33907
	movq	16(%rsp), %rdx
	movq	8(%rsp), %rax
	movl	1892(%rbx,%rdx,4), %edx
	andq	%rdi, %rax
	leaq	-1(%rax), %rsi
	movq	%rsi, 8(%rsp)
	testl	%edx, %edx
	je	.L33779
	leal	1(%rdx), %ecx
	movl	%eax, %esi
	shrl	$12, %esi
	movslq	%ecx, %rcx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdx
	movq	2232(%rdx), %r9
	cmpq	%r9, 320(%rbx,%rcx,8)
	jne	.L33908
.L33780:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L33909
.L33781:
	movl	2224(%rbx), %r9d
	movq	%rax, %rcx
	andq	$-4194304, %rcx
	orq	%r9, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L33782
	testb	$4, 46264(%rbx,%rsi)
	je	.L33782
	xorq	26808(%rdx), %rax
.L33783:
	movzbl	(%rax), %r12d
	movl	%r12d, %eax
	sall	$4, %eax
	jmp	.L33778
	.p2align 4,,10
	.p2align 3
.L33738:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L33741:
	.cfi_restore_state
	movslq	%r13d, %r13
	leaq	(%rbx,%r13,4), %r11
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L33743
	movl	%r12d, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L33910
.L33744:
	movzbl	97(%rbx), %esi
	testb	%sil, %sil
	jne	.L33911
.L33745:
	movl	2224(%rbx), %edi
	movq	%r12, %rax
	andq	$-4194304, %rax
	orq	%rdi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L33795
	testb	$1, 46264(%rbx,%rcx)
	je	.L33795
	movq	35000(%rdx), %rax
	movq	%rax, 984(%rbx)
.L33747:
	movl	$2047, %eax
	movl	%r12d, %edx
	subl	32(%rsp), %eax
	andl	$2047, %edx
	cmpl	%eax, %edx
	jg	.L33748
	movzbl	97(%rbx), %edx
	movzbl	%dl, %r8d
	jmp	.L33742
	.p2align 4,,10
	.p2align 3
.L33752:
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rbp
	movq	%rax, 16(%rsp)
	movl	1892(%rbp), %eax
	testl	%eax, %eax
	je	.L33754
	leal	1(%rax), %r8d
	movl	%r15d, %esi
	shrl	$12, %esi
	movslq	%r8d, %rcx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdi
	movq	2232(%rdi), %r11
	cmpq	%r11, 320(%rbx,%rcx,8)
	jne	.L33912
.L33755:
	testb	%dl, %dl
	jne	.L33913
.L33756:
	movl	2224(%rbx), %r9d
	movq	%r15, %rcx
	andq	$-4194304, %rcx
	orq	%r9, %rcx
	cmpq	10424(%rdi), %rcx
	jne	.L33754
	testb	$4, 46264(%rbx,%rsi)
	je	.L33754
	movl	%r15d, %esi
	movl	$2047, %ecx
	andl	$2047, %esi
	subl	%r10d, %ecx
	cmpl	%ecx, %esi
	jg	.L33791
.L33792:
	movzbl	%dl, %r8d
	jmp	.L33753
.L33905:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L33785
.L33784:
	movl	28(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 44(%rsp)
	movq	%r11, 32(%rsp)
	call	z900_logical_to_main_l
	movl	44(%rsp), %r10d
	movq	32(%rsp), %r11
	jmp	.L33787
.L33908:
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rcx)
	jne	.L33780
.L33779:
	movzbl	97(%rbx), %r8d
.L33782:
	movl	40(%rsp), %esi
	movq	%rax, %rdi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 44(%rsp)
	movq	%r11, 32(%rsp)
	call	z900_logical_to_main_l
	movq	120(%rbx), %rdi
	movzbl	97(%rbx), %r8d
	movl	44(%rsp), %r10d
	movq	32(%rsp), %r11
	jmp	.L33783
.L33906:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L33786
	jmp	.L33784
	.p2align 4,,10
	.p2align 3
.L33909:
	cmpb	43192(%rbx,%rsi), %r8b
	je	.L33781
	.p2align 4,,3
	jmp	.L33782
.L33899:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L33764
.L33763:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 44(%rsp)
	call	z900_logical_to_main_l
	movzbl	97(%rbx), %r8d
	movq	120(%rbx), %rbp
	movl	44(%rsp), %r10d
	jmp	.L33766
.L33771:
	movzbl	97(%rbx), %r8d
.L33773:
	movl	28(%rsp), %esi
	movl	$1, %r9d
	movl	$2, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movl	%r10d, 44(%rsp)
	call	z900_logical_to_main_l
	movl	44(%rsp), %r10d
	jmp	.L33775
.L33901:
	movzbl	44216(%rbx,%rax), %edx
	testb	%dl, 1976(%rbx,%r9)
	jne	.L33768
.L33767:
	movl	28(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%rbp, %rdi
	movl	%r10d, 44(%rsp)
	leaq	-1(%rbp), %r13
	movl	%r12d, %r14d
	sall	$4, %r14d
	call	z900_logical_to_main_l
	movl	1892(%r15), %r9d
	movzbl	(%rax), %eax
	movl	44(%rsp), %r10d
	andl	$15, %eax
	orl	%eax, %r14d
	testl	%r9d, %r9d
	je	.L33771
	movl	%ebp, %eax
	addl	$1, %r9d
	movzbl	97(%rbx), %r8d
	shrl	$12, %eax
	movslq	%r9d, %r9
	andl	$1023, %eax
	movq	320(%rbx,%r9,8), %rsi
	movq	2232(%rbx,%rax,8), %rdi
	jmp	.L33770
.L33900:
	cmpb	%r8b, 43192(%rbx,%rcx)
	je	.L33765
	jmp	.L33763
.L33904:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L33774
	.p2align 4,,3
	jmp	.L33773
.L33903:
	movzbl	44216(%rbx,%rax), %edx
	testb	%dl, 1976(%rbx,%r9)
	jne	.L33772
	jmp	.L33773
.L33902:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L33769
	.p2align 4,,3
	jmp	.L33767
.L33910:
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L33744
.L33743:
	movzbl	97(%rbx), %r8d
.L33746:
	movl	28(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movq	%r12, %rdi
	movl	%r10d, 16(%rsp)
	movq	%r11, 8(%rsp)
	call	z900_logical_to_main_l
	movl	16(%rsp), %r10d
	movq	8(%rsp), %r11
	jmp	.L33747
.L33911:
	cmpb	43192(%rbx,%rcx), %sil
	je	.L33745
.L33795:
	movzbl	%sil, %r8d
	jmp	.L33746
.L33748:
	movl	1892(%r11), %eax
	testl	%eax, %eax
	je	.L33749
	movl	32(%rsp), %esi
	leal	1(%rax), %edi
	movq	120(%rbx), %rax
	leal	(%rsi,%r12), %edx
	andl	%eax, %edx
	shrl	$12, %edx
	movl	%edx, %ecx
	movslq	%edi, %rdx
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rsi
	movq	2232(%rsi), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L33914
.L33750:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L33915
.L33751:
	movl	2224(%rbx), %edi
	andq	$-4194304, %rax
	andq	%r14, %rax
	orq	%rdi, %rax
	cmpq	10424(%rsi), %rax
	jne	.L33749
	testb	$1, 46264(%rbx,%rcx)
	je	.L33749
	movq	35000(%rsi), %rax
	movzbl	%dl, %r8d
	movq	%rax, 984(%rbx)
	jmp	.L33742
.L33912:
	movzbl	44216(%rbx,%rsi), %r9d
	testb	%r9b, 1976(%rbx,%rcx)
	jne	.L33755
.L33754:
	movl	40(%rsp), %esi
	movzbl	%dl, %r8d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	$1, %r9d
	movq	%r15, %rdi
	movl	%r10d, 8(%rsp)
	call	z900_logical_to_main_l
	movl	8(%rsp), %r10d
	movl	%r15d, %ecx
	movl	$2047, %edx
	andl	$2047, %ecx
	movl	1892(%rbp), %eax
	subl	%r10d, %edx
	cmpl	%edx, %ecx
	jg	.L33758
	movzbl	97(%rbx), %edx
	jmp	.L33792
.L33913:
	cmpb	%dl, 43192(%rbx,%rsi)
	je	.L33756
	jmp	.L33754
.L33758:
	testl	%eax, %eax
	.p2align 4,,2
	je	.L33759
	leal	1(%rax), %r8d
.L33791:
	movq	120(%rbx), %rcx
	leal	(%r10,%r15), %esi
	movslq	%r8d, %rax
	movq	320(%rbx,%rax,8), %r11
	andl	%ecx, %esi
	shrl	$12, %esi
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rdi
	cmpq	2232(%rdi), %r11
	jne	.L33916
.L33760:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L33917
.L33761:
	movl	2224(%rbx), %r9d
	movq	%rcx, %rdx
	andq	$-4194304, %rdx
	andq	%r12, %rdx
	orq	%r9, %rdx
	cmpq	10424(%rdi), %rdx
	jne	.L33759
	testb	$4, 46264(%rbx,%rsi)
	je	.L33759
	movq	%r12, %rdi
	movq	%rcx, %rbp
	andq	%rcx, %rdi
	leaq	-1(%rdi), %rsi
	movq	%rsi, 8(%rsp)
	jmp	.L33790
.L33916:
	movzbl	1976(%rbx,%rax), %edx
	testb	%dl, 44216(%rbx,%rsi)
	jne	.L33760
.L33759:
	movl	40(%rsp), %esi
	movq	%rbx, %r8
	movl	%r10d, %edx
	movl	$4, %ecx
	movq	%r15, %rdi
	movl	%r10d, 8(%rsp)
	call	z900_validate_operand.part.9
	movl	1892(%rbp), %eax
	movzbl	97(%rbx), %r8d
	movl	8(%rsp), %r10d
	jmp	.L33753
.L33917:
	cmpb	43192(%rbx,%rsi), %r8b
	je	.L33761
	jmp	.L33759
.L33915:
	cmpb	43192(%rbx,%rcx), %dl
	je	.L33751
.L33749:
	movl	32(%rsp), %edx
	movq	%rbx, %r8
	movl	$1, %ecx
	movl	28(%rsp), %esi
	movq	%r12, %rdi
	movl	%r10d, 8(%rsp)
	call	z900_validate_operand.part.9
	movzbl	97(%rbx), %edx
	movl	8(%rsp), %r10d
	movzbl	%dl, %r8d
	jmp	.L33742
.L33914:
	movzbl	44216(%rbx,%rcx), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L33750
	jmp	.L33749
	.cfi_endproc
.LFE3126:
	.size	z900_move_with_offset, .-z900_move_with_offset
	.p2align 4,,15
	.globl	z900_move_zones
	.type	z900_move_zones, @function
z900_move_zones:
.LFB3127:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	movq	%rsi, %rbx
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	movl	2(%rdi), %eax
	bswap	%eax
	movl	%eax, %r14d
	movl	%eax, %esi
	shrl	$16, %r14d
	shrl	$28, %esi
	andl	$4095, %r14d
	testl	%esi, %esi
	movl	%esi, 8(%rsp)
	je	.L33919
	movslq	%esi, %rdx
	addq	192(%rbx,%rdx,8), %r14
	andq	120(%rbx), %r14
.L33919:
	movl	%eax, %r13d
	shrl	$12, %eax
	andl	$4095, %r13d
	andl	$15, %eax
	movl	%eax, 40(%rsp)
	je	.L33920
	cltq
	addq	192(%rbx,%rax,8), %r13
	andq	120(%rbx), %r13
.L33920:
	movl	8(%rsp), %eax
	movzbl	1(%rdi), %ebp
	movb	$6, 130(%rbx)
	addq	$6, 136(%rbx)
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 24(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L33921
	leal	1(%rax), %edx
	movl	%r14d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L34163
.L33922:
	movzbl	97(%rbx), %ecx
	testb	%cl, %cl
	jne	.L34164
.L33923:
	movl	2224(%rbx), %edi
	movq	%r14, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L34038
	testb	$1, 46264(%rbx,%rsi)
	je	.L34038
	movq	35000(%rax), %r11
	movq	%r14, %r12
	movzbl	%cl, %r8d
	movq	%r11, 984(%rbx)
	xorq	26808(%rax), %r12
.L33925:
	movl	40(%rsp), %eax
	addl	$5, %eax
	cltq
	leaq	(%rbx,%rax,4), %rax
	movq	%rax, 16(%rsp)
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L33926
	leal	1(%rax), %edx
	movl	%r13d, %esi
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rax
	movq	2232(%rax), %rdi
	cmpq	%rdi, 320(%rbx,%rdx,8)
	jne	.L34165
.L33927:
	testb	%r8b, %r8b
	jne	.L34166
.L33928:
	movl	2224(%rbx), %edi
	movq	%r13, %rdx
	andq	$-4194304, %rdx
	orq	%rdi, %rdx
	cmpq	10424(%rax), %rdx
	jne	.L33926
	testb	$4, 46264(%rbx,%rsi)
	je	.L33926
	movq	%r13, %r15
	xorq	26808(%rax), %r15
.L33929:
	movl	$2047, %r10d
	movl	%r14d, %eax
	subl	%ebp, %r10d
	andl	$2047, %eax
	cmpl	%r10d, %eax
	jg	.L33930
	movl	%r13d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L33931
	leaq	16(%r15), %rdx
	leal	1(%rbp), %eax
	cmpq	%rdx, %r12
	leaq	16(%r12), %rdx
	setae	%cl
	cmpq	%rdx, %r15
	setae	%dl
	orb	%dl, %cl
	je	.L33932
	cmpl	$15, %eax
	jbe	.L33932
	movl	%eax, %esi
	movdqa	.LC9(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %esi
	movdqa	.LC8(%rip), %xmm2
	xorl	%edi, %edi
	movl	%esi, %ecx
	sall	$4, %ecx
.L33938:
	movdqu	(%r12,%rdx), %xmm0
	addl	$1, %edi
	movdqu	(%r15,%rdx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rdx)
	addq	$16, %rdx
	cmpl	%esi, %edi
	jb	.L33938
	movl	%ecx, %edx
	addq	%rdx, %r12
	addq	%rdx, %r15
	cmpl	%ecx, %eax
	je	.L33948
	.p2align 4,,10
	.p2align 3
.L33936:
	movzbl	(%r12), %eax
	addl	$1, %ecx
	addq	$1, %r12
	movzbl	(%r15), %edx
	addq	$1, %r15
	andl	$15, %eax
	andl	$-16, %edx
	orl	%edx, %eax
	movb	%al, -1(%r12)
	cmpl	%ecx, %ebp
	jge	.L33936
.L33948:
	orb	$6, (%r11)
.L33918:
	addq	$56, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
	.p2align 4,,10
	.p2align 3
.L33932:
	.cfi_restore_state
	xorl	%eax, %eax
	.p2align 4,,10
	.p2align 3
.L33940:
	movzbl	(%r12,%rax), %edx
	movzbl	(%r15,%rax), %ecx
	andl	$15, %edx
	andl	$-16, %ecx
	orl	%ecx, %edx
	movb	%dl, (%r12,%rax)
	addq	$1, %rax
	cmpl	%eax, %ebp
	jge	.L33940
	jmp	.L33948
.L34165:
	movzbl	44216(%rbx,%rsi), %edi
	testb	%dil, 1976(%rbx,%rdx)
	jne	.L33927
.L33926:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r13, %rdi
	movq	%r11, 32(%rsp)
	call	z900_logical_to_main_l
	movq	32(%rsp), %r11
	movq	%rax, %r15
	jmp	.L33929
.L34166:
	cmpb	%r8b, 43192(%rbx,%rsi)
	je	.L33928
	jmp	.L33926
.L34163:
	movzbl	44216(%rbx,%rsi), %ecx
	testb	%cl, 1976(%rbx,%rdx)
	jne	.L33922
.L33921:
	movzbl	97(%rbx), %r8d
.L33924:
	movl	8(%rsp), %esi
	leal	1(%rbp), %r9d
	movl	$1, %ecx
	andl	$511, %r9d
	movq	%rbx, %rdx
	movq	%r14, %rdi
	call	z900_logical_to_main_l
	movq	984(%rbx), %r11
	movq	%rax, %r12
	movzbl	97(%rbx), %r8d
	jmp	.L33925
.L33930:
	movl	$2048, 32(%rsp)
	subl	%eax, 32(%rsp)
	movq	24(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L33957
	leal	1(%rax), %esi
	movl	32(%rsp), %eax
	movq	120(%rbx), %rcx
	movslq	%esi, %rsi
	addl	%r14d, %eax
	andl	%ecx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L34167
.L33958:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L34168
.L33960:
	movl	32(%rsp), %esi
	leaq	(%rsi,%r14), %rdi
	movl	2224(%rbx), %esi
	andq	%rcx, %rdi
	movq	%rdi, %rcx
	andq	$-4194304, %rcx
	orq	%rsi, %rcx
	cmpq	10424(%rdx), %rcx
	jne	.L33959
	testb	$1, 46264(%rbx,%rax)
	je	.L33959
	movq	35000(%rdx), %rax
	movq	%rax, 984(%rbx)
	xorq	26808(%rdx), %rdi
	movq	%rax, 8(%rsp)
	movq	%rdi, %r14
.L33961:
	movl	%r13d, %eax
	andl	$2047, %eax
	cmpl	%eax, %r10d
	jl	.L33962
	movq	%r12, %rax
.L33964:
	movzbl	(%rax), %ecx
	addq	$1, %rax
	addq	$1, %r15
	movzbl	-1(%r15), %edx
	andl	$15, %ecx
	andl	$-16, %edx
	orl	%ecx, %edx
	movb	%dl, -1(%rax)
	movl	%eax, %edx
	subl	%r12d, %edx
	cmpl	%edx, 32(%rsp)
	jg	.L33964
	subl	32(%rsp), %ebp
	js	.L33971
	leaq	16(%r15), %rax
	leal	1(%rbp), %ecx
	cmpq	%rax, %r14
	leaq	16(%r14), %rax
	setae	%dl
	cmpq	%rax, %r15
	setae	%al
	orb	%al, %dl
	je	.L33966
	cmpl	$15, %ecx
	jbe	.L33966
	movl	%ecx, %edi
	movdqa	.LC9(%rip), %xmm3
	xorl	%eax, %eax
	shrl	$4, %edi
	movdqa	.LC8(%rip), %xmm2
	xorl	%esi, %esi
	movl	%edi, %edx
	sall	$4, %edx
.L33972:
	movdqu	(%r14,%rax), %xmm0
	addl	$1, %esi
	movdqu	(%r15,%rax), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r14,%rax)
	addq	$16, %rax
	cmpl	%esi, %edi
	ja	.L33972
	movl	%edx, %eax
	addq	%rax, %r14
	addq	%rax, %r15
	cmpl	%ecx, %edx
	je	.L33971
.L33970:
	movzbl	(%r14), %eax
	addl	$1, %edx
	addq	$1, %r14
	movzbl	(%r15), %ecx
	addq	$1, %r15
	andl	$15, %eax
	andl	$-16, %ecx
	orl	%ecx, %eax
	movb	%al, -1(%r14)
	cmpl	%ebp, %edx
	jle	.L33970
.L33971:
	orb	$6, (%r11)
	movq	8(%rsp), %rax
	orb	$6, (%rax)
	jmp	.L33918
.L33931:
	movl	$2048, %r14d
	subl	%eax, %r14d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L33941
	movq	120(%rbx), %rdx
	leal	1(%rax), %esi
	leal	(%r14,%r13), %eax
	movslq	%esi, %rsi
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L34169
.L33942:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L34170
.L33944:
	movl	%r14d, %esi
	leaq	(%rsi,%r13), %rdi
	movl	2224(%rbx), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L33943
	testb	$4, 46264(%rbx,%rax)
	je	.L33943
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L33945:
	movq	%r12, %rdx
.L33947:
	movzbl	(%rdx), %esi
	addq	$1, %rdx
	addq	$1, %r15
	movzbl	-1(%r15), %ecx
	andl	$15, %esi
	andl	$-16, %ecx
	orl	%esi, %ecx
	movb	%cl, -1(%rdx)
	movl	%edx, %ecx
	subl	%r12d, %ecx
	cmpl	%ecx, %r14d
	jg	.L33947
	subl	%r14d, %ebp
	js	.L33948
	leaq	16(%rdx), %rcx
	leal	1(%rbp), %edi
	cmpq	%rcx, %rax
	leaq	16(%rax), %rcx
	setae	%sil
	cmpq	%rcx, %rdx
	setae	%cl
	orb	%cl, %sil
	je	.L33949
	cmpl	$15, %edi
	jbe	.L33949
	movl	%edi, %r9d
	movdqa	.LC9(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r9d
	movdqa	.LC8(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %esi
	sall	$4, %esi
.L33954:
	movdqu	(%rdx,%rcx), %xmm0
	addl	$1, %r8d
	movdqu	(%rax,%rcx), %xmm1
	pand	%xmm3, %xmm0
	pand	%xmm2, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%rdx,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %r9d
	ja	.L33954
	movl	%esi, %ecx
	addq	%rcx, %rdx
	addq	%rcx, %rax
	cmpl	%edi, %esi
	je	.L33948
.L33953:
	movzbl	(%rdx), %ecx
	addl	$1, %esi
	addq	$1, %rdx
	movzbl	(%rax), %edi
	addq	$1, %rax
	andl	$15, %ecx
	andl	$-16, %edi
	orl	%edi, %ecx
	movb	%cl, -1(%rdx)
	cmpl	%esi, %ebp
	jge	.L33953
	jmp	.L33948
.L33962:
	movl	$2048, %r10d
	subl	%eax, %r10d
	movq	16(%rsp), %rax
	movl	1892(%rax), %eax
	testl	%eax, %eax
	je	.L33975
	movq	120(%rbx), %rdx
	leal	1(%rax), %esi
	leal	(%r10,%r13), %eax
	movslq	%esi, %rsi
	andl	%edx, %eax
	shrl	$12, %eax
	andl	$1023, %eax
	leaq	(%rbx,%rax,8), %rcx
	movq	2232(%rcx), %rdi
	cmpq	%rdi, 320(%rbx,%rsi,8)
	jne	.L34171
.L33976:
	movzbl	97(%rbx), %r8d
	testb	%r8b, %r8b
	jne	.L34172
.L33978:
	movl	%r10d, %esi
	leaq	(%rsi,%r13), %rdi
	movl	2224(%rbx), %esi
	andq	%rdx, %rdi
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%rsi, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L33977
	testb	$4, 46264(%rbx,%rax)
	je	.L33977
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L33979:
	cmpl	%r10d, 32(%rsp)
	je	.L34173
	jge	.L33997
	movq	%r15, %rdx
.L33999:
	movzbl	(%rdx), %ecx
	addq	$1, %rdx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	andl	$-16, %ecx
	andl	$15, %esi
	orl	%esi, %ecx
	movb	%cl, -1(%r12)
	movl	%edx, %ecx
	subl	%r15d, %ecx
	cmpl	%ecx, 32(%rsp)
	jg	.L33999
	movl	%r10d, %ecx
	subl	32(%rsp), %ecx
	testl	%ecx, %ecx
	jle	.L34000
	leaq	16(%rdx), %rsi
	cmpq	%rsi, %r14
	leaq	16(%r14), %rsi
	setae	%dil
	cmpq	%rsi, %rdx
	setae	%sil
	orb	%sil, %dil
	je	.L34001
	cmpl	$15, %ecx
	jbe	.L34001
	movl	%ecx, %r9d
	movdqa	.LC9(%rip), %xmm3
	xorl	%esi, %esi
	shrl	$4, %r9d
	movdqa	.LC8(%rip), %xmm2
	xorl	%r8d, %r8d
	movl	%r9d, %edi
	sall	$4, %edi
.L34006:
	movdqu	(%rdx,%rsi), %xmm0
	addl	$1, %r8d
	movdqu	(%r14,%rsi), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r14,%rsi)
	addq	$16, %rsi
	cmpl	%r9d, %r8d
	jb	.L34006
	movl	%edi, %esi
	leaq	(%r14,%rsi), %r8
	addq	%rsi, %rdx
	cmpl	%edi, %ecx
	je	.L34007
.L34005:
	movzbl	(%rdx), %esi
	addl	$1, %edi
	addq	$1, %r8
	movzbl	-1(%r8), %r9d
	addq	$1, %rdx
	andl	$-16, %esi
	andl	$15, %r9d
	orl	%r9d, %esi
	movb	%sil, -1(%r8)
	cmpl	%edi, %ecx
	jg	.L34005
.L34007:
	subl	$1, %ecx
	leaq	1(%r14,%rcx), %r14
.L34000:
	subl	%r10d, %ebp
	js	.L33971
	leaq	16(%r14), %rdx
	leal	1(%rbp), %esi
	cmpq	%rdx, %rax
	leaq	16(%rax), %rdx
	setae	%cl
	cmpq	%rdx, %r14
	setae	%dl
	orb	%dl, %cl
	je	.L34009
	cmpl	$15, %esi
	jbe	.L34009
	movl	%esi, %r8d
	movdqa	.LC9(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r8d
	movdqa	.LC8(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %ecx
	sall	$4, %ecx
.L34014:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %edi
	movdqu	(%r14,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r14,%rdx)
	addq	$16, %rdx
	cmpl	%r8d, %edi
	jb	.L34014
	movl	%ecx, %edx
	addq	%rdx, %r14
	addq	%rdx, %rax
	cmpl	%ecx, %esi
	je	.L33971
.L34013:
	movzbl	(%rax), %edx
	addl	$1, %ecx
	addq	$1, %r14
	movzbl	-1(%r14), %esi
	addq	$1, %rax
	andl	$-16, %edx
	andl	$15, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r14)
	cmpl	%ecx, %ebp
	jge	.L34013
	jmp	.L33971
.L33966:
	xorl	%eax, %eax
.L33974:
	movzbl	(%r14,%rax), %edx
	movzbl	(%r15,%rax), %ecx
	andl	$15, %edx
	andl	$-16, %ecx
	orl	%ecx, %edx
	movb	%dl, (%r14,%rax)
	addq	$1, %rax
	cmpl	%eax, %ebp
	jge	.L33974
	jmp	.L33971
.L33949:
	xorl	%ecx, %ecx
.L33956:
	movzbl	(%rdx,%rcx), %esi
	movzbl	(%rax,%rcx), %edi
	andl	$15, %esi
	andl	$-16, %edi
	orl	%edi, %esi
	movb	%sil, (%rdx,%rcx)
	addq	$1, %rcx
	cmpl	%ecx, %ebp
	jge	.L33956
	jmp	.L33948
.L34169:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L33942
	movzbl	97(%rbx), %r8d
	movl	%r14d, %eax
	leaq	(%rax,%r13), %rdi
	andq	%rdx, %rdi
.L33943:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movq	%r11, 8(%rsp)
	call	z900_logical_to_main_l
	movq	8(%rsp), %r11
	jmp	.L33945
.L34170:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L33944
	movl	%r14d, %eax
	leaq	(%rax,%r13), %rdi
	andq	%rdx, %rdi
	jmp	.L33943
.L33941:
	movl	%r14d, %eax
	movzbl	97(%rbx), %r8d
	leaq	(%rax,%r13), %rdi
	andq	120(%rbx), %rdi
	jmp	.L33943
.L34167:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L33958
	movl	32(%rsp), %eax
	movzbl	97(%rbx), %r8d
	leaq	(%rax,%r14), %rdi
	andq	%rcx, %rdi
.L33959:
	movl	8(%rsp), %esi
	movl	$1, %r9d
	movl	$1, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 44(%rsp)
	movq	%r11, 24(%rsp)
	call	z900_logical_to_main_l
	movl	44(%rsp), %r10d
	movq	%rax, %r14
	movq	984(%rbx), %rax
	movq	24(%rsp), %r11
	movq	%rax, 8(%rsp)
	jmp	.L33961
.L34168:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L33960
	movl	32(%rsp), %eax
	leaq	(%rax,%r14), %rdi
	andq	%rcx, %rdi
	jmp	.L33959
.L33957:
	movl	32(%rsp), %eax
	movzbl	97(%rbx), %r8d
	leaq	(%rax,%r14), %rdi
	andq	120(%rbx), %rdi
	jmp	.L33959
.L34164:
	cmpb	43192(%rbx,%rsi), %cl
	je	.L33923
.L34038:
	movzbl	%cl, %r8d
	jmp	.L33924
.L33997:
	movq	%r15, %rcx
.L34018:
	movzbl	(%rcx), %edx
	addq	$1, %rcx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	andl	$-16, %edx
	andl	$15, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r12)
	movl	%ecx, %edx
	subl	%r15d, %edx
	cmpl	%edx, %r10d
	jg	.L34018
	movl	32(%rsp), %edx
	subl	%r10d, %edx
	testl	%edx, %edx
	jle	.L34019
	leaq	16(%r12), %rcx
	cmpq	%rcx, %rax
	leaq	16(%rax), %rcx
	setae	%sil
	cmpq	%rcx, %r12
	setae	%cl
	orb	%cl, %sil
	je	.L34020
	cmpl	$15, %edx
	jbe	.L34020
	movl	%edx, %r8d
	movdqa	.LC9(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r8d
	movdqa	.LC8(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %esi
	sall	$4, %esi
.L34025:
	movdqu	(%rax,%rcx), %xmm0
	addl	$1, %edi
	movdqu	(%r12,%rcx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %edi
	jb	.L34025
	movl	%esi, %edi
	addq	%rdi, %r12
	addq	%rax, %rdi
	cmpl	%esi, %edx
	je	.L34026
.L34024:
	movzbl	(%rdi), %ecx
	addl	$1, %esi
	addq	$1, %r12
	movzbl	-1(%r12), %r8d
	addq	$1, %rdi
	andl	$-16, %ecx
	andl	$15, %r8d
	orl	%r8d, %ecx
	movb	%cl, -1(%r12)
	cmpl	%esi, %edx
	jg	.L34024
.L34026:
	subl	$1, %edx
	leaq	1(%rax,%rdx), %rax
.L34019:
	subl	32(%rsp), %ebp
	js	.L33971
	leaq	16(%rax), %rdx
	leal	1(%rbp), %esi
	cmpq	%rdx, %r14
	leaq	16(%r14), %rdx
	setae	%cl
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L34028
	cmpl	$15, %esi
	jbe	.L34028
	movl	%esi, %r8d
	movdqa	.LC9(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r8d
	movdqa	.LC8(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %ecx
	sall	$4, %ecx
.L34033:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %edi
	movdqu	(%r14,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r14,%rdx)
	addq	$16, %rdx
	cmpl	%r8d, %edi
	jb	.L34033
	movl	%ecx, %edx
	addq	%rdx, %r14
	addq	%rdx, %rax
	cmpl	%ecx, %esi
	je	.L33971
.L34032:
	movzbl	(%rax), %edx
	addl	$1, %ecx
	addq	$1, %r14
	movzbl	-1(%r14), %esi
	addq	$1, %rax
	andl	$-16, %edx
	andl	$15, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r14)
	cmpl	%ecx, %ebp
	jge	.L34032
	jmp	.L33971
.L34173:
	movl	32(%rsp), %edi
	leaq	16(%r15), %rcx
	movl	$1, %edx
	testl	%edi, %edi
	cmovg	%edi, %edx
	cmpq	%rcx, %r12
	setae	%sil
	leaq	16(%r12), %rcx
	cmpq	%rcx, %r15
	setae	%cl
	orb	%cl, %sil
	je	.L33981
	cmpl	$15, %edx
	jbe	.L33981
	movl	%edx, %r8d
	movdqa	.LC9(%rip), %xmm3
	xorl	%ecx, %ecx
	shrl	$4, %r8d
	movdqa	.LC8(%rip), %xmm2
	xorl	%esi, %esi
	movl	%r8d, %edi
	sall	$4, %edi
.L33986:
	movdqu	(%r15,%rcx), %xmm0
	addl	$1, %esi
	movdqu	(%r12,%rcx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r12,%rcx)
	addq	$16, %rcx
	cmpl	%r8d, %esi
	jb	.L33986
	movl	%edi, %ecx
	addq	%rcx, %r12
	addq	%rcx, %r15
	cmpl	%edi, %edx
	movl	%edi, %ecx
	je	.L33987
.L33985:
	movzbl	(%r15), %edx
	addl	$1, %ecx
	addq	$1, %r12
	movzbl	-1(%r12), %esi
	addq	$1, %r15
	andl	$-16, %edx
	andl	$15, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r12)
	cmpl	%ecx, 32(%rsp)
	jg	.L33985
.L33987:
	subl	32(%rsp), %ebp
	js	.L33971
	leaq	16(%rax), %rdx
	leal	1(%rbp), %esi
	cmpq	%rdx, %r14
	leaq	16(%r14), %rdx
	setae	%cl
	cmpq	%rdx, %rax
	setae	%dl
	orb	%dl, %cl
	je	.L33989
	cmpl	$15, %esi
	jbe	.L33989
	movl	%esi, %r8d
	movdqa	.LC9(%rip), %xmm3
	xorl	%edx, %edx
	shrl	$4, %r8d
	movdqa	.LC8(%rip), %xmm2
	xorl	%edi, %edi
	movl	%r8d, %ecx
	sall	$4, %ecx
.L33994:
	movdqu	(%rax,%rdx), %xmm0
	addl	$1, %edi
	movdqu	(%r14,%rdx), %xmm1
	pand	%xmm2, %xmm0
	pand	%xmm3, %xmm1
	por	%xmm1, %xmm0
	movdqu	%xmm0, (%r14,%rdx)
	addq	$16, %rdx
	cmpl	%edi, %r8d
	ja	.L33994
	movl	%ecx, %edx
	addq	%rdx, %r14
	addq	%rdx, %rax
	cmpl	%esi, %ecx
	je	.L33971
.L33993:
	movzbl	(%r14), %edx
	addl	$1, %ecx
	addq	$1, %r14
	movzbl	(%rax), %esi
	addq	$1, %rax
	andl	$15, %edx
	andl	$-16, %esi
	orl	%esi, %edx
	movb	%dl, -1(%r14)
	cmpl	%ebp, %ecx
	jle	.L33993
	jmp	.L33971
.L34171:
	movzbl	44216(%rbx,%rax), %edi
	testb	%dil, 1976(%rbx,%rsi)
	jne	.L33976
	movzbl	97(%rbx), %r8d
	movl	%r10d, %eax
	leaq	(%rax,%r13), %rdi
	andq	%rdx, %rdi
.L33977:
	movl	40(%rsp), %esi
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r10d, 24(%rsp)
	movq	%r11, 16(%rsp)
	call	z900_logical_to_main_l
	movl	24(%rsp), %r10d
	movq	16(%rsp), %r11
	jmp	.L33979
.L34172:
	cmpb	43192(%rbx,%rax), %r8b
	je	.L33978
	movl	%r10d, %eax
	leaq	(%rax,%r13), %rdi
	andq	%rdx, %rdi
	jmp	.L33977
.L34001:
	xorl	%esi, %esi
.L34008:
	movzbl	(%rdx,%rsi), %edi
	movzbl	(%r14,%rsi), %r8d
	andl	$-16, %edi
	andl	$15, %r8d
	orl	%r8d, %edi
	movb	%dil, (%r14,%rsi)
	addq	$1, %rsi
	cmpl	%esi, %ecx
	jg	.L34008
	jmp	.L34007
.L34009:
	xorl	%edx, %edx
.L34016:
	movzbl	(%rax,%rdx), %ecx
	movzbl	(%r14,%rdx), %esi
	andl	$-16, %ecx
	andl	$15, %esi
	orl	%esi, %ecx
	movb	%cl, (%r14,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %ebp
	jge	.L34016
	jmp	.L33971
.L33981:
	xorl	%edx, %edx
.L33988:
	movzbl	(%r15,%rdx), %ecx
	movzbl	(%r12,%rdx), %esi
	andl	$-16, %ecx
	andl	$15, %esi
	orl	%esi, %ecx
	movb	%cl, (%r12,%rdx)
	addq	$1, %rdx
	cmpl	%edx, 32(%rsp)
	jg	.L33988
	jmp	.L33987
.L33975:
	movl	%r10d, %eax
	movzbl	97(%rbx), %r8d
	leaq	(%rax,%r13), %rdi
	andq	120(%rbx), %rdi
	jmp	.L33977
.L34020:
	xorl	%ecx, %ecx
.L34027:
	movzbl	(%rax,%rcx), %esi
	movzbl	(%r12,%rcx), %edi
	andl	$-16, %esi
	andl	$15, %edi
	orl	%edi, %esi
	movb	%sil, (%r12,%rcx)
	addq	$1, %rcx
	cmpl	%ecx, %edx
	jg	.L34027
	jmp	.L34026
.L33989:
	xorl	%edx, %edx
.L33996:
	movzbl	(%r14,%rdx), %ecx
	movzbl	(%rax,%rdx), %esi
	andl	$15, %ecx
	andl	$-16, %esi
	orl	%esi, %ecx
	movb	%cl, (%r14,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %ebp
	jge	.L33996
	jmp	.L33971
.L34028:
	xorl	%edx, %edx
.L34035:
	movzbl	(%rax,%rdx), %ecx
	movzbl	(%r14,%rdx), %esi
	andl	$-16, %ecx
	andl	$15, %esi
	orl	%esi, %ecx
	movb	%cl, (%r14,%rdx)
	addq	$1, %rdx
	cmpl	%edx, %ebp
	jge	.L34035
	jmp	.L33971
	.cfi_endproc
.LFE3127:
	.size	z900_move_zones, .-z900_move_zones
	.p2align 4,,15
	.globl	z900_multiply_register
	.type	z900_multiply_register, @function
z900_multiply_register:
.LFB3128:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	movq	%rsi, %rbx
	movzbl	1(%rdi), %eax
	movb	$2, 130(%rsi)
	addq	$2, 136(%rsi)
	movzbl	%al, %ebp
	movl	%eax, %r12d
	sarl	$4, %ebp
	andl	$15, %r12d
	testb	$1, %bpl
	je	.L34175
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L34175:
	leal	1(%rbp), %eax
	movslq	%r12d, %r12
	movslq	%ebp, %rbp
	cltq
	movslq	192(%rbx,%r12,8), %rcx
	leaq	(%rbx,%rax,8), %rdx
	movslq	192(%rdx), %rax
	imulq	%rcx, %rax
	movq	%rax, %rcx
	shrq	$32, %rcx
	movl	%ecx, 192(%rbx,%rbp,8)
	movl	%eax, 192(%rdx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE3128:
	.size	z900_multiply_register, .-z900_multiply_register
	.p2align 4,,15
	.globl	z900_multiply
	.type	z900_multiply, @function
z900_multiply:
.LFB3129:
	.cfi_startproc
	pushq	%r13
	.cfi_def_cfa_offset 16
	.cfi_offset 13, -16
	pushq	%r12
	.cfi_def_cfa_offset 24
	.cfi_offset 12, -24
	pushq	%rbp
	.cfi_def_cfa_offset 32
	.cfi_offset 6, -32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset 3, -40
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 48
	movl	(%rdi), %esi
	bswap	%esi
	movl	%esi, %eax
	movl	%esi, %edx
	shrl	$20, %eax
	shrl	$16, %edx
	movl	%esi, %ebp
	movl	%eax, %r12d
	andl	$4095, %ebp
	andl	$15, %r12d
	andl	$15, %edx
	jne	.L34216
.L34181:
	shrl	$12, %esi
	andl	$15, %esi
	movl	%esi, %r13d
	je	.L34182
	movslq	%esi, %rdx
	addq	192(%rbx,%rdx,8), %rbp
.L34182:
	andq	120(%rbx), %rbp
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %al
	je	.L34183
	movl	$6, %esi
	movq	%rbx, %rdi
	call	*2032(%rbx)
.L34183:
	testb	$3, %bpl
	jne	.L34217
.L34184:
	leal	5(%r13), %eax
	cltq
	movl	1892(%rbx,%rax,4), %eax
	testl	%eax, %eax
	je	.L34186
	movl	%ebp, %ecx
	addl	$1, %eax
	shrl	$12, %ecx
	cltq
	andl	$1023, %ecx
	leaq	(%rbx,%rcx,8), %rdx
	movq	2232(%rdx), %rdi
	cmpq	%rdi, 320(%rbx,%rax,8)
	jne	.L34218
.L34187:
	movzbl	97(%rbx), %eax
	testb	%al, %al
	jne	.L34219
.L34188:
	movl	2224(%rbx), %esi
	movq	%rbp, %rax
	andq	$-4194304, %rax
	orq	%rsi, %rax
	cmpq	10424(%rdx), %rax
	jne	.L34186
	testb	$4, 46264(%rbx,%rcx)
	je	.L34186
	movq	%rbp, %rax
	xorq	26808(%rdx), %rax
.L34189:
	movl	(%rax), %eax
	bswap	%eax
.L34190:
	leal	1(%r12), %edx
	cltq
	movslq	%r12d, %r12
	movslq	%edx, %rdx
	leaq	(%rbx,%rdx,8), %rcx
	movslq	192(%rcx), %rdx
	imulq	%rax, %rdx
	movq	%rdx, %rax
	shrq	$32, %rax
	movl	%eax, 192(%rbx,%r12,8)
	movl	%edx, 192(%rcx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%rbp
	.cfi_def_cfa_offset 24
	popq	%r12
	.cfi_def_cfa_offset 16
	popq	%r13
	.cfi_def_cfa_offset 8
	ret
.L34218:
	.cfi_restore_state
	movzbl	44216(%rbx,%rcx), %esi
	testb	%sil, 1976(%rbx,%rax)
	jne	.L34187
.L34186:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movq	%rbp, %rdi
	call	z900_logical_to_main_l
	jmp	.L34189
.L34217:
	movl	%ebp, %eax
	andl	$2047, %eax
	cmpl	$2044, %eax
	jbe	.L34184
	movq	%rbx, %rdx
	movl	%r13d, %esi
	movq	%rbp, %rdi
	call	z900_vfetch4_full
	jmp	.L34190
.L34216:
	movslq	%edx, %rdx
	addq	192(%rbx,%rdx,8), %rbp
	jmp	.L34181
.L34219:
	cmpb	43192(%rbx,%rcx), %al
	je	.L34188
	jmp	.L34186
	.cfi_endproc
.LFE3129:
	.size	z900_multiply, .-z900_multiply
	.p2align 4,,15
	.globl	z900_multiply_halfword
	.type	z900_multiply_halfword, @function
z900_multiply_halfword:
.LFB3130:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L34252
.L34221:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L34222
	movslq	%eax, %rdx
	addq	192(%rbx,%rdx,8), %rdi
.L34222:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$1, %dil
	jne	.L34253
.L34223:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L34225
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L34254
.L34226:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L34255
.L34227:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L34225
	testb	$4, 46264(%rbx,%rsi)
	je	.L34225
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L34228:
	movzwl	(%rax), %eax
#APP
# 477 "vstore.h" 1
	rorw $8, %ax
# 0 "" 2
#NO_APP
.L34229:
	movslq	%ebp, %rbp
	movswq	%ax, %rax
	leaq	(%rbx,%rbp,8), %rcx
	movslq	192(%rcx), %rdx
	imulq	%rax, %rdx
	movl	%edx, 192(%rcx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L34254:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L34226
.L34225:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L34228
.L34253:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2047, %edx
	jne	.L34223
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch2_full
	jmp	.L34229
.L34252:
	movslq	%edx, %rdx
	addq	192(%rsi,%rdx,8), %rdi
	jmp	.L34221
.L34255:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L34227
	jmp	.L34225
	.cfi_endproc
.LFE3130:
	.size	z900_multiply_halfword, .-z900_multiply_halfword
	.p2align 4,,15
	.globl	z900_multiply_halfword_immediate
	.type	z900_multiply_halfword_immediate, @function
z900_multiply_halfword_immediate:
.LFB3131:
	.cfi_startproc
	movl	(%rdi), %eax
	addq	$4, 136(%rsi)
	bswap	%eax
	movl	%eax, %edx
	cwtl
	shrl	$20, %edx
	andl	$15, %edx
	leaq	(%rsi,%rdx,8), %rdx
	imull	192(%rdx), %eax
	movl	%eax, 192(%rdx)
	ret
	.cfi_endproc
.LFE3131:
	.size	z900_multiply_halfword_immediate, .-z900_multiply_halfword_immediate
	.p2align 4,,15
	.globl	z900_multiply_single_register
	.type	z900_multiply_single_register, @function
z900_multiply_single_register:
.LFB3132:
	.cfi_startproc
	movzbl	3(%rdi), %ecx
	addq	$4, 136(%rsi)
	movq	%rcx, %rax
	andl	$15, %ecx
	shrq	%rax
	andl	$120, %eax
	leaq	(%rsi,%rax), %rdx
	movl	192(%rdx), %eax
	imull	192(%rsi,%rcx,8), %eax
	movl	%eax, 192(%rdx)
	ret
	.cfi_endproc
.LFE3132:
	.size	z900_multiply_single_register, .-z900_multiply_single_register
	.p2align 4,,15
	.globl	z900_multiply_single
	.type	z900_multiply_single, @function
z900_multiply_single:
.LFB3133:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	movq	%rsi, %rbx
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	movl	(%rdi), %eax
	bswap	%eax
	movl	%eax, %ebp
	movl	%eax, %edx
	shrl	$20, %ebp
	shrl	$16, %edx
	movl	%eax, %edi
	andl	$15, %ebp
	andl	$4095, %edi
	andl	$15, %edx
	jne	.L34290
.L34259:
	shrl	$12, %eax
	andl	$15, %eax
	je	.L34260
	movslq	%eax, %rdx
	addq	192(%rbx,%rdx,8), %rdi
.L34260:
	andq	120(%rbx), %rdi
	movb	$4, 130(%rbx)
	addq	$4, 136(%rbx)
	testb	$3, %dil
	jne	.L34291
.L34261:
	leal	5(%rax), %edx
	movslq	%edx, %rdx
	movl	1892(%rbx,%rdx,4), %edx
	testl	%edx, %edx
	je	.L34263
	movl	%edi, %esi
	addl	$1, %edx
	shrl	$12, %esi
	movslq	%edx, %rdx
	andl	$1023, %esi
	leaq	(%rbx,%rsi,8), %rcx
	movq	2232(%rcx), %r10
	cmpq	%r10, 320(%rbx,%rdx,8)
	jne	.L34292
.L34264:
	movzbl	97(%rbx), %edx
	testb	%dl, %dl
	jne	.L34293
.L34265:
	movl	2224(%rbx), %r8d
	movq	%rdi, %rdx
	andq	$-4194304, %rdx
	orq	%r8, %rdx
	cmpq	10424(%rcx), %rdx
	jne	.L34263
	testb	$4, 46264(%rbx,%rsi)
	je	.L34263
	movq	%rdi, %rax
	xorq	26808(%rcx), %rax
.L34266:
	movl	(%rax), %eax
	bswap	%eax
.L34267:
	movslq	%ebp, %rbp
	leaq	(%rbx,%rbp,8), %rdx
	imull	192(%rdx), %eax
	movl	%eax, 192(%rdx)
	addq	$8, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	ret
.L34292:
	.cfi_restore_state
	movzbl	44216(%rbx,%rsi), %r8d
	testb	%r8b, 1976(%rbx,%rdx)
	jne	.L34264
.L34263:
	movzbl	97(%rbx), %r8d
	movl	$1, %r9d
	movl	$4, %ecx
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_logical_to_main_l
	jmp	.L34266
.L34291:
	movl	%edi, %edx
	andl	$2047, %edx
	cmpl	$2044, %edx
	jbe	.L34261
	movq	%rbx, %rdx
	movl	%eax, %esi
	call	z900_vfetch4_full
	jmp	.L34267
.L34290:
	movslq	%edx, %rdx
	addq	192(%rsi,%rdx,8), %rdi
	jmp	.L34259
.L34293:
	cmpb	43192(%rbx,%rsi), %dl
	je	.L34265
	jmp	.L34263
	.cfi_endproc
.LFE3133:
	.size	z900_multiply_single, .-z900_multiply_single
	.section	.rodata
	.align 32
	.type	icmmask.62228, @object
	.size	icmmask.62228, 64
icmmask.62228:
	.long	-1
	.long	-256
	.long	-65281
	.long	-65536
	.long	-16711681
	.long	-16711936
	.long	-16776961
	.long	-16777216
	.long	16777215
	.long	16776960
	.long	16711935
	.long	16711680
	.long	65535
	.long	65280
	.long	255
	.long	0
	.align 32
	.type	icmlen.62227, @object
	.size	icmlen.62227, 64
icmlen.62227:
	.long	0
	.long	0
	.long	0
	.long	1
	.long	0
	.long	1
	.long	1
	.long	2
	.long	0
	.long	1
	.long	1
	.long	2
	.long	1
	.long	2
	.long	2
	.long	3
	.align 32
	.type	icmmask.62192, @object
	.size	icmmask.62192, 64
icmmask.62192:
	.long	-1
	.long	-256
	.long	-65281
	.long	-65536
	.long	-16711681
	.long	-16711936
	.long	-16776961
	.long	-16777216
	.long	16777215
	.long	16776960
	.long	16711935
	.long	16711680
	.long	65535
	.long	65280
	.long	255
	.long	0
	.align 32
	.type	icmlen.62191, @object
	.size	icmlen.62191, 64
icmlen.62191:
	.long	0
	.long	0
	.long	0
	.long	1
	.long	0
	.long	1
	.long	1
	.long	2
	.long	0
	.long	1
	.long	1
	.long	2
	.long	1
	.long	2
	.long	2
	.long	3
	.align 32
	.type	icmmask.48953, @object
	.size	icmmask.48953, 64
icmmask.48953:
	.long	-1
	.long	-256
	.long	-65281
	.long	-65536
	.long	-16711681
	.long	-16711936
	.long	-16776961
	.long	-16777216
	.long	16777215
	.long	16776960
	.long	16711935
	.long	16711680
	.long	65535
	.long	65280
	.long	255
	.long	0
	.align 32
	.type	icmlen.48952, @object
	.size	icmlen.48952, 64
icmlen.48952:
	.long	0
	.long	0
	.long	0
	.long	1
	.long	0
	.long	1
	.long	1
	.long	2
	.long	0
	.long	1
	.long	1
	.long	2
	.long	1
	.long	2
	.long	2
	.long	3
	.align 32
	.type	icmmask.48917, @object
	.size	icmmask.48917, 64
icmmask.48917:
	.long	-1
	.long	-256
	.long	-65281
	.long	-65536
	.long	-16711681
	.long	-16711936
	.long	-16776961
	.long	-16777216
	.long	16777215
	.long	16776960
	.long	16711935
	.long	16711680
	.long	65535
	.long	65280
	.long	255
	.long	0
	.align 32
	.type	icmlen.48916, @object
	.size	icmlen.48916, 64
icmlen.48916:
	.long	0
	.long	0
	.long	0
	.long	1
	.long	0
	.long	1
	.long	1
	.long	2
	.long	0
	.long	1
	.long	1
	.long	2
	.long	1
	.long	2
	.long	2
	.long	3
	.align 32
	.type	icmmask.36651, @object
	.size	icmmask.36651, 64
icmmask.36651:
	.long	-1
	.long	-256
	.long	-65281
	.long	-65536
	.long	-16711681
	.long	-16711936
	.long	-16776961
	.long	-16777216
	.long	16777215
	.long	16776960
	.long	16711935
	.long	16711680
	.long	65535
	.long	65280
	.long	255
	.long	0
	.align 32
	.type	icmlen.36650, @object
	.size	icmlen.36650, 64
icmlen.36650:
	.long	0
	.long	0
	.long	0
	.long	1
	.long	0
	.long	1
	.long	1
	.long	2
	.long	0
	.long	1
	.long	1
	.long	2
	.long	1
	.long	2
	.long	2
	.long	3
	.align 32
	.type	icmmask.36615, @object
	.size	icmmask.36615, 64
icmmask.36615:
	.long	-1
	.long	-256
	.long	-65281
	.long	-65536
	.long	-16711681
	.long	-16711936
	.long	-16776961
	.long	-16777216
	.long	16777215
	.long	16776960
	.long	16711935
	.long	16711680
	.long	65535
	.long	65280
	.long	255
	.long	0
	.align 32
	.type	icmlen.36614, @object
	.size	icmlen.36614, 64
icmlen.36614:
	.long	0
	.long	0
	.long	0
	.long	1
	.long	0
	.long	1
	.long	1
	.long	2
	.long	0
	.long	1
	.long	1
	.long	2
	.long	1
	.long	2
	.long	2
	.long	3
	.section	.rodata.cst16,"aM",@progbits,16
	.align 16
.LC8:
	.byte	-16
	.byte	-16
	.byte	-16
	.byte	-16
	.byte	-16
	.byte	-16
	.byte	-16
	.byte	-16
	.byte	-16
	.byte	-16
	.byte	-16
	.byte	-16
	.byte	-16
	.byte	-16
	.byte	-16
	.byte	-16
	.align 16
.LC9:
	.byte	15
	.byte	15
	.byte	15
	.byte	15
	.byte	15
	.byte	15
	.byte	15
	.byte	15
	.byte	15
	.byte	15
	.byte	15
	.byte	15
	.byte	15
	.byte	15
	.byte	15
	.byte	15
	.ident	"GCC: (GNU) 4.8.3 20140911 (Red Hat 4.8.3-7)"
	.section	.note.GNU-stack,"",@progbits
